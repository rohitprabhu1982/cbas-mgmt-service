{"version":3,"sources":["webpack:///./src/app/admin/components/account/account-dashboard.component.ts","webpack:///./src/app/admin/components/account/account-dashboard.styles.scss","webpack:///./src/app/admin/components/account/account-dashboard.template.html","webpack:///./src/app/admin/components/account/create-account-popup.component.ts","webpack:///./src/app/admin/components/account/create-account-popup.styles.scss","webpack:///./src/app/admin/components/account/create-account-popup.template.html","webpack:///./src/app/admin/components/account/edit-account-popup.component.ts","webpack:///./src/app/admin/components/account/edit-account-popup.styles.scss","webpack:///./src/app/admin/components/account/edit-account-popup.template.html","webpack:///./src/app/admin/components/admin.module.ts","webpack:///./src/app/admin/components/client/client-dashboard.component.ts","webpack:///./src/app/admin/components/client/client-dashboard.styles.scss","webpack:///./src/app/admin/components/client/client-dashboard.template.html","webpack:///./src/app/admin/components/client/create-client-popup.component.ts","webpack:///./src/app/admin/components/client/create-client-popup.styles.scss","webpack:///./src/app/admin/components/client/create-client-popup.template.html","webpack:///./src/app/admin/components/client/edit-client-popup.component.ts","webpack:///./src/app/admin/components/client/edit-client-popup.styles.scss","webpack:///./src/app/admin/components/client/edit-client-popup.template.html","webpack:///./src/app/admin/components/importpipe/importpipe-dashboard.component.ts","webpack:///./src/app/admin/components/importpipe/importpipe-dashboard.styles.scss","webpack:///./src/app/admin/components/importpipe/importpipe-dashboard.template.html","webpack:///./src/app/admin/components/laborcat/create-laborcat-popup.component.ts","webpack:///./src/app/admin/components/laborcat/create-laborcat-popup.styles.scss","webpack:///./src/app/admin/components/laborcat/create-laborcat-popup.template.html","webpack:///./src/app/admin/components/laborcat/edit-laborcat-popup.component.ts","webpack:///./src/app/admin/components/laborcat/edit-laborcat-popup.styles.scss","webpack:///./src/app/admin/components/laborcat/edit-laborcat-popup.template.html","webpack:///./src/app/admin/components/laborcat/laborcat-dashboard.component.ts","webpack:///./src/app/admin/components/laborcat/laborcat-dashboard.styles.scss","webpack:///./src/app/admin/components/laborcat/laborcat-dashboard.template.html","webpack:///./src/app/admin/components/lcatgroup/create-lcatgroup-popup.component.ts","webpack:///./src/app/admin/components/lcatgroup/create-lcatgroup-popup.styles.scss","webpack:///./src/app/admin/components/lcatgroup/create-lcatgroup-popup.template.html","webpack:///./src/app/admin/components/lcatgroup/edit-lcatgroup-popup.component.ts","webpack:///./src/app/admin/components/lcatgroup/edit-lcatgroup-popup.styles.scss","webpack:///./src/app/admin/components/lcatgroup/edit-lcatgroup-popup.template.html","webpack:///./src/app/admin/components/lcatgroup/lcatgroup-dashboard.component.ts","webpack:///./src/app/admin/components/lcatgroup/lcatgroup-dashboard.styles.scss","webpack:///./src/app/admin/components/lcatgroup/lcatgroup-dashboard.template.html","webpack:///./src/app/admin/components/lookup/create-lookup-popup.component.ts","webpack:///./src/app/admin/components/lookup/create-lookup-popup.styles.scss","webpack:///./src/app/admin/components/lookup/create-lookup-popup.template.html","webpack:///./src/app/admin/components/lookup/edit-lookup-popup.component.ts","webpack:///./src/app/admin/components/lookup/edit-lookup-popup.styles.scss","webpack:///./src/app/admin/components/lookup/edit-lookup-popup.template.html","webpack:///./src/app/admin/components/lookup/lookup-dashboard.component.ts","webpack:///./src/app/admin/components/lookup/lookup-dashboard.styles.scss","webpack:///./src/app/admin/components/lookup/lookup-dashboard.template.html","webpack:///./src/app/admin/components/resources/create-resource-popup.component.ts","webpack:///./src/app/admin/components/resources/create-resource-popup.styles.scss","webpack:///./src/app/admin/components/resources/create-resource-popup.template.html","webpack:///./src/app/admin/components/resources/edit-resource-popup.component.ts","webpack:///./src/app/admin/components/resources/edit-resource-popup.styles.scss","webpack:///./src/app/admin/components/resources/edit-resource-popup.template.html","webpack:///./src/app/admin/components/resources/resource-dashboard.component.ts","webpack:///./src/app/admin/components/resources/resource-dashboard.styles.scss","webpack:///./src/app/admin/components/resources/resource-dashboard.template.html","webpack:///./src/app/admin/components/users/create-user-popup.component.ts","webpack:///./src/app/admin/components/users/create-user-popup.styles.scss","webpack:///./src/app/admin/components/users/create-user-popup.template.html","webpack:///./src/app/admin/components/users/edit-user-popup.component.ts","webpack:///./src/app/admin/components/users/edit-user-popup.styles.scss","webpack:///./src/app/admin/components/users/edit-user-popup.template.html","webpack:///./src/app/admin/components/users/user-dashboard.component.ts","webpack:///./src/app/admin/components/users/user-dashboard.styles.scss","webpack:///./src/app/admin/components/users/user-dashboard.template.html","webpack:///./src/app/admin/models/account.model.ts","webpack:///./src/app/admin/models/client.model.ts","webpack:///./src/app/admin/models/laborcat.model.ts","webpack:///./src/app/admin/models/lcatgroup.model.ts","webpack:///./src/app/admin/models/lookup.model.ts","webpack:///./src/app/admin/models/user.model.ts","webpack:///./src/app/admin/services/account.service.ts","webpack:///./src/app/admin/services/client.service.ts","webpack:///./src/app/admin/services/lcatgroup.service.ts","webpack:///./src/app/admin/services/lookup.service.ts","webpack:///./src/app/admin/services/role.service.ts","webpack:///./src/app/admin/util/client-filter.pipe.ts","webpack:///./src/app/admin/util/laborcat-filter.pipe.ts","webpack:///./src/app/admin/util/lookup-filter.pipe.ts","webpack:///./src/app/admin/util/resource-filter.pipe.ts","webpack:///./src/app/admin/util/user-filter.pipe.ts","webpack:///./src/app/tdl/models/resource.model.ts"],"names":[],"mappings":"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","file":"admin-components-admin-module.js","sourcesContent":["import { AfterViewInit, Component, OnDestroy, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ICellRendererAngularComp } from \"ag-grid-angular\";\r\nimport { GridOptions } from \"ag-grid-community\";\r\nimport { saveAs } from 'file-saver';\r\nimport { Subscription } from \"rxjs\";\r\nimport * as XLSX from 'xlsx';\r\nimport { Account } from '../../models/account.model';\r\nimport { AccountView } from '../../models/accountview.model';\r\nimport { AccountService } from '../../services/account.service';\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: 'edit-cell',\r\n  template: `<i class=\"glyphicon glyphicon-pencil\" (click)=\"invokeParentMethod()\" data-toggle=\"modal\"  title=\"Edit Account\"\r\n                   data-keyboard=\"false\" data-backdrop=\"static\" data-target=\"#edit-account\"></i>`\r\n  // styles: [\r\n  //     `.btn {\r\n  //         line-height: 0.5\r\n  //     }`\r\n  // ]\r\n})\r\nexport class EditAccountComponent implements ICellRendererAngularComp {\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n      this.params = params;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n      this.params.context.componentParent.selectEditAccount(this.params.data);\r\n  }\r\n\r\n  refresh(): boolean {\r\n      return false;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'delete-cell',\r\n  template: `<i class=\"glyphicon glyphicon-trash txt-gap\" (click)=\"invokeParentMethod()\" data-toggle=\"modal\"  title=\"Delete Account\"\r\n  data-keyboard=\"false\" data-backdrop=\"static\" data-target=\"#confirm-popup\"></i>`\r\n  // styles: [\r\n  //     `.btn {\r\n  //         line-height: 0.5\r\n  //     }`\r\n  // ]\r\n})\r\nexport class DeleteAccountComponent implements ICellRendererAngularComp {\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n      this.params = params;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n      this.params.context.componentParent.selectDeleteAccount(this.params.data);\r\n  }\r\n\r\n  refresh(): boolean {\r\n      return false;\r\n  }\r\n}\r\n\r\n// con\r\n@Component({\r\n  selector: \"account-dashboard\",\r\n  templateUrl: \"./account-dashboard.template.html\",\r\n  styleUrls: [\"./account-dashboard.styles.scss\"],\r\n  providers: [AccountService],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AccountDashboardPage implements OnInit, OnDestroy, AfterViewInit {\r\n  public router: Router;\r\n  public data: any[];\r\n\r\n  public lstAccounts: AccountView[];\r\n\r\n  public adminCount: number;\r\n  public selAccountId: number;\r\n\r\n  public busyLoadAccounts: Subscription;\r\n  public busyDeleteAccount: Subscription;\r\n\r\n  public paginationPageSize = 20;\r\n\r\n  public dropdownData = [];\r\n  public showErrorFlag: boolean;\r\n  public alerts: Array<Object>;\r\n  public effectiveDate: Date;\r\n  public selAccount: Account;\r\n\r\n  public showCreateAccount: boolean;\r\n  public showEditAccount: boolean;\r\n  public showDeleteAccount: boolean;\r\n\r\n  public delAccountTitle: string = \"Delete Account\";\r\n  public delAccountMessage: string = \"Are you sure you want to delete Account?\";\r\n  public confirmClicked: boolean = false;\r\n  public cancelClicked: boolean = false;\r\n\r\n  public gridOptions: GridOptions;\r\n\r\n  public gridApi;\r\n  public gridColumnApi;\r\n\r\n  public defaultColDef = {\r\n    sortable: true,\r\n    filter: true,\r\n    headerClass: 'fw-semi-bold'\r\n  };\r\n\r\n  public columnDefs = [\r\n    {\r\n      headerName: \"\",\r\n      field: \"value\",\r\n      cellRendererFramework: EditAccountComponent,\r\n      colId: \"params\",\r\n      width: 50,\r\n      filter: false\r\n    },\r\n    {\r\n      headerName: 'Name',\r\n      field: 'name',\r\n      cellClass: function(params) {\r\n        return params.data.enabled !== 'Y' ? \"fw-semi-bold inactive\" : \"fw-semi-bold \";\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Industry',\r\n      field: 'industryName',\r\n      cellClass: function(params) {\r\n        return params.data.enabled !== 'Y' ? \"inactive\" : \"\";\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Sector',\r\n      field: 'sectorName',\r\n      cellClass: function(params) {\r\n        return params.data.enabled !== 'Y' ? \"inactive\" : \"\";\r\n      }\r\n    },\r\n    {\r\n      headerName: \"\",\r\n      field: \"value\",\r\n      cellRendererFramework: DeleteAccountComponent,\r\n      colId: \"params\",\r\n      width: 50,\r\n      filter: false\r\n    }\r\n];\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    router: Router) {\r\n    this.alerts = [\r\n      {\r\n        type: \"success\",\r\n        msg:\r\n          '<i class=\"fa fa-circle text-success\"></i><span class=\"alert-text\">Successfully generated 12 monthly reports</span>'\r\n      }\r\n    ];\r\n\r\n    this.router = router;\r\n\r\n    this.showCreateAccount = false;\r\n    this.showEditAccount = false;\r\n    this.showDeleteAccount = false;\r\n\r\n    this.selAccountId = 1;\r\n    this.gridOptions = <GridOptions>{\r\n      context: {\r\n          componentParent: this\r\n      },\r\n      enableColResize: true,\r\n      rowHeight: 30\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    let searchInput = jQuery(\"#table-search-input, #search-countries\");\r\n    searchInput\r\n      .focus(e => {\r\n        jQuery(e.target)\r\n          .closest(\".input-group\")\r\n          .addClass(\"focus\");\r\n      })\r\n      .focusout(e => {\r\n        jQuery(e.target)\r\n          .closest(\".input-group\")\r\n          .removeClass(\"focus\");\r\n      });\r\n\r\n      this.loadAllAccounts();\r\n  }\r\n\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.busyLoadAccounts) {\r\n      this.busyLoadAccounts.unsubscribe();\r\n    }\r\n    if (this.busyDeleteAccount) {\r\n      this.busyDeleteAccount.unsubscribe();\r\n    }\r\n }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  public cosmeticFix(elementID: any){\r\n    // The code below for cosmetic fix - Blue box now surrounds the icon on the search company text box\r\n    let filterInput = jQuery(elementID);\r\n    filterInput\r\n    .focus((e) => {\r\n        jQuery(e.target).closest('.input-group').addClass('focus');\r\n    })\r\n    .focusout((e) => {\r\n        jQuery(e.target).closest('.input-group').removeClass('focus');\r\n    });\r\n  }\r\n\r\n  private loadAllAccounts() {\r\n    let that = this;\r\n    this.busyLoadAccounts = this.accountService.getAll().subscribe(accountdata => {\r\n      if (accountdata) {\r\n        that.data = accountdata;\r\n        that.gridApi.sizeColumnsToFit();\r\n      }\r\n    }, error => {\r\n      this.showErrorFlag = true;\r\n      this.alerts = [];\r\n      this.alerts.push({ type: 'warning', msg: error });\r\n  });\r\n  }\r\n\r\n  public reloadAccounts(reload: boolean) {\r\n    this.showCreateAccount = false;\r\n    this.showEditAccount = false;\r\n    if (reload) {\r\n      this.loadAllAccounts();\r\n    } else {\r\n      this.selAccount = new Account();\r\n    }\r\n  }\r\n\r\n  public deleteAccount(id) {\r\n    this.busyDeleteAccount = this.accountService.deleteAccountById(id).subscribe(data => {\r\n      if (data) {\r\n        this.reloadAccounts(true);\r\n        this.showDeleteAccount = false;\r\n        jQuery('#confirm-popup').modal('hide');\r\n      }\r\n    }, error => {\r\n      this.showErrorFlag = true;\r\n      this.alerts = [];\r\n      this.alerts.push({ type: 'warning', msg: error });\r\n  });\r\n  }\r\n\r\n  private s2ab(s) {\r\n    let buf = new ArrayBuffer(s.length);\r\n    let view = new Uint8Array(buf);\r\n    for (let i=0; i !== s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\r\n    return buf;\r\n  }\r\n\r\n  public exportAccountsReport(data:any, filename, sheetName){\r\n    let ws:XLSX.WorkSheet = XLSX.utils.json_to_sheet(data);\r\n    let wb:XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n\r\n    /* save to file */\r\n    let wbout: string = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });\r\n    saveAs(new Blob([this.s2ab(wbout)]), filename);\r\n  }\r\n\r\n  public downloadLaborCategories(){\r\n    this.exportAccountsReport(this.data, 'laborcat-report.xlsx', 'Clients');\r\n  }\r\n\r\n  public addAccount() {\r\n    this.showCreateAccount = true;\r\n  }\r\n\r\n  public selectEditAccount(account) {\r\n    this.showEditAccount = true;\r\n    this.selAccount = account;\r\n  }\r\n\r\n  public selectDeleteAccount(account){\r\n    this.showDeleteAccount = true;\r\n    this.selAccount = account;\r\n  }\r\n  public onClickBackButton(){\r\n\t\tthis.router.navigate([\"/app/tdl/search\"]);\r\n  }\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid #ddd; }\\n.accountdashboardController {\\n  width: 98%; }\\n.inactive {\\n  text-decoration: line-through; }\\n.ag-row .ag-cell {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<h1 class=\\\"h4 page-title hd-bdr\\\">Accounts</h1>\\r\\n<div data-ng-controller=\\\"accountdashboardController\\\" class=\\\"accountdashboardController\\\">\\r\\n    <div aria-live=\\\"assertive\\\">\\r\\n        <div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n                        <alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n                            <div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n                        </alert>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-10\\\">\\r\\n            <section class=\\\"widget h-divider\\\" widget>\\r\\n                <div class=\\\"widget-body\\\">\\r\\n                    <div class=\\\"row\\\" style=\\\"margin-bottom: 20px;\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-offset-1 col-md-4\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <div class=\\\"pull-right\\\">\\r\\n                                <button id=\\\"btn-cr-account\\\" type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" data-toggle=\\\"modal\\\"\\r\\n                                    data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\" data-target=\\\"#create-account\\\" title=\\\"Add Account\\\"\\r\\n                                    (click)=\\\"addAccount()\\\">\\r\\n                                    <i class=\\\"glyphicon glyphicon-plus\\\"></i>\\r\\n                                    Add Account\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"grid-wrapper\\\">\\r\\n                        <ag-grid-angular\\r\\n                            #agGrid\\r\\n                            style=\\\"width: 100%; height: 650px;\\\"\\r\\n                            class=\\\"ag-theme-balham\\\"\\r\\n                            [rowData]=\\\"data\\\"\\r\\n                            [columnDefs]=\\\"columnDefs\\\"\\r\\n                            [defaultColDef]=\\\"defaultColDef\\\"\\r\\n                            [gridOptions]=\\\"gridOptions\\\"\\r\\n                            [floatingFilter]=\\\"true\\\"\\r\\n                            [pagination]=\\\"true\\\"\\r\\n                            (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                            [paginationAutoPageSize]=\\\"true\\\"\\r\\n                            >\\r\\n                        </ag-grid-angular>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"widget-footer\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n                            <div class=\\\"pull-right\\\">\\r\\n                                <button id=\\\"btn-go-back\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n                                    (click)=\\\"onClickBackButton()\\\">\\r\\n                                    <span class=\\\"glyphicon glyphicon-chevron-left txt-gap\\\"\\r\\n                                        aria-hidden=\\\"true\\\"></span>Back</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </section>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"showCreateAccount\\\" create-account-popup [AccountId]=\\\"selAccountId\\\" (reloadAccounts)=\\\"reloadAccounts($event)\\\"></div>\\r\\n    <div *ngIf=\\\"showEditAccount\\\" edit-account-popup [model]=\\\"selAccount\\\" (reloadAccounts)=\\\"reloadAccounts($event)\\\"></div>\\r\\n    <div *ngIf=\\\"showDeleteAccount\\\" confirm-popup-ph [model]=\\\"selAccount\\\" (callBack)=\\\"deleteAccount(selAccount.accountId)\\\"\\r\\n    (hideModal)=\\\"showDeleteAccount = false\\\" [msg]=\\\"'Are you sure you want to delete Account '+ selAccount.name+' ?'\\\"\\r\\n    [title]=\\\"'Delete Account'\\\" >\\r\\n</div>\\r\\n</div>\"","/*\r\n@author : Deloitte\r\nthis is Component for creating a labor category\r\n*/\r\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Account } from '../../models/account.model';\r\nimport { IndustrySectorView } from '../../models/indsector-view.model';\r\nimport { Industry } from '../../models/industry.model';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { ClientService } from '../../services/client.service';\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: '[create-account-popup]',\r\n  templateUrl: './create-account-popup.template.html',\r\n  styleUrls: ['./create-account-popup.styles.scss'],\r\n  providers: [AccountService, ClientService],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class CreateAccountPopup\r\n * @implements {OnInit}\r\n */\r\n\r\nexport class CreateAccountPopup implements OnInit, OnDestroy {\r\n  @Output() reloadAccounts = new EventEmitter<boolean>();\r\n  @Input() AccountId;\r\n\r\n  public router: Router;\r\n  public showErrorFlag: boolean;\r\n  public alerts: Array<Object>;\r\n  public account = new Account();\r\n\r\n  public busySaveAccount:Subscription;\r\n  public busyLoadIndustries:Subscription;\r\n  public busyLoadIndustrySectors: Subscription;\r\n  public accountenabled: boolean = true;\r\n\r\n  public lstIndustries: Industry[]=[];\r\n  public lstSectors: IndustrySectorView[]=[];\r\n\r\n  constructor(router: Router,\r\n    private accountService: AccountService,\r\n    private clientService: ClientService\r\n  ) {\r\n    this.router = router;\r\n\r\n    this.alerts = [\r\n      {\r\n        type: 'warning',\r\n        msg: '<span class=\"fw-semi-bold\">Warning:</span> Placeholder for Error Validation messages'\r\n      }\r\n    ];\r\n\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.showErrorFlag = false;\r\n    this.loadIndustries();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if(this.busySaveAccount){\r\n      this.busySaveAccount.unsubscribe();\r\n    }\r\n    if(this.busyLoadIndustries){\r\n      this.busyLoadIndustries.unsubscribe();\r\n    }\r\n    if(this.busyLoadIndustrySectors){\r\n      this.busyLoadIndustrySectors.unsubscribe();\r\n    }\r\n  }\r\n\r\n  public loadIndustries(){\r\n    this.busyLoadIndustries = this.accountService.loadIndustries().subscribe(data => {\r\n      if (data) {\r\n        this.lstIndustries = data;\r\n      }\r\n    }, error => {\r\n        this.showErrorFlag = true;\r\n        this.alerts = [];\r\n        this.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n  public loadSectorsForIndustry(selIndustryId: number){\r\n    let that = this;\r\n    this.busyLoadIndustrySectors = this.accountService.loadSectorsForIndustry(selIndustryId).subscribe(data => {\r\n      if (data) {\r\n        that.lstSectors = data;\r\n      }\r\n    }, error => {\r\n        this.showErrorFlag = true;\r\n        this.alerts = [];\r\n        this.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n  public createAccount(newAccount: Account) {\r\n    jQuery('#addaccountform').parsley().validate();\r\n\r\n    // Toggle to edit mode or navigate to the next screen if validation passes\r\n    if (jQuery('#addaccountform').parsley().isValid()) {\r\n\r\n      newAccount.enabled = (this.accountenabled) ? 'Y' : 'N';\r\n      this.busySaveAccount = this.accountService.saveAccount(newAccount).subscribe(data => {\r\n        if (data) {\r\n          this.reset(true);\r\n          this.reloadAccounts.emit(true);\r\n        }\r\n      }, error => {\r\n          this.showErrorFlag = true;\r\n          this.alerts = [];\r\n          this.alerts.push({ type: 'warning', msg: error });\r\n      });\r\n    }\r\n  }\r\n\r\n  public OnIndustryChanged(event){\r\n    this.loadSectorsForIndustry(this.account.industryId);\r\n }\r\n\r\n  public reset(flag) {\r\n    jQuery('#create-account').on('hidden').find('#name').val('');\r\n    jQuery('#addaccountform').parsley().reset();\r\n    jQuery('#create-account').modal('hide');\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-divider {\\n  width: 100%;\\n  border-bottom: 3px solid #778899; }\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid gray;\\n  padding-bottom: 10px; }\\ninput.parsley-error {\\n  border-color: #d9534f;\\n  box-shadow: inset 0 1px 1px rgba(217, 83, 79, 0.075); }\\n.parsley-errors-list {\\n  font-size: 85%;\\n  padding-left: 0;\\n  margin-bottom: 5px; }\\n.parsley-errors-list li {\\n    list-style: none;\\n    color: #d9534f; }\\n.switch {\\n  box-sizing: content-box;\\n  margin-left: -20px; }\\n.switch i {\\n  display: inline-block;\\n  cursor: pointer;\\n  margin-left: -20px;\\n  margin-bottom: -3px;\\n  padding-right: 20px;\\n  transition: all ease 0.2s;\\n  -webkit-transition: all ease 0.2s;\\n  border-radius: 20px;\\n  box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.5); }\\n.switch i:before {\\n  display: block;\\n  content: '';\\n  width: 30px;\\n  height: 30px;\\n  padding: 1px;\\n  border-radius: 20px;\\n  background: white;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }\\n.switch :checked + i {\\n  padding-right: 0;\\n  padding-left: 20px;\\n  background: #64bd63; }\\n.white, .white a {\\n  color: #fff; }\\n.btn-label {\\n  background: transparent;\\n  left: 2px;\\n  padding: 1px 6px; }\\n.md-editor {\\n  display: block;\\n  border: 1px solid #dee2e6; }\\n.md-editor > .md-header, .md-editor .md-footer {\\n    display: block;\\n    padding: 6px 4px;\\n    background: #f5f5f5; }\\n.md-editor > .md-header {\\n    margin: 0; }\\n.md-editor > .md-header .glyphicon {\\n      top: 3px; }\\n.md-editor > .md-preview {\\n    margin-left: -1px;\\n    margin-right: -1px;\\n    padding: 0.5rem 1rem;\\n    background: #fff;\\n    border-top: 1px dashed #dee2e6;\\n    min-height: 10px; }\\n.md-editor > textarea {\\n    font-family: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n    font-size: 1rem;\\n    outline: 0;\\n    outline: thin dotted  \\\\9;\\n    /* IE6-9 */\\n    margin: 0;\\n    display: block;\\n    width: 100%;\\n    border: 0;\\n    border-top: 1px dashed #dee2e6;\\n    border-radius: 0;\\n    box-shadow: none;\\n    background: #dee2e6; }\\n.md-editor > textarea:focus {\\n      box-shadow: none;\\n      background: #fff; }\\n.md-editor.active {\\n    border-color: #4d90fe;\\n    outline: 0; }\\n/**\\r\\n * Bootstrap select\\r\\n */\\n.selectpicker.form-control {\\n  height: auto; }\\n.bootstrap-select .dropdown-toggle {\\n  padding-left: 10px; }\\n.bootstrap-select .dropdown-toggle:after {\\n    margin-right: 0;\\n    margin-left: 0; }\\n.bootstrap-select .dropdown-menu > li > a {\\n  display: block;\\n  width: 100%;\\n  padding: 3px 20px;\\n  clear: both;\\n  font-weight: normal;\\n  line-height: 1.42857143;\\n  color: #555;\\n  text-align: inherit;\\n  white-space: nowrap;\\n  background: none;\\n  border: 0; }\\n.bootstrap-select .dropdown-menu > li > a:hover, .bootstrap-select .dropdown-menu > li > a:focus {\\n    color: #171717;\\n    text-decoration: none;\\n    background-color: #f5f5f5; }\\n.bootstrap-select .dropdown-menu > li > a.active, .bootstrap-select .dropdown-menu > li > a.active:hover, .bootstrap-select .dropdown-menu > li > a.active:focus {\\n    color: #fff;\\n    text-decoration: none;\\n    background-color: #5d8fc2;\\n    outline: 0; }\\n.bootstrap-select .dropdown-menu > li > a.disabled, .bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    color: #868e96; }\\n.bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    text-decoration: none;\\n    cursor: not-allowed;\\n    background-color: transparent;\\n    background-image: none; }\\n/**\\r\\n*  autosize\\r\\n**/\\n/***********************************/\\n/**          NEWS LIST           **/\\n/**********************************/\\n.news-list {\\n  margin-bottom: 0;\\n  padding-left: 0; }\\n.news-list li {\\n    list-style: none;\\n    box-sizing: content-box;\\n    border-top: 1px solid #eeeeee;\\n    padding: 12px;\\n    cursor: pointer;\\n    -webkit-transition: background-color 0.2s ease-out;\\n    transition: background-color 0.2s ease-out; }\\n@media screen and (prefers-reduced-motion: reduce) {\\n      .news-list li {\\n        -webkit-transition: none;\\n        transition: none; } }\\n.news-list li:hover {\\n      background: #dbdbdb; }\\n.news-list li:last-child {\\n      margin-bottom: -10px; }\\n.news-list img,\\n  .news-list .icon {\\n    float: left;\\n    height: 50px;\\n    width: 50px; }\\n.news-list .icon {\\n    line-height: 50px;\\n    border-radius: 50%;\\n    text-align: center;\\n    font-size: 28px; }\\n.news-list .news-item-info {\\n    margin-left: 62px;\\n    /*50 + 12px padding*/ }\\n.news-list .name {\\n    text-transform: uppercase; }\\n.news-list .name a {\\n      text-decoration: none; }\\n.news-list .name a:hover {\\n        color: #218bc3; }\\n.autogrow {\\n  overflow: hidden;\\n  resize: none; }\\n.form-checkbox {\\n  margin-left: 5px;\\n  width: 20px;\\n  height: 20px;\\n  box-shadow: none; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"create-account\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"create-account-title\\\" aria-hidden=\\\"true\\\">\\r\\n\\t<div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t<h1 class=\\\"h4 modal-title text-xs-left fw-bold mt\\\" id=\\\"create-account-title\\\">Add Account</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Body-->\\r\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t<form id=\\\"addaccountform\\\" #addaccountform=\\\"ngForm\\\" role=\\\"form\\\" class=\\\"form-horizontal\\\" data-parsley-priority-enabled=\\\"false\\\" novalidate=\\\"novalidate\\\"\\r\\n\\t\\t\\t\\t\\tdata-parsley-validate data-parsley-focus=\\\"first\\\">\\r\\n\\t\\t\\t\\t\\t<!-- Name -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Name\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"account.name\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: Name is required\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- Industry -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"client-industry\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Industry\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select required [(ngModel)]=\\\"account.industryId\\\" title=\\\"Industry\\\" name=\\\"industry\\\" class=\\\"form-control fdatable\\\" id=\\\"client-industry\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Select Industry\\\" (change)=\\\"OnIndustryChanged($event)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tdata-parsley-required-message=\\\"Error: Industry is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<option></option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let ind of lstIndustries\\\" [ngValue]=\\\"ind.industryId\\\">{{ind.name}}</option>\\r\\n\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- Sector -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"client-sector\\\" class=\\\"col-md-4 form-control-label text-md-right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tSector\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select required [(ngModel)]=\\\"account.sectorId\\\" title=\\\"Sector\\\" name=\\\"sector-name\\\" class=\\\"form-control fdatable\\\" id=\\\"client-sector\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Select Sector\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdata-parsley-required-message=\\\"Error: Sector is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option></option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let sec of lstSectors\\\" [ngValue]=\\\"sec.sectorId\\\">{{sec.sectorName}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Active         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"enabled\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control form-checkbox\\\" id=\\\"enabled\\\" [(ngModel)]=\\\"accountenabled\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div aria-live=\\\"assertive\\\">\\r\\n\\t\\t\\t\\t<div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</alert>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Footer-->\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" id=\\\"btn-save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createAccount(account)\\\">Save Account</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reset(false)\\\">Cancel</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","/*\r\n@author : Deloitte\r\nthis is Componentfor adding contact as a popup.\r\n*/\r\nimport { Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, ViewEncapsulation } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { Account } from '../../models/account.model';\r\nimport { IndustrySectorView } from '../../models/indsector-view.model';\r\nimport { Industry } from '../../models/industry.model';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { ClientService } from '../../services/client.service';\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: \"[edit-account-popup]\",\r\n  templateUrl: \"./edit-account-popup.template.html\",\r\n  styleUrls: [\"./edit-account-popup.styles.scss\"],\r\n  providers: [AccountService, ClientService],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class EditAccountPopup\r\n * @implements {OnInit}\r\n */\r\nexport class EditAccountPopup implements OnInit, OnDestroy, OnChanges {\r\n  @Input() model;\r\n  @Output() reloadAccounts = new EventEmitter<boolean>();\r\n\r\n  public router: Router;\r\n  public showErrorFlag: boolean;\r\n  public alerts: Array<Object>;\r\n  public editAccount: Account;\r\n\r\n  public busySaveAccount:Subscription;\r\n  public busyLoadIndustries:Subscription;\r\n  public busyLoadIndustrySectors: Subscription;\r\n\r\n  public accountenabled: boolean = true;\r\n  public lstIndustries: Industry[]=[];\r\n  public lstSectors: IndustrySectorView[]=[];\r\n\r\n  ngOnInit(): void {\r\n    this.showErrorFlag = false;\r\n    this.loadIndustries();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if(this.busySaveAccount){\r\n      this.busySaveAccount.unsubscribe();\r\n    }\r\n    if(this.busyLoadIndustries){\r\n      this.busyLoadIndustries.unsubscribe();\r\n    }\r\n    if(this.busyLoadIndustrySectors){\r\n      this.busyLoadIndustrySectors.unsubscribe();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    router: Router,\r\n    private accountService: AccountService,\r\n    private clientService: ClientService\r\n  ) {\r\n    this.router = router;\r\n\r\n    this.alerts = [\r\n      {\r\n        type: \"warning\",\r\n        msg:\r\n          '<span class=\"fw-semi-bold\">Warning:</span> Placeholder for Error Validation messages'\r\n      }\r\n    ];\r\n\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n  public loadIndustries(){\r\n    this.busyLoadIndustries = this.accountService.loadIndustries().subscribe(data => {\r\n      if (data) {\r\n        this.lstIndustries = data;\r\n      }\r\n    }, error => {\r\n        this.showErrorFlag = true;\r\n        this.alerts = [];\r\n        this.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n  public loadSectorsForIndustry(selIndustryId: number){\r\n    let that = this;\r\n    this.busyLoadIndustrySectors = this.accountService.loadSectorsForIndustry(selIndustryId).subscribe(data => {\r\n      if (data) {\r\n        that.lstSectors = data;\r\n      }\r\n    }, error => {\r\n        this.showErrorFlag = true;\r\n        this.alerts = [];\r\n        this.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n  public OnIndustryChanged(event){\r\n     this.loadSectorsForIndustry(this.editAccount.industryId);\r\n  }\r\n  public updateAccount(account: Account) {\r\n    jQuery(\"#editaccountform\").parsley().validate();\r\n    account.enabled = (this.accountenabled) ? 'Y' : 'N';\r\n    // Toggle to edit mode or navigate to the next screen if validation passes\r\n    if ( jQuery(\"#editaccountform\").parsley().isValid() ) {\r\n      this.busySaveAccount = this.accountService.saveAccount(account).subscribe(\r\n        data => {\r\n          if (data) {\r\n            this.reset(true);\r\n          }\r\n        },\r\n        error => {\r\n          this.showErrorFlag = true;\r\n          this.alerts = [];\r\n          this.alerts.push({ type: \"warning\", msg: error });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\n  public reset(flag) {\r\n    jQuery(\"#edit-account\").on(\"hidden\").find(\"#name\").val(\"\");\r\n    jQuery(\"#editaccountform\").parsley().reset();\r\n    jQuery(\"#edit-account\").modal(\"hide\");\r\n    this.reloadAccounts.emit(flag);\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    for (let propName in changes) {\r\n      if (propName === \"model\") {\r\n        let chg = changes[propName];\r\n        if (chg.currentValue) {\r\n          this.editAccount = Object.assign({}, chg.currentValue);\r\n          this.loadSectorsForIndustry(this.editAccount.industryId);\r\n          this.accountenabled = (this.editAccount.enabled === 'Y') ? true : false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-divider {\\n  width: 100%;\\n  border-bottom: 3px solid #778899; }\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid gray;\\n  padding-bottom: 10px; }\\ninput.parsley-error {\\n  border-color: #d9534f;\\n  box-shadow: inset 0 1px 1px rgba(217, 83, 79, 0.075); }\\n.parsley-errors-list {\\n  font-size: 85%;\\n  padding-left: 0;\\n  margin-bottom: 5px; }\\n.parsley-errors-list li {\\n    list-style: none;\\n    color: #d9534f; }\\n.switch {\\n  box-sizing: content-box;\\n  margin-left: -20px; }\\n.switch i {\\n  display: inline-block;\\n  cursor: pointer;\\n  margin-left: -20px;\\n  margin-bottom: -3px;\\n  padding-right: 20px;\\n  transition: all ease 0.2s;\\n  -webkit-transition: all ease 0.2s;\\n  border-radius: 20px;\\n  box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.5); }\\n.switch i:before {\\n  display: block;\\n  content: '';\\n  width: 30px;\\n  height: 30px;\\n  padding: 1px;\\n  border-radius: 20px;\\n  background: white;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }\\n.switch :checked + i {\\n  padding-right: 0;\\n  padding-left: 20px;\\n  background: #64bd63; }\\n.white, .white a {\\n  color: #fff; }\\n.btn-label {\\n  background: transparent;\\n  left: 2px;\\n  padding: 1px 6px; }\\n.md-editor {\\n  display: block;\\n  border: 1px solid #dee2e6; }\\n.md-editor > .md-header, .md-editor .md-footer {\\n    display: block;\\n    padding: 6px 4px;\\n    background: #f5f5f5; }\\n.md-editor > .md-header {\\n    margin: 0; }\\n.md-editor > .md-header .glyphicon {\\n      top: 3px; }\\n.md-editor > .md-preview {\\n    margin-left: -1px;\\n    margin-right: -1px;\\n    padding: 0.5rem 1rem;\\n    background: #fff;\\n    border-top: 1px dashed #dee2e6;\\n    min-height: 10px; }\\n.md-editor > textarea {\\n    font-family: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n    font-size: 1rem;\\n    outline: 0;\\n    outline: thin dotted  \\\\9;\\n    /* IE6-9 */\\n    margin: 0;\\n    display: block;\\n    width: 100%;\\n    border: 0;\\n    border-top: 1px dashed #dee2e6;\\n    border-radius: 0;\\n    box-shadow: none;\\n    background: #dee2e6; }\\n.md-editor > textarea:focus {\\n      box-shadow: none;\\n      background: #fff; }\\n.md-editor.active {\\n    border-color: #4d90fe;\\n    outline: 0; }\\n/**\\r\\n * Bootstrap select\\r\\n */\\n.selectpicker.form-control {\\n  height: auto; }\\n.bootstrap-select .dropdown-toggle {\\n  padding-left: 10px; }\\n.bootstrap-select .dropdown-toggle:after {\\n    margin-right: 0;\\n    margin-left: 0; }\\n.bootstrap-select .dropdown-menu > li > a {\\n  display: block;\\n  width: 100%;\\n  padding: 3px 20px;\\n  clear: both;\\n  font-weight: normal;\\n  line-height: 1.42857143;\\n  color: #555;\\n  text-align: inherit;\\n  white-space: nowrap;\\n  background: none;\\n  border: 0; }\\n.bootstrap-select .dropdown-menu > li > a:hover, .bootstrap-select .dropdown-menu > li > a:focus {\\n    color: #171717;\\n    text-decoration: none;\\n    background-color: #f5f5f5; }\\n.bootstrap-select .dropdown-menu > li > a.active, .bootstrap-select .dropdown-menu > li > a.active:hover, .bootstrap-select .dropdown-menu > li > a.active:focus {\\n    color: #fff;\\n    text-decoration: none;\\n    background-color: #5d8fc2;\\n    outline: 0; }\\n.bootstrap-select .dropdown-menu > li > a.disabled, .bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    color: #868e96; }\\n.bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    text-decoration: none;\\n    cursor: not-allowed;\\n    background-color: transparent;\\n    background-image: none; }\\n/**\\r\\n*  autosize\\r\\n**/\\n/***********************************/\\n/**          NEWS LIST           **/\\n/**********************************/\\n.news-list {\\n  margin-bottom: 0;\\n  padding-left: 0; }\\n.news-list li {\\n    list-style: none;\\n    box-sizing: content-box;\\n    border-top: 1px solid #eeeeee;\\n    padding: 12px;\\n    cursor: pointer;\\n    -webkit-transition: background-color 0.2s ease-out;\\n    transition: background-color 0.2s ease-out; }\\n@media screen and (prefers-reduced-motion: reduce) {\\n      .news-list li {\\n        -webkit-transition: none;\\n        transition: none; } }\\n.news-list li:hover {\\n      background: #dbdbdb; }\\n.news-list li:last-child {\\n      margin-bottom: -10px; }\\n.news-list img,\\n  .news-list .icon {\\n    float: left;\\n    height: 50px;\\n    width: 50px; }\\n.news-list .icon {\\n    line-height: 50px;\\n    border-radius: 50%;\\n    text-align: center;\\n    font-size: 28px; }\\n.news-list .news-item-info {\\n    margin-left: 62px;\\n    /*50 + 12px padding*/ }\\n.news-list .name {\\n    text-transform: uppercase; }\\n.news-list .name a {\\n      text-decoration: none; }\\n.news-list .name a:hover {\\n        color: #218bc3; }\\n.autogrow {\\n  overflow: hidden;\\n  resize: none; }\\n.form-checkbox {\\n  margin-left: 5px;\\n  width: 20px;\\n  height: 20px;\\n  box-shadow: none; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"edit-account\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"edit-account-title\\\" aria-hidden=\\\"true\\\">\\r\\n\\t<div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t<h1 class=\\\"h4 modal-title text-xs-left fw-bold mt\\\" id=\\\"edit-account-title\\\">Edit Account</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Body-->\\r\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t<form id=\\\"editaccountform\\\" #editaccountform=\\\"ngForm\\\" role=\\\"form\\\" class=\\\"form-horizontal\\\" data-parsley-priority-enabled=\\\"false\\\" novalidate=\\\"novalidate\\\"\\r\\n\\t\\t\\t\\t\\tdata-parsley-validate data-parsley-focus=\\\"first\\\">\\r\\n\\t\\t\\t\\t\\t<!-- Name -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Name\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"editAccount.name\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: Name is required\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- Industry -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"client-industry\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Industry\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select required [(ngModel)]=\\\"editAccount.industryId\\\" title=\\\"Industry\\\" name=\\\"industry\\\" class=\\\"form-control fdatable\\\" id=\\\"client-industry\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Select Industry\\\" (change)=\\\"OnIndustryChanged($event)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tdata-parsley-required-message=\\\"Error: Industry is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<option></option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let ind of lstIndustries\\\" [ngValue]=\\\"ind.industryId\\\">{{ind.name}}</option>\\r\\n\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- Sector -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"client-sector\\\" class=\\\"col-md-4 form-control-label text-md-right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tSector\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select required [(ngModel)]=\\\"editAccount.sectorId\\\" title=\\\"Sector\\\" name=\\\"sector-name\\\" class=\\\"form-control fdatable\\\" id=\\\"client-sector\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Select Sector\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdata-parsley-required-message=\\\"Error: Sector is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option></option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let sec of lstSectors\\\" [ngValue]=\\\"sec.sectorId\\\">{{sec.sectorName}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Active         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"enabled\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control form-checkbox\\\" id=\\\"enabled\\\" [(ngModel)]=\\\"accountenabled\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div aria-live=\\\"assertive\\\">\\r\\n\\t\\t\\t\\t<div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</alert>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Footer-->\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" id=\\\"btn-save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateAccount(editAccount)\\\">Save Account</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reset(false)\\\">Cancel</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { AuthorizationHelper } from \"../../authentication/util/authorization.helper.util\";\r\nimport { AuthService } from \"../../login/services/auth.service\";\r\nimport { SharedModule } from \"../../shared/shared.module\";\r\nimport { AdminService } from \"../services/admin.service\";\r\nimport { LaborCategoryService } from '../services/laborcat.service';\r\nimport { LookupService } from '../services/lookup.service';\r\nimport { RoleService } from \"../services/role.service\";\r\nimport { ClientFilterPipe } from \"../util/client-filter.pipe\";\r\nimport { LaborCatFilterPipe } from \"../util/laborcat-filter.pipe\";\r\nimport { LookupFilterPipe } from \"../util/lookup-filter.pipe\";\r\nimport { ResourceFilterPipe } from \"../util/resource-filter.pipe\";\r\nimport { UserFilterPipe } from \"../util/user-filter.pipe\";\r\nimport { AccountDashboardPage, EditAccountComponent, DeleteAccountComponent } from './account/account-dashboard.component';\r\nimport { CreateAccountPopup } from \"./account/create-account-popup.component\";\r\nimport { EditAccountPopup } from \"./account/edit-account-popup.component\";\r\nimport { ClientDashboardPage, DeleteClientComponent, EditClientComponent } from './client/client-dashboard.component';\r\nimport { CreateClientPopup } from './client/create-client-popup.component';\r\nimport { EditClientPopup } from './client/edit-client-popup.component';\r\nimport { ImportPipeDashboardPage } from './importpipe/importpipe-dashboard.component';\r\nimport { CreateLaborCatPopup } from \"./laborcat/create-laborcat-popup.component\";\r\nimport { EditLaborCatPopup } from \"./laborcat/edit-laborcat-popup.component\";\r\nimport { LaborCatDashboardPage, EditLCATComponent, DeleteLCATComponent } from \"./laborcat/laborcat-dashboard.component\";\r\nimport { CreateLCATGroupPopup } from './lcatgroup/create-lcatgroup-popup.component';\r\nimport { EditLCATGroupPopup } from './lcatgroup/edit-lcatgroup-popup.component';\r\nimport { LCATGroupDashboardPage, EditLCATGroupComponent, DeleteLCATGroupComponent } from './lcatgroup/lcatgroup-dashboard.component';\r\nimport { CreateLookupPopup } from './lookup/create-lookup-popup.component';\r\nimport { EditLookupPopup } from './lookup/edit-lookup-popup.component';\r\nimport { LookupDashboardPage, EditLookupComponent, DeleteLookupComponent } from './lookup/lookup-dashboard.component';\r\nimport { CreateResourcePopup } from \"./resources/create-resource-popup.component\";\r\nimport { EditResourcePopup } from \"./resources/edit-resource-popup.component\";\r\nimport { ResourceDashboardPage, EditResourceComponent, DeleteResourceComponent } from \"./resources/resource-dashboard.component\";\r\nimport { CreateUserPopup } from \"./users/create-user-popup.component\";\r\nimport { EditUserPopup } from \"./users/edit-user-popup.component\";\r\nimport { UserDashboardPage, EditUserComponent, DeleteUserComponent  } from \"./users/user-dashboard.component\";\r\n\r\nexport const routes = [\r\n\t{ path: \"users\", component: UserDashboardPage },\r\n\t{ path: \"resources\", component: ResourceDashboardPage },\r\n\t{ path: \"lookup\", component: LookupDashboardPage },\r\n\t{ path: \"laborcat\", component: LaborCatDashboardPage },\r\n\t{ path: \"lcatgroup\", component: LCATGroupDashboardPage },\r\n\t{ path: \"importpipe\", component: ImportPipeDashboardPage },\r\n\t{ path: \"clients\", component: ClientDashboardPage },\r\n\t{ path: \"accounts\", component: AccountDashboardPage },\r\n];\r\n\r\n@NgModule({\r\n\timports: [CommonModule, SharedModule, RouterModule.forChild(routes)],\r\n\tdeclarations: [\r\n\t\tUserDashboardPage,\r\n\t\tResourceDashboardPage,\r\n\t\tLaborCatDashboardPage,\r\n\t\tClientDashboardPage,\r\n\t\tLCATGroupDashboardPage,\r\n\t\tLookupDashboardPage,\r\n\t\tImportPipeDashboardPage,\r\n\t\tCreateUserPopup,\r\n\t\tEditUserPopup,\r\n\t\tCreateLookupPopup,\r\n\t\tEditLookupPopup,\r\n\t\tCreateResourcePopup,\r\n\t\tEditResourcePopup,\r\n\t\tCreateLaborCatPopup,\r\n\t\tEditLaborCatPopup,\r\n\t\tCreateLCATGroupPopup,\r\n\t\tCreateClientPopup,\r\n\t\tEditClientPopup,\r\n\t\tEditLCATGroupPopup,\r\n\t\tUserFilterPipe,\r\n\t\tResourceFilterPipe,\r\n\t\tLaborCatFilterPipe,\r\n\t\tLookupFilterPipe,\r\n\t\tClientFilterPipe,\r\n\t\tEditClientComponent,\r\n\t\tDeleteClientComponent,\r\n\t\tAccountDashboardPage,\r\n\t\tCreateAccountPopup,\r\n\t\tEditAccountPopup,\r\n\t\tEditAccountComponent,\r\n\t\tDeleteAccountComponent,\r\n\t\tEditUserComponent,\r\n\t\tDeleteUserComponent,\r\n\t\tEditResourceComponent,\r\n\t\tDeleteResourceComponent,\r\n\t\tEditLCATComponent,\r\n\t\tDeleteLCATComponent,\r\n\t\tEditLookupComponent,\r\n\t\tDeleteLookupComponent,\r\n\t\tEditLCATGroupComponent,\r\n\t\tDeleteLCATGroupComponent\r\n\t],\r\n\tproviders: [\r\n\t\tAuthorizationHelper,\r\n\t\tAuthService,\r\n\t\tAdminService,\r\n\t\tRoleService,\r\n\t\tLaborCategoryService,\r\n\t\tLookupService\r\n\t],\r\n\tentryComponents: [\r\n\t\tEditClientComponent,\r\n\t\tDeleteClientComponent,\r\n\t\tEditAccountComponent,\r\n\t\tDeleteAccountComponent,\r\n\t\tEditUserComponent,\r\n\t\tDeleteUserComponent,\r\n\t\tEditResourceComponent,\r\n\t\tDeleteResourceComponent,\r\n\t\tEditLCATComponent,\r\n\t\tDeleteLCATComponent,\r\n\t\tEditLookupComponent,\r\n\t\tDeleteLookupComponent,\r\n\t\tEditLCATGroupComponent,\r\n\t\tDeleteLCATGroupComponent\r\n\t]\r\n})\r\nexport class AdminModule {\r\n\tstatic routes = routes;\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation, AfterViewInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport * as _ from \"lodash\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { ClientService } from '../../services/client.service';\r\nimport { Client } from '../../models/client.model';\r\nimport { ClientView } from '../../models/clientview.model';\r\nimport { ICellRendererAngularComp } from \"ag-grid-angular\";\r\nimport { GridOptions } from \"ag-grid-community\";\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: 'edit-cell',\r\n  template: `<i class=\"glyphicon glyphicon-pencil\" (click)=\"invokeParentMethod()\" data-toggle=\"modal\"  title=\"Edit Client\"\r\n                   data-keyboard=\"false\" data-backdrop=\"static\" data-target=\"#edit-client\"></i>`\r\n  // styles: [\r\n  //     `.btn {\r\n  //         line-height: 0.5\r\n  //     }`\r\n  // ]\r\n})\r\nexport class EditClientComponent implements ICellRendererAngularComp {\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n      this.params = params;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n      this.params.context.componentParent.selectEditClient(this.params.data);\r\n  }\r\n\r\n  refresh(): boolean {\r\n      return false;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'delete-cell',\r\n  template: `<i class=\"glyphicon glyphicon-trash txt-gap\" (click)=\"invokeParentMethod()\" data-toggle=\"modal\"  title=\"Delete Client\"\r\n  data-keyboard=\"false\" data-backdrop=\"static\" data-target=\"#confirm-popup\"></i>`\r\n  // styles: [\r\n  //     `.btn {\r\n  //         line-height: 0.5\r\n  //     }`\r\n  // ]\r\n})\r\nexport class DeleteClientComponent implements ICellRendererAngularComp {\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n      this.params = params;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n      this.params.context.componentParent.selectDeleteClient(this.params.data);\r\n  }\r\n\r\n  refresh(): boolean {\r\n      return false;\r\n  }\r\n}\r\n\r\n// con\r\n@Component({\r\n  selector: \"client-dashboard\",\r\n  templateUrl: \"./client-dashboard.template.html\",\r\n  styleUrls: [\"./client-dashboard.styles.scss\"],\r\n  providers: [ClientService],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ClientDashboardPage implements OnInit, OnDestroy, AfterViewInit {\r\n  public router: Router;\r\n  public data: any[];\r\n\r\n  public lstClients: ClientView[];\r\n\r\n  public adminCount: number;\r\n  public selClientId: number;\r\n\r\n  public busyLoadClients: Subscription;\r\n  public busyDeleteClient: Subscription;\r\n\r\n  public paginationPageSize = 20;\r\n\r\n  public dropdownData = [];\r\n  public showErrorFlag: boolean;\r\n  public alerts: Array<Object>;\r\n  public effectiveDate: Date;\r\n  public selClient: Client;\r\n\r\n  public showCreateClient: boolean;\r\n  public showEditClient: boolean;\r\n  public showDeleteClient: boolean;\r\n\r\n  public delClientTitle: string = \"Delete Client\";\r\n  public delClientMessage: string = \"Are you sure you want to delete Client?\";\r\n  public confirmClicked: boolean = false;\r\n  public cancelClicked: boolean = false;\r\n\r\n  public gridOptions: GridOptions;\r\n\r\n  public gridApi;\r\n  public gridColumnApi;\r\n\r\n  public defaultColDef = {\r\n    sortable: true,\r\n    filter: true,\r\n    headerClass: 'fw-semi-bold'\r\n  };\r\n\r\n  public columnDefs = [\r\n    {\r\n      headerName: \"\",\r\n      field: \"value\",\r\n      cellRendererFramework: EditClientComponent,\r\n      colId: \"params\",\r\n      width: 50,\r\n      filter: false\r\n    },\r\n    {\r\n      headerName: 'Name',\r\n      field: 'name',\r\n      cellClass: function(params) {\r\n        return params.data.enabled !== 'Y' ? \"fw-semi-bold inactive\" : \"fw-semi-bold \";\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Account',\r\n      field: 'account',\r\n      cellClass: function(params) {\r\n        return params.data.enabled !== 'Y' ? \"inactive\" : \"\";\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Industry',\r\n      field: 'industry',\r\n      cellClass: function(params) {\r\n        return params.data.enabled !== 'Y' ? \"inactive\" : \"\";\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Sector',\r\n      field: 'sector',\r\n      cellClass: function(params) {\r\n        return params.data.enabled !== 'Y' ? \"inactive\" : \"\";\r\n      }\r\n    },\r\n    {\r\n      headerName: \"\",\r\n      field: \"value\",\r\n      cellRendererFramework: DeleteClientComponent,\r\n      colId: \"params\",\r\n      width: 50,\r\n      filter: false\r\n    }\r\n];\r\n\r\n  constructor(\r\n    private clientService: ClientService,\r\n    router: Router) {\r\n    this.alerts = [\r\n      {\r\n        type: \"success\",\r\n        msg:\r\n          '<i class=\"fa fa-circle text-success\"></i><span class=\"alert-text\">Successfully generated 12 monthly reports</span>'\r\n      }\r\n    ];\r\n\r\n    this.router = router;\r\n\r\n    this.showCreateClient = false;\r\n    this.showEditClient = false;\r\n    this.showDeleteClient = false;\r\n\r\n    this.selClientId = 1;\r\n    this.gridOptions = <GridOptions>{\r\n      context: {\r\n          componentParent: this\r\n      },\r\n      enableColResize: true,\r\n      rowHeight: 30\r\n  };\r\n  }\r\n\r\n  ngOnInit() {\r\n    let searchInput = jQuery(\"#table-search-input, #search-countries\");\r\n    searchInput\r\n      .focus(e => {\r\n        jQuery(e.target)\r\n          .closest(\".input-group\")\r\n          .addClass(\"focus\");\r\n      })\r\n      .focusout(e => {\r\n        jQuery(e.target)\r\n          .closest(\".input-group\")\r\n          .removeClass(\"focus\");\r\n      });\r\n\r\n      this.loadAllClients();\r\n  }\r\n\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.busyLoadClients) {\r\n      this.busyLoadClients.unsubscribe();\r\n    }\r\n    if (this.busyDeleteClient) {\r\n      this.busyDeleteClient.unsubscribe();\r\n    }\r\n }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  public cosmeticFix(elementID: any){\r\n    // The code below for cosmetic fix - Blue box now surrounds the icon on the search company text box\r\n    let filterInput = jQuery(elementID);\r\n    filterInput\r\n    .focus((e) => {\r\n        jQuery(e.target).closest('.input-group').addClass('focus');\r\n    })\r\n    .focusout((e) => {\r\n        jQuery(e.target).closest('.input-group').removeClass('focus');\r\n    });\r\n  }\r\n\r\n  private loadAllClients() {\r\n    let that = this;\r\n    this.busyLoadClients = this.clientService.getAll().subscribe(clientdata => {\r\n      if (clientdata) {\r\n        that.data = clientdata;\r\n        that.gridApi.sizeColumnsToFit();\r\n      }\r\n    }, error => {\r\n      this.showErrorFlag = true;\r\n      this.alerts = [];\r\n      this.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n  public reloadClients(reload: boolean) {\r\n    this.showCreateClient = false;\r\n    this.showEditClient = false;\r\n    if (reload) {\r\n      this.loadAllClients();\r\n    } else {\r\n      this.selClient = new Client();\r\n    }\r\n  }\r\n\r\n  public deleteClient(id) {\r\n    this.busyDeleteClient = this.clientService.deleteClientById(id).subscribe(data => {\r\n      if (data) {\r\n        this.reloadClients(true);\r\n        this.showDeleteClient = false;\r\n        jQuery('#confirm-popup').modal('hide');\r\n      }\r\n    }, error => {\r\n      this.showErrorFlag = true;\r\n      this.alerts = [];\r\n      this.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n  public addClient() {\r\n    this.showCreateClient = true;\r\n  }\r\n\r\n  public selectEditClient(client) {\r\n    this.showEditClient = true;\r\n    this.selClient = client;\r\n  }\r\n\r\n  public selectDeleteClient(client){\r\n    this.showDeleteClient = true;\r\n    this.selClient = client;\r\n  }\r\n  public onClickBackButton(){\r\n\t\tthis.router.navigate([\"/app/tdl/search\"]);\r\n  }\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid #ddd; }\\n.clientdashboardController {\\n  width: 98%; }\\n.inactive {\\n  text-decoration: line-through; }\\n.ag-row .ag-cell {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<h1 class=\\\"h4 page-title hd-bdr\\\">Clients</h1>\\r\\n<div data-ng-controller=\\\"clientdashboardController\\\" class=\\\"clientdashboardController\\\">\\r\\n    <div aria-live=\\\"assertive\\\">\\r\\n        <div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n                        <alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n                            <div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n                        </alert>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-10\\\">\\r\\n            <section class=\\\"widget h-divider\\\" widget>\\r\\n                <div class=\\\"widget-body\\\">\\r\\n                    <div class=\\\"row\\\" style=\\\"margin-bottom: 20px;\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-offset-1 col-md-4\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <div class=\\\"pull-right\\\">\\r\\n                                <button id=\\\"btn-cr-client\\\" type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" data-toggle=\\\"modal\\\"\\r\\n                                    data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\" data-target=\\\"#create-client\\\" title=\\\"Add Client\\\"\\r\\n                                    (click)=\\\"addClient()\\\">\\r\\n                                    <i class=\\\"glyphicon glyphicon-plus\\\"></i>\\r\\n                                    Add Client\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"grid-wrapper\\\">\\r\\n                        <ag-grid-angular\\r\\n                            #agGrid\\r\\n                            style=\\\"width: 100%; height: 650px;\\\"\\r\\n                            class=\\\"ag-theme-balham\\\"\\r\\n                            [rowData]=\\\"data\\\"\\r\\n                            [columnDefs]=\\\"columnDefs\\\"\\r\\n                            [defaultColDef]=\\\"defaultColDef\\\"\\r\\n                            [gridOptions]=\\\"gridOptions\\\"\\r\\n                            [floatingFilter]=\\\"true\\\"\\r\\n                            [pagination]=\\\"true\\\"\\r\\n                            (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                            [paginationAutoPageSize]=\\\"true\\\"\\r\\n                            >\\r\\n                        </ag-grid-angular>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"widget-footer\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n                            <div class=\\\"pull-right\\\">\\r\\n                                <button id=\\\"btn-go-back\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n                                    (click)=\\\"onClickBackButton()\\\">\\r\\n                                    <span class=\\\"glyphicon glyphicon-chevron-left txt-gap\\\"\\r\\n                                        aria-hidden=\\\"true\\\"></span>Back</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </section>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"showCreateClient\\\" create-client-popup [ClientId]=\\\"selClientId\\\" (reloadClients)=\\\"reloadClients($event)\\\"></div>\\r\\n    <div *ngIf=\\\"showEditClient\\\" edit-client-popup [model]=\\\"selClient\\\" (reloadClients)=\\\"reloadClients($event)\\\"></div>\\r\\n    <div *ngIf=\\\"showDeleteClient\\\" confirm-popup-ph [model]=\\\"selClient\\\" (callBack)=\\\"deleteClient(selClient.clientId)\\\"\\r\\n    (hideModal)=\\\"showDeleteClient = false\\\" [msg]=\\\"'Are you sure you want to delete Client '+ selClient.name+' ?'\\\"\\r\\n    [title]=\\\"'Delete Client'\\\" >\\r\\n</div>\\r\\n</div>\"","/*\r\n@author : Deloitte\r\nthis is Component for creating a labor category\r\n*/\r\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AccountView } from '../../models/accountview.model';\r\nimport { Client } from '../../models/client.model';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { ClientService } from '../../services/client.service';\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: '[create-client-popup]',\r\n  templateUrl: './create-client-popup.template.html',\r\n  styleUrls: ['./create-client-popup.styles.scss'],\r\n  providers: [AccountService, ClientService],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class CreateClientPopup\r\n * @implements {OnInit}\r\n */\r\n\r\nexport class CreateClientPopup implements OnInit, OnDestroy{\r\n  @Output() reloadClients = new EventEmitter<boolean>();\r\n  @Input() ClientId;\r\n\r\n  public router: Router;\r\n  public showErrorFlag: boolean;\r\n  public alerts: Array<Object>;\r\n\r\n\r\n  public client = new Client();\r\n  public lstAccounts: AccountView[] = [];\r\n\r\n  public busySaveClient:Subscription;\r\n  public busyLoadAccounts: Subscription;\r\n\r\n\r\n  public clientenabled: boolean = true;\r\n\r\n  constructor(router: Router,\r\n    private clientService: ClientService,\r\n    private accountService: AccountService\r\n  ) {\r\n    this.router = router;\r\n\r\n    this.alerts = [\r\n      {\r\n        type: 'warning',\r\n        msg: '<span class=\"fw-semi-bold\">Warning:</span> Placeholder for Error Validation messages'\r\n      }\r\n    ];\r\n\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.showErrorFlag = false;\r\n    this.loadAllAccounts();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if(this.busySaveClient){\r\n      this.busySaveClient.unsubscribe();\r\n    }\r\n    if(this.busyLoadAccounts){\r\n      this.busyLoadAccounts.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private loadAllAccounts() {\r\n    let that = this;\r\n    this.busyLoadAccounts = this.accountService.getAll().subscribe(accountdata => {\r\n      if (accountdata) {\r\n        that.lstAccounts = accountdata;\r\n      }\r\n    }, error => {\r\n      this.showErrorFlag = true;\r\n      this.alerts = [];\r\n      this.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n  public createClient(newClient: Client) {\r\n    jQuery('#addclientform').parsley().validate();\r\n\r\n    // Toggle to edit mode or navigate to the next screen if validation passes\r\n    if (jQuery('#addclientform').parsley().isValid()) {\r\n\r\n      newClient.enabled = (this.clientenabled) ? 'Y' : 'N';\r\n      this.busySaveClient = this.clientService.saveClient(newClient).subscribe(data => {\r\n        if (data) {\r\n          this.reset(true);\r\n          this.reloadClients.emit(true);\r\n        }\r\n      }, error => {\r\n          this.showErrorFlag = true;\r\n          this.alerts = [];\r\n          this.alerts.push({ type: 'warning', msg: error });\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  public reset(flag) {\r\n    jQuery('#create-client').on('hidden').find('#name').val('');\r\n    jQuery('#addclientform').parsley().reset();\r\n    jQuery('#create-client').modal('hide');\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-divider {\\n  width: 100%;\\n  border-bottom: 3px solid #778899; }\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid gray;\\n  padding-bottom: 10px; }\\ninput.parsley-error {\\n  border-color: #d9534f;\\n  box-shadow: inset 0 1px 1px rgba(217, 83, 79, 0.075); }\\n.parsley-errors-list {\\n  font-size: 85%;\\n  padding-left: 0;\\n  margin-bottom: 5px; }\\n.parsley-errors-list li {\\n    list-style: none;\\n    color: #d9534f; }\\n.switch {\\n  box-sizing: content-box;\\n  margin-left: -20px; }\\n.switch i {\\n  display: inline-block;\\n  cursor: pointer;\\n  margin-left: -20px;\\n  margin-bottom: -3px;\\n  padding-right: 20px;\\n  transition: all ease 0.2s;\\n  -webkit-transition: all ease 0.2s;\\n  border-radius: 20px;\\n  box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.5); }\\n.switch i:before {\\n  display: block;\\n  content: '';\\n  width: 30px;\\n  height: 30px;\\n  padding: 1px;\\n  border-radius: 20px;\\n  background: white;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }\\n.switch :checked + i {\\n  padding-right: 0;\\n  padding-left: 20px;\\n  background: #64bd63; }\\n.white, .white a {\\n  color: #fff; }\\n.btn-label {\\n  background: transparent;\\n  left: 2px;\\n  padding: 1px 6px; }\\n.md-editor {\\n  display: block;\\n  border: 1px solid #dee2e6; }\\n.md-editor > .md-header, .md-editor .md-footer {\\n    display: block;\\n    padding: 6px 4px;\\n    background: #f5f5f5; }\\n.md-editor > .md-header {\\n    margin: 0; }\\n.md-editor > .md-header .glyphicon {\\n      top: 3px; }\\n.md-editor > .md-preview {\\n    margin-left: -1px;\\n    margin-right: -1px;\\n    padding: 0.5rem 1rem;\\n    background: #fff;\\n    border-top: 1px dashed #dee2e6;\\n    min-height: 10px; }\\n.md-editor > textarea {\\n    font-family: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n    font-size: 1rem;\\n    outline: 0;\\n    outline: thin dotted  \\\\9;\\n    /* IE6-9 */\\n    margin: 0;\\n    display: block;\\n    width: 100%;\\n    border: 0;\\n    border-top: 1px dashed #dee2e6;\\n    border-radius: 0;\\n    box-shadow: none;\\n    background: #dee2e6; }\\n.md-editor > textarea:focus {\\n      box-shadow: none;\\n      background: #fff; }\\n.md-editor.active {\\n    border-color: #4d90fe;\\n    outline: 0; }\\n/**\\r\\n * Bootstrap select\\r\\n */\\n.selectpicker.form-control {\\n  height: auto; }\\n.bootstrap-select .dropdown-toggle {\\n  padding-left: 10px; }\\n.bootstrap-select .dropdown-toggle:after {\\n    margin-right: 0;\\n    margin-left: 0; }\\n.bootstrap-select .dropdown-menu > li > a {\\n  display: block;\\n  width: 100%;\\n  padding: 3px 20px;\\n  clear: both;\\n  font-weight: normal;\\n  line-height: 1.42857143;\\n  color: #555;\\n  text-align: inherit;\\n  white-space: nowrap;\\n  background: none;\\n  border: 0; }\\n.bootstrap-select .dropdown-menu > li > a:hover, .bootstrap-select .dropdown-menu > li > a:focus {\\n    color: #171717;\\n    text-decoration: none;\\n    background-color: #f5f5f5; }\\n.bootstrap-select .dropdown-menu > li > a.active, .bootstrap-select .dropdown-menu > li > a.active:hover, .bootstrap-select .dropdown-menu > li > a.active:focus {\\n    color: #fff;\\n    text-decoration: none;\\n    background-color: #5d8fc2;\\n    outline: 0; }\\n.bootstrap-select .dropdown-menu > li > a.disabled, .bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    color: #868e96; }\\n.bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    text-decoration: none;\\n    cursor: not-allowed;\\n    background-color: transparent;\\n    background-image: none; }\\n/**\\r\\n*  autosize\\r\\n**/\\n/***********************************/\\n/**          NEWS LIST           **/\\n/**********************************/\\n.news-list {\\n  margin-bottom: 0;\\n  padding-left: 0; }\\n.news-list li {\\n    list-style: none;\\n    box-sizing: content-box;\\n    border-top: 1px solid #eeeeee;\\n    padding: 12px;\\n    cursor: pointer;\\n    -webkit-transition: background-color 0.2s ease-out;\\n    transition: background-color 0.2s ease-out; }\\n@media screen and (prefers-reduced-motion: reduce) {\\n      .news-list li {\\n        -webkit-transition: none;\\n        transition: none; } }\\n.news-list li:hover {\\n      background: #dbdbdb; }\\n.news-list li:last-child {\\n      margin-bottom: -10px; }\\n.news-list img,\\n  .news-list .icon {\\n    float: left;\\n    height: 50px;\\n    width: 50px; }\\n.news-list .icon {\\n    line-height: 50px;\\n    border-radius: 50%;\\n    text-align: center;\\n    font-size: 28px; }\\n.news-list .news-item-info {\\n    margin-left: 62px;\\n    /*50 + 12px padding*/ }\\n.news-list .name {\\n    text-transform: uppercase; }\\n.news-list .name a {\\n      text-decoration: none; }\\n.news-list .name a:hover {\\n        color: #218bc3; }\\n.autogrow {\\n  overflow: hidden;\\n  resize: none; }\\n.form-checkbox {\\n  margin-left: 5px;\\n  width: 20px;\\n  height: 20px;\\n  box-shadow: none; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"create-client\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"create-client-title\\\" aria-hidden=\\\"true\\\">\\r\\n\\t<div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t<h1 class=\\\"h4 modal-title text-xs-left fw-bold mt\\\" id=\\\"create-client-title\\\">Add Client</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Body-->\\r\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t<form id=\\\"addclientform\\\" #addclientform=\\\"ngForm\\\" role=\\\"form\\\" class=\\\"form-horizontal\\\" data-parsley-priority-enabled=\\\"false\\\" novalidate=\\\"novalidate\\\"\\r\\n\\t\\t\\t\\t\\tdata-parsley-validate data-parsley-focus=\\\"first\\\">\\r\\n\\t\\t\\t\\t\\t<!-- Name -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Name\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"client.name\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: Name is required\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- Accounts -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"cli-acc\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Accounts\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select required [(ngModel)]=\\\"client.accountId\\\" title=\\\"Account\\\" name=\\\"Account\\\" class=\\\"form-control fdatable\\\" id=\\\"cli-acc\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Select Account\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tdata-parsley-required-message=\\\"Error: Account is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<option></option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let acc of lstAccounts\\\" [ngValue]=\\\"acc.accountId\\\">{{acc.name}}</option>\\r\\n\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Active         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"enabled\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control form-checkbox\\\" id=\\\"enabled\\\" [(ngModel)]=\\\"clientenabled\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div aria-live=\\\"assertive\\\">\\r\\n\\t\\t\\t\\t<div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</alert>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Footer-->\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" id=\\\"btn-save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createClient(client)\\\">Save Client</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reset(false)\\\">Cancel</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","/*\r\n@author : Deloitte\r\nthis is Componentfor adding contact as a popup.\r\n*/\r\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output, SimpleChanges, ViewEncapsulation, OnChanges } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { Client } from '../../models/client.model';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { ClientService } from '../../services/client.service';\r\nimport { AccountView } from '../../models/accountview.model';\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: \"[edit-client-popup]\",\r\n  templateUrl: \"./edit-client-popup.template.html\",\r\n  styleUrls: [\"./edit-client-popup.styles.scss\"],\r\n  providers: [AccountService, ClientService],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class EditClientPopup\r\n * @implements {OnInit}\r\n */\r\nexport class EditClientPopup implements OnInit, OnDestroy, OnChanges {\r\n  @Input() model;\r\n  @Output() reloadClients = new EventEmitter<boolean>();\r\n\r\n  public router: Router;\r\n  public showErrorFlag: boolean;\r\n  public alerts: Array<Object>;\r\n  public editClient: Client;\r\n  public lstAccounts: AccountView[] = [];\r\n  public busySaveClient:Subscription;\r\n  public busyLoadAccounts: Subscription;\r\n  public clientenabled: boolean = true;\r\n  ngOnInit(): void {\r\n    this.showErrorFlag = false;\r\n\r\n  }\r\n  ngOnDestroy() {\r\n    if(this.busySaveClient){\r\n      this.busySaveClient.unsubscribe();\r\n    }\r\n    if(this.busyLoadAccounts){\r\n      this.busyLoadAccounts.unsubscribe();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    router: Router,\r\n    private clientService: ClientService,\r\n    private accountService: AccountService\r\n  ) {\r\n    this.router = router;\r\n\r\n    this.alerts = [\r\n      {\r\n        type: \"warning\",\r\n        msg:\r\n          '<span class=\"fw-semi-bold\">Warning:</span> Placeholder for Error Validation messages'\r\n      }\r\n    ];\r\n\r\n    this.showErrorFlag = false;\r\n    this.loadAllAccounts();\r\n  }\r\n\r\n  // Update labor cat\r\n  public updateClient(client: Client) {\r\n    jQuery(\"#editclientform\").parsley().validate();\r\n    client.enabled = (this.clientenabled) ? 'Y' : 'N';\r\n    // Toggle to edit mode or navigate to the next screen if validation passes\r\n    if ( jQuery(\"#editclientform\").parsley().isValid() ) {\r\n      this.busySaveClient = this.clientService.saveClient(client).subscribe(\r\n        data => {\r\n          if (data) {\r\n            this.reset(true);\r\n          }\r\n        },\r\n        error => {\r\n          this.showErrorFlag = true;\r\n          this.alerts = [];\r\n          this.alerts.push({ type: \"warning\", msg: error });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public reset(flag) {\r\n    jQuery(\"#edit-client\").on(\"hidden\").find(\"#name\").val(\"\");\r\n    jQuery(\"#editclientform\").parsley().reset();\r\n    jQuery(\"#edit-client\").modal(\"hide\");\r\n    this.reloadClients.emit(flag);\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n\r\n  private loadAllAccounts() {\r\n    let that = this;\r\n    this.busyLoadAccounts = this.accountService.getAll().subscribe(accountdata => {\r\n      if (accountdata) {\r\n        that.lstAccounts = accountdata;\r\n      }\r\n    }, error => {\r\n      this.showErrorFlag = true;\r\n      this.alerts = [];\r\n      this.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    for (let propName in changes) {\r\n      if (propName === \"model\") {\r\n        let chg = changes[propName];\r\n        if (chg.currentValue) {\r\n          this.editClient = Object.assign({}, chg.currentValue);\r\n          this.clientenabled = (this.editClient.enabled === 'Y') ? true : false;\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-divider {\\n  width: 100%;\\n  border-bottom: 3px solid #778899; }\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid gray;\\n  padding-bottom: 10px; }\\ninput.parsley-error {\\n  border-color: #d9534f;\\n  box-shadow: inset 0 1px 1px rgba(217, 83, 79, 0.075); }\\n.parsley-errors-list {\\n  font-size: 85%;\\n  padding-left: 0;\\n  margin-bottom: 5px; }\\n.parsley-errors-list li {\\n    list-style: none;\\n    color: #d9534f; }\\n.switch {\\n  box-sizing: content-box;\\n  margin-left: -20px; }\\n.switch i {\\n  display: inline-block;\\n  cursor: pointer;\\n  margin-left: -20px;\\n  margin-bottom: -3px;\\n  padding-right: 20px;\\n  transition: all ease 0.2s;\\n  -webkit-transition: all ease 0.2s;\\n  border-radius: 20px;\\n  box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.5); }\\n.switch i:before {\\n  display: block;\\n  content: '';\\n  width: 30px;\\n  height: 30px;\\n  padding: 1px;\\n  border-radius: 20px;\\n  background: white;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }\\n.switch :checked + i {\\n  padding-right: 0;\\n  padding-left: 20px;\\n  background: #64bd63; }\\n.white, .white a {\\n  color: #fff; }\\n.btn-label {\\n  background: transparent;\\n  left: 2px;\\n  padding: 1px 6px; }\\n.md-editor {\\n  display: block;\\n  border: 1px solid #dee2e6; }\\n.md-editor > .md-header, .md-editor .md-footer {\\n    display: block;\\n    padding: 6px 4px;\\n    background: #f5f5f5; }\\n.md-editor > .md-header {\\n    margin: 0; }\\n.md-editor > .md-header .glyphicon {\\n      top: 3px; }\\n.md-editor > .md-preview {\\n    margin-left: -1px;\\n    margin-right: -1px;\\n    padding: 0.5rem 1rem;\\n    background: #fff;\\n    border-top: 1px dashed #dee2e6;\\n    min-height: 10px; }\\n.md-editor > textarea {\\n    font-family: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n    font-size: 1rem;\\n    outline: 0;\\n    outline: thin dotted  \\\\9;\\n    /* IE6-9 */\\n    margin: 0;\\n    display: block;\\n    width: 100%;\\n    border: 0;\\n    border-top: 1px dashed #dee2e6;\\n    border-radius: 0;\\n    box-shadow: none;\\n    background: #dee2e6; }\\n.md-editor > textarea:focus {\\n      box-shadow: none;\\n      background: #fff; }\\n.md-editor.active {\\n    border-color: #4d90fe;\\n    outline: 0; }\\n/**\\r\\n * Bootstrap select\\r\\n */\\n.selectpicker.form-control {\\n  height: auto; }\\n.bootstrap-select .dropdown-toggle {\\n  padding-left: 10px; }\\n.bootstrap-select .dropdown-toggle:after {\\n    margin-right: 0;\\n    margin-left: 0; }\\n.bootstrap-select .dropdown-menu > li > a {\\n  display: block;\\n  width: 100%;\\n  padding: 3px 20px;\\n  clear: both;\\n  font-weight: normal;\\n  line-height: 1.42857143;\\n  color: #555;\\n  text-align: inherit;\\n  white-space: nowrap;\\n  background: none;\\n  border: 0; }\\n.bootstrap-select .dropdown-menu > li > a:hover, .bootstrap-select .dropdown-menu > li > a:focus {\\n    color: #171717;\\n    text-decoration: none;\\n    background-color: #f5f5f5; }\\n.bootstrap-select .dropdown-menu > li > a.active, .bootstrap-select .dropdown-menu > li > a.active:hover, .bootstrap-select .dropdown-menu > li > a.active:focus {\\n    color: #fff;\\n    text-decoration: none;\\n    background-color: #5d8fc2;\\n    outline: 0; }\\n.bootstrap-select .dropdown-menu > li > a.disabled, .bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    color: #868e96; }\\n.bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    text-decoration: none;\\n    cursor: not-allowed;\\n    background-color: transparent;\\n    background-image: none; }\\n/**\\r\\n*  autosize\\r\\n**/\\n/***********************************/\\n/**          NEWS LIST           **/\\n/**********************************/\\n.news-list {\\n  margin-bottom: 0;\\n  padding-left: 0; }\\n.news-list li {\\n    list-style: none;\\n    box-sizing: content-box;\\n    border-top: 1px solid #eeeeee;\\n    padding: 12px;\\n    cursor: pointer;\\n    -webkit-transition: background-color 0.2s ease-out;\\n    transition: background-color 0.2s ease-out; }\\n@media screen and (prefers-reduced-motion: reduce) {\\n      .news-list li {\\n        -webkit-transition: none;\\n        transition: none; } }\\n.news-list li:hover {\\n      background: #dbdbdb; }\\n.news-list li:last-child {\\n      margin-bottom: -10px; }\\n.news-list img,\\n  .news-list .icon {\\n    float: left;\\n    height: 50px;\\n    width: 50px; }\\n.news-list .icon {\\n    line-height: 50px;\\n    border-radius: 50%;\\n    text-align: center;\\n    font-size: 28px; }\\n.news-list .news-item-info {\\n    margin-left: 62px;\\n    /*50 + 12px padding*/ }\\n.news-list .name {\\n    text-transform: uppercase; }\\n.news-list .name a {\\n      text-decoration: none; }\\n.news-list .name a:hover {\\n        color: #218bc3; }\\n.autogrow {\\n  overflow: hidden;\\n  resize: none; }\\n.form-checkbox {\\n  margin-left: 5px;\\n  width: 20px;\\n  height: 20px;\\n  box-shadow: none; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vY29tcG9uZW50cy9jbGllbnQvQzpcXFVzZXJzXFxhc2FwYVxcRG9jdW1lbnRzXFxDYmFzc1xcY2Jhc3JlcG9cXGNiYXMtdWkvc3JjXFxzY3NzXFxfdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL2FkbWluL2NvbXBvbmVudHMvY2xpZW50L0M6XFxVc2Vyc1xcYXNhcGFcXERvY3VtZW50c1xcQ2Jhc3NcXGNiYXNyZXBvXFxjYmFzLXVpL3NyY1xcYXBwXFxhZG1pblxcY29tcG9uZW50c1xcY2xpZW50XFxlZGl0LWNsaWVudC1wb3B1cC5zdHlsZXMuc2NzcyIsInNyYy9hcHAvYWRtaW4vY29tcG9uZW50cy9jbGllbnQvQzpcXFVzZXJzXFxhc2FwYVxcRG9jdW1lbnRzXFxDYmFzc1xcY2Jhc3JlcG9cXGNiYXMtdWkvbm9kZV9tb2R1bGVzXFxib290c3RyYXBcXHNjc3NcXG1peGluc1xcX2JveC1zaGFkb3cuc2NzcyIsInNyYy9hcHAvYWRtaW4vY29tcG9uZW50cy9jbGllbnQvQzpcXFVzZXJzXFxhc2FwYVxcRG9jdW1lbnRzXFxDYmFzc1xcY2Jhc3JlcG9cXGNiYXMtdWkvbm9kZV9tb2R1bGVzXFxib290c3RyYXBcXHNjc3NcXF92YXJpYWJsZXMuc2NzcyIsInNyYy9hcHAvYWRtaW4vY29tcG9uZW50cy9jbGllbnQvQzpcXFVzZXJzXFxhc2FwYVxcRG9jdW1lbnRzXFxDYmFzc1xcY2Jhc3JlcG9cXGNiYXMtdWkvbm9kZV9tb2R1bGVzXFxib290c3RyYXBcXHNjc3NcXG1peGluc1xcX2hvdmVyLnNjc3MiLCJzcmMvYXBwL2FkbWluL2NvbXBvbmVudHMvY2xpZW50L0M6XFxVc2Vyc1xcYXNhcGFcXERvY3VtZW50c1xcQ2Jhc3NcXGNiYXNyZXBvXFxjYmFzLXVpL25vZGVfbW9kdWxlc1xcYm9vdHN0cmFwXFxzY3NzXFxtaXhpbnNcXF90cmFuc2l0aW9uLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBYUE7Ozs4RUFHOEU7QUNkOUU7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SUE2Qkksa0JBQWlCO0lBQ2pCLG1CQUFrQjtJQUNsQixtQkFBa0I7SUFDbEIsZ0JBQWUsRUFDaEI7QUFqQ0g7SUFvQ0ksa0JBQWlCO0lBQUUscUJBQXFCLEVBQ3pDO0FBckNIO0lBd0NJLDBCQUF5QixFQVExQjtBQWhESDtNQTJDTSxzQkFBcUIsRUFJdEI7QUEvQ0w7UUE2Q1EsZUQvS1ksRUNnTGI7QUFLUDtFQUNFLGlCQUFnQjtFQUNoQixhQUFZLEVBQ2I7QUFFRDtFQUNFLGlCQUFlO0VBQ2YsWUFBVztFQUNYLGFBQVk7RUFDWixpQkFBZ0IsRUFDakIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9jb21wb25lbnRzL2NsaWVudC9lZGl0LWNsaWVudC1wb3B1cC5zdHlsZXMuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNpbmcgdmFyaWFibGVzXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuJGVuYWJsZS1zaGFkb3dzOiB0cnVlICFkZWZhdWx0O1xyXG5cclxuJGdseXBoaWNvbnMtaGFsZmxpbmdzLWluY2x1ZGUtYm9udXM6IGZhbHNlICFkZWZhdWx0O1xyXG4kZ2x5cGhpY29ucy1oYWxmbGluZ3MtY2xhc3MtcHJlZml4OiBnbHlwaGljb24gIWRlZmF1bHQ7XHJcbiRnbHlwaGljb25zLWhhbGZsaW5ncy1mb250LWJhc2Utc2l6ZTogMTRweCAhZGVmYXVsdDtcclxuXHJcbiRnbHlwaGljb25zLWhhbGZsaW5ncy1mb250LXBhdGg6ICd+L2ZvbnRzL2dseXBoaWNvbnMnICFkZWZhdWx0O1xyXG4kZmEtZm9udC1wYXRoOiAnfi9mb250LWF3ZXNvbWUvZm9udHMnICFkZWZhdWx0O1xyXG5cclxuLypcclxuXHJcbiAqIFR5cG9ncmFwaHlcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbiRmb250LXNpemUtaW5pdGlhbDogMTRweDsgLy8gcmVzZXQgZGVmYXVsdCBicm93c2VyIHZhbHVlIGZyb20gMTZweCB0byAxM3B4XHJcbiRmb250LXNpemUtYmFzZTogMXJlbSAhZGVmYXVsdDtcclxuJGZvbnQtc2l6ZS1sZzogMS4yNXJlbSAhZGVmYXVsdDtcclxuJGZvbnQtc2l6ZS1zbTogMC44NzVyZW0gIWRlZmF1bHQ7XHJcbiRmb250LXNpemUtbGFyZ2VyOiAxLjFyZW07XHJcbiRmb250LXNpemUtbWluaTogMC45cmVtO1xyXG4kZm9udC1zaXplLWluZGV4OiAwLjdyZW07XHJcblxyXG4kc21hbGwtZm9udC1zaXplOiA4NSUgIWRlZmF1bHQ7XHJcblxyXG4kZm9udC1mYW1pbHktYmFzZTogJ29wZW4nLFxyXG5zYW5zLXNlcmlmO1xyXG4kZm9udC1mYW1pbHktc2Fucy1zZXJpZjogJ29wZW4nLFxyXG5zYW5zLXNlcmlmO1xyXG5cclxuLy8gQ29sb3Igc3lzdGVtXHJcbi8vXHJcblxyXG4kd2hpdGU6ICNmZmYgIWRlZmF1bHQ7XHJcbiRncmF5LTEwMDogI2Y1ZjVmNSAhZGVmYXVsdDtcclxuJGdyYXktMjAwOiAjZWVlZWVlICFkZWZhdWx0O1xyXG4kZ3JheS0zMDA6ICNkZWUyZTYgIWRlZmF1bHQ7XHJcbiRncmF5LTQwMDogI2NlZDRkYSAhZGVmYXVsdDtcclxuJGdyYXktNTAwOiAjYWRiNWJkICFkZWZhdWx0O1xyXG4kZ3JheS02MDA6ICM4NjhlOTYgIWRlZmF1bHQ7XHJcbiRncmF5LTcwMDogIzU1NSAhZGVmYXVsdDtcclxuJGdyYXktODAwOiAjMzQzNDM0ICFkZWZhdWx0O1xyXG4kZ3JheS05MDA6ICMyNDI0MjQgIWRlZmF1bHQ7XHJcbiRibGFjazogIzAwMCAhZGVmYXVsdDtcclxuJGdyYXktbGlnaHQ6ICNkZGQgIWRlZmF1bHQ7XHJcblxyXG5cclxuJGJsdWU6ICM1ZDhmYzIgIWRlZmF1bHQ7XHJcbiRyZWQ6ICNkZDU4MjYgIWRlZmF1bHQ7XHJcbiR5ZWxsb3c6ICNmMGI1MTggIWRlZmF1bHQ7XHJcbiRncmVlbjogIzY0YmQ2MyAhZGVmYXVsdDtcclxuJGN5YW46ICM1ZGM0YmYgIWRlZmF1bHQ7XHJcblxyXG4kdGhlbWUtY29sb3JzOiAocHJpbWFyeTogJGJsdWUsXHJcbnNlY29uZGFyeTogJGdyYXktNjAwLFxyXG5zdWNjZXNzOiAkZ3JlZW4sXHJcbnByaW1hcnktbGlnaHQ6ICNkZWU0ZWUsXHJcbnN1Y2Nlc3MtbGlnaHQ6ICNlY2ZhZWMsXHJcbmluZm8tbGlnaHQ6ICNmMmZhZmEsXHJcbndhcm5pbmctbGlnaHQ6ICNmZGY3ZTYsXHJcbmRhbmdlci1saWdodDogI2ZmZjJlZixcclxuaW5mbzogJGN5YW4sXHJcbndhcm5pbmc6ICR5ZWxsb3csXHJcbmRhbmdlcjogJHJlZCxcclxuZGFyazogJGdyYXktODAwLFxyXG5pbnZlcnNlOiAkZ3JheS03MDAsXHJcbmdyYXk6ICRncmF5LTMwMCxcclxuZGVmYXVsdDogI2Y4ZjhmOCk7XHJcblxyXG4kbGluay1jb2xvcjogIzIxOGJjMztcclxuXHJcbiR0ZXh0LWNvbG9yOiAkZ3JheS03MDAgIWRlZmF1bHQ7XHJcblxyXG4kZm9udC13ZWlnaHQtYm9sZDogNzAwICFkZWZhdWx0O1xyXG4kZm9udC13ZWlnaHQtc2VtaS1ib2xkOiA2MDAgIWRlZmF1bHQ7XHJcbiRmb250LXdlaWdodC1ub3JtYWw6IDUwMCAhZGVmYXVsdDtcclxuJGZvbnQtd2VpZ2h0LXRoaW46IDMwMCAhZGVmYXVsdDtcclxuJGZvbnQtd2VpZ2h0LWJhc2U6ICRmb250LXdlaWdodC1ub3JtYWwgIWRlZmF1bHQ7XHJcblxyXG4kZm9udC1zaXplLXNtYWxsZXI6IDg1JSAhZGVmYXVsdDtcclxuJGhlYWRpbmdzLWZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtbm9ybWFsICFkZWZhdWx0O1xyXG5cclxuJGFkZGl0aW9uLWJnOiAjZjhmOGY4ICFkZWZhdWx0O1xyXG5cclxuJGJvZHktYmc6IGxpZ2h0Z3JheSAhZGVmYXVsdDsgLy8gI2Y1ZjVmNSAhZGVmYXVsdDtcclxuJGJvZHktYmctbGlnaHQ6IGxpZ2h0ZW4oJGJvZHktYmcsIDMlKTtcclxuXHJcbi8vPT0gQ29tcG9uZW50c1xyXG4vL1xyXG5cclxuJHBhZGRpbmctYmFzZS12ZXJ0aWNhbDogMC41cmVtICFkZWZhdWx0O1xyXG4kcGFkZGluZy1iYXNlLWhvcml6b250YWw6IDFyZW0gIWRlZmF1bHQ7XHJcblxyXG4kcGFkZGluZy1sYXJnZS12ZXJ0aWNhbDogMC43NXJlbSAhZGVmYXVsdDtcclxuJHBhZGRpbmctbGFyZ2UtaG9yaXpvbnRhbDogMS4yNXJlbSAhZGVmYXVsdDtcclxuXHJcbiRwYWRkaW5nLXNtYWxsLXZlcnRpY2FsOiAwLjI1cmVtICFkZWZhdWx0O1xyXG4kcGFkZGluZy1zbWFsbC1ob3Jpem9udGFsOiAwLjc1cmVtICFkZWZhdWx0O1xyXG5cclxuJG1hcmdpbi1iYXNlLXZlcnRpY2FsOiAwLjVyZW0gIWRlZmF1bHQ7XHJcbiRtYXJnaW4tYmFzZS1ob3Jpem9udGFsOiAxcmVtICFkZWZhdWx0O1xyXG5cclxuJG1hcmdpbi1sYXJnZS12ZXJ0aWNhbDogMC43NXJlbSAhZGVmYXVsdDtcclxuJG1hcmdpbi1sYXJnZS1ob3Jpem9udGFsOiAxLjI1cmVtICFkZWZhdWx0O1xyXG5cclxuJG1hcmdpbi1zbWFsbC12ZXJ0aWNhbDogMC4yNXJlbSAhZGVmYXVsdDtcclxuJG1hcmdpbi1zbWFsbC1ob3Jpem9udGFsOiAwLjc1cmVtICFkZWZhdWx0O1xyXG5cclxuJGJvcmRlci1yYWRpdXM6IC4zcmVtICFkZWZhdWx0O1xyXG4kYm9yZGVyLXJhZGl1cy1sZzogLjM1cmVtICFkZWZhdWx0O1xyXG4kYm9yZGVyLXJhZGl1cy1zbTogLjI1cmVtICFkZWZhdWx0O1xyXG5cclxuJG5hdi1saW5rLXBhZGRpbmc6IDE0cHg7XHJcblxyXG4vLz09IFNpZGViYXJcclxuLy9cclxuJHNpZGViYXItcGFkZGluZy1ob3Jpem9udGFsOiAxMXB4O1xyXG4kc2lkZWJhci13aWR0aC1vcGVuOiAyMjBweDtcclxuJHNpZGViYXItd2lkdGgtY2xvc2VkOiA1MHB4O1xyXG4kc2lkZWJhci10cmFuc2l0aW9uLXRpbWU6IDAuM3MgIWRlZmF1bHQ7XHJcbiRzaWRlYmFyLXNsaW0tc2Nyb2xsLXdpZHRoOiA0cHg7XHJcbiRzaWRlYmFyLXdpZHRoOiAkc2lkZWJhci13aWR0aC1vcGVuKyRzaWRlYmFyLXNsaW0tc2Nyb2xsLXdpZHRoICFkZWZhdWx0O1xyXG5cclxuJHNpZGViYXItYmctY29sb3I6ICMxNzUyOUY7XHJcbiRzaWRlYmFyLWNvbG9yOiAkd2hpdGU7XHJcblxyXG4kc2lkZWJhci1pdGVtLWJvcmRlci1jb2xvcjogIzJkMmQyZDtcclxuJHNpZGViYXItaXRlbS1hY3RpdmUtY29sb3I6ICNmMmJlMzU7XHJcbiRzaWRlYmFyLWl0ZW0taG92ZXItYmctY29sb3I6ICMxMTE7XHJcblxyXG4kY2hhdC1zaWRlYmFyLWJnLWNvbG9yOiAkZ3JheS05MDAgIWRlZmF1bHQ7XHJcbiRjaGF0LXNpZGViYXItd2lkdGg6IDI1MHB4KyRzaWRlYmFyLXNsaW0tc2Nyb2xsLXdpZHRoICFkZWZhdWx0O1xyXG5cclxuJGJyZWFkY3J1bWItZGl2aWRlcjogJyc7XHJcbiRicmVhZGNydW1iLXBhZGRpbmcteTogMDtcclxuJGJyZWFkY3J1bWItYmc6IHRyYW5zcGFyZW50O1xyXG5cclxuJGJhZGdlLWZvbnQtd2VpZ2h0OiA2MDA7XHJcblxyXG4kd2lkZ2V0LWJnOiAjZmZmO1xyXG4kd2lkZ2V0LXRpdGxlLWNvbG9yOiAjNDQ0O1xyXG4kd2lkZ2V0LXNoYWRvdzogMCAwIDEwcHggZGFya2VuKCRib2R5LWJnLCA1JSk7XHJcblxyXG5cclxuJGlucHV0LWJ0bi1saW5lLWhlaWdodDogMS41O1xyXG5cclxuJGlucHV0LWJ0bi1wYWRkaW5nLXktc206IDAuNHJlbTtcclxuJGlucHV0LWJ0bi1wYWRkaW5nLXgtc206IDAuOHJlbTtcclxuXHJcbiRpbnB1dC1oZWlnaHQtc21hbGw6IDMwcHg7XHJcblxyXG4vLz09IE5hdmJhclxyXG4vL1xyXG5cclxuJG5hdmJhci1oZWlnaHQ6IDUwcHggIWRlZmF1bHQ7XHJcbiRuYXZiYXItcGFkZGluZy15OiAwICFkZWZhdWx0O1xyXG4kbmF2YmFyLXBhZGRpbmcteDogMCAhZGVmYXVsdDtcclxuXHJcbiRuYXZiYXItZGFzaGJvYXJkLWJnOiAkd2hpdGUgIWRlZmF1bHQ7XHJcbiRuYXZiYXItZGFzaGJvYXJkLWNvbG9yOiAjNzc3ICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhc2hib2FyZC1ib3JkZXI6IGRhcmtlbigkbmF2YmFyLWRhc2hib2FyZC1iZywgNi41JSkgIWRlZmF1bHQ7XHJcblxyXG4vLyBOYXZiYXIgbGlua3NcclxuJG5hdmJhci1kYXNoYm9hcmQtbGluay1jb2xvcjogIzY2NiAhZGVmYXVsdDtcclxuXHJcbi8vIE5hdmJhciBsaW5rc1xyXG4kbmF2YmFyLWRhc2hib2FyZC1saW5rLWhvdmVyLWNvbG9yOiAjMzMzICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhc2hib2FyZC1saW5rLWhvdmVyLWJnOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXNoYm9hcmQtbGluay1hY3RpdmUtY29sb3I6ICM1NTUgIWRlZmF1bHQ7XHJcbiRuYXZiYXItZGFzaGJvYXJkLWxpbmstYWN0aXZlLWJnOiBkYXJrZW4oJG5hdmJhci1kYXNoYm9hcmQtYmcsIDYuNSUpICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhc2hib2FyZC1saW5rLWRpc2FibGVkLWNvbG9yOiAjY2NjICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhc2hib2FyZC1saW5rLWRpc2FibGVkLWJnOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuXHJcbi8vIE5hdmJhciBicmFuZCBsYWJlbFxyXG4kbmF2YmFyLWRhc2hib2FyZC1icmFuZC1jb2xvcjogJG5hdmJhci1kYXNoYm9hcmQtbGluay1jb2xvciAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXNoYm9hcmQtYnJhbmQtaG92ZXItY29sb3I6IGRhcmtlbigkbmF2YmFyLWRhc2hib2FyZC1icmFuZC1jb2xvciwgMTAlKSAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXNoYm9hcmQtYnJhbmQtaG92ZXItYmc6IHRyYW5zcGFyZW50ICFkZWZhdWx0O1xyXG5cclxuLy8gTmF2YmFyIHRvZ2dsZVxyXG4kbmF2YmFyLWRhc2hib2FyZC10b2dnbGUtaG92ZXItYmc6ICNkZGQgIWRlZmF1bHQ7XHJcbiRuYXZiYXItZGFzaGJvYXJkLXRvZ2dsZS1pY29uLWJhci1iZzogIzg4OCAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXNoYm9hcmQtdG9nZ2xlLWJvcmRlci1jb2xvcjogI2RkZCAhZGVmYXVsdDtcclxuXHJcblxyXG4vLyBDb250ZW50XHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiRjb250ZW50LXBhZGRpbmc6IDQwcHg7XHJcbiRjb250ZW50LXBhZGRpbmctdG9wOiAkY29udGVudC1wYWRkaW5nKyRuYXZiYXItaGVpZ2h0ICFkZWZhdWx0O1xyXG5cclxuLy8gU2NyZWVuc1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4kc2NyZWVuLWxnLWhlaWdodDogNjcwcHggIWRlZmF1bHQ7XHJcblxyXG5cclxuLy89PSBCdXR0b25zXHJcbi8vXHJcbiRidG4tZGVmYXVsdC1iZzogJGFkZGl0aW9uLWJnICFkZWZhdWx0O1xyXG4kYnRuLWRlZmF1bHQtYm9yZGVyOiByZ2JhKDAsIDAsIDAsIDAuMTUpICFkZWZhdWx0O1xyXG5cclxuLy8gRHJvcGRvd25zXHJcbiRkcm9wZG93bi1saW5rLWNvbG9yOiAkdGV4dC1jb2xvcjtcclxuXHJcbi8vIFdpZGdldHNcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4kd2lkZ2V0LXBhZGRpbmctdmVydGljYWw6IDE1cHggIWRlZmF1bHQ7XHJcbiR3aWRnZXQtcGFkZGluZy1ob3Jpem9udGFsOiAyMHB4ICFkZWZhdWx0O1xyXG4kd2lkZ2V0LWJnLWNvbG9yOiAkd2hpdGU7XHJcblxyXG4vLz09IE5hdnNcclxuLy9cclxuJG5hdi10YWJzLWFjdGl2ZS1saW5rLWhvdmVyLWJnOiAkd2hpdGUgIWRlZmF1bHQ7XHJcbiRuYXYtdGFicy1hY3RpdmUtbGluay1ob3Zlci1jb2xvcjogJGdyYXktNzAwICFkZWZhdWx0O1xyXG5cclxuLy89PSBGb3Jtc1xyXG4vL1xyXG4kaW5wdXQtYm9yZGVyLWZvY3VzOiAjNGQ5MGZlICFkZWZhdWx0OyAvL3dlYmtpdCBmb2N1cyBjb2xvclxyXG4kbGVnZW5kLWNvbG9yOiBsaWdodGVuKCR0ZXh0LWNvbG9yLCAxNSUpICFkZWZhdWx0O1xyXG5cclxuJHByZS1iZzogI2Y1ZjVmNSAhZGVmYXVsdDtcclxuXHJcbiRjdXJzb3ItZGlzYWJsZWQ6IG5vdC1hbGxvd2VkICFkZWZhdWx0O1xyXG5cclxuLy8gRm9ybSBzdGF0ZXMgYW5kIGFsZXJ0c1xyXG4vL1xyXG4vLyBEZWZpbmUgY29sb3JzIGZvciBmb3JtIGZlZWRiYWNrIHN0YXRlcyBhbmQsIGJ5IGRlZmF1bHQsIGFsZXJ0cy5cclxuXHJcbiRzdGF0ZS1zdWNjZXNzLXRleHQ6ICMzYzc2M2QgIWRlZmF1bHQ7XHJcbiRzdGF0ZS1zdWNjZXNzLWJnOiAjZGZmMGQ4ICFkZWZhdWx0O1xyXG4kc3RhdGUtc3VjY2Vzcy1ib3JkZXI6IGRhcmtlbigkc3RhdGUtc3VjY2Vzcy1iZywgNSUpICFkZWZhdWx0O1xyXG5cclxuJHN0YXRlLWluZm8tdGV4dDogIzMxNzA4ZiAhZGVmYXVsdDtcclxuJHN0YXRlLWluZm8tYmc6ICNkOWVkZjcgIWRlZmF1bHQ7XHJcbiRzdGF0ZS1pbmZvLWJvcmRlcjogZGFya2VuKCRzdGF0ZS1pbmZvLWJnLCA3JSkgIWRlZmF1bHQ7XHJcblxyXG4kc3RhdGUtd2FybmluZy10ZXh0OiAjOGE2ZDNiICFkZWZhdWx0O1xyXG4kc3RhdGUtd2FybmluZy1iZzogI2ZjZjhlMyAhZGVmYXVsdDtcclxuJG1hcmstYmc6ICRzdGF0ZS13YXJuaW5nLWJnICFkZWZhdWx0O1xyXG4kc3RhdGUtd2FybmluZy1ib3JkZXI6IGRhcmtlbigkc3RhdGUtd2FybmluZy1iZywgNSUpICFkZWZhdWx0O1xyXG5cclxuJHN0YXRlLWRhbmdlci10ZXh0OiAjYTk0NDQyICFkZWZhdWx0O1xyXG4kc3RhdGUtZGFuZ2VyLWJnOiAjZjJkZWRlICFkZWZhdWx0O1xyXG4kc3RhdGUtZGFuZ2VyLWJvcmRlcjogZGFya2VuKCRzdGF0ZS1kYW5nZXItYmcsIDUlKSAhZGVmYXVsdDtcclxuXHJcbi8vKiAgUG9wb3ZlciAgKi9cclxuJHBvcG92ZXItYmc6ICNlYmVmZjEgIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWFycm93LW91dGVyLWNvbG9yOiAkcG9wb3Zlci1iZyAhZGVmYXVsdDtcclxuJHBvcG92ZXItYXJyb3ctY29sb3I6ICRwb3BvdmVyLWJnICFkZWZhdWx0O1xyXG5cclxuJGJyYW5kLXByaW1hcnk6IGRhcmtlbigjNDI4YmNhLCA2LjUlKSAhZGVmYXVsdDsgLy8gIzMzN2FiN1xyXG4kcGFnaW5hdGlvbi1hY3RpdmUtYm9yZGVyOiAkYnJhbmQtcHJpbWFyeSAhZGVmYXVsdDtcclxuJHBhbmVsLWJnOiAjZmZmICFkZWZhdWx0O1xyXG4kcGFuZWwtZGVmYXVsdC1oZWFkaW5nLWJnOiAjZjVmNWY1ICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1ib3JkZXI6ICNkZGQgIWRlZmF1bHQ7XHJcbiRpbnB1dC1iZy1kaXNhYmxlZDogJGdyYXktMzAwICFkZWZhdWx0O1xyXG4kZ3JheS1iYXNlOiAjMDAwICFkZWZhdWx0O1xyXG4kZ3JheS1kYXJrZXI6IGxpZ2h0ZW4oJGdyYXktYmFzZSwgMTMuNSUpICFkZWZhdWx0OyAvLyAjMjIyXHJcbiRncmF5LWRhcms6IGxpZ2h0ZW4oJGdyYXktYmFzZSwgMjAlKSAhZGVmYXVsdDsgLy8gIzMzM1xyXG4kZ3JheTogbGlnaHRlbigkZ3JheS1iYXNlLCAzMy41JSkgIWRlZmF1bHQ7IC8vICM1NTVcclxuJGdyYXktbGlnaHQ6IGxpZ2h0ZW4oJGdyYXktYmFzZSwgNDYuNyUpICFkZWZhdWx0OyAvLyAjNzc3XHJcbiRncmF5LWxpZ2h0ZXI6IGxpZ2h0ZW4oJGdyYXktYmFzZSwgOTMuNSUpICFkZWZhdWx0OyAvLyAjZWVlXHJcbiRncmF5LXNlbWktbGlnaHRlcjogJGdyYXktMzAwICFkZWZhdWx0O1xyXG5cclxuLy8qKiBVbml0LWxlc3MgYGxpbmUtaGVpZ2h0YCBmb3IgdXNlIGluIGNvbXBvbmVudHMgbGlrZSBidXR0b25zLlxyXG4kbGluZS1oZWlnaHQtYmFzZTogMS40Mjg1NzE0MjkgIWRlZmF1bHQ7IC8vIDIwLzE0XHJcbi8vKiogQ29tcHV0ZWQgXCJsaW5lLWhlaWdodFwiIChgZm9udC1zaXplYCAqIGBsaW5lLWhlaWdodGApIGZvciB1c2Ugd2l0aCBgbWFyZ2luYCwgYHBhZGRpbmdgLCBldGMuXHJcbiRsaW5lLWhlaWdodC1jb21wdXRlZDogZmxvb3IoKCRmb250LXNpemUtYmFzZSAqICRsaW5lLWhlaWdodC1iYXNlKSkgIWRlZmF1bHQ7IC8vIH4yMHB4XHJcblxyXG4kYnJhbmQtcHJpbWFyeTogZGFya2VuKCM0MjhiY2EsIDYuNSUpICFkZWZhdWx0OyAvLyAjMzM3YWI3XHJcbiRicmFuZC1zdWNjZXNzOiAjNWNiODVjICFkZWZhdWx0O1xyXG4kYnJhbmQtaW5mbzogIzViYzBkZSAhZGVmYXVsdDtcclxuJGJyYW5kLXdhcm5pbmc6ICNmMGFkNGUgIWRlZmF1bHQ7XHJcbiRicmFuZC1kYW5nZXI6ICNkOTUzNGYgIWRlZmF1bHQ7XHJcblxyXG4kcGFnaW5hdGlvbi1ib3JkZXI6ICNkZGQgIWRlZmF1bHQ7XHJcbiRwYWdpbmF0aW9uLWhvdmVyLWJvcmRlcjogI2RkZCAhZGVmYXVsdDtcclxuXHJcbiRzcGFjZXIteTogMSBlbSAhZGVmYXVsdDsiLCJAaW1wb3J0IFwiaGVscGVyc1wiO1xyXG5cclxuLmgtZGl2aWRlcntcclxuIHdpZHRoOjEwMCU7XHJcbiBib3JkZXItYm90dG9tOjNweCBzb2xpZCAjNzc4ODk5O1xyXG59XHJcblxyXG4uaC10aGluLWRpdmlkZXJ7XHJcbiB3aWR0aDoxMDAlO1xyXG4gYm9yZGVyLWJvdHRvbToxcHggc29saWQgZ3JheTtcclxuIHBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG5pbnB1dC5wYXJzbGV5LWVycm9ye1xyXG4gIGJvcmRlci1jb2xvcjogJGJyYW5kLWRhbmdlcjtcclxuICBAaW5jbHVkZSBib3gtc2hhZG93KGluc2V0IDAgMXB4IDFweCByZ2JhKCRicmFuZC1kYW5nZXIsLjA3NSkpO1xyXG59XHJcblxyXG4ucGFyc2xleS1lcnJvcnMtbGlzdHtcclxuICBmb250LXNpemU6ICRmb250LXNpemUtc21hbGxlcjtcclxuICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG5cclxuICBsaXtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICBjb2xvcjogJGJyYW5kLWRhbmdlcjtcclxuICB9XHJcbn1cclxuXHJcbi5zd2l0Y2h7XHJcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XHJcbiAgbWFyZ2luLWxlZnQ6IC0yMHB4O1xyXG59XHJcblxyXG4uc3dpdGNoIGkge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgbWFyZ2luLWxlZnQ6IC0yMHB4O1xyXG4gIG1hcmdpbi1ib3R0b206LTNweDtcclxuICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xyXG4gIHRyYW5zaXRpb246IGFsbCBlYXNlIDAuMnM7XHJcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgZWFzZSAwLjJzO1xyXG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDFweCByZ2JhKDAsMCwwLC41KTtcclxufVxyXG5cclxuLnN3aXRjaCBpOmJlZm9yZSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgY29udGVudDogJyc7XHJcbiAgd2lkdGg6IDMwcHg7XHJcbiAgaGVpZ2h0OiAzMHB4O1xyXG4gIHBhZGRpbmc6IDFweDtcclxuICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG4gIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gIGJveC1zaGFkb3c6IDAgMXB4IDJweCByZ2JhKDAsMCwwLC41KTtcclxufVxyXG4uc3dpdGNoIDpjaGVja2VkICsgaSB7XHJcbiAgcGFkZGluZy1yaWdodDogMDtcclxuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcbiAgYmFja2dyb3VuZDogcmdiKDEwMCwgMTg5LCA5OSk7XHJcbn1cclxuXHJcblxyXG4ud2hpdGUsIC53aGl0ZSBhIHtcclxuICBjb2xvcjogI2ZmZjtcclxufVxyXG5cclxuLmJ0bi1sYWJlbCB7XHJcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgbGVmdDogMnB4O1xyXG4gIHBhZGRpbmc6IDFweCA2cHg7XHJcbn1cclxuXHJcbi5tZC1lZGl0b3Ige1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICR0YWJsZS1ib3JkZXItY29sb3I7XHJcblxyXG4gID4gLm1kLWhlYWRlciwgLm1kLWZvb3RlciB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBhZGRpbmc6IDZweCA0cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAkcGFuZWwtZGVmYXVsdC1oZWFkaW5nLWJnO1xyXG4gIH1cclxuXHJcbiAgPiAubWQtaGVhZGVyIHtcclxuICAgIG1hcmdpbjogMDtcclxuXHJcbiAgICAuZ2x5cGhpY29uIHtcclxuICAgICAgdG9wOiAzcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICA+IC5tZC1wcmV2aWV3IHtcclxuICAgIG1hcmdpbi1sZWZ0OiAtMXB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAtMXB4O1xyXG4gICAgcGFkZGluZzogJHBhZGRpbmctYmFzZS12ZXJ0aWNhbCAkcGFkZGluZy1iYXNlLWhvcml6b250YWw7XHJcbiAgICBiYWNrZ3JvdW5kOiAkcGFuZWwtYmc7XHJcbiAgICBib3JkZXItdG9wOiAxcHggZGFzaGVkICR0YWJsZS1ib3JkZXItY29sb3I7XHJcbiAgICBtaW4taGVpZ2h0OiAxMHB4O1xyXG4gIH1cclxuXHJcbiAgPiB0ZXh0YXJlYSB7XHJcbiAgICBmb250LWZhbWlseTogJGZvbnQtZmFtaWx5LW1vbm9zcGFjZTtcclxuICAgIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1iYXNlO1xyXG4gICAgb3V0bGluZTogMDtcclxuICAgIG91dGxpbmU6IHRoaW4gZG90dGVkICBcXDk7IC8qIElFNi05ICovXHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyOiAwO1xyXG4gICAgYm9yZGVyLXRvcDogMXB4IGRhc2hlZCAkdGFibGUtYm9yZGVyLWNvbG9yO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICBiYWNrZ3JvdW5kOiAkaW5wdXQtYmctZGlzYWJsZWQ7XHJcbiAgICAmOmZvY3VzIHtcclxuICAgICAgYm94LXNoYWRvdzogbm9uZTtcclxuICAgICAgYmFja2dyb3VuZDogJGlucHV0LWJnO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gSG92ZXIgc3RhdGVcclxuICAkY29sb3I6ICRpbnB1dC1ib3JkZXItZm9jdXM7XHJcbiAgJi5hY3RpdmUge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAkY29sb3I7XHJcbiAgICBvdXRsaW5lOiAwO1xyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIEJvb3RzdHJhcCBzZWxlY3RcclxuICovXHJcblxyXG4uc2VsZWN0cGlja2VyLmZvcm0tY29udHJvbCB7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG4uYm9vdHN0cmFwLXNlbGVjdCB7XHJcbiAgLmRyb3Bkb3duLXRvZ2dsZSB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcblxyXG4gICAgJjphZnRlciB7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgbWFyZ2luLWxlZnQ6IDA7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5kcm9wZG93bi1tZW51ID4gbGkgPiBhIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7IC8vIEZvciBgPGJ1dHRvbj5gc1xyXG4gICAgcGFkZGluZzogM3B4IDIwcHg7XHJcbiAgICBjbGVhcjogYm90aDtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LWJhc2U7XHJcbiAgICBjb2xvcjogJGRyb3Bkb3duLWxpbmstY29sb3I7XHJcbiAgICB0ZXh0LWFsaWduOiBpbmhlcml0OyAvLyBGb3IgYDxidXR0b24+YHNcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7IC8vIHByZXZlbnQgbGlua3MgZnJvbSByYW5kb21seSBicmVha2luZyBvbnRvIG5ldyBsaW5lc1xyXG4gICAgYmFja2dyb3VuZDogbm9uZTsgLy8gRm9yIGA8YnV0dG9uPmBzXHJcbiAgICBib3JkZXI6IDA7IC8vIEZvciBgPGJ1dHRvbj5gc1xyXG5cclxuICAgIEBpbmNsdWRlIGhvdmVyLWZvY3VzIHtcclxuICAgICAgY29sb3I6ICRkcm9wZG93bi1saW5rLWhvdmVyLWNvbG9yO1xyXG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRkcm9wZG93bi1saW5rLWhvdmVyLWJnO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEFjdGl2ZSBzdGF0ZVxyXG4gICAgJi5hY3RpdmUge1xyXG4gICAgICBAaW5jbHVkZSBwbGFpbi1ob3Zlci1mb2N1cyB7XHJcbiAgICAgICAgY29sb3I6ICRkcm9wZG93bi1saW5rLWFjdGl2ZS1jb2xvcjtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGRyb3Bkb3duLWxpbmstYWN0aXZlLWJnO1xyXG4gICAgICAgIG91dGxpbmU6IDA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBEaXNhYmxlZCBzdGF0ZVxyXG4gICAgLy9cclxuICAgIC8vIEdyYXkgb3V0IHRleHQgYW5kIGVuc3VyZSB0aGUgaG92ZXIvZm9jdXMgc3RhdGUgcmVtYWlucyBncmF5XHJcbiAgICAmLmRpc2FibGVkIHtcclxuICAgICAgQGluY2x1ZGUgcGxhaW4taG92ZXItZm9jdXMge1xyXG4gICAgICAgIGNvbG9yOiAkZHJvcGRvd24tbGluay1kaXNhYmxlZC1jb2xvcjtcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gTnVrZSBob3Zlci9mb2N1cyBlZmZlY3RzXHJcbiAgICAgIEBpbmNsdWRlIGhvdmVyLWZvY3VzIHtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgY3Vyc29yOiAkY3Vyc29yLWRpc2FibGVkO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7IC8vIFJlbW92ZSBDU1MgZ3JhZGllbnRcclxuICAgICAgICAvLyBAaW5jbHVkZSByZXNldC1maWx0ZXIoKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiogIGF1dG9zaXplXHJcbioqL1xyXG5cclxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xyXG4vKiogICAgICAgICAgTkVXUyBMSVNUICAgICAgICAgICAqKi9cclxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG4ubmV3cy1saXN0e1xyXG4gIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgcGFkZGluZy1sZWZ0OiAwO1xyXG5cclxuICBsaXtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcclxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkZ3JheS1saWdodGVyO1xyXG4gICAgcGFkZGluZzogMTJweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oYmFja2dyb3VuZC1jb2xvciAuMnMgZWFzZS1vdXQpO1xyXG5cclxuICAgICY6aG92ZXJ7XHJcbiAgICAgIGJhY2tncm91bmQ6ICRib2R5LWJnLWxpZ2h0O1xyXG4gICAgfVxyXG5cclxuICAgICY6bGFzdC1jaGlsZHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogLTEwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBpbWcsXHJcbiAgLmljb257XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIHdpZHRoOiA1MHB4O1xyXG4gIH1cclxuXHJcbiAgLmljb257XHJcbiAgICBsaW5lLWhlaWdodDogNTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogMjhweDtcclxuICB9XHJcblxyXG4gIC5uZXdzLWl0ZW0taW5mb3tcclxuICAgIG1hcmdpbi1sZWZ0OiA2MnB4OyAvKjUwICsgMTJweCBwYWRkaW5nKi9cclxuICB9XHJcblxyXG4gIC5uYW1le1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuXHJcbiAgICBhe1xyXG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgY29sb3I6ICRsaW5rLWNvbG9yO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uYXV0b2dyb3cge1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgcmVzaXplOiBub25lO1xyXG59XHJcblxyXG4uZm9ybS1jaGVja2JveHtcclxuICBtYXJnaW4tbGVmdDo1cHg7XHJcbiAgd2lkdGg6IDIwcHg7XHJcbiAgaGVpZ2h0OiAyMHB4O1xyXG4gIGJveC1zaGFkb3c6IG5vbmU7XHJcbn0iLCJAbWl4aW4gYm94LXNoYWRvdygkc2hhZG93Li4uKSB7XG4gIEBpZiAkZW5hYmxlLXNoYWRvd3Mge1xuICAgIGJveC1zaGFkb3c6ICRzaGFkb3c7XG4gIH1cbn1cbiIsIi8vIFZhcmlhYmxlc1xuLy9cbi8vIFZhcmlhYmxlcyBzaG91bGQgZm9sbG93IHRoZSBgJGNvbXBvbmVudC1zdGF0ZS1wcm9wZXJ0eS1zaXplYCBmb3JtdWxhIGZvclxuLy8gY29uc2lzdGVudCBuYW1pbmcuIEV4OiAkbmF2LWxpbmstZGlzYWJsZWQtY29sb3IgYW5kICRtb2RhbC1jb250ZW50LWJveC1zaGFkb3cteHMuXG5cbi8vIENvbG9yIHN5c3RlbVxuXG4kd2hpdGU6ICAgICNmZmYgIWRlZmF1bHQ7XG4kZ3JheS0xMDA6ICNmOGY5ZmEgIWRlZmF1bHQ7XG4kZ3JheS0yMDA6ICNlOWVjZWYgIWRlZmF1bHQ7XG4kZ3JheS0zMDA6ICNkZWUyZTYgIWRlZmF1bHQ7XG4kZ3JheS00MDA6ICNjZWQ0ZGEgIWRlZmF1bHQ7XG4kZ3JheS01MDA6ICNhZGI1YmQgIWRlZmF1bHQ7XG4kZ3JheS02MDA6ICM2Yzc1N2QgIWRlZmF1bHQ7XG4kZ3JheS03MDA6ICM0OTUwNTcgIWRlZmF1bHQ7XG4kZ3JheS04MDA6ICMzNDNhNDAgIWRlZmF1bHQ7XG4kZ3JheS05MDA6ICMyMTI1MjkgIWRlZmF1bHQ7XG4kYmxhY2s6ICAgICMwMDAgIWRlZmF1bHQ7XG5cbiRncmF5czogKCkgIWRlZmF1bHQ7XG4vLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc2Nzcy9kb2xsYXItdmFyaWFibGUtZGVmYXVsdFxuJGdyYXlzOiBtYXAtbWVyZ2UoXG4gIChcbiAgICBcIjEwMFwiOiAkZ3JheS0xMDAsXG4gICAgXCIyMDBcIjogJGdyYXktMjAwLFxuICAgIFwiMzAwXCI6ICRncmF5LTMwMCxcbiAgICBcIjQwMFwiOiAkZ3JheS00MDAsXG4gICAgXCI1MDBcIjogJGdyYXktNTAwLFxuICAgIFwiNjAwXCI6ICRncmF5LTYwMCxcbiAgICBcIjcwMFwiOiAkZ3JheS03MDAsXG4gICAgXCI4MDBcIjogJGdyYXktODAwLFxuICAgIFwiOTAwXCI6ICRncmF5LTkwMFxuICApLFxuICAkZ3JheXNcbik7XG5cbiRibHVlOiAgICAjMDA3YmZmICFkZWZhdWx0O1xuJGluZGlnbzogICM2NjEwZjIgIWRlZmF1bHQ7XG4kcHVycGxlOiAgIzZmNDJjMSAhZGVmYXVsdDtcbiRwaW5rOiAgICAjZTgzZThjICFkZWZhdWx0O1xuJHJlZDogICAgICNkYzM1NDUgIWRlZmF1bHQ7XG4kb3JhbmdlOiAgI2ZkN2UxNCAhZGVmYXVsdDtcbiR5ZWxsb3c6ICAjZmZjMTA3ICFkZWZhdWx0O1xuJGdyZWVuOiAgICMyOGE3NDUgIWRlZmF1bHQ7XG4kdGVhbDogICAgIzIwYzk5NyAhZGVmYXVsdDtcbiRjeWFuOiAgICAjMTdhMmI4ICFkZWZhdWx0O1xuXG4kY29sb3JzOiAoKSAhZGVmYXVsdDtcbi8vIHN0eWxlbGludC1kaXNhYmxlLW5leHQtbGluZSBzY3NzL2RvbGxhci12YXJpYWJsZS1kZWZhdWx0XG4kY29sb3JzOiBtYXAtbWVyZ2UoXG4gIChcbiAgICBcImJsdWVcIjogICAgICAgJGJsdWUsXG4gICAgXCJpbmRpZ29cIjogICAgICRpbmRpZ28sXG4gICAgXCJwdXJwbGVcIjogICAgICRwdXJwbGUsXG4gICAgXCJwaW5rXCI6ICAgICAgICRwaW5rLFxuICAgIFwicmVkXCI6ICAgICAgICAkcmVkLFxuICAgIFwib3JhbmdlXCI6ICAgICAkb3JhbmdlLFxuICAgIFwieWVsbG93XCI6ICAgICAkeWVsbG93LFxuICAgIFwiZ3JlZW5cIjogICAgICAkZ3JlZW4sXG4gICAgXCJ0ZWFsXCI6ICAgICAgICR0ZWFsLFxuICAgIFwiY3lhblwiOiAgICAgICAkY3lhbixcbiAgICBcIndoaXRlXCI6ICAgICAgJHdoaXRlLFxuICAgIFwiZ3JheVwiOiAgICAgICAkZ3JheS02MDAsXG4gICAgXCJncmF5LWRhcmtcIjogICRncmF5LTgwMFxuICApLFxuICAkY29sb3JzXG4pO1xuXG4kcHJpbWFyeTogICAgICAgJGJsdWUgIWRlZmF1bHQ7XG4kc2Vjb25kYXJ5OiAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xuJHN1Y2Nlc3M6ICAgICAgICRncmVlbiAhZGVmYXVsdDtcbiRpbmZvOiAgICAgICAgICAkY3lhbiAhZGVmYXVsdDtcbiR3YXJuaW5nOiAgICAgICAkeWVsbG93ICFkZWZhdWx0O1xuJGRhbmdlcjogICAgICAgICRyZWQgIWRlZmF1bHQ7XG4kbGlnaHQ6ICAgICAgICAgJGdyYXktMTAwICFkZWZhdWx0O1xuJGRhcms6ICAgICAgICAgICRncmF5LTgwMCAhZGVmYXVsdDtcblxuJHRoZW1lLWNvbG9yczogKCkgIWRlZmF1bHQ7XG4vLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc2Nzcy9kb2xsYXItdmFyaWFibGUtZGVmYXVsdFxuJHRoZW1lLWNvbG9yczogbWFwLW1lcmdlKFxuICAoXG4gICAgXCJwcmltYXJ5XCI6ICAgICRwcmltYXJ5LFxuICAgIFwic2Vjb25kYXJ5XCI6ICAkc2Vjb25kYXJ5LFxuICAgIFwic3VjY2Vzc1wiOiAgICAkc3VjY2VzcyxcbiAgICBcImluZm9cIjogICAgICAgJGluZm8sXG4gICAgXCJ3YXJuaW5nXCI6ICAgICR3YXJuaW5nLFxuICAgIFwiZGFuZ2VyXCI6ICAgICAkZGFuZ2VyLFxuICAgIFwibGlnaHRcIjogICAgICAkbGlnaHQsXG4gICAgXCJkYXJrXCI6ICAgICAgICRkYXJrXG4gICksXG4gICR0aGVtZS1jb2xvcnNcbik7XG5cbi8vIFNldCBhIHNwZWNpZmljIGp1bXAgcG9pbnQgZm9yIHJlcXVlc3RpbmcgY29sb3IganVtcHNcbiR0aGVtZS1jb2xvci1pbnRlcnZhbDogICAgICA4JSAhZGVmYXVsdDtcblxuLy8gVGhlIHlpcSBsaWdodG5lc3MgdmFsdWUgdGhhdCBkZXRlcm1pbmVzIHdoZW4gdGhlIGxpZ2h0bmVzcyBvZiBjb2xvciBjaGFuZ2VzIGZyb20gXCJkYXJrXCIgdG8gXCJsaWdodFwiLiBBY2NlcHRhYmxlIHZhbHVlcyBhcmUgYmV0d2VlbiAwIGFuZCAyNTUuXG4keWlxLWNvbnRyYXN0ZWQtdGhyZXNob2xkOiAgMTUwICFkZWZhdWx0O1xuXG4vLyBDdXN0b21pemUgdGhlIGxpZ2h0IGFuZCBkYXJrIHRleHQgY29sb3JzIGZvciB1c2UgaW4gb3VyIFlJUSBjb2xvciBjb250cmFzdCBmdW5jdGlvbi5cbiR5aXEtdGV4dC1kYXJrOiAgICAgICAgICAgICAkZ3JheS05MDAgIWRlZmF1bHQ7XG4keWlxLXRleHQtbGlnaHQ6ICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xuXG5cbi8vIE9wdGlvbnNcbi8vXG4vLyBRdWlja2x5IG1vZGlmeSBnbG9iYWwgc3R5bGluZyBieSBlbmFibGluZyBvciBkaXNhYmxpbmcgb3B0aW9uYWwgZmVhdHVyZXMuXG5cbiRlbmFibGUtY2FyZXQ6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnVlICFkZWZhdWx0O1xuJGVuYWJsZS1yb3VuZGVkOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRydWUgIWRlZmF1bHQ7XG4kZW5hYmxlLXNoYWRvd3M6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFsc2UgIWRlZmF1bHQ7XG4kZW5hYmxlLWdyYWRpZW50czogICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFsc2UgIWRlZmF1bHQ7XG4kZW5hYmxlLXRyYW5zaXRpb25zOiAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ1ZSAhZGVmYXVsdDtcbiRlbmFibGUtcHJlZmVycy1yZWR1Y2VkLW1vdGlvbi1tZWRpYS1xdWVyeTogICB0cnVlICFkZWZhdWx0O1xuJGVuYWJsZS1ob3Zlci1tZWRpYS1xdWVyeTogICAgICAgICAgICAgICAgICAgIGZhbHNlICFkZWZhdWx0OyAvLyBEZXByZWNhdGVkLCBubyBsb25nZXIgYWZmZWN0cyBhbnkgY29tcGlsZWQgQ1NTXG4kZW5hYmxlLWdyaWQtY2xhc3NlczogICAgICAgICAgICAgICAgICAgICAgICAgdHJ1ZSAhZGVmYXVsdDtcbiRlbmFibGUtcHJpbnQtc3R5bGVzOiAgICAgICAgICAgICAgICAgICAgICAgICB0cnVlICFkZWZhdWx0O1xuJGVuYWJsZS12YWxpZGF0aW9uLWljb25zOiAgICAgICAgICAgICAgICAgICAgIHRydWUgIWRlZmF1bHQ7XG5cblxuLy8gU3BhY2luZ1xuLy9cbi8vIENvbnRyb2wgdGhlIGRlZmF1bHQgc3R5bGluZyBvZiBtb3N0IEJvb3RzdHJhcCBlbGVtZW50cyBieSBtb2RpZnlpbmcgdGhlc2Vcbi8vIHZhcmlhYmxlcy4gTW9zdGx5IGZvY3VzZWQgb24gc3BhY2luZy5cbi8vIFlvdSBjYW4gYWRkIG1vcmUgZW50cmllcyB0byB0aGUgJHNwYWNlcnMgbWFwLCBzaG91bGQgeW91IG5lZWQgbW9yZSB2YXJpYXRpb24uXG5cbiRzcGFjZXI6IDFyZW0gIWRlZmF1bHQ7XG4kc3BhY2VyczogKCkgIWRlZmF1bHQ7XG4vLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc2Nzcy9kb2xsYXItdmFyaWFibGUtZGVmYXVsdFxuJHNwYWNlcnM6IG1hcC1tZXJnZShcbiAgKFxuICAgIDA6IDAsXG4gICAgMTogKCRzcGFjZXIgKiAuMjUpLFxuICAgIDI6ICgkc3BhY2VyICogLjUpLFxuICAgIDM6ICRzcGFjZXIsXG4gICAgNDogKCRzcGFjZXIgKiAxLjUpLFxuICAgIDU6ICgkc3BhY2VyICogMylcbiAgKSxcbiAgJHNwYWNlcnNcbik7XG5cbi8vIFRoaXMgdmFyaWFibGUgYWZmZWN0cyB0aGUgYC5oLSpgIGFuZCBgLnctKmAgY2xhc3Nlcy5cbiRzaXplczogKCkgIWRlZmF1bHQ7XG4vLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc2Nzcy9kb2xsYXItdmFyaWFibGUtZGVmYXVsdFxuJHNpemVzOiBtYXAtbWVyZ2UoXG4gIChcbiAgICAyNTogMjUlLFxuICAgIDUwOiA1MCUsXG4gICAgNzU6IDc1JSxcbiAgICAxMDA6IDEwMCUsXG4gICAgYXV0bzogYXV0b1xuICApLFxuICAkc2l6ZXNcbik7XG5cblxuLy8gQm9keVxuLy9cbi8vIFNldHRpbmdzIGZvciB0aGUgYDxib2R5PmAgZWxlbWVudC5cblxuJGJvZHktYmc6ICAgICAgICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcbiRib2R5LWNvbG9yOiAgICAgICAgICAgICAgICAkZ3JheS05MDAgIWRlZmF1bHQ7XG5cblxuLy8gTGlua3Ncbi8vXG4vLyBTdHlsZSBhbmNob3IgZWxlbWVudHMuXG5cbiRsaW5rLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZW1lLWNvbG9yKFwicHJpbWFyeVwiKSAhZGVmYXVsdDtcbiRsaW5rLWRlY29yYXRpb246ICAgICAgICAgICAgICAgICAgICAgICAgIG5vbmUgIWRlZmF1bHQ7XG4kbGluay1ob3Zlci1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICBkYXJrZW4oJGxpbmstY29sb3IsIDE1JSkgIWRlZmF1bHQ7XG4kbGluay1ob3Zlci1kZWNvcmF0aW9uOiAgICAgICAgICAgICAgICAgICB1bmRlcmxpbmUgIWRlZmF1bHQ7XG4vLyBEYXJrZW4gcGVyY2VudGFnZSBmb3IgbGlua3Mgd2l0aCBgLnRleHQtKmAgY2xhc3MgKGUuZy4gYC50ZXh0LXN1Y2Nlc3NgKVxuJGVtcGhhc2l6ZWQtbGluay1ob3Zlci1kYXJrZW4tcGVyY2VudGFnZTogMTUlICFkZWZhdWx0O1xuXG4vLyBQYXJhZ3JhcGhzXG4vL1xuLy8gU3R5bGUgcCBlbGVtZW50LlxuXG4kcGFyYWdyYXBoLW1hcmdpbi1ib3R0b206ICAgMXJlbSAhZGVmYXVsdDtcblxuXG4vLyBHcmlkIGJyZWFrcG9pbnRzXG4vL1xuLy8gRGVmaW5lIHRoZSBtaW5pbXVtIGRpbWVuc2lvbnMgYXQgd2hpY2ggeW91ciBsYXlvdXQgd2lsbCBjaGFuZ2UsXG4vLyBhZGFwdGluZyB0byBkaWZmZXJlbnQgc2NyZWVuIHNpemVzLCBmb3IgdXNlIGluIG1lZGlhIHF1ZXJpZXMuXG5cbiRncmlkLWJyZWFrcG9pbnRzOiAoKSAhZGVmYXVsdDtcbi8vIHN0eWxlbGludC1kaXNhYmxlLW5leHQtbGluZSBzY3NzL2RvbGxhci12YXJpYWJsZS1kZWZhdWx0XG4kZ3JpZC1icmVha3BvaW50czogbWFwLW1lcmdlKFxuICAoXG4gICAgeHM6IDAsXG4gICAgc206IDU3NnB4LFxuICAgIG1kOiA3NjhweCxcbiAgICBsZzogOTkycHgsXG4gICAgeGw6IDEyMDBweFxuICApLFxuICAkZ3JpZC1icmVha3BvaW50c1xuKTtcblxuQGluY2x1ZGUgX2Fzc2VydC1hc2NlbmRpbmcoJGdyaWQtYnJlYWtwb2ludHMsIFwiJGdyaWQtYnJlYWtwb2ludHNcIik7XG5AaW5jbHVkZSBfYXNzZXJ0LXN0YXJ0cy1hdC16ZXJvKCRncmlkLWJyZWFrcG9pbnRzKTtcblxuXG4vLyBHcmlkIGNvbnRhaW5lcnNcbi8vXG4vLyBEZWZpbmUgdGhlIG1heGltdW0gd2lkdGggb2YgYC5jb250YWluZXJgIGZvciBkaWZmZXJlbnQgc2NyZWVuIHNpemVzLlxuXG4kY29udGFpbmVyLW1heC13aWR0aHM6ICgpICFkZWZhdWx0O1xuLy8gc3R5bGVsaW50LWRpc2FibGUtbmV4dC1saW5lIHNjc3MvZG9sbGFyLXZhcmlhYmxlLWRlZmF1bHRcbiRjb250YWluZXItbWF4LXdpZHRoczogbWFwLW1lcmdlKFxuICAoXG4gICAgc206IDU0MHB4LFxuICAgIG1kOiA3MjBweCxcbiAgICBsZzogOTYwcHgsXG4gICAgeGw6IDExNDBweFxuICApLFxuICAkY29udGFpbmVyLW1heC13aWR0aHNcbik7XG5cbkBpbmNsdWRlIF9hc3NlcnQtYXNjZW5kaW5nKCRjb250YWluZXItbWF4LXdpZHRocywgXCIkY29udGFpbmVyLW1heC13aWR0aHNcIik7XG5cblxuLy8gR3JpZCBjb2x1bW5zXG4vL1xuLy8gU2V0IHRoZSBudW1iZXIgb2YgY29sdW1ucyBhbmQgc3BlY2lmeSB0aGUgd2lkdGggb2YgdGhlIGd1dHRlcnMuXG5cbiRncmlkLWNvbHVtbnM6ICAgICAgICAgICAgICAgIDEyICFkZWZhdWx0O1xuJGdyaWQtZ3V0dGVyLXdpZHRoOiAgICAgICAgICAgMzBweCAhZGVmYXVsdDtcblxuXG4vLyBDb21wb25lbnRzXG4vL1xuLy8gRGVmaW5lIGNvbW1vbiBwYWRkaW5nIGFuZCBib3JkZXIgcmFkaXVzIHNpemVzIGFuZCBtb3JlLlxuXG4kbGluZS1oZWlnaHQtbGc6ICAgICAgICAgICAgICAxLjUgIWRlZmF1bHQ7XG4kbGluZS1oZWlnaHQtc206ICAgICAgICAgICAgICAxLjUgIWRlZmF1bHQ7XG5cbiRib3JkZXItd2lkdGg6ICAgICAgICAgICAgICAgIDFweCAhZGVmYXVsdDtcbiRib3JkZXItY29sb3I6ICAgICAgICAgICAgICAgICRncmF5LTMwMCAhZGVmYXVsdDtcblxuJGJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgICAgLjI1cmVtICFkZWZhdWx0O1xuJGJvcmRlci1yYWRpdXMtbGc6ICAgICAgICAgICAgLjNyZW0gIWRlZmF1bHQ7XG4kYm9yZGVyLXJhZGl1cy1zbTogICAgICAgICAgICAuMnJlbSAhZGVmYXVsdDtcblxuJHJvdW5kZWQtcGlsbDogICAgICAgICAgICAgICAgNTByZW0gIWRlZmF1bHQ7XG5cbiRib3gtc2hhZG93LXNtOiAgICAgICAgICAgICAgIDAgLjEyNXJlbSAuMjVyZW0gcmdiYSgkYmxhY2ssIC4wNzUpICFkZWZhdWx0O1xuJGJveC1zaGFkb3c6ICAgICAgICAgICAgICAgICAgMCAuNXJlbSAxcmVtIHJnYmEoJGJsYWNrLCAuMTUpICFkZWZhdWx0O1xuJGJveC1zaGFkb3ctbGc6ICAgICAgICAgICAgICAgMCAxcmVtIDNyZW0gcmdiYSgkYmxhY2ssIC4xNzUpICFkZWZhdWx0O1xuXG4kY29tcG9uZW50LWFjdGl2ZS1jb2xvcjogICAgICAkd2hpdGUgIWRlZmF1bHQ7XG4kY29tcG9uZW50LWFjdGl2ZS1iZzogICAgICAgICB0aGVtZS1jb2xvcihcInByaW1hcnlcIikgIWRlZmF1bHQ7XG5cbiRjYXJldC13aWR0aDogICAgICAgICAgICAgICAgIC4zZW0gIWRlZmF1bHQ7XG5cbiR0cmFuc2l0aW9uLWJhc2U6ICAgICAgICAgICAgIGFsbCAuMnMgZWFzZS1pbi1vdXQgIWRlZmF1bHQ7XG4kdHJhbnNpdGlvbi1mYWRlOiAgICAgICAgICAgICBvcGFjaXR5IC4xNXMgbGluZWFyICFkZWZhdWx0O1xuJHRyYW5zaXRpb24tY29sbGFwc2U6ICAgICAgICAgaGVpZ2h0IC4zNXMgZWFzZSAhZGVmYXVsdDtcblxuJGVtYmVkLXJlc3BvbnNpdmUtYXNwZWN0LXJhdGlvczogKCkgIWRlZmF1bHQ7XG4vLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc2Nzcy9kb2xsYXItdmFyaWFibGUtZGVmYXVsdFxuJGVtYmVkLXJlc3BvbnNpdmUtYXNwZWN0LXJhdGlvczogam9pbihcbiAgKFxuICAgICgyMSA5KSxcbiAgICAoMTYgOSksXG4gICAgKDMgNCksXG4gICAgKDEgMSksXG4gICksXG4gICRlbWJlZC1yZXNwb25zaXZlLWFzcGVjdC1yYXRpb3Ncbik7XG5cbi8vIEZvbnRzXG4vL1xuLy8gRm9udCwgbGluZS1oZWlnaHQsIGFuZCBjb2xvciBmb3IgYm9keSB0ZXh0LCBoZWFkaW5ncywgYW5kIG1vcmUuXG5cbi8vIHN0eWxlbGludC1kaXNhYmxlIHZhbHVlLWtleXdvcmQtY2FzZVxuJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY6ICAgICAgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlNlZ29lIFVJXCIsIFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBBcmlhbCwgXCJOb3RvIFNhbnNcIiwgc2Fucy1zZXJpZiwgXCJBcHBsZSBDb2xvciBFbW9qaVwiLCBcIlNlZ29lIFVJIEVtb2ppXCIsIFwiU2Vnb2UgVUkgU3ltYm9sXCIsIFwiTm90byBDb2xvciBFbW9qaVwiICFkZWZhdWx0O1xuJGZvbnQtZmFtaWx5LW1vbm9zcGFjZTogICAgICAgU0ZNb25vLVJlZ3VsYXIsIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCBcIkxpYmVyYXRpb24gTW9ub1wiLCBcIkNvdXJpZXIgTmV3XCIsIG1vbm9zcGFjZSAhZGVmYXVsdDtcbiRmb250LWZhbWlseS1iYXNlOiAgICAgICAgICAgICRmb250LWZhbWlseS1zYW5zLXNlcmlmICFkZWZhdWx0O1xuLy8gc3R5bGVsaW50LWVuYWJsZSB2YWx1ZS1rZXl3b3JkLWNhc2VcblxuJGZvbnQtc2l6ZS1iYXNlOiAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDsgLy8gQXNzdW1lcyB0aGUgYnJvd3NlciBkZWZhdWx0LCB0eXBpY2FsbHkgYDE2cHhgXG4kZm9udC1zaXplLWxnOiAgICAgICAgICAgICAgICAoJGZvbnQtc2l6ZS1iYXNlICogMS4yNSkgIWRlZmF1bHQ7XG4kZm9udC1zaXplLXNtOiAgICAgICAgICAgICAgICAoJGZvbnQtc2l6ZS1iYXNlICogLjg3NSkgIWRlZmF1bHQ7XG5cbiRmb250LXdlaWdodC1saWdodGVyOiAgICAgICAgIGxpZ2h0ZXIgIWRlZmF1bHQ7XG4kZm9udC13ZWlnaHQtbGlnaHQ6ICAgICAgICAgICAzMDAgIWRlZmF1bHQ7XG4kZm9udC13ZWlnaHQtbm9ybWFsOiAgICAgICAgICA0MDAgIWRlZmF1bHQ7XG4kZm9udC13ZWlnaHQtYm9sZDogICAgICAgICAgICA3MDAgIWRlZmF1bHQ7XG4kZm9udC13ZWlnaHQtYm9sZGVyOiAgICAgICAgICBib2xkZXIgIWRlZmF1bHQ7XG5cbiRmb250LXdlaWdodC1iYXNlOiAgICAgICAgICAgICRmb250LXdlaWdodC1ub3JtYWwgIWRlZmF1bHQ7XG4kbGluZS1oZWlnaHQtYmFzZTogICAgICAgICAgICAxLjUgIWRlZmF1bHQ7XG5cbiRoMS1mb250LXNpemU6ICAgICAgICAgICAgICAgICRmb250LXNpemUtYmFzZSAqIDIuNSAhZGVmYXVsdDtcbiRoMi1mb250LXNpemU6ICAgICAgICAgICAgICAgICRmb250LXNpemUtYmFzZSAqIDIgIWRlZmF1bHQ7XG4kaDMtZm9udC1zaXplOiAgICAgICAgICAgICAgICAkZm9udC1zaXplLWJhc2UgKiAxLjc1ICFkZWZhdWx0O1xuJGg0LWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgJGZvbnQtc2l6ZS1iYXNlICogMS41ICFkZWZhdWx0O1xuJGg1LWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgJGZvbnQtc2l6ZS1iYXNlICogMS4yNSAhZGVmYXVsdDtcbiRoNi1mb250LXNpemU6ICAgICAgICAgICAgICAgICRmb250LXNpemUtYmFzZSAhZGVmYXVsdDtcblxuJGhlYWRpbmdzLW1hcmdpbi1ib3R0b206ICAgICAgJHNwYWNlciAvIDIgIWRlZmF1bHQ7XG4kaGVhZGluZ3MtZm9udC1mYW1pbHk6ICAgICAgICBpbmhlcml0ICFkZWZhdWx0O1xuJGhlYWRpbmdzLWZvbnQtd2VpZ2h0OiAgICAgICAgNTAwICFkZWZhdWx0O1xuJGhlYWRpbmdzLWxpbmUtaGVpZ2h0OiAgICAgICAgMS4yICFkZWZhdWx0O1xuJGhlYWRpbmdzLWNvbG9yOiAgICAgICAgICAgICAgaW5oZXJpdCAhZGVmYXVsdDtcblxuJGRpc3BsYXkxLXNpemU6ICAgICAgICAgICAgICAgNnJlbSAhZGVmYXVsdDtcbiRkaXNwbGF5Mi1zaXplOiAgICAgICAgICAgICAgIDUuNXJlbSAhZGVmYXVsdDtcbiRkaXNwbGF5My1zaXplOiAgICAgICAgICAgICAgIDQuNXJlbSAhZGVmYXVsdDtcbiRkaXNwbGF5NC1zaXplOiAgICAgICAgICAgICAgIDMuNXJlbSAhZGVmYXVsdDtcblxuJGRpc3BsYXkxLXdlaWdodDogICAgICAgICAgICAgMzAwICFkZWZhdWx0O1xuJGRpc3BsYXkyLXdlaWdodDogICAgICAgICAgICAgMzAwICFkZWZhdWx0O1xuJGRpc3BsYXkzLXdlaWdodDogICAgICAgICAgICAgMzAwICFkZWZhdWx0O1xuJGRpc3BsYXk0LXdlaWdodDogICAgICAgICAgICAgMzAwICFkZWZhdWx0O1xuJGRpc3BsYXktbGluZS1oZWlnaHQ6ICAgICAgICAgJGhlYWRpbmdzLWxpbmUtaGVpZ2h0ICFkZWZhdWx0O1xuXG4kbGVhZC1mb250LXNpemU6ICAgICAgICAgICAgICAoJGZvbnQtc2l6ZS1iYXNlICogMS4yNSkgIWRlZmF1bHQ7XG4kbGVhZC1mb250LXdlaWdodDogICAgICAgICAgICAzMDAgIWRlZmF1bHQ7XG5cbiRzbWFsbC1mb250LXNpemU6ICAgICAgICAgICAgIDgwJSAhZGVmYXVsdDtcblxuJHRleHQtbXV0ZWQ6ICAgICAgICAgICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xuXG4kYmxvY2txdW90ZS1zbWFsbC1jb2xvcjogICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XG4kYmxvY2txdW90ZS1zbWFsbC1mb250LXNpemU6ICAkc21hbGwtZm9udC1zaXplICFkZWZhdWx0O1xuJGJsb2NrcXVvdGUtZm9udC1zaXplOiAgICAgICAgKCRmb250LXNpemUtYmFzZSAqIDEuMjUpICFkZWZhdWx0O1xuXG4kaHItYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICByZ2JhKCRibGFjaywgLjEpICFkZWZhdWx0O1xuJGhyLWJvcmRlci13aWR0aDogICAgICAgICAgICAgJGJvcmRlci13aWR0aCAhZGVmYXVsdDtcblxuJG1hcmstcGFkZGluZzogICAgICAgICAgICAgICAgLjJlbSAhZGVmYXVsdDtcblxuJGR0LWZvbnQtd2VpZ2h0OiAgICAgICAgICAgICAgJGZvbnQtd2VpZ2h0LWJvbGQgIWRlZmF1bHQ7XG5cbiRrYmQtYm94LXNoYWRvdzogICAgICAgICAgICAgIGluc2V0IDAgLS4xcmVtIDAgcmdiYSgkYmxhY2ssIC4yNSkgIWRlZmF1bHQ7XG4kbmVzdGVkLWtiZC1mb250LXdlaWdodDogICAgICAkZm9udC13ZWlnaHQtYm9sZCAhZGVmYXVsdDtcblxuJGxpc3QtaW5saW5lLXBhZGRpbmc6ICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XG5cbiRtYXJrLWJnOiAgICAgICAgICAgICAgICAgICAgICNmY2Y4ZTMgIWRlZmF1bHQ7XG5cbiRoci1tYXJnaW4teTogICAgICAgICAgICAgICAgICRzcGFjZXIgIWRlZmF1bHQ7XG5cblxuLy8gVGFibGVzXG4vL1xuLy8gQ3VzdG9taXplcyB0aGUgYC50YWJsZWAgY29tcG9uZW50IHdpdGggYmFzaWMgdmFsdWVzLCBlYWNoIHVzZWQgYWNyb3NzIGFsbCB0YWJsZSB2YXJpYXRpb25zLlxuXG4kdGFibGUtY2VsbC1wYWRkaW5nOiAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XG4kdGFibGUtY2VsbC1wYWRkaW5nLXNtOiAgICAgICAuM3JlbSAhZGVmYXVsdDtcblxuJHRhYmxlLWJnOiAgICAgICAgICAgICAgICAgICAgdHJhbnNwYXJlbnQgIWRlZmF1bHQ7XG4kdGFibGUtYWNjZW50LWJnOiAgICAgICAgICAgICByZ2JhKCRibGFjaywgLjA1KSAhZGVmYXVsdDtcbiR0YWJsZS1ob3Zlci1iZzogICAgICAgICAgICAgIHJnYmEoJGJsYWNrLCAuMDc1KSAhZGVmYXVsdDtcbiR0YWJsZS1hY3RpdmUtYmc6ICAgICAgICAgICAgICR0YWJsZS1ob3Zlci1iZyAhZGVmYXVsdDtcblxuJHRhYmxlLWJvcmRlci13aWR0aDogICAgICAgICAgJGJvcmRlci13aWR0aCAhZGVmYXVsdDtcbiR0YWJsZS1ib3JkZXItY29sb3I6ICAgICAgICAgICRncmF5LTMwMCAhZGVmYXVsdDtcblxuJHRhYmxlLWhlYWQtYmc6ICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xuJHRhYmxlLWhlYWQtY29sb3I6ICAgICAgICAgICAgJGdyYXktNzAwICFkZWZhdWx0O1xuXG4kdGFibGUtZGFyay1iZzogICAgICAgICAgICAgICAkZ3JheS05MDAgIWRlZmF1bHQ7XG4kdGFibGUtZGFyay1hY2NlbnQtYmc6ICAgICAgICByZ2JhKCR3aGl0ZSwgLjA1KSAhZGVmYXVsdDtcbiR0YWJsZS1kYXJrLWhvdmVyLWJnOiAgICAgICAgIHJnYmEoJHdoaXRlLCAuMDc1KSAhZGVmYXVsdDtcbiR0YWJsZS1kYXJrLWJvcmRlci1jb2xvcjogICAgIGxpZ2h0ZW4oJGdyYXktOTAwLCA3LjUlKSAhZGVmYXVsdDtcbiR0YWJsZS1kYXJrLWNvbG9yOiAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcblxuJHRhYmxlLXN0cmlwZWQtb3JkZXI6ICAgICAgICAgb2RkICFkZWZhdWx0O1xuXG4kdGFibGUtY2FwdGlvbi1jb2xvcjogICAgICAgICAkdGV4dC1tdXRlZCAhZGVmYXVsdDtcblxuJHRhYmxlLWJnLWxldmVsOiAgICAgICAgICAgICAgLTkgIWRlZmF1bHQ7XG4kdGFibGUtYm9yZGVyLWxldmVsOiAgICAgICAgICAtNiAhZGVmYXVsdDtcblxuXG4vLyBCdXR0b25zICsgRm9ybXNcbi8vXG4vLyBTaGFyZWQgdmFyaWFibGVzIHRoYXQgYXJlIHJlYXNzaWduZWQgdG8gYCRpbnB1dC1gIGFuZCBgJGJ0bi1gIHNwZWNpZmljIHZhcmlhYmxlcy5cblxuJGlucHV0LWJ0bi1wYWRkaW5nLXk6ICAgICAgICAgLjM3NXJlbSAhZGVmYXVsdDtcbiRpbnB1dC1idG4tcGFkZGluZy14OiAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcbiRpbnB1dC1idG4tZm9udC1zaXplOiAgICAgICAgICRmb250LXNpemUtYmFzZSAhZGVmYXVsdDtcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQ6ICAgICAgICRsaW5lLWhlaWdodC1iYXNlICFkZWZhdWx0O1xuXG4kaW5wdXQtYnRuLWZvY3VzLXdpZHRoOiAgICAgICAuMnJlbSAhZGVmYXVsdDtcbiRpbnB1dC1idG4tZm9jdXMtY29sb3I6ICAgICAgIHJnYmEoJGNvbXBvbmVudC1hY3RpdmUtYmcsIC4yNSkgIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLWZvY3VzLWJveC1zaGFkb3c6ICAwIDAgMCAkaW5wdXQtYnRuLWZvY3VzLXdpZHRoICRpbnB1dC1idG4tZm9jdXMtY29sb3IgIWRlZmF1bHQ7XG5cbiRpbnB1dC1idG4tcGFkZGluZy15LXNtOiAgICAgIC4yNXJlbSAhZGVmYXVsdDtcbiRpbnB1dC1idG4tcGFkZGluZy14LXNtOiAgICAgIC41cmVtICFkZWZhdWx0O1xuJGlucHV0LWJ0bi1mb250LXNpemUtc206ICAgICAgJGZvbnQtc2l6ZS1zbSAhZGVmYXVsdDtcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQtc206ICAgICRsaW5lLWhlaWdodC1zbSAhZGVmYXVsdDtcblxuJGlucHV0LWJ0bi1wYWRkaW5nLXktbGc6ICAgICAgLjVyZW0gIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLXBhZGRpbmcteC1sZzogICAgICAxcmVtICFkZWZhdWx0O1xuJGlucHV0LWJ0bi1mb250LXNpemUtbGc6ICAgICAgJGZvbnQtc2l6ZS1sZyAhZGVmYXVsdDtcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQtbGc6ICAgICRsaW5lLWhlaWdodC1sZyAhZGVmYXVsdDtcblxuJGlucHV0LWJ0bi1ib3JkZXItd2lkdGg6ICAgICAgJGJvcmRlci13aWR0aCAhZGVmYXVsdDtcblxuXG4vLyBCdXR0b25zXG4vL1xuLy8gRm9yIGVhY2ggb2YgQm9vdHN0cmFwJ3MgYnV0dG9ucywgZGVmaW5lIHRleHQsIGJhY2tncm91bmQsIGFuZCBib3JkZXIgY29sb3IuXG5cbiRidG4tcGFkZGluZy15OiAgICAgICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy15ICFkZWZhdWx0O1xuJGJ0bi1wYWRkaW5nLXg6ICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1wYWRkaW5nLXggIWRlZmF1bHQ7XG4kYnRuLWZvbnQtc2l6ZTogICAgICAgICAgICAgICAkaW5wdXQtYnRuLWZvbnQtc2l6ZSAhZGVmYXVsdDtcbiRidG4tbGluZS1oZWlnaHQ6ICAgICAgICAgICAgICRpbnB1dC1idG4tbGluZS1oZWlnaHQgIWRlZmF1bHQ7XG5cbiRidG4tcGFkZGluZy15LXNtOiAgICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy15LXNtICFkZWZhdWx0O1xuJGJ0bi1wYWRkaW5nLXgtc206ICAgICAgICAgICAgJGlucHV0LWJ0bi1wYWRkaW5nLXgtc20gIWRlZmF1bHQ7XG4kYnRuLWZvbnQtc2l6ZS1zbTogICAgICAgICAgICAkaW5wdXQtYnRuLWZvbnQtc2l6ZS1zbSAhZGVmYXVsdDtcbiRidG4tbGluZS1oZWlnaHQtc206ICAgICAgICAgICRpbnB1dC1idG4tbGluZS1oZWlnaHQtc20gIWRlZmF1bHQ7XG5cbiRidG4tcGFkZGluZy15LWxnOiAgICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy15LWxnICFkZWZhdWx0O1xuJGJ0bi1wYWRkaW5nLXgtbGc6ICAgICAgICAgICAgJGlucHV0LWJ0bi1wYWRkaW5nLXgtbGcgIWRlZmF1bHQ7XG4kYnRuLWZvbnQtc2l6ZS1sZzogICAgICAgICAgICAkaW5wdXQtYnRuLWZvbnQtc2l6ZS1sZyAhZGVmYXVsdDtcbiRidG4tbGluZS1oZWlnaHQtbGc6ICAgICAgICAgICRpbnB1dC1idG4tbGluZS1oZWlnaHQtbGcgIWRlZmF1bHQ7XG5cbiRidG4tYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICRpbnB1dC1idG4tYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xuXG4kYnRuLWZvbnQtd2VpZ2h0OiAgICAgICAgICAgICAkZm9udC13ZWlnaHQtbm9ybWFsICFkZWZhdWx0O1xuJGJ0bi1ib3gtc2hhZG93OiAgICAgICAgICAgICAgaW5zZXQgMCAxcHggMCByZ2JhKCR3aGl0ZSwgLjE1KSwgMCAxcHggMXB4IHJnYmEoJGJsYWNrLCAuMDc1KSAhZGVmYXVsdDtcbiRidG4tZm9jdXMtd2lkdGg6ICAgICAgICAgICAgICRpbnB1dC1idG4tZm9jdXMtd2lkdGggIWRlZmF1bHQ7XG4kYnRuLWZvY3VzLWJveC1zaGFkb3c6ICAgICAgICAkaW5wdXQtYnRuLWZvY3VzLWJveC1zaGFkb3cgIWRlZmF1bHQ7XG4kYnRuLWRpc2FibGVkLW9wYWNpdHk6ICAgICAgICAuNjUgIWRlZmF1bHQ7XG4kYnRuLWFjdGl2ZS1ib3gtc2hhZG93OiAgICAgICBpbnNldCAwIDNweCA1cHggcmdiYSgkYmxhY2ssIC4xMjUpICFkZWZhdWx0O1xuXG4kYnRuLWxpbmstZGlzYWJsZWQtY29sb3I6ICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XG5cbiRidG4tYmxvY2stc3BhY2luZy15OiAgICAgICAgIC41cmVtICFkZWZhdWx0O1xuXG4vLyBBbGxvd3MgZm9yIGN1c3RvbWl6aW5nIGJ1dHRvbiByYWRpdXMgaW5kZXBlbmRlbnRseSBmcm9tIGdsb2JhbCBib3JkZXIgcmFkaXVzXG4kYnRuLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcbiRidG4tYm9yZGVyLXJhZGl1cy1sZzogICAgICAgICRib3JkZXItcmFkaXVzLWxnICFkZWZhdWx0O1xuJGJ0bi1ib3JkZXItcmFkaXVzLXNtOiAgICAgICAgJGJvcmRlci1yYWRpdXMtc20gIWRlZmF1bHQ7XG5cbiRidG4tdHJhbnNpdGlvbjogICAgICAgICAgICAgIGNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsIGJhY2tncm91bmQtY29sb3IgLjE1cyBlYXNlLWluLW91dCwgYm9yZGVyLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsIGJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dCAhZGVmYXVsdDtcblxuXG4vLyBGb3Jtc1xuXG4kbGFiZWwtbWFyZ2luLWJvdHRvbTogICAgICAgICAgICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XG5cbiRpbnB1dC1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLXBhZGRpbmcteSAhZGVmYXVsdDtcbiRpbnB1dC1wYWRkaW5nLXg6ICAgICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLXBhZGRpbmcteCAhZGVmYXVsdDtcbiRpbnB1dC1mb250LXNpemU6ICAgICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLWZvbnQtc2l6ZSAhZGVmYXVsdDtcbiRpbnB1dC1mb250LXdlaWdodDogICAgICAgICAgICAgICAgICAgICAkZm9udC13ZWlnaHQtYmFzZSAhZGVmYXVsdDtcbiRpbnB1dC1saW5lLWhlaWdodDogICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0ICFkZWZhdWx0O1xuXG4kaW5wdXQtcGFkZGluZy15LXNtOiAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1wYWRkaW5nLXktc20gIWRlZmF1bHQ7XG4kaW5wdXQtcGFkZGluZy14LXNtOiAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1wYWRkaW5nLXgtc20gIWRlZmF1bHQ7XG4kaW5wdXQtZm9udC1zaXplLXNtOiAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1mb250LXNpemUtc20gIWRlZmF1bHQ7XG4kaW5wdXQtbGluZS1oZWlnaHQtc206ICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1saW5lLWhlaWdodC1zbSAhZGVmYXVsdDtcblxuJGlucHV0LXBhZGRpbmcteS1sZzogICAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy15LWxnICFkZWZhdWx0O1xuJGlucHV0LXBhZGRpbmcteC1sZzogICAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy14LWxnICFkZWZhdWx0O1xuJGlucHV0LWZvbnQtc2l6ZS1sZzogICAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tZm9udC1zaXplLWxnICFkZWZhdWx0O1xuJGlucHV0LWxpbmUtaGVpZ2h0LWxnOiAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tbGluZS1oZWlnaHQtbGcgIWRlZmF1bHQ7XG5cbiRpbnB1dC1iZzogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XG4kaW5wdXQtZGlzYWJsZWQtYmc6ICAgICAgICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xuXG4kaW5wdXQtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgICAgJGdyYXktNzAwICFkZWZhdWx0O1xuJGlucHV0LWJvcmRlci1jb2xvcjogICAgICAgICAgICAgICAgICAgICRncmF5LTQwMCAhZGVmYXVsdDtcbiRpbnB1dC1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLWJvcmRlci13aWR0aCAhZGVmYXVsdDtcbiRpbnB1dC1ib3gtc2hhZG93OiAgICAgICAgICAgICAgICAgICAgICBpbnNldCAwIDFweCAxcHggcmdiYSgkYmxhY2ssIC4wNzUpICFkZWZhdWx0O1xuXG4kaW5wdXQtYm9yZGVyLXJhZGl1czogICAgICAgICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG4kaW5wdXQtYm9yZGVyLXJhZGl1cy1sZzogICAgICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMtbGcgIWRlZmF1bHQ7XG4kaW5wdXQtYm9yZGVyLXJhZGl1cy1zbTogICAgICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMtc20gIWRlZmF1bHQ7XG5cbiRpbnB1dC1mb2N1cy1iZzogICAgICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYmcgIWRlZmF1bHQ7XG4kaW5wdXQtZm9jdXMtYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICAgbGlnaHRlbigkY29tcG9uZW50LWFjdGl2ZS1iZywgMjUlKSAhZGVmYXVsdDtcbiRpbnB1dC1mb2N1cy1jb2xvcjogICAgICAgICAgICAgICAgICAgICAkaW5wdXQtY29sb3IgIWRlZmF1bHQ7XG4kaW5wdXQtZm9jdXMtd2lkdGg6ICAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1mb2N1cy13aWR0aCAhZGVmYXVsdDtcbiRpbnB1dC1mb2N1cy1ib3gtc2hhZG93OiAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLWZvY3VzLWJveC1zaGFkb3cgIWRlZmF1bHQ7XG5cbiRpbnB1dC1wbGFjZWhvbGRlci1jb2xvcjogICAgICAgICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XG4kaW5wdXQtcGxhaW50ZXh0LWNvbG9yOiAgICAgICAgICAgICAgICAgJGJvZHktY29sb3IgIWRlZmF1bHQ7XG5cbiRpbnB1dC1oZWlnaHQtYm9yZGVyOiAgICAgICAgICAgICAgICAgICAkaW5wdXQtYm9yZGVyLXdpZHRoICogMiAhZGVmYXVsdDtcblxuJGlucHV0LWhlaWdodC1pbm5lcjogICAgICAgICAgICAgICAgICAgICgkaW5wdXQtYnRuLWZvbnQtc2l6ZSAqICRpbnB1dC1idG4tbGluZS1oZWlnaHQpICsgKCRpbnB1dC1idG4tcGFkZGluZy15ICogMikgIWRlZmF1bHQ7XG4kaW5wdXQtaGVpZ2h0OiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsYygjeyRpbnB1dC1oZWlnaHQtaW5uZXJ9ICsgI3skaW5wdXQtaGVpZ2h0LWJvcmRlcn0pICFkZWZhdWx0O1xuXG4kaW5wdXQtaGVpZ2h0LWlubmVyLXNtOiAgICAgICAgICAgICAgICAgKCRpbnB1dC1idG4tZm9udC1zaXplLXNtICogJGlucHV0LWJ0bi1saW5lLWhlaWdodC1zbSkgKyAoJGlucHV0LWJ0bi1wYWRkaW5nLXktc20gKiAyKSAhZGVmYXVsdDtcbiRpbnB1dC1oZWlnaHQtc206ICAgICAgICAgICAgICAgICAgICAgICBjYWxjKCN7JGlucHV0LWhlaWdodC1pbm5lci1zbX0gKyAjeyRpbnB1dC1oZWlnaHQtYm9yZGVyfSkgIWRlZmF1bHQ7XG5cbiRpbnB1dC1oZWlnaHQtaW5uZXItbGc6ICAgICAgICAgICAgICAgICAoJGlucHV0LWJ0bi1mb250LXNpemUtbGcgKiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LWxnKSArICgkaW5wdXQtYnRuLXBhZGRpbmcteS1sZyAqIDIpICFkZWZhdWx0O1xuJGlucHV0LWhlaWdodC1sZzogICAgICAgICAgICAgICAgICAgICAgIGNhbGMoI3skaW5wdXQtaGVpZ2h0LWlubmVyLWxnfSArICN7JGlucHV0LWhlaWdodC1ib3JkZXJ9KSAhZGVmYXVsdDtcblxuJGlucHV0LXRyYW5zaXRpb246ICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LCBib3gtc2hhZG93IC4xNXMgZWFzZS1pbi1vdXQgIWRlZmF1bHQ7XG5cbiRmb3JtLXRleHQtbWFyZ2luLXRvcDogICAgICAgICAgICAgICAgICAuMjVyZW0gIWRlZmF1bHQ7XG5cbiRmb3JtLWNoZWNrLWlucHV0LWd1dHRlcjogICAgICAgICAgICAgICAxLjI1cmVtICFkZWZhdWx0O1xuJGZvcm0tY2hlY2staW5wdXQtbWFyZ2luLXk6ICAgICAgICAgICAgIC4zcmVtICFkZWZhdWx0O1xuJGZvcm0tY2hlY2staW5wdXQtbWFyZ2luLXg6ICAgICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcblxuJGZvcm0tY2hlY2staW5saW5lLW1hcmdpbi14OiAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcbiRmb3JtLWNoZWNrLWlubGluZS1pbnB1dC1tYXJnaW4teDogICAgICAuMzEyNXJlbSAhZGVmYXVsdDtcblxuJGZvcm0tZ3JpZC1ndXR0ZXItd2lkdGg6ICAgICAgICAgICAgICAgIDEwcHggIWRlZmF1bHQ7XG4kZm9ybS1ncm91cC1tYXJnaW4tYm90dG9tOiAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcblxuJGlucHV0LWdyb3VwLWFkZG9uLWNvbG9yOiAgICAgICAgICAgICAgICRpbnB1dC1jb2xvciAhZGVmYXVsdDtcbiRpbnB1dC1ncm91cC1hZGRvbi1iZzogICAgICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XG4kaW5wdXQtZ3JvdXAtYWRkb24tYm9yZGVyLWNvbG9yOiAgICAgICAgJGlucHV0LWJvcmRlci1jb2xvciAhZGVmYXVsdDtcblxuJGN1c3RvbS1mb3Jtcy10cmFuc2l0aW9uOiAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3IgLjE1cyBlYXNlLWluLW91dCwgYm9yZGVyLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsIGJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dCAhZGVmYXVsdDtcblxuJGN1c3RvbS1jb250cm9sLWd1dHRlcjogICAgICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xuJGN1c3RvbS1jb250cm9sLXNwYWNlci14OiAgICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XG5cbiRjdXN0b20tY29udHJvbC1pbmRpY2F0b3Itc2l6ZTogICAgICAgICAxcmVtICFkZWZhdWx0O1xuJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1iZzogICAgICAgICAgICRpbnB1dC1iZyAhZGVmYXVsdDtcblxuJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1iZy1zaXplOiAgICAgIDUwJSA1MCUgIWRlZmF1bHQ7XG4kY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWJveC1zaGFkb3c6ICAgJGlucHV0LWJveC1zaGFkb3cgIWRlZmF1bHQ7XG4kY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWJvcmRlci1jb2xvcjogJGdyYXktNTAwICFkZWZhdWx0O1xuJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1ib3JkZXItd2lkdGg6ICRpbnB1dC1ib3JkZXItd2lkdGggIWRlZmF1bHQ7XG5cbiRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItZGlzYWJsZWQtYmc6ICAgICAgICAgICRpbnB1dC1kaXNhYmxlZC1iZyAhZGVmYXVsdDtcbiRjdXN0b20tY29udHJvbC1sYWJlbC1kaXNhYmxlZC1jb2xvcjogICAgICAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcblxuJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWNvbG9yOiAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XG4kY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtYmc6ICAgICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcbiRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1kaXNhYmxlZC1iZzogIHJnYmEodGhlbWUtY29sb3IoXCJwcmltYXJ5XCIpLCAuNSkgIWRlZmF1bHQ7XG4kY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtYm94LXNoYWRvdzogICBub25lICFkZWZhdWx0O1xuJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWJvcmRlci1jb2xvcjogJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWJnICFkZWZhdWx0O1xuXG4kY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWZvY3VzLWJveC1zaGFkb3c6ICAgICAkaW5wdXQtYnRuLWZvY3VzLWJveC1zaGFkb3cgIWRlZmF1bHQ7XG4kY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWZvY3VzLWJvcmRlci1jb2xvcjogICAkaW5wdXQtZm9jdXMtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuXG4kY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWFjdGl2ZS1jb2xvcjogICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcbiRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYWN0aXZlLWJnOiAgICAgICAgICAgIGxpZ2h0ZW4oJGNvbXBvbmVudC1hY3RpdmUtYmcsIDM1JSkgIWRlZmF1bHQ7XG4kY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWFjdGl2ZS1ib3gtc2hhZG93OiAgICBub25lICFkZWZhdWx0O1xuJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1hY3RpdmUtYm9yZGVyLWNvbG9yOiAgJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1hY3RpdmUtYmcgIWRlZmF1bHQ7XG5cbiRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWJvcmRlci1yYWRpdXM6ICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaWNvbi1jaGVja2VkOiAgICAgICAgc3RyLXJlcGxhY2UodXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA4IDgnJTNlJTNjcGF0aCBmaWxsPScjeyRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1jb2xvcn0nIGQ9J002LjU2NC43NWwtMy41OSAzLjYxMi0xLjUzOC0xLjU1TDAgNC4yNiAyLjk3NCA3LjI1IDggMi4xOTN6Jy8lM2UlM2Mvc3ZnJTNlXCIpLCBcIiNcIiwgXCIlMjNcIikgIWRlZmF1bHQ7XG5cbiRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWluZGV0ZXJtaW5hdGUtYmc6ICAgICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcbiRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWluZGV0ZXJtaW5hdGUtY29sb3I6ICAgICAgICAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtY29sb3IgIWRlZmF1bHQ7XG4kY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1pY29uLWluZGV0ZXJtaW5hdGU6ICAgICAgICAgc3RyLXJlcGxhY2UodXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA0IDQnJTNlJTNjcGF0aCBzdHJva2U9JyN7JGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaW5kZXRlcm1pbmF0ZS1jb2xvcn0nIGQ9J00wIDJoNCcvJTNlJTNjL3N2ZyUzZVwiKSwgXCIjXCIsIFwiJTIzXCIpICFkZWZhdWx0O1xuJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaW5kZXRlcm1pbmF0ZS1ib3gtc2hhZG93OiAgIG5vbmUgIWRlZmF1bHQ7XG4kY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1pbmRldGVybWluYXRlLWJvcmRlci1jb2xvcjogJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaW5kZXRlcm1pbmF0ZS1iZyAhZGVmYXVsdDtcblxuJGN1c3RvbS1yYWRpby1pbmRpY2F0b3ItYm9yZGVyLXJhZGl1czogICAgICAgICAgNTAlICFkZWZhdWx0O1xuJGN1c3RvbS1yYWRpby1pbmRpY2F0b3ItaWNvbi1jaGVja2VkOiAgICAgICAgICAgc3RyLXJlcGxhY2UodXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9Jy00IC00IDggOCclM2UlM2NjaXJjbGUgcj0nMycgZmlsbD0nI3skY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtY29sb3J9Jy8lM2UlM2Mvc3ZnJTNlXCIpLCBcIiNcIiwgXCIlMjNcIikgIWRlZmF1bHQ7XG5cbiRjdXN0b20tc3dpdGNoLXdpZHRoOiAgICAgICAgICAgICAgICAgICAgICAgICAgICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3Itc2l6ZSAqIDEuNzUgIWRlZmF1bHQ7XG4kY3VzdG9tLXN3aXRjaC1pbmRpY2F0b3ItYm9yZGVyLXJhZGl1czogICAgICAgICAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLXNpemUgLyAyICFkZWZhdWx0O1xuJGN1c3RvbS1zd2l0Y2gtaW5kaWNhdG9yLXNpemU6ICAgICAgICAgICAgICAgICAgY2FsYygjeyRjdXN0b20tY29udHJvbC1pbmRpY2F0b3Itc2l6ZX0gLSAjeyRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYm9yZGVyLXdpZHRoICogNH0pICFkZWZhdWx0O1xuXG4kY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXk6ICAgICAgICAgICAkaW5wdXQtYnRuLXBhZGRpbmcteSAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LXBhZGRpbmcteDogICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy14ICFkZWZhdWx0O1xuJGN1c3RvbS1zZWxlY3QtaGVpZ2h0OiAgICAgICAgICAgICAgJGlucHV0LWhlaWdodCAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWluZGljYXRvci1wYWRkaW5nOiAgIDFyZW0gIWRlZmF1bHQ7IC8vIEV4dHJhIHBhZGRpbmcgdG8gYWNjb3VudCBmb3IgdGhlIHByZXNlbmNlIG9mIHRoZSBiYWNrZ3JvdW5kLWltYWdlIGJhc2VkIGluZGljYXRvclxuJGN1c3RvbS1zZWxlY3QtZm9udC13ZWlnaHQ6ICAgICAgICAgJGlucHV0LWZvbnQtd2VpZ2h0ICFkZWZhdWx0O1xuJGN1c3RvbS1zZWxlY3QtbGluZS1oZWlnaHQ6ICAgICAgICAgJGlucHV0LWxpbmUtaGVpZ2h0ICFkZWZhdWx0O1xuJGN1c3RvbS1zZWxlY3QtY29sb3I6ICAgICAgICAgICAgICAgJGlucHV0LWNvbG9yICFkZWZhdWx0O1xuJGN1c3RvbS1zZWxlY3QtZGlzYWJsZWQtY29sb3I6ICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xuJGN1c3RvbS1zZWxlY3QtYmc6ICAgICAgICAgICAgICAgICAgJGlucHV0LWJnICFkZWZhdWx0O1xuJGN1c3RvbS1zZWxlY3QtZGlzYWJsZWQtYmc6ICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xuJGN1c3RvbS1zZWxlY3QtYmctc2l6ZTogICAgICAgICAgICAgOHB4IDEwcHggIWRlZmF1bHQ7IC8vIEluIHBpeGVscyBiZWNhdXNlIGltYWdlIGRpbWVuc2lvbnNcbiRjdXN0b20tc2VsZWN0LWluZGljYXRvci1jb2xvcjogICAgICRncmF5LTgwMCAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWluZGljYXRvcjogICAgICAgICAgIHN0ci1yZXBsYWNlKHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgNCA1JyUzZSUzY3BhdGggZmlsbD0nI3skY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3ItY29sb3J9JyBkPSdNMiAwTDAgMmg0em0wIDVMMCAzaDR6Jy8lM2UlM2Mvc3ZnJTNlXCIpLCBcIiNcIiwgXCIlMjNcIikgIWRlZmF1bHQ7XG4kY3VzdG9tLXNlbGVjdC1iYWNrZ3JvdW5kOiAgICAgICAgICAkY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3Igbm8tcmVwZWF0IHJpZ2h0ICRjdXN0b20tc2VsZWN0LXBhZGRpbmcteCBjZW50ZXIgLyAkY3VzdG9tLXNlbGVjdC1iZy1zaXplICFkZWZhdWx0OyAvLyBVc2VkIHNvIHdlIGNhbiBoYXZlIG11bHRpcGxlIGJhY2tncm91bmQgZWxlbWVudHMgKGUuZy4sIGFycm93IGFuZCBmZWVkYmFjayBpY29uKVxuXG4kY3VzdG9tLXNlbGVjdC1mZWVkYmFjay1pY29uLXBhZGRpbmctcmlnaHQ6ICRpbnB1dC1oZWlnaHQtaW5uZXIgKiAzIC8gNCArICRjdXN0b20tc2VsZWN0LXBhZGRpbmcteCArICRjdXN0b20tc2VsZWN0LWluZGljYXRvci1wYWRkaW5nICFkZWZhdWx0O1xuJGN1c3RvbS1zZWxlY3QtZmVlZGJhY2staWNvbi1wb3NpdGlvbjogICAgICBjZW50ZXIgcmlnaHQgKCRjdXN0b20tc2VsZWN0LXBhZGRpbmcteCArICRjdXN0b20tc2VsZWN0LWluZGljYXRvci1wYWRkaW5nKSAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWZlZWRiYWNrLWljb24tc2l6ZTogICAgICAgICAgKCRpbnB1dC1oZWlnaHQtaW5uZXIgLyAyKSAoJGlucHV0LWhlaWdodC1pbm5lciAvIDIpICFkZWZhdWx0O1xuXG4kY3VzdG9tLXNlbGVjdC1ib3JkZXItd2lkdGg6ICAgICAgICAkaW5wdXQtYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xuJGN1c3RvbS1zZWxlY3QtYm9yZGVyLWNvbG9yOiAgICAgICAgJGlucHV0LWJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWJvcmRlci1yYWRpdXM6ICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuJGN1c3RvbS1zZWxlY3QtYm94LXNoYWRvdzogICAgICAgICAgaW5zZXQgMCAxcHggMnB4IHJnYmEoJGJsYWNrLCAuMDc1KSAhZGVmYXVsdDtcblxuJGN1c3RvbS1zZWxlY3QtZm9jdXMtYm9yZGVyLWNvbG9yOiAgJGlucHV0LWZvY3VzLWJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWZvY3VzLXdpZHRoOiAgICAgICAgICRpbnB1dC1mb2N1cy13aWR0aCAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWZvY3VzLWJveC1zaGFkb3c6ICAgIDAgMCAwICRjdXN0b20tc2VsZWN0LWZvY3VzLXdpZHRoIHJnYmEoJGN1c3RvbS1zZWxlY3QtZm9jdXMtYm9yZGVyLWNvbG9yLCAuNSkgIWRlZmF1bHQ7XG5cbiRjdXN0b20tc2VsZWN0LXBhZGRpbmcteS1zbTogICAgICAgICRpbnB1dC1wYWRkaW5nLXktc20gIWRlZmF1bHQ7XG4kY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXgtc206ICAgICAgICAkaW5wdXQtcGFkZGluZy14LXNtICFkZWZhdWx0O1xuJGN1c3RvbS1zZWxlY3QtZm9udC1zaXplLXNtOiAgICAgICAgJGlucHV0LWJ0bi1mb250LXNpemUtc20gIWRlZmF1bHQ7XG4kY3VzdG9tLXNlbGVjdC1oZWlnaHQtc206ICAgICAgICAgICAkaW5wdXQtaGVpZ2h0LXNtICFkZWZhdWx0O1xuXG4kY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXktbGc6ICAgICAgICAkaW5wdXQtcGFkZGluZy15LWxnICFkZWZhdWx0O1xuJGN1c3RvbS1zZWxlY3QtcGFkZGluZy14LWxnOiAgICAgICAgJGlucHV0LXBhZGRpbmcteC1sZyAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWZvbnQtc2l6ZS1sZzogICAgICAgICRpbnB1dC1idG4tZm9udC1zaXplLWxnICFkZWZhdWx0O1xuJGN1c3RvbS1zZWxlY3QtaGVpZ2h0LWxnOiAgICAgICAgICAgJGlucHV0LWhlaWdodC1sZyAhZGVmYXVsdDtcblxuJGN1c3RvbS1yYW5nZS10cmFjay13aWR0aDogICAgICAgICAgMTAwJSAhZGVmYXVsdDtcbiRjdXN0b20tcmFuZ2UtdHJhY2staGVpZ2h0OiAgICAgICAgIC41cmVtICFkZWZhdWx0O1xuJGN1c3RvbS1yYW5nZS10cmFjay1jdXJzb3I6ICAgICAgICAgcG9pbnRlciAhZGVmYXVsdDtcbiRjdXN0b20tcmFuZ2UtdHJhY2stYmc6ICAgICAgICAgICAgICRncmF5LTMwMCAhZGVmYXVsdDtcbiRjdXN0b20tcmFuZ2UtdHJhY2stYm9yZGVyLXJhZGl1czogIDFyZW0gIWRlZmF1bHQ7XG4kY3VzdG9tLXJhbmdlLXRyYWNrLWJveC1zaGFkb3c6ICAgICBpbnNldCAwIC4yNXJlbSAuMjVyZW0gcmdiYSgkYmxhY2ssIC4xKSAhZGVmYXVsdDtcblxuJGN1c3RvbS1yYW5nZS10aHVtYi13aWR0aDogICAgICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcbiRjdXN0b20tcmFuZ2UtdGh1bWItaGVpZ2h0OiAgICAgICAgICAgICAgICAgICRjdXN0b20tcmFuZ2UtdGh1bWItd2lkdGggIWRlZmF1bHQ7XG4kY3VzdG9tLXJhbmdlLXRodW1iLWJnOiAgICAgICAgICAgICAgICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcbiRjdXN0b20tcmFuZ2UtdGh1bWItYm9yZGVyOiAgICAgICAgICAgICAgICAgIDAgIWRlZmF1bHQ7XG4kY3VzdG9tLXJhbmdlLXRodW1iLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xuJGN1c3RvbS1yYW5nZS10aHVtYi1ib3gtc2hhZG93OiAgICAgICAgICAgICAgMCAuMXJlbSAuMjVyZW0gcmdiYSgkYmxhY2ssIC4xKSAhZGVmYXVsdDtcbiRjdXN0b20tcmFuZ2UtdGh1bWItZm9jdXMtYm94LXNoYWRvdzogICAgICAgIDAgMCAwIDFweCAkYm9keS1iZywgJGlucHV0LWZvY3VzLWJveC1zaGFkb3cgIWRlZmF1bHQ7XG4kY3VzdG9tLXJhbmdlLXRodW1iLWZvY3VzLWJveC1zaGFkb3ctd2lkdGg6ICAkaW5wdXQtZm9jdXMtd2lkdGggIWRlZmF1bHQ7IC8vIEZvciBmb2N1cyBib3ggc2hhZG93IGlzc3VlIGluIElFL0VkZ2VcbiRjdXN0b20tcmFuZ2UtdGh1bWItYWN0aXZlLWJnOiAgICAgICAgICAgICAgIGxpZ2h0ZW4oJGNvbXBvbmVudC1hY3RpdmUtYmcsIDM1JSkgIWRlZmF1bHQ7XG4kY3VzdG9tLXJhbmdlLXRodW1iLWRpc2FibGVkLWJnOiAgICAgICAgICAgICAkZ3JheS01MDAgIWRlZmF1bHQ7XG5cbiRjdXN0b20tZmlsZS1oZWlnaHQ6ICAgICAgICAgICAgICAgICRpbnB1dC1oZWlnaHQgIWRlZmF1bHQ7XG4kY3VzdG9tLWZpbGUtaGVpZ2h0LWlubmVyOiAgICAgICAgICAkaW5wdXQtaGVpZ2h0LWlubmVyICFkZWZhdWx0O1xuJGN1c3RvbS1maWxlLWZvY3VzLWJvcmRlci1jb2xvcjogICAgJGlucHV0LWZvY3VzLWJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiRjdXN0b20tZmlsZS1mb2N1cy1ib3gtc2hhZG93OiAgICAgICRpbnB1dC1mb2N1cy1ib3gtc2hhZG93ICFkZWZhdWx0O1xuJGN1c3RvbS1maWxlLWRpc2FibGVkLWJnOiAgICAgICAgICAgJGlucHV0LWRpc2FibGVkLWJnICFkZWZhdWx0O1xuXG4kY3VzdG9tLWZpbGUtcGFkZGluZy15OiAgICAgICAgICAgICAkaW5wdXQtcGFkZGluZy15ICFkZWZhdWx0O1xuJGN1c3RvbS1maWxlLXBhZGRpbmcteDogICAgICAgICAgICAgJGlucHV0LXBhZGRpbmcteCAhZGVmYXVsdDtcbiRjdXN0b20tZmlsZS1saW5lLWhlaWdodDogICAgICAgICAgICRpbnB1dC1saW5lLWhlaWdodCAhZGVmYXVsdDtcbiRjdXN0b20tZmlsZS1mb250LXdlaWdodDogICAgICAgICAgICRpbnB1dC1mb250LXdlaWdodCAhZGVmYXVsdDtcbiRjdXN0b20tZmlsZS1jb2xvcjogICAgICAgICAgICAgICAgICRpbnB1dC1jb2xvciAhZGVmYXVsdDtcbiRjdXN0b20tZmlsZS1iZzogICAgICAgICAgICAgICAgICAgICRpbnB1dC1iZyAhZGVmYXVsdDtcbiRjdXN0b20tZmlsZS1ib3JkZXItd2lkdGg6ICAgICAgICAgICRpbnB1dC1ib3JkZXItd2lkdGggIWRlZmF1bHQ7XG4kY3VzdG9tLWZpbGUtYm9yZGVyLWNvbG9yOiAgICAgICAgICAkaW5wdXQtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuJGN1c3RvbS1maWxlLWJvcmRlci1yYWRpdXM6ICAgICAgICAgJGlucHV0LWJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG4kY3VzdG9tLWZpbGUtYm94LXNoYWRvdzogICAgICAgICAgICAkaW5wdXQtYm94LXNoYWRvdyAhZGVmYXVsdDtcbiRjdXN0b20tZmlsZS1idXR0b24tY29sb3I6ICAgICAgICAgICRjdXN0b20tZmlsZS1jb2xvciAhZGVmYXVsdDtcbiRjdXN0b20tZmlsZS1idXR0b24tYmc6ICAgICAgICAgICAgICRpbnB1dC1ncm91cC1hZGRvbi1iZyAhZGVmYXVsdDtcbiRjdXN0b20tZmlsZS10ZXh0OiAoXG4gIGVuOiBcIkJyb3dzZVwiXG4pICFkZWZhdWx0O1xuXG5cbi8vIEZvcm0gdmFsaWRhdGlvblxuXG4kZm9ybS1mZWVkYmFjay1tYXJnaW4tdG9wOiAgICAgICAgICAkZm9ybS10ZXh0LW1hcmdpbi10b3AgIWRlZmF1bHQ7XG4kZm9ybS1mZWVkYmFjay1mb250LXNpemU6ICAgICAgICAgICAkc21hbGwtZm9udC1zaXplICFkZWZhdWx0O1xuJGZvcm0tZmVlZGJhY2stdmFsaWQtY29sb3I6ICAgICAgICAgdGhlbWUtY29sb3IoXCJzdWNjZXNzXCIpICFkZWZhdWx0O1xuJGZvcm0tZmVlZGJhY2staW52YWxpZC1jb2xvcjogICAgICAgdGhlbWUtY29sb3IoXCJkYW5nZXJcIikgIWRlZmF1bHQ7XG5cbiRmb3JtLWZlZWRiYWNrLWljb24tdmFsaWQtY29sb3I6ICAgICRmb3JtLWZlZWRiYWNrLXZhbGlkLWNvbG9yICFkZWZhdWx0O1xuJGZvcm0tZmVlZGJhY2staWNvbi12YWxpZDogICAgICAgICAgc3RyLXJlcGxhY2UodXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA4IDgnJTNlJTNjcGF0aCBmaWxsPScjeyRmb3JtLWZlZWRiYWNrLWljb24tdmFsaWQtY29sb3J9JyBkPSdNMi4zIDYuNzNMLjYgNC41M2MtLjQtMS4wNC40Ni0xLjQgMS4xLS44bDEuMSAxLjQgMy40LTMuOGMuNi0uNjMgMS42LS4yNyAxLjIuN2wtNCA0LjZjLS40My41LS44LjQtMS4xLjF6Jy8lM2UlM2Mvc3ZnJTNlXCIpLCBcIiNcIiwgXCIlMjNcIikgIWRlZmF1bHQ7XG4kZm9ybS1mZWVkYmFjay1pY29uLWludmFsaWQtY29sb3I6ICAkZm9ybS1mZWVkYmFjay1pbnZhbGlkLWNvbG9yICFkZWZhdWx0O1xuJGZvcm0tZmVlZGJhY2staWNvbi1pbnZhbGlkOiAgICAgICAgc3RyLXJlcGxhY2UodXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIGZpbGw9JyN7JGZvcm0tZmVlZGJhY2staWNvbi1pbnZhbGlkLWNvbG9yfScgdmlld0JveD0nLTIgLTIgNyA3JyUzZSUzY3BhdGggc3Ryb2tlPSclMjNkOTUzNGYnIGQ9J00wIDBsMyAzbTAtM0wwIDMnLyUzZSUzY2NpcmNsZSByPScuNScvJTNlJTNjY2lyY2xlIGN4PSczJyByPScuNScvJTNlJTNjY2lyY2xlIGN5PSczJyByPScuNScvJTNlJTNjY2lyY2xlIGN4PSczJyBjeT0nMycgcj0nLjUnLyUzZSUzYy9zdmclM0VcIiksIFwiI1wiLCBcIiUyM1wiKSAhZGVmYXVsdDtcblxuXG4vLyBEcm9wZG93bnNcbi8vXG4vLyBEcm9wZG93biBtZW51IGNvbnRhaW5lciBhbmQgY29udGVudHMuXG5cbiRkcm9wZG93bi1taW4td2lkdGg6ICAgICAgICAgICAgICAgIDEwcmVtICFkZWZhdWx0O1xuJGRyb3Bkb3duLXBhZGRpbmcteTogICAgICAgICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XG4kZHJvcGRvd24tc3BhY2VyOiAgICAgICAgICAgICAgICAgICAuMTI1cmVtICFkZWZhdWx0O1xuJGRyb3Bkb3duLWJnOiAgICAgICAgICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xuJGRyb3Bkb3duLWJvcmRlci1jb2xvcjogICAgICAgICAgICAgcmdiYSgkYmxhY2ssIC4xNSkgIWRlZmF1bHQ7XG4kZHJvcGRvd24tYm9yZGVyLXJhZGl1czogICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcbiRkcm9wZG93bi1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XG4kZHJvcGRvd24taW5uZXItYm9yZGVyLXJhZGl1czogICAgICBjYWxjKCN7JGRyb3Bkb3duLWJvcmRlci1yYWRpdXN9IC0gI3skZHJvcGRvd24tYm9yZGVyLXdpZHRofSkgIWRlZmF1bHQ7XG4kZHJvcGRvd24tZGl2aWRlci1iZzogICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XG4kZHJvcGRvd24tYm94LXNoYWRvdzogICAgICAgICAgICAgICAwIC41cmVtIDFyZW0gcmdiYSgkYmxhY2ssIC4xNzUpICFkZWZhdWx0O1xuXG4kZHJvcGRvd24tbGluay1jb2xvcjogICAgICAgICAgICAgICAkZ3JheS05MDAgIWRlZmF1bHQ7XG4kZHJvcGRvd24tbGluay1ob3Zlci1jb2xvcjogICAgICAgICBkYXJrZW4oJGdyYXktOTAwLCA1JSkgIWRlZmF1bHQ7XG4kZHJvcGRvd24tbGluay1ob3Zlci1iZzogICAgICAgICAgICAkZ3JheS0xMDAgIWRlZmF1bHQ7XG5cbiRkcm9wZG93bi1saW5rLWFjdGl2ZS1jb2xvcjogICAgICAgICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xuJGRyb3Bkb3duLWxpbmstYWN0aXZlLWJnOiAgICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XG5cbiRkcm9wZG93bi1saW5rLWRpc2FibGVkLWNvbG9yOiAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcblxuJGRyb3Bkb3duLWl0ZW0tcGFkZGluZy15OiAgICAgICAgICAgLjI1cmVtICFkZWZhdWx0O1xuJGRyb3Bkb3duLWl0ZW0tcGFkZGluZy14OiAgICAgICAgICAgMS41cmVtICFkZWZhdWx0O1xuXG4kZHJvcGRvd24taGVhZGVyLWNvbG9yOiAgICAgICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XG5cblxuLy8gWi1pbmRleCBtYXN0ZXIgbGlzdFxuLy9cbi8vIFdhcm5pbmc6IEF2b2lkIGN1c3RvbWl6aW5nIHRoZXNlIHZhbHVlcy4gVGhleSdyZSB1c2VkIGZvciBhIGJpcmQncyBleWUgdmlld1xuLy8gb2YgY29tcG9uZW50cyBkZXBlbmRlbnQgb24gdGhlIHotYXhpcyBhbmQgYXJlIGRlc2lnbmVkIHRvIGFsbCB3b3JrIHRvZ2V0aGVyLlxuXG4kemluZGV4LWRyb3Bkb3duOiAgICAgICAgICAgICAgICAgICAxMDAwICFkZWZhdWx0O1xuJHppbmRleC1zdGlja3k6ICAgICAgICAgICAgICAgICAgICAgMTAyMCAhZGVmYXVsdDtcbiR6aW5kZXgtZml4ZWQ6ICAgICAgICAgICAgICAgICAgICAgIDEwMzAgIWRlZmF1bHQ7XG4kemluZGV4LW1vZGFsLWJhY2tkcm9wOiAgICAgICAgICAgICAxMDQwICFkZWZhdWx0O1xuJHppbmRleC1tb2RhbDogICAgICAgICAgICAgICAgICAgICAgMTA1MCAhZGVmYXVsdDtcbiR6aW5kZXgtcG9wb3ZlcjogICAgICAgICAgICAgICAgICAgIDEwNjAgIWRlZmF1bHQ7XG4kemluZGV4LXRvb2x0aXA6ICAgICAgICAgICAgICAgICAgICAxMDcwICFkZWZhdWx0O1xuXG5cbi8vIE5hdnNcblxuJG5hdi1saW5rLXBhZGRpbmcteTogICAgICAgICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XG4kbmF2LWxpbmstcGFkZGluZy14OiAgICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xuJG5hdi1saW5rLWRpc2FibGVkLWNvbG9yOiAgICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xuXG4kbmF2LXRhYnMtYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICAkZ3JheS0zMDAgIWRlZmF1bHQ7XG4kbmF2LXRhYnMtYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xuJG5hdi10YWJzLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG4kbmF2LXRhYnMtbGluay1ob3Zlci1ib3JkZXItY29sb3I6ICAkZ3JheS0yMDAgJGdyYXktMjAwICRuYXYtdGFicy1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XG4kbmF2LXRhYnMtbGluay1hY3RpdmUtY29sb3I6ICAgICAgICAkZ3JheS03MDAgIWRlZmF1bHQ7XG4kbmF2LXRhYnMtbGluay1hY3RpdmUtYmc6ICAgICAgICAgICAkYm9keS1iZyAhZGVmYXVsdDtcbiRuYXYtdGFicy1saW5rLWFjdGl2ZS1ib3JkZXItY29sb3I6ICRncmF5LTMwMCAkZ3JheS0zMDAgJG5hdi10YWJzLWxpbmstYWN0aXZlLWJnICFkZWZhdWx0O1xuXG4kbmF2LXBpbGxzLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcbiRuYXYtcGlsbHMtbGluay1hY3RpdmUtY29sb3I6ICAgICAgICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xuJG5hdi1waWxscy1saW5rLWFjdGl2ZS1iZzogICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XG5cbiRuYXYtZGl2aWRlci1jb2xvcjogICAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcbiRuYXYtZGl2aWRlci1tYXJnaW4teTogICAgICAgICAgICAgICRzcGFjZXIgLyAyICFkZWZhdWx0O1xuXG5cbi8vIE5hdmJhclxuXG4kbmF2YmFyLXBhZGRpbmcteTogICAgICAgICAgICAgICAgICAkc3BhY2VyIC8gMiAhZGVmYXVsdDtcbiRuYXZiYXItcGFkZGluZy14OiAgICAgICAgICAgICAgICAgICRzcGFjZXIgIWRlZmF1bHQ7XG5cbiRuYXZiYXItbmF2LWxpbmstcGFkZGluZy14OiAgICAgICAgIC41cmVtICFkZWZhdWx0O1xuXG4kbmF2YmFyLWJyYW5kLWZvbnQtc2l6ZTogICAgICAgICAgICAkZm9udC1zaXplLWxnICFkZWZhdWx0O1xuLy8gQ29tcHV0ZSB0aGUgbmF2YmFyLWJyYW5kIHBhZGRpbmcteSBzbyB0aGUgbmF2YmFyLWJyYW5kIHdpbGwgaGF2ZSB0aGUgc2FtZSBoZWlnaHQgYXMgbmF2YmFyLXRleHQgYW5kIG5hdi1saW5rXG4kbmF2LWxpbmstaGVpZ2h0OiAgICAgICAgICAgICAgICAgICAkZm9udC1zaXplLWJhc2UgKiAkbGluZS1oZWlnaHQtYmFzZSArICRuYXYtbGluay1wYWRkaW5nLXkgKiAyICFkZWZhdWx0O1xuJG5hdmJhci1icmFuZC1oZWlnaHQ6ICAgICAgICAgICAgICAgJG5hdmJhci1icmFuZC1mb250LXNpemUgKiAkbGluZS1oZWlnaHQtYmFzZSAhZGVmYXVsdDtcbiRuYXZiYXItYnJhbmQtcGFkZGluZy15OiAgICAgICAgICAgICgkbmF2LWxpbmstaGVpZ2h0IC0gJG5hdmJhci1icmFuZC1oZWlnaHQpIC8gMiAhZGVmYXVsdDtcblxuJG5hdmJhci10b2dnbGVyLXBhZGRpbmcteTogICAgICAgICAgLjI1cmVtICFkZWZhdWx0O1xuJG5hdmJhci10b2dnbGVyLXBhZGRpbmcteDogICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xuJG5hdmJhci10b2dnbGVyLWZvbnQtc2l6ZTogICAgICAgICAgJGZvbnQtc2l6ZS1sZyAhZGVmYXVsdDtcbiRuYXZiYXItdG9nZ2xlci1ib3JkZXItcmFkaXVzOiAgICAgICRidG4tYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcblxuJG5hdmJhci1kYXJrLWNvbG9yOiAgICAgICAgICAgICAgICAgcmdiYSgkd2hpdGUsIC41KSAhZGVmYXVsdDtcbiRuYXZiYXItZGFyay1ob3Zlci1jb2xvcjogICAgICAgICAgIHJnYmEoJHdoaXRlLCAuNzUpICFkZWZhdWx0O1xuJG5hdmJhci1kYXJrLWFjdGl2ZS1jb2xvcjogICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xuJG5hdmJhci1kYXJrLWRpc2FibGVkLWNvbG9yOiAgICAgICAgcmdiYSgkd2hpdGUsIC4yNSkgIWRlZmF1bHQ7XG4kbmF2YmFyLWRhcmstdG9nZ2xlci1pY29uLWJnOiAgICAgICBzdHItcmVwbGFjZSh1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNjc3ZnIHZpZXdCb3g9JzAgMCAzMCAzMCcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyUzZSUzY3BhdGggc3Ryb2tlPScjeyRuYXZiYXItZGFyay1jb2xvcn0nIHN0cm9rZS13aWR0aD0nMicgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbWl0ZXJsaW1pdD0nMTAnIGQ9J000IDdoMjJNNCAxNWgyMk00IDIzaDIyJy8lM2UlM2Mvc3ZnJTNlXCIpLCBcIiNcIiwgXCIlMjNcIikgIWRlZmF1bHQ7XG4kbmF2YmFyLWRhcmstdG9nZ2xlci1ib3JkZXItY29sb3I6ICByZ2JhKCR3aGl0ZSwgLjEpICFkZWZhdWx0O1xuXG4kbmF2YmFyLWxpZ2h0LWNvbG9yOiAgICAgICAgICAgICAgICByZ2JhKCRibGFjaywgLjUpICFkZWZhdWx0O1xuJG5hdmJhci1saWdodC1ob3Zlci1jb2xvcjogICAgICAgICAgcmdiYSgkYmxhY2ssIC43KSAhZGVmYXVsdDtcbiRuYXZiYXItbGlnaHQtYWN0aXZlLWNvbG9yOiAgICAgICAgIHJnYmEoJGJsYWNrLCAuOSkgIWRlZmF1bHQ7XG4kbmF2YmFyLWxpZ2h0LWRpc2FibGVkLWNvbG9yOiAgICAgICByZ2JhKCRibGFjaywgLjMpICFkZWZhdWx0O1xuJG5hdmJhci1saWdodC10b2dnbGVyLWljb24tYmc6ICAgICAgc3RyLXJlcGxhY2UodXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB2aWV3Qm94PScwIDAgMzAgMzAnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyclM2UlM2NwYXRoIHN0cm9rZT0nI3skbmF2YmFyLWxpZ2h0LWNvbG9yfScgc3Ryb2tlLXdpZHRoPScyJyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1taXRlcmxpbWl0PScxMCcgZD0nTTQgN2gyMk00IDE1aDIyTTQgMjNoMjInLyUzZSUzYy9zdmclM2VcIiksIFwiI1wiLCBcIiUyM1wiKSAhZGVmYXVsdDtcbiRuYXZiYXItbGlnaHQtdG9nZ2xlci1ib3JkZXItY29sb3I6IHJnYmEoJGJsYWNrLCAuMSkgIWRlZmF1bHQ7XG5cbiRuYXZiYXItbGlnaHQtYnJhbmQtY29sb3I6ICAgICAgICAgICAgICAgICRuYXZiYXItbGlnaHQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xuJG5hdmJhci1saWdodC1icmFuZC1ob3Zlci1jb2xvcjogICAgICAgICAgJG5hdmJhci1saWdodC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XG4kbmF2YmFyLWRhcmstYnJhbmQtY29sb3I6ICAgICAgICAgICAgICAgICAkbmF2YmFyLWRhcmstYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xuJG5hdmJhci1kYXJrLWJyYW5kLWhvdmVyLWNvbG9yOiAgICAgICAgICAgJG5hdmJhci1kYXJrLWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcblxuXG4vLyBQYWdpbmF0aW9uXG5cbiRwYWdpbmF0aW9uLXBhZGRpbmcteTogICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tcGFkZGluZy14OiAgICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tcGFkZGluZy15LXNtOiAgICAgICAgICAgLjI1cmVtICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tcGFkZGluZy14LXNtOiAgICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1wYWRkaW5nLXktbGc6ICAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1wYWRkaW5nLXgtbGc6ICAgICAgICAgICAxLjVyZW0gIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1saW5lLWhlaWdodDogICAgICAgICAgICAxLjI1ICFkZWZhdWx0O1xuXG4kcGFnaW5hdGlvbi1jb2xvcjogICAgICAgICAgICAgICAgICAkbGluay1jb2xvciAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWJnOiAgICAgICAgICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWJvcmRlci13aWR0aDogICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1ib3JkZXItY29sb3I6ICAgICAgICAgICAkZ3JheS0zMDAgIWRlZmF1bHQ7XG5cbiRwYWdpbmF0aW9uLWZvY3VzLWJveC1zaGFkb3c6ICAgICAgICRpbnB1dC1idG4tZm9jdXMtYm94LXNoYWRvdyAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWZvY3VzLW91dGxpbmU6ICAgICAgICAgIDAgIWRlZmF1bHQ7XG5cbiRwYWdpbmF0aW9uLWhvdmVyLWNvbG9yOiAgICAgICAgICAgICRsaW5rLWhvdmVyLWNvbG9yICFkZWZhdWx0O1xuJHBhZ2luYXRpb24taG92ZXItYmc6ICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xuJHBhZ2luYXRpb24taG92ZXItYm9yZGVyLWNvbG9yOiAgICAgJGdyYXktMzAwICFkZWZhdWx0O1xuXG4kcGFnaW5hdGlvbi1hY3RpdmUtY29sb3I6ICAgICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWFjdGl2ZS1iZzogICAgICAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWJnICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tYWN0aXZlLWJvcmRlci1jb2xvcjogICAgJHBhZ2luYXRpb24tYWN0aXZlLWJnICFkZWZhdWx0O1xuXG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1jb2xvcjogICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1iZzogICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1ib3JkZXItY29sb3I6ICAkZ3JheS0zMDAgIWRlZmF1bHQ7XG5cblxuLy8gSnVtYm90cm9uXG5cbiRqdW1ib3Ryb24tcGFkZGluZzogICAgICAgICAgICAgICAgIDJyZW0gIWRlZmF1bHQ7XG4kanVtYm90cm9uLWJnOiAgICAgICAgICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XG5cblxuLy8gQ2FyZHNcblxuJGNhcmQtc3BhY2VyLXk6ICAgICAgICAgICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xuJGNhcmQtc3BhY2VyLXg6ICAgICAgICAgICAgICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcbiRjYXJkLWJvcmRlci13aWR0aDogICAgICAgICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XG4kY2FyZC1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcbiRjYXJkLWJvcmRlci1jb2xvcjogICAgICAgICAgICAgICAgIHJnYmEoJGJsYWNrLCAuMTI1KSAhZGVmYXVsdDtcbiRjYXJkLWlubmVyLWJvcmRlci1yYWRpdXM6ICAgICAgICAgIGNhbGMoI3skY2FyZC1ib3JkZXItcmFkaXVzfSAtICN7JGNhcmQtYm9yZGVyLXdpZHRofSkgIWRlZmF1bHQ7XG4kY2FyZC1jYXAtYmc6ICAgICAgICAgICAgICAgICAgICAgICByZ2JhKCRibGFjaywgLjAzKSAhZGVmYXVsdDtcbiRjYXJkLWNhcC1jb2xvcjogICAgICAgICAgICAgICAgICAgIGluaGVyaXQgIWRlZmF1bHQ7XG4kY2FyZC1iZzogICAgICAgICAgICAgICAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XG5cbiRjYXJkLWltZy1vdmVybGF5LXBhZGRpbmc6ICAgICAgICAgIDEuMjVyZW0gIWRlZmF1bHQ7XG5cbiRjYXJkLWdyb3VwLW1hcmdpbjogICAgICAgICAgICAgICAgICRncmlkLWd1dHRlci13aWR0aCAvIDIgIWRlZmF1bHQ7XG4kY2FyZC1kZWNrLW1hcmdpbjogICAgICAgICAgICAgICAgICAkY2FyZC1ncm91cC1tYXJnaW4gIWRlZmF1bHQ7XG5cbiRjYXJkLWNvbHVtbnMtY291bnQ6ICAgICAgICAgICAgICAgIDMgIWRlZmF1bHQ7XG4kY2FyZC1jb2x1bW5zLWdhcDogICAgICAgICAgICAgICAgICAxLjI1cmVtICFkZWZhdWx0O1xuJGNhcmQtY29sdW1ucy1tYXJnaW46ICAgICAgICAgICAgICAgJGNhcmQtc3BhY2VyLXkgIWRlZmF1bHQ7XG5cblxuLy8gVG9vbHRpcHNcblxuJHRvb2x0aXAtZm9udC1zaXplOiAgICAgICAgICAgICAgICAgJGZvbnQtc2l6ZS1zbSAhZGVmYXVsdDtcbiR0b29sdGlwLW1heC13aWR0aDogICAgICAgICAgICAgICAgIDIwMHB4ICFkZWZhdWx0O1xuJHRvb2x0aXAtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xuJHRvb2x0aXAtYmc6ICAgICAgICAgICAgICAgICAgICAgICAgJGJsYWNrICFkZWZhdWx0O1xuJHRvb2x0aXAtYm9yZGVyLXJhZGl1czogICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG4kdG9vbHRpcC1vcGFjaXR5OiAgICAgICAgICAgICAgICAgICAuOSAhZGVmYXVsdDtcbiR0b29sdGlwLXBhZGRpbmcteTogICAgICAgICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcbiR0b29sdGlwLXBhZGRpbmcteDogICAgICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xuJHRvb2x0aXAtbWFyZ2luOiAgICAgICAgICAgICAgICAgICAgMCAhZGVmYXVsdDtcblxuJHRvb2x0aXAtYXJyb3ctd2lkdGg6ICAgICAgICAgICAgICAgLjhyZW0gIWRlZmF1bHQ7XG4kdG9vbHRpcC1hcnJvdy1oZWlnaHQ6ICAgICAgICAgICAgICAuNHJlbSAhZGVmYXVsdDtcbiR0b29sdGlwLWFycm93LWNvbG9yOiAgICAgICAgICAgICAgICR0b29sdGlwLWJnICFkZWZhdWx0O1xuXG4vLyBGb3JtIHRvb2x0aXBzIG11c3QgY29tZSBhZnRlciByZWd1bGFyIHRvb2x0aXBzXG4kZm9ybS1mZWVkYmFjay10b29sdGlwLXBhZGRpbmcteTogICAgICR0b29sdGlwLXBhZGRpbmcteSAhZGVmYXVsdDtcbiRmb3JtLWZlZWRiYWNrLXRvb2x0aXAtcGFkZGluZy14OiAgICAgJHRvb2x0aXAtcGFkZGluZy14ICFkZWZhdWx0O1xuJGZvcm0tZmVlZGJhY2stdG9vbHRpcC1mb250LXNpemU6ICAgICAkdG9vbHRpcC1mb250LXNpemUgIWRlZmF1bHQ7XG4kZm9ybS1mZWVkYmFjay10b29sdGlwLWxpbmUtaGVpZ2h0OiAgICRsaW5lLWhlaWdodC1iYXNlICFkZWZhdWx0O1xuJGZvcm0tZmVlZGJhY2stdG9vbHRpcC1vcGFjaXR5OiAgICAgICAkdG9vbHRpcC1vcGFjaXR5ICFkZWZhdWx0O1xuJGZvcm0tZmVlZGJhY2stdG9vbHRpcC1ib3JkZXItcmFkaXVzOiAkdG9vbHRpcC1ib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuXG5cbi8vIFBvcG92ZXJzXG5cbiRwb3BvdmVyLWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgICRmb250LXNpemUtc20gIWRlZmF1bHQ7XG4kcG9wb3Zlci1iZzogICAgICAgICAgICAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XG4kcG9wb3Zlci1tYXgtd2lkdGg6ICAgICAgICAgICAgICAgICAyNzZweCAhZGVmYXVsdDtcbiRwb3BvdmVyLWJvcmRlci13aWR0aDogICAgICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XG4kcG9wb3Zlci1ib3JkZXItY29sb3I6ICAgICAgICAgICAgICByZ2JhKCRibGFjaywgLjIpICFkZWZhdWx0O1xuJHBvcG92ZXItYm9yZGVyLXJhZGl1czogICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMtbGcgIWRlZmF1bHQ7XG4kcG9wb3Zlci1ib3gtc2hhZG93OiAgICAgICAgICAgICAgICAwIC4yNXJlbSAuNXJlbSByZ2JhKCRibGFjaywgLjIpICFkZWZhdWx0O1xuXG4kcG9wb3Zlci1oZWFkZXItYmc6ICAgICAgICAgICAgICAgICBkYXJrZW4oJHBvcG92ZXItYmcsIDMlKSAhZGVmYXVsdDtcbiRwb3BvdmVyLWhlYWRlci1jb2xvcjogICAgICAgICAgICAgICRoZWFkaW5ncy1jb2xvciAhZGVmYXVsdDtcbiRwb3BvdmVyLWhlYWRlci1wYWRkaW5nLXk6ICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xuJHBvcG92ZXItaGVhZGVyLXBhZGRpbmcteDogICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xuXG4kcG9wb3Zlci1ib2R5LWNvbG9yOiAgICAgICAgICAgICAgICAkYm9keS1jb2xvciAhZGVmYXVsdDtcbiRwb3BvdmVyLWJvZHktcGFkZGluZy15OiAgICAgICAgICAgICRwb3BvdmVyLWhlYWRlci1wYWRkaW5nLXkgIWRlZmF1bHQ7XG4kcG9wb3Zlci1ib2R5LXBhZGRpbmcteDogICAgICAgICAgICAkcG9wb3Zlci1oZWFkZXItcGFkZGluZy14ICFkZWZhdWx0O1xuXG4kcG9wb3Zlci1hcnJvdy13aWR0aDogICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xuJHBvcG92ZXItYXJyb3ctaGVpZ2h0OiAgICAgICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XG4kcG9wb3Zlci1hcnJvdy1jb2xvcjogICAgICAgICAgICAgICAkcG9wb3Zlci1iZyAhZGVmYXVsdDtcblxuJHBvcG92ZXItYXJyb3ctb3V0ZXItY29sb3I6ICAgICAgICAgZmFkZS1pbigkcG9wb3Zlci1ib3JkZXItY29sb3IsIC4wNSkgIWRlZmF1bHQ7XG5cblxuLy8gVG9hc3RzXG4kdG9hc3QtbWF4LXdpZHRoOiAzNTBweCAhZGVmYXVsdDtcbiR0b2FzdC1wYWRkaW5nLXg6IC43NXJlbSAhZGVmYXVsdDtcbiR0b2FzdC1wYWRkaW5nLXk6IC4yNXJlbSAhZGVmYXVsdDtcbiR0b2FzdC1mb250LXNpemU6IC44NzVyZW0gIWRlZmF1bHQ7XG4kdG9hc3QtYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkd2hpdGUsIC44NSkgIWRlZmF1bHQ7XG4kdG9hc3QtYm9yZGVyLXdpZHRoOiAxcHggIWRlZmF1bHQ7XG4kdG9hc3QtYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIC4xKSAhZGVmYXVsdDtcbiR0b2FzdC1ib3JkZXItcmFkaXVzOiAuMjVyZW0gIWRlZmF1bHQ7XG4kdG9hc3QtYm94LXNoYWRvdzogMCAuMjVyZW0gLjc1cmVtIHJnYmEoJGJsYWNrLCAuMSkgIWRlZmF1bHQ7XG5cbiR0b2FzdC1oZWFkZXItY29sb3I6ICRncmF5LTYwMCAhZGVmYXVsdDtcbiR0b2FzdC1oZWFkZXItYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkd2hpdGUsIC44NSkgIWRlZmF1bHQ7XG4kdG9hc3QtaGVhZGVyLWJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAuMDUpICFkZWZhdWx0O1xuXG5cbi8vIEJhZGdlc1xuXG4kYmFkZ2UtZm9udC1zaXplOiAgICAgICAgICAgICAgICAgICA3NSUgIWRlZmF1bHQ7XG4kYmFkZ2UtZm9udC13ZWlnaHQ6ICAgICAgICAgICAgICAgICAkZm9udC13ZWlnaHQtYm9sZCAhZGVmYXVsdDtcbiRiYWRnZS1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAgIC4yNWVtICFkZWZhdWx0O1xuJGJhZGdlLXBhZGRpbmcteDogICAgICAgICAgICAgICAgICAgLjRlbSAhZGVmYXVsdDtcbiRiYWRnZS1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuXG4kYmFkZ2UtcGlsbC1wYWRkaW5nLXg6ICAgICAgICAgICAgICAuNmVtICFkZWZhdWx0O1xuLy8gVXNlIGEgaGlnaGVyIHRoYW4gbm9ybWFsIHZhbHVlIHRvIGVuc3VyZSBjb21wbGV0ZWx5IHJvdW5kZWQgZWRnZXMgd2hlblxuLy8gY3VzdG9taXppbmcgcGFkZGluZyBvciBmb250LXNpemUgb24gbGFiZWxzLlxuJGJhZGdlLXBpbGwtYm9yZGVyLXJhZGl1czogICAgICAgICAgMTByZW0gIWRlZmF1bHQ7XG5cblxuLy8gTW9kYWxzXG5cbi8vIFBhZGRpbmcgYXBwbGllZCB0byB0aGUgbW9kYWwgYm9keVxuJG1vZGFsLWlubmVyLXBhZGRpbmc6ICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcblxuJG1vZGFsLWRpYWxvZy1tYXJnaW46ICAgICAgICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XG4kbW9kYWwtZGlhbG9nLW1hcmdpbi15LXNtLXVwOiAgICAgICAxLjc1cmVtICFkZWZhdWx0O1xuXG4kbW9kYWwtdGl0bGUtbGluZS1oZWlnaHQ6ICAgICAgICAgICAkbGluZS1oZWlnaHQtYmFzZSAhZGVmYXVsdDtcblxuJG1vZGFsLWNvbnRlbnQtYmc6ICAgICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xuJG1vZGFsLWNvbnRlbnQtYm9yZGVyLWNvbG9yOiAgICAgICAgcmdiYSgkYmxhY2ssIC4yKSAhZGVmYXVsdDtcbiRtb2RhbC1jb250ZW50LWJvcmRlci13aWR0aDogICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XG4kbW9kYWwtY29udGVudC1ib3JkZXItcmFkaXVzOiAgICAgICAkYm9yZGVyLXJhZGl1cy1sZyAhZGVmYXVsdDtcbiRtb2RhbC1jb250ZW50LWJveC1zaGFkb3cteHM6ICAgICAgIDAgLjI1cmVtIC41cmVtIHJnYmEoJGJsYWNrLCAuNSkgIWRlZmF1bHQ7XG4kbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXNtLXVwOiAgICAwIC41cmVtIDFyZW0gcmdiYSgkYmxhY2ssIC41KSAhZGVmYXVsdDtcblxuJG1vZGFsLWJhY2tkcm9wLWJnOiAgICAgICAgICAgICAgICAgJGJsYWNrICFkZWZhdWx0O1xuJG1vZGFsLWJhY2tkcm9wLW9wYWNpdHk6ICAgICAgICAgICAgLjUgIWRlZmF1bHQ7XG4kbW9kYWwtaGVhZGVyLWJvcmRlci1jb2xvcjogICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XG4kbW9kYWwtZm9vdGVyLWJvcmRlci1jb2xvcjogICAgICAgICAkbW9kYWwtaGVhZGVyLWJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiRtb2RhbC1oZWFkZXItYm9yZGVyLXdpZHRoOiAgICAgICAgICRtb2RhbC1jb250ZW50LWJvcmRlci13aWR0aCAhZGVmYXVsdDtcbiRtb2RhbC1mb290ZXItYm9yZGVyLXdpZHRoOiAgICAgICAgICRtb2RhbC1oZWFkZXItYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xuJG1vZGFsLWhlYWRlci1wYWRkaW5nLXk6ICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcbiRtb2RhbC1oZWFkZXItcGFkZGluZy14OiAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XG4kbW9kYWwtaGVhZGVyLXBhZGRpbmc6ICAgICAgICAgICAgICAkbW9kYWwtaGVhZGVyLXBhZGRpbmcteSAkbW9kYWwtaGVhZGVyLXBhZGRpbmcteCAhZGVmYXVsdDsgLy8gS2VlcCB0aGlzIGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxuXG4kbW9kYWwteGw6ICAgICAgICAgICAgICAgICAgICAgICAgICAxMTQwcHggIWRlZmF1bHQ7XG4kbW9kYWwtbGc6ICAgICAgICAgICAgICAgICAgICAgICAgICA4MDBweCAhZGVmYXVsdDtcbiRtb2RhbC1tZDogICAgICAgICAgICAgICAgICAgICAgICAgIDUwMHB4ICFkZWZhdWx0O1xuJG1vZGFsLXNtOiAgICAgICAgICAgICAgICAgICAgICAgICAgMzAwcHggIWRlZmF1bHQ7XG5cbiRtb2RhbC1mYWRlLXRyYW5zZm9ybTogICAgICAgICAgICAgIHRyYW5zbGF0ZSgwLCAtNTBweCkgIWRlZmF1bHQ7XG4kbW9kYWwtc2hvdy10cmFuc2Zvcm06ICAgICAgICAgICAgICBub25lICFkZWZhdWx0O1xuJG1vZGFsLXRyYW5zaXRpb246ICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtIC4zcyBlYXNlLW91dCAhZGVmYXVsdDtcblxuXG4vLyBBbGVydHNcbi8vXG4vLyBEZWZpbmUgYWxlcnQgY29sb3JzLCBib3JkZXIgcmFkaXVzLCBhbmQgcGFkZGluZy5cblxuJGFsZXJ0LXBhZGRpbmcteTogICAgICAgICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xuJGFsZXJ0LXBhZGRpbmcteDogICAgICAgICAgICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcbiRhbGVydC1tYXJnaW4tYm90dG9tOiAgICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XG4kYWxlcnQtYm9yZGVyLXJhZGl1czogICAgICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcbiRhbGVydC1saW5rLWZvbnQtd2VpZ2h0OiAgICAgICAgICAgICRmb250LXdlaWdodC1ib2xkICFkZWZhdWx0O1xuJGFsZXJ0LWJvcmRlci13aWR0aDogICAgICAgICAgICAgICAgJGJvcmRlci13aWR0aCAhZGVmYXVsdDtcblxuJGFsZXJ0LWJnLWxldmVsOiAgICAgICAgICAgICAgICAgICAgLTEwICFkZWZhdWx0O1xuJGFsZXJ0LWJvcmRlci1sZXZlbDogICAgICAgICAgICAgICAgLTkgIWRlZmF1bHQ7XG4kYWxlcnQtY29sb3ItbGV2ZWw6ICAgICAgICAgICAgICAgICA2ICFkZWZhdWx0O1xuXG5cbi8vIFByb2dyZXNzIGJhcnNcblxuJHByb2dyZXNzLWhlaWdodDogICAgICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcbiRwcm9ncmVzcy1mb250LXNpemU6ICAgICAgICAgICAgICAgICgkZm9udC1zaXplLWJhc2UgKiAuNzUpICFkZWZhdWx0O1xuJHByb2dyZXNzLWJnOiAgICAgICAgICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xuJHByb2dyZXNzLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG4kcHJvZ3Jlc3MtYm94LXNoYWRvdzogICAgICAgICAgICAgICBpbnNldCAwIC4xcmVtIC4xcmVtIHJnYmEoJGJsYWNrLCAuMSkgIWRlZmF1bHQ7XG4kcHJvZ3Jlc3MtYmFyLWNvbG9yOiAgICAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XG4kcHJvZ3Jlc3MtYmFyLWJnOiAgICAgICAgICAgICAgICAgICB0aGVtZS1jb2xvcihcInByaW1hcnlcIikgIWRlZmF1bHQ7XG4kcHJvZ3Jlc3MtYmFyLWFuaW1hdGlvbi10aW1pbmc6ICAgICAxcyBsaW5lYXIgaW5maW5pdGUgIWRlZmF1bHQ7XG4kcHJvZ3Jlc3MtYmFyLXRyYW5zaXRpb246ICAgICAgICAgICB3aWR0aCAuNnMgZWFzZSAhZGVmYXVsdDtcblxuXG4vLyBMaXN0IGdyb3VwXG5cbiRsaXN0LWdyb3VwLWJnOiAgICAgICAgICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWJvcmRlci1jb2xvcjogICAgICAgICAgIHJnYmEoJGJsYWNrLCAuMTI1KSAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWJvcmRlci13aWR0aDogICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1ib3JkZXItcmFkaXVzOiAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcblxuJGxpc3QtZ3JvdXAtaXRlbS1wYWRkaW5nLXk6ICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xuJGxpc3QtZ3JvdXAtaXRlbS1wYWRkaW5nLXg6ICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcblxuJGxpc3QtZ3JvdXAtaG92ZXItYmc6ICAgICAgICAgICAgICAgJGdyYXktMTAwICFkZWZhdWx0O1xuJGxpc3QtZ3JvdXAtYWN0aXZlLWNvbG9yOiAgICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1hY3RpdmUtYmc6ICAgICAgICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWFjdGl2ZS1ib3JkZXItY29sb3I6ICAgICRsaXN0LWdyb3VwLWFjdGl2ZS1iZyAhZGVmYXVsdDtcblxuJGxpc3QtZ3JvdXAtZGlzYWJsZWQtY29sb3I6ICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xuJGxpc3QtZ3JvdXAtZGlzYWJsZWQtYmc6ICAgICAgICAgICAgJGxpc3QtZ3JvdXAtYmcgIWRlZmF1bHQ7XG5cbiRsaXN0LWdyb3VwLWFjdGlvbi1jb2xvcjogICAgICAgICAgICRncmF5LTcwMCAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWFjdGlvbi1ob3Zlci1jb2xvcjogICAgICRsaXN0LWdyb3VwLWFjdGlvbi1jb2xvciAhZGVmYXVsdDtcblxuJGxpc3QtZ3JvdXAtYWN0aW9uLWFjdGl2ZS1jb2xvcjogICAgJGJvZHktY29sb3IgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1hY3Rpb24tYWN0aXZlLWJnOiAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XG5cblxuLy8gSW1hZ2UgdGh1bWJuYWlsc1xuXG4kdGh1bWJuYWlsLXBhZGRpbmc6ICAgICAgICAgICAgICAgICAuMjVyZW0gIWRlZmF1bHQ7XG4kdGh1bWJuYWlsLWJnOiAgICAgICAgICAgICAgICAgICAgICAkYm9keS1iZyAhZGVmYXVsdDtcbiR0aHVtYm5haWwtYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XG4kdGh1bWJuYWlsLWJvcmRlci1jb2xvcjogICAgICAgICAgICAkZ3JheS0zMDAgIWRlZmF1bHQ7XG4kdGh1bWJuYWlsLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcbiR0aHVtYm5haWwtYm94LXNoYWRvdzogICAgICAgICAgICAgIDAgMXB4IDJweCByZ2JhKCRibGFjaywgLjA3NSkgIWRlZmF1bHQ7XG5cblxuLy8gRmlndXJlc1xuXG4kZmlndXJlLWNhcHRpb24tZm9udC1zaXplOiAgICAgICAgICA5MCUgIWRlZmF1bHQ7XG4kZmlndXJlLWNhcHRpb24tY29sb3I6ICAgICAgICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XG5cblxuLy8gQnJlYWRjcnVtYnNcblxuJGJyZWFkY3J1bWItcGFkZGluZy15OiAgICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xuJGJyZWFkY3J1bWItcGFkZGluZy14OiAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcbiRicmVhZGNydW1iLWl0ZW0tcGFkZGluZzogICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xuXG4kYnJlYWRjcnVtYi1tYXJnaW4tYm90dG9tOiAgICAgICAgICAxcmVtICFkZWZhdWx0O1xuXG4kYnJlYWRjcnVtYi1iZzogICAgICAgICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XG4kYnJlYWRjcnVtYi1kaXZpZGVyLWNvbG9yOiAgICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XG4kYnJlYWRjcnVtYi1hY3RpdmUtY29sb3I6ICAgICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XG4kYnJlYWRjcnVtYi1kaXZpZGVyOiAgICAgICAgICAgICAgICBxdW90ZShcIi9cIikgIWRlZmF1bHQ7XG5cbiRicmVhZGNydW1iLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuXG5cbi8vIENhcm91c2VsXG5cbiRjYXJvdXNlbC1jb250cm9sLWNvbG9yOiAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XG4kY2Fyb3VzZWwtY29udHJvbC13aWR0aDogICAgICAgICAgICAgMTUlICFkZWZhdWx0O1xuJGNhcm91c2VsLWNvbnRyb2wtb3BhY2l0eTogICAgICAgICAgIC41ICFkZWZhdWx0O1xuJGNhcm91c2VsLWNvbnRyb2wtaG92ZXItb3BhY2l0eTogICAgIC45ICFkZWZhdWx0O1xuJGNhcm91c2VsLWNvbnRyb2wtdHJhbnNpdGlvbjogICAgICAgIG9wYWNpdHkgLjE1cyBlYXNlICFkZWZhdWx0O1xuXG4kY2Fyb3VzZWwtaW5kaWNhdG9yLXdpZHRoOiAgICAgICAgICAgMzBweCAhZGVmYXVsdDtcbiRjYXJvdXNlbC1pbmRpY2F0b3ItaGVpZ2h0OiAgICAgICAgICAzcHggIWRlZmF1bHQ7XG4kY2Fyb3VzZWwtaW5kaWNhdG9yLWhpdC1hcmVhLWhlaWdodDogMTBweCAhZGVmYXVsdDtcbiRjYXJvdXNlbC1pbmRpY2F0b3Itc3BhY2VyOiAgICAgICAgICAzcHggIWRlZmF1bHQ7XG4kY2Fyb3VzZWwtaW5kaWNhdG9yLWFjdGl2ZS1iZzogICAgICAgJHdoaXRlICFkZWZhdWx0O1xuJGNhcm91c2VsLWluZGljYXRvci10cmFuc2l0aW9uOiAgICAgIG9wYWNpdHkgLjZzIGVhc2UgIWRlZmF1bHQ7XG5cbiRjYXJvdXNlbC1jYXB0aW9uLXdpZHRoOiAgICAgICAgICAgICA3MCUgIWRlZmF1bHQ7XG4kY2Fyb3VzZWwtY2FwdGlvbi1jb2xvcjogICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xuXG4kY2Fyb3VzZWwtY29udHJvbC1pY29uLXdpZHRoOiAgICAgICAgMjBweCAhZGVmYXVsdDtcblxuJGNhcm91c2VsLWNvbnRyb2wtcHJldi1pY29uLWJnOiAgICAgIHN0ci1yZXBsYWNlKHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyBmaWxsPScjeyRjYXJvdXNlbC1jb250cm9sLWNvbG9yfScgdmlld0JveD0nMCAwIDggOCclM2UlM2NwYXRoIGQ9J001LjI1IDBsLTQgNCA0IDQgMS41LTEuNS0yLjUtMi41IDIuNS0yLjUtMS41LTEuNXonLyUzZSUzYy9zdmclM2VcIiksIFwiI1wiLCBcIiUyM1wiKSAhZGVmYXVsdDtcbiRjYXJvdXNlbC1jb250cm9sLW5leHQtaWNvbi1iZzogICAgICBzdHItcmVwbGFjZSh1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNjc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgZmlsbD0nI3skY2Fyb3VzZWwtY29udHJvbC1jb2xvcn0nIHZpZXdCb3g9JzAgMCA4IDgnJTNlJTNjcGF0aCBkPSdNMi43NSAwbC0xLjUgMS41IDIuNSAyLjUtMi41IDIuNSAxLjUgMS41IDQtNC00LTR6Jy8lM2UlM2Mvc3ZnJTNlXCIpLCBcIiNcIiwgXCIlMjNcIikgIWRlZmF1bHQ7XG5cbiRjYXJvdXNlbC10cmFuc2l0aW9uLWR1cmF0aW9uOiAgICAgICAuNnMgIWRlZmF1bHQ7XG4kY2Fyb3VzZWwtdHJhbnNpdGlvbjogICAgICAgICAgICAgICAgdHJhbnNmb3JtICRjYXJvdXNlbC10cmFuc2l0aW9uLWR1cmF0aW9uIGVhc2UtaW4tb3V0ICFkZWZhdWx0OyAvLyBEZWZpbmUgdHJhbnNmb3JtIHRyYW5zaXRpb24gZmlyc3QgaWYgdXNpbmcgbXVsdGlwbGUgdHJhbnNpdGlvbnMgKGUuZy4sIGB0cmFuc2Zvcm0gMnMgZWFzZSwgb3BhY2l0eSAuNXMgZWFzZS1vdXRgKVxuXG5cbi8vIFNwaW5uZXJzXG5cbiRzcGlubmVyLXdpZHRoOiAgICAgICAgIDJyZW0gIWRlZmF1bHQ7XG4kc3Bpbm5lci1oZWlnaHQ6ICAgICAgICAkc3Bpbm5lci13aWR0aCAhZGVmYXVsdDtcbiRzcGlubmVyLWJvcmRlci13aWR0aDogIC4yNWVtICFkZWZhdWx0O1xuXG4kc3Bpbm5lci13aWR0aC1zbTogICAgICAgIDFyZW0gIWRlZmF1bHQ7XG4kc3Bpbm5lci1oZWlnaHQtc206ICAgICAgICRzcGlubmVyLXdpZHRoLXNtICFkZWZhdWx0O1xuJHNwaW5uZXItYm9yZGVyLXdpZHRoLXNtOiAuMmVtICFkZWZhdWx0O1xuXG5cbi8vIENsb3NlXG5cbiRjbG9zZS1mb250LXNpemU6ICAgICAgICAgICAgICAgICAgICRmb250LXNpemUtYmFzZSAqIDEuNSAhZGVmYXVsdDtcbiRjbG9zZS1mb250LXdlaWdodDogICAgICAgICAgICAgICAgICRmb250LXdlaWdodC1ib2xkICFkZWZhdWx0O1xuJGNsb3NlLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgJGJsYWNrICFkZWZhdWx0O1xuJGNsb3NlLXRleHQtc2hhZG93OiAgICAgICAgICAgICAgICAgMCAxcHggMCAkd2hpdGUgIWRlZmF1bHQ7XG5cblxuLy8gQ29kZVxuXG4kY29kZS1mb250LXNpemU6ICAgICAgICAgICAgICAgICAgICA4Ny41JSAhZGVmYXVsdDtcbiRjb2RlLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgICRwaW5rICFkZWZhdWx0O1xuXG4ka2JkLXBhZGRpbmcteTogICAgICAgICAgICAgICAgICAgICAuMnJlbSAhZGVmYXVsdDtcbiRrYmQtcGFkZGluZy14OiAgICAgICAgICAgICAgICAgICAgIC40cmVtICFkZWZhdWx0O1xuJGtiZC1mb250LXNpemU6ICAgICAgICAgICAgICAgICAgICAgJGNvZGUtZm9udC1zaXplICFkZWZhdWx0O1xuJGtiZC1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xuJGtiZC1iZzogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGdyYXktOTAwICFkZWZhdWx0O1xuXG4kcHJlLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgICAkZ3JheS05MDAgIWRlZmF1bHQ7XG4kcHJlLXNjcm9sbGFibGUtbWF4LWhlaWdodDogICAgICAgICAzNDBweCAhZGVmYXVsdDtcblxuXG4vLyBVdGlsaXRpZXNcblxuJG92ZXJmbG93czogYXV0bywgaGlkZGVuICFkZWZhdWx0O1xuJHBvc2l0aW9uczogc3RhdGljLCByZWxhdGl2ZSwgYWJzb2x1dGUsIGZpeGVkLCBzdGlja3kgIWRlZmF1bHQ7XG5cblxuLy8gUHJpbnRpbmdcblxuJHByaW50LXBhZ2Utc2l6ZTogICAgICAgICAgICAgICAgICAgYTMgIWRlZmF1bHQ7XG4kcHJpbnQtYm9keS1taW4td2lkdGg6ICAgICAgICAgICAgICBtYXAtZ2V0KCRncmlkLWJyZWFrcG9pbnRzLCBcImxnXCIpICFkZWZhdWx0O1xuIiwiLy8gSG92ZXIgbWl4aW4gYW5kIGAkZW5hYmxlLWhvdmVyLW1lZGlhLXF1ZXJ5YCBhcmUgZGVwcmVjYXRlZC5cbi8vXG4vLyBPcmlnaW5hbGx5IGFkZGVkIGR1cmluZyBvdXIgYWxwaGFzIGFuZCBtYWludGFpbmVkIGR1cmluZyBiZXRhcywgdGhpcyBtaXhpbiB3YXNcbi8vIGRlc2lnbmVkIHRvIHByZXZlbnQgYDpob3ZlcmAgc3RpY2tpbmVzcyBvbiBpT1MtYW4gaXNzdWUgd2hlcmUgaG92ZXIgc3R5bGVzXG4vLyB3b3VsZCBwZXJzaXN0IGFmdGVyIGluaXRpYWwgdG91Y2guXG4vL1xuLy8gRm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHksIHdlJ3ZlIGtlcHQgdGhlc2UgbWl4aW5zIGFuZCB1cGRhdGVkIHRoZW0gdG9cbi8vIGFsd2F5cyByZXR1cm4gdGhlaXIgcmVndWxhciBwc2V1ZG8tY2xhc3NlcyBpbnN0ZWFkIG9mIGEgc2hpbW1lZCBtZWRpYSBxdWVyeS5cbi8vXG4vLyBJc3N1ZTogaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2lzc3Vlcy8yNTE5NVxuXG5AbWl4aW4gaG92ZXIge1xuICAmOmhvdmVyIHsgQGNvbnRlbnQ7IH1cbn1cblxuQG1peGluIGhvdmVyLWZvY3VzIHtcbiAgJjpob3ZlcixcbiAgJjpmb2N1cyB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIHBsYWluLWhvdmVyLWZvY3VzIHtcbiAgJixcbiAgJjpob3ZlcixcbiAgJjpmb2N1cyB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIGhvdmVyLWZvY3VzLWFjdGl2ZSB7XG4gICY6aG92ZXIsXG4gICY6Zm9jdXMsXG4gICY6YWN0aXZlIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuIiwiLy8gc3R5bGVsaW50LWRpc2FibGUgcHJvcGVydHktYmxhY2tsaXN0XG5AbWl4aW4gdHJhbnNpdGlvbigkdHJhbnNpdGlvbi4uLikge1xuICBAaWYgJGVuYWJsZS10cmFuc2l0aW9ucyB7XG4gICAgQGlmIGxlbmd0aCgkdHJhbnNpdGlvbikgPT0gMCB7XG4gICAgICB0cmFuc2l0aW9uOiAkdHJhbnNpdGlvbi1iYXNlO1xuICAgIH0gQGVsc2Uge1xuICAgICAgdHJhbnNpdGlvbjogJHRyYW5zaXRpb247XG4gICAgfVxuICB9XG5cbiAgQGlmICRlbmFibGUtcHJlZmVycy1yZWR1Y2VkLW1vdGlvbi1tZWRpYS1xdWVyeSB7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSkge1xuICAgICAgdHJhbnNpdGlvbjogbm9uZTtcbiAgICB9XG4gIH1cbn1cbiJdfQ== */\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"edit-client\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"edit-client-title\\\" aria-hidden=\\\"true\\\">\\r\\n\\t<div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t<h1 class=\\\"h4 modal-title text-xs-left fw-bold mt\\\" id=\\\"edit-client-title\\\">Edit Client</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Body-->\\r\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t<form id=\\\"editclientform\\\" #editclientform=\\\"ngForm\\\" role=\\\"form\\\" class=\\\"form-horizontal\\\" data-parsley-priority-enabled=\\\"false\\\" novalidate=\\\"novalidate\\\"\\r\\n\\t\\t\\t\\t\\tdata-parsley-validate data-parsley-focus=\\\"first\\\">\\r\\n\\t\\t\\t\\t\\t<!-- Name -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Name\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"editClient.name\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: Name is required\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- Account -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"cli-acc\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Account\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select required [(ngModel)]=\\\"editClient.accountId\\\" title=\\\"Account\\\" name=\\\"Account\\\" class=\\\"form-control fdatable\\\" id=\\\"cli-acc\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Select Account\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tdata-parsley-required-message=\\\"Error: Account is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<option></option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let acc of lstAccounts\\\" [ngValue]=\\\"acc.accountId\\\">{{acc.name}}</option>\\r\\n\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Active         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"enabled\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control form-checkbox\\\" id=\\\"enabled\\\" [(ngModel)]=\\\"clientenabled\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div aria-live=\\\"assertive\\\">\\r\\n\\t\\t\\t\\t<div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</alert>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Footer-->\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" id=\\\"btn-save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateClient(editClient)\\\">Save Client</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reset(false)\\\">Cancel</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnDestroy, OnInit, ViewEncapsulation, AfterViewInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport * as _ from \"lodash\";\r\nimport { saveAs } from 'file-saver';\r\nimport { Subscription } from \"rxjs\";\r\nimport * as XLSX from 'xlsx';\r\nimport { AdminService } from '../../services/admin.service';\r\nimport { PipelineProject } from '../../models/pipeline.model';\r\n\r\ndeclare var jQuery: any;\r\n\r\n// con\r\n@Component({\r\n  selector: \"importpipe-dashboard\",\r\n  templateUrl: \"./importpipe-dashboard.template.html\",\r\n  styleUrls: [\"./importpipe-dashboard.styles.scss\"],\r\n  providers: [AdminService],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ImportPipeDashboardPage implements OnInit, OnDestroy, AfterViewInit {\r\n  public router: Router;\r\n  public data: any[];\r\n  public lstProjects: PipelineProject[]\r\n  public adminCount: number;\r\n  public selLCATGroupId: number;\r\n\r\n  public toggleProjectImportStatusTitle: string = \"Imported Pipeline Project Status\";\r\n  public toggleProjectImportStatusMessage: string = \"Are you sure you want to toggle Imported Pipeline Project Status?\";\r\n  public confirmClicked: boolean = false;\r\n  public cancelClicked: boolean = false;\r\n\r\n  public busyLoadPipelineProjects: Subscription;\r\n  public busyImportingProjectsFromPipeline: Subscription;\r\n  public busyTogglePipelineProjectStatus: Subscription;\r\n\r\n  public showErrorFlag: boolean;\r\n  public alerts: Array<Object>;\r\n  public columns:Array<any> = [\r\n    {name: 'flag', type: 'none'}\r\n  ];\r\n\r\n  constructor(\r\n        private adminService: AdminService,\r\n        router: Router) {\r\n    this.alerts = [\r\n      {\r\n        type: \"success\",\r\n        msg:\r\n          '<i class=\"fa fa-circle text-success\"></i><span class=\"alert-text\">Successfully generated 12 monthly reports</span>'\r\n      }\r\n    ];\r\n\r\n    this.router = router;\r\n  }\r\n\r\n  ngOnInit() {\r\n    let searchInput = jQuery(\"#table-search-input, #search-countries\");\r\n    searchInput\r\n      .focus(e => {\r\n        jQuery(e.target)\r\n          .closest(\".input-group\")\r\n          .addClass(\"focus\");\r\n      })\r\n      .focusout(e => {\r\n        jQuery(e.target)\r\n          .closest(\".input-group\")\r\n          .removeClass(\"focus\");\r\n      });\r\n\r\n      this.loadImportedPipelineProjects();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.busyLoadPipelineProjects) {\r\n      this.busyLoadPipelineProjects.unsubscribe();\r\n    }\r\n    if(this.busyImportingProjectsFromPipeline){\r\n      this.busyImportingProjectsFromPipeline.unsubscribe();\r\n    }\r\n    if(this.busyTogglePipelineProjectStatus){\r\n      this.busyTogglePipelineProjectStatus.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    for(let col of this.columns){\r\n        if(col.filtering){\r\n            this.cosmeticFix('#filter-' + col.name);\r\n        }\r\n    }\r\n  }\r\n\r\n  public cosmeticFix(elementID: any){\r\n    // The code below for cosmetic fix - Blue box now surrounds the icon on the search company text box\r\n    let filterInput = jQuery(elementID);\r\n    filterInput\r\n    .focus((e) => {\r\n        jQuery(e.target).closest('.input-group').addClass('focus');\r\n    })\r\n    .focusout((e) => {\r\n        jQuery(e.target).closest('.input-group').removeClass('focus');\r\n    });\r\n  }\r\n\r\n  private loadImportedPipelineProjects() {\r\n    let that = this;\r\n    this.busyLoadPipelineProjects = this.adminService.getImportedPipelineProjects().subscribe(projdata => {\r\n      if (projdata) {\r\n        that.data = projdata;\r\n      }\r\n    }, error => {\r\n      this.showErrorFlag = true;\r\n      this.alerts = [];\r\n      this.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n  public toggleProjectImportStatus(selproj: PipelineProject){\r\n    let that = this;\r\n\r\n    this.busyTogglePipelineProjectStatus = this.adminService.togglePipelineProjectImportStatus(selproj).subscribe(projdata => {\r\n      if (projdata) {\r\n        that.loadImportedPipelineProjects();\r\n      }\r\n    }, error => {\r\n      this.showErrorFlag = true;\r\n      this.alerts = [];\r\n      this.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n  public addimportproject(selproj: PipelineProject){\r\n    let that = this;\r\n\r\n    this.busyImportingProjectsFromPipeline = this.adminService.addPipelineProject(selproj).subscribe(projdata => {\r\n      if (projdata) {\r\n        that.loadImportedPipelineProjects();\r\n      }\r\n    }, error => {\r\n      this.showErrorFlag = true;\r\n      this.alerts = [];\r\n      this.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n\r\n  public importPipelineProjects(){\r\n    let that = this;\r\n\r\n    this.busyImportingProjectsFromPipeline = this.adminService.addRemainingPipelineProjects().subscribe(projdata => {\r\n      if (projdata) {\r\n        that.loadImportedPipelineProjects();\r\n      }\r\n    }, error => {\r\n      this.showErrorFlag = true;\r\n      this.alerts = [];\r\n      this.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n  private s2ab(s) {\r\n    let buf = new ArrayBuffer(s.length);\r\n    let view = new Uint8Array(buf);\r\n    for (var i=0; i !== s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\r\n    return buf;\r\n  }\r\n\r\n  public exportLaborCategoriesReport(data:any, filename, sheetName){\r\n    let ws:XLSX.WorkSheet = XLSX.utils.json_to_sheet(data);\r\n    let wb:XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n\r\n    /* save to file */\r\n    let wbout: string = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });\r\n    saveAs(new Blob([this.s2ab(wbout)]), filename);\r\n  }\r\n\r\n  public downloadLaborCategories(){\r\n    this.exportLaborCategoriesReport(this.data, 'laborcat-report.xlsx', 'Labor Categories');\r\n  }\r\n\r\n  public onChangeTable(filterinfo):void {\r\n      // if(filterinfo){\r\n      //     if(filterinfo.columnName === \"code\"){\r\n      //         this.laborcatfilter.codeFilter = filterinfo.filterString;\r\n      //         this.laborcatfilter.codeFilter = this.laborcatfilter.codeFilter.trim();\r\n      //     }\r\n      //     if(filterinfo.refresh){\r\n      //         this.refreshLaborCatFilterObject();\r\n      //     }\r\n      // }\r\n  }\r\n\r\n  public FilterSelectionChanged(event, filterColumnName){\r\n  }\r\n\r\n  public ApplyFilter(){\r\n      // this.refreshLaborCatFilterObject();\r\n  }\r\n\r\n\r\n  public updateFilterTextBox(colName, colText){\r\n      let rowIndex = _.findIndex(this.columns, function (o) { return (o.name && o.name.toString() === colName)});\r\n      if(rowIndex !== -1) {\r\n          let selRow = this.columns[rowIndex];\r\n          if(selRow.filtering){\r\n              selRow.filtering.filterString = colText;\r\n          }\r\n      }\r\n  }\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid #ddd; }\\n.userdashboardController {\\n  width: 98%; }\\n.inactive {\\n  text-decoration: line-through; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<h1 class=\\\"h4 page-title hd-bdr\\\">Pipeline Projects Imported</h1>\\r\\n<div data-ng-controller=\\\"laborcatdashboardController\\\" class=\\\"laborcatdashboardController\\\">\\r\\n    <div aria-live=\\\"assertive\\\">\\r\\n        <div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n                        <alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n                            <div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n                        </alert>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-10\\\">\\r\\n            <section class=\\\"widget h-divider\\\" widget>\\r\\n                <div class=\\\"widget-body\\\">\\r\\n                    <div class=\\\"row\\\" style=\\\"margin-bottom: 20px;\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                                <!-- <div class=\\\"form-group row\\\">\\r\\n                                    <label for=\\\"tdl-pop\\\" class=\\\"col-md-6 form-control-label text-md-right mt10\\\">\\r\\n                                        Imported Pipeline Projects\\r\\n                                    </label>\\r\\n                                    <div role=\\\"alert\\\" class=\\\"col-md-6 col-xs-12\\\">\\r\\n                                        <select required class=\\\"form-control\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"selLCATGroupId\\\"\\r\\n                                            [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"onLCATGroupChanged($event.target.value)\\\"\\r\\n                                            data-parsley-required-message=\\\"Error: Reference Type is required\\\">\\r\\n                                            <option *ngFor=\\\"let lg of lcatGroups\\\" [value]=\\\"lg.groupId\\\">{{lg.name}}</option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                </div> -->\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-offset-1 col-md-4\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <div class=\\\"pull-right\\\">\\r\\n                                <button id=\\\"btn-cr-user\\\" type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" title=\\\"Import Projects\\\"\\r\\n                                    [ngBusy]=\\\"{busy: busyImportingProjectsFromPipeline, message: 'Importing Projects From Pipeline...', backdrop: false}\\\"\\r\\n                                    (click)=\\\"importPipelineProjects()\\\">\\r\\n                                    <i class=\\\"glyphicon glyphicon-plus\\\"></i>\\r\\n                                    Import Projects\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <table class=\\\"table table-hover\\\" [mfData]=\\\"data\\\" [ngBusy]=\\\"{busy: busyLoadPipelineProjects, message: 'Loading Imported Pipeline Projects...', backdrop: false}\\\"\\r\\n                        #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"25\\\" [mfActivePage]=\\\"1\\\" [mfIsServerPagination]=\\\"false\\\" style=\\\"cursor: pointer;\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th></th>\\r\\n                                <th class=\\\"hidden-sm-down\\\">\\r\\n                                    <mfDefaultSorter by=\\\"projectName\\\" title=\\\"Code\\\">Project</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"accountName\\\" title=\\\"Client\\\">Client</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"offerPortfolio\\\" title=\\\"Client\\\">OP</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th class=\\\"hidden-sm-down\\\">\\r\\n                                    <mfDefaultSorter by=\\\"startDate\\\" title=\\\"Start Date\\\">Start Date</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th class=\\\"hidden-sm-down\\\">\\r\\n                                    <mfDefaultSorter by=\\\"endDate\\\" title=\\\"End Date\\\">End Date</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th class=\\\"hidden-sm-down\\\">\\r\\n                                    <mfDefaultSorter by=\\\"deliveryManager\\\" title=\\\"CDM\\\">CDM</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th class=\\\"hidden-sm-down\\\">\\r\\n                                    <mfDefaultSorter by=\\\"headCountEstimate\\\" title=\\\"Headcount\\\">Headcount</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th class=\\\"hidden-sm-down\\\">\\r\\n                                    <mfDefaultSorter by=\\\"winPercent\\\" title=\\\"Probability\\\">Probability</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th class=\\\"hidden-sm-down\\\">\\r\\n                                    <mfDefaultSorter by=\\\"status\\\" title=\\\"Status\\\">Status</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr>\\r\\n                                <td *ngFor=\\\"let column of columns\\\">\\r\\n                                    <div *ngIf=\\\"column.filtering\\\" class=\\\"input-group input-group-transparent input-group-rounded\\\">\\r\\n                                        <span class=\\\"input-group-addon\\\">\\r\\n                                            <i class=\\\"fa fa-filter\\\" (click)=\\\"ApplyFilter();\\\"></i>\\r\\n                                        </span>\\r\\n                                        <input *ngIf=\\\"column.type==='input'\\\" [attr.id]=\\\"'filter-' + column.name\\\"\\r\\n                                            [ngTableFiltering]=\\\"column.filtering\\\" [config]=\\\"column.filtering\\\" class=\\\"form-control\\\"\\r\\n                                            [style.width.px]=\\\"column?.width\\\" placeholder=\\\"{{column.filtering.placeholder}}\\\"\\r\\n                                            value=\\\"{{column.filtering.filterString}}\\\" (tableChanged)=\\\"onChangeTable($event)\\\" />\\r\\n                                        <select *ngIf=\\\"column.type==='select'\\\" [attr.id]=\\\"'filter-' + column.name\\\"\\r\\n                                            class=\\\"form-control\\\" (change)=\\\"FilterSelectionChanged($event.target.value, column.name)\\\">\\r\\n                                            <option *ngFor=\\\"let option of column.options\\\" [selected]=\\\"(option.value === column.defaultvalue)\\\"\\r\\n                                                [value]=\\\"option.value\\\">\\r\\n                                                {{option.name}}\\r\\n                                            </option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr *ngFor=\\\"let proj of mf.data; let i= index\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                <td>\\r\\n                                    <i *ngIf=\\\"proj.processed !== 'Y'\\\"  class=\\\"glyphicon glyphicon-plus\\\" (click)=\\\"addimportproject(proj)\\\" data-toggle=\\\"modal\\\"\\r\\n                                        data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\" data-target=\\\"#edit-laborcat\\\"></i>\\r\\n                                </td>\\r\\n                                <td><span [ngClass]=\\\"{'inactive': proj.processed === 'Y'}\\\">{{proj.projectName}}</span></td>\\r\\n                                <td><span [ngClass]=\\\"{'inactive': proj.processed === 'Y'}\\\">{{proj.accountName}}</span></td>\\r\\n                                <td><span [ngClass]=\\\"{'inactive': proj.processed === 'Y'}\\\">{{proj.offerPortfolio}}</span></td>\\r\\n                                <td><span [ngClass]=\\\"{'inactive': proj.processed === 'Y'}\\\">{{proj.startDate}}</span></td>\\r\\n                                <td><span [ngClass]=\\\"{'inactive': proj.processed === 'Y'}\\\">{{proj.endDate}}</span></td>\\r\\n                                <td><span [ngClass]=\\\"{'inactive': proj.processed === 'Y'}\\\">{{proj.deliveryManager}}</span></td>\\r\\n                                <td><span [ngClass]=\\\"{'inactive': proj.processed === 'Y'}\\\">{{proj.headCountEstimate}}</span></td>\\r\\n                                <td><span [ngClass]=\\\"{'inactive': proj.processed === 'Y'}\\\">{{proj.winPercent}}</span></td>\\r\\n                                <td><span [ngClass]=\\\"{'inactive': proj.processed === 'Y'}\\\">{{proj.status}}</span></td>\\r\\n                                <td>\\r\\n                                    <i class=\\\"glyphicon glyphicon-off txt-gap\\\" mwlConfirmationPopover [popoverTitle]=\\\"toggleProjectImportStatusTitle\\\"\\r\\n                                        [popoverMessage]=\\\"toggleProjectImportStatusMessage\\\" placement=\\\"left\\\" (confirm)=\\\"toggleProjectImportStatus(proj)\\\"\\r\\n                                        (cancel)=\\\"cancelClicked = true\\\">\\r\\n                                    </i>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        <tfoot>\\r\\n                            <tr>\\r\\n                                <td colspan=\\\"12\\\">\\r\\n                                    <mfBootstrapPaginator [rowsOnPageSet]=\\\"[15, 25, 50]\\\"></mfBootstrapPaginator>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tfoot>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </section>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","/*\r\n@author : Deloitte\r\nthis is Component for creating a labor category\r\n*/\r\nimport { Component, Output, EventEmitter, ViewEncapsulation, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { CodeValue } from '../../../tdl/models/codevalue.model';\r\nimport { LaborCategory } from '../../models/laborcat.model';\r\nimport { LaborCategoryService } from '../../services/laborcat.service';\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: '[create-laborcat-popup]',\r\n  templateUrl: './create-laborcat-popup.template.html',\r\n  styleUrls: ['./create-laborcat-popup.styles.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class CreateLaborCatPopup\r\n * @implements {OnInit}\r\n */\r\n\r\nexport class CreateLaborCatPopup implements OnInit, OnDestroy {\r\n  @Output() reloadLaborCategories = new EventEmitter<boolean>();\r\n  @Input() LCATGroupId;\r\n\r\n  public router: Router;\r\n  public showErrorFlag: boolean;\r\n  public alerts: Array<Object>;\r\n  public laborCat = new LaborCategory();\r\n  public busy: Subscription;\r\n  public busyLoadLaborCategories:Subscription;\r\n  public busyLoadSkills: Subscription;\r\n\r\n  public userenabled: boolean;\r\n  public laborCategories: LaborCategory[] = [];\r\n  public listSkills: CodeValue[]=[];\r\n\r\n  constructor(router: Router,\r\n    private _laborCatService: LaborCategoryService\r\n  ) {\r\n    this.router = router;\r\n\r\n    this.alerts = [\r\n      {\r\n        type: 'warning',\r\n        msg: '<span class=\"fw-semi-bold\">Warning:</span> Placeholder for Error Validation messages'\r\n      }\r\n    ];\r\n\r\n    this.showErrorFlag = false;\r\n\r\n    this.showLaborCategories();\r\n    this.loadLCATSkills();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.busy) {\r\n      this.busy.unsubscribe();\r\n    }\r\n    if(this.busyLoadSkills){\r\n      this.busyLoadSkills.unsubscribe();\r\n    }\r\n    if(this.busyLoadLaborCategories){\r\n      this.busyLoadLaborCategories.unsubscribe();\r\n    }\r\n  }\r\n\r\n  // Create a new Labor Cat\r\n  public createLaborCat(laborCat: LaborCategory) {\r\n    jQuery('#addlaborcatform').parsley().validate();\r\n\r\n    // Toggle to edit mode or navigate to the next screen if validation passes\r\n    if (jQuery('#addlaborcatform').parsley().isValid()) {\r\n\r\n      laborCat.groupId = this.LCATGroupId;\r\n      this.busy = this._laborCatService.saveLaborCategory(laborCat).subscribe(data => {\r\n        if (data) {\r\n          this.reset(true);\r\n          this.reloadLaborCategories.emit(true);\r\n        }\r\n      }, error => {\r\n          this.showErrorFlag = true;\r\n          this.alerts = [];\r\n          this.alerts.push({ type: 'warning', msg: error });\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  public reset(flag) {\r\n    jQuery('#create-laborcat').on('hidden').find('#code').val('');\r\n    jQuery('#create-laborcat').on('hidden').find('#description').val('');\r\n    jQuery(\"#create-laborcat\").on(\"hidden\").find(\"#base-rate\").val(\"\");\r\n    jQuery(\"#create-laborcat\").on(\"hidden\").find(\"#op1-rate\").val(\"\");\r\n    jQuery(\"#create-laborcat\").on(\"hidden\").find(\"#op2-rate\").val(\"\");\r\n    jQuery(\"#create-laborcat\").on(\"hidden\").find(\"#op3-rate\").val(\"\");\r\n    jQuery(\"#create-laborcat\").on(\"hidden\").find(\"#op4-rate\").val(\"\");\r\n    jQuery(\"#create-laborcat\").on(\"hidden\").find(\"#op5-rate\").val(\"\");\r\n    jQuery('#addlaborcatform').parsley().reset();\r\n    jQuery('#create-laborcat').modal('hide');\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n  public loadLCATSkills(){\r\n  \t\tthis._laborCatService.getAllLCATSkills().subscribe(data => {\r\n        this.listSkills = data;\r\n      },\r\n      error => {\r\n  \t\t\t\tthis.showErrorFlag = true;\r\n  \t\t\t\tthis.alerts = [];\r\n  \t\t\t\tthis.alerts.push({ type: \"warning\", msg: error });\r\n  \t\t\t}\r\n  \t\t);\r\n  \t}\r\n\r\n  public showLaborCategories() {\r\n\t\tthis.busyLoadLaborCategories = this._laborCatService.getAll().subscribe(data => {\r\n      this.laborCategories = data;\r\n    },\r\n    error => {\r\n\t\t\t\tthis.showErrorFlag = true;\r\n\t\t\t\tthis.alerts = [];\r\n\t\t\t\tthis.alerts.push({ type: \"warning\", msg: error });\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-divider {\\n  width: 100%;\\n  border-bottom: 3px solid #778899; }\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid gray;\\n  padding-bottom: 10px; }\\ninput.parsley-error {\\n  border-color: #d9534f;\\n  box-shadow: inset 0 1px 1px rgba(217, 83, 79, 0.075); }\\n.parsley-errors-list {\\n  font-size: 85%;\\n  padding-left: 0;\\n  margin-bottom: 5px; }\\n.parsley-errors-list li {\\n    list-style: none;\\n    color: #d9534f; }\\n.switch {\\n  box-sizing: content-box;\\n  margin-left: -20px; }\\n.switch i {\\n  display: inline-block;\\n  cursor: pointer;\\n  margin-left: -20px;\\n  margin-bottom: -3px;\\n  padding-right: 20px;\\n  transition: all ease 0.2s;\\n  -webkit-transition: all ease 0.2s;\\n  border-radius: 20px;\\n  box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.5); }\\n.switch i:before {\\n  display: block;\\n  content: '';\\n  width: 30px;\\n  height: 30px;\\n  padding: 1px;\\n  border-radius: 20px;\\n  background: white;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }\\n.switch :checked + i {\\n  padding-right: 0;\\n  padding-left: 20px;\\n  background: #64bd63; }\\n.white, .white a {\\n  color: #fff; }\\n.btn-label {\\n  background: transparent;\\n  left: 2px;\\n  padding: 1px 6px; }\\n.md-editor {\\n  display: block;\\n  border: 1px solid #dee2e6; }\\n.md-editor > .md-header, .md-editor .md-footer {\\n    display: block;\\n    padding: 6px 4px;\\n    background: #f5f5f5; }\\n.md-editor > .md-header {\\n    margin: 0; }\\n.md-editor > .md-header .glyphicon {\\n      top: 3px; }\\n.md-editor > .md-preview {\\n    margin-left: -1px;\\n    margin-right: -1px;\\n    padding: 0.5rem 1rem;\\n    background: #fff;\\n    border-top: 1px dashed #dee2e6;\\n    min-height: 10px; }\\n.md-editor > textarea {\\n    font-family: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n    font-size: 1rem;\\n    outline: 0;\\n    outline: thin dotted  \\\\9;\\n    /* IE6-9 */\\n    margin: 0;\\n    display: block;\\n    width: 100%;\\n    border: 0;\\n    border-top: 1px dashed #dee2e6;\\n    border-radius: 0;\\n    box-shadow: none;\\n    background: #dee2e6; }\\n.md-editor > textarea:focus {\\n      box-shadow: none;\\n      background: #fff; }\\n.md-editor.active {\\n    border-color: #4d90fe;\\n    outline: 0; }\\n/**\\r\\n * Bootstrap select\\r\\n */\\n.selectpicker.form-control {\\n  height: auto; }\\n.bootstrap-select .dropdown-toggle {\\n  padding-left: 10px; }\\n.bootstrap-select .dropdown-toggle:after {\\n    margin-right: 0;\\n    margin-left: 0; }\\n.bootstrap-select .dropdown-menu > li > a {\\n  display: block;\\n  width: 100%;\\n  padding: 3px 20px;\\n  clear: both;\\n  font-weight: normal;\\n  line-height: 1.42857143;\\n  color: #555;\\n  text-align: inherit;\\n  white-space: nowrap;\\n  background: none;\\n  border: 0; }\\n.bootstrap-select .dropdown-menu > li > a:hover, .bootstrap-select .dropdown-menu > li > a:focus {\\n    color: #171717;\\n    text-decoration: none;\\n    background-color: #f5f5f5; }\\n.bootstrap-select .dropdown-menu > li > a.active, .bootstrap-select .dropdown-menu > li > a.active:hover, .bootstrap-select .dropdown-menu > li > a.active:focus {\\n    color: #fff;\\n    text-decoration: none;\\n    background-color: #5d8fc2;\\n    outline: 0; }\\n.bootstrap-select .dropdown-menu > li > a.disabled, .bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    color: #868e96; }\\n.bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    text-decoration: none;\\n    cursor: not-allowed;\\n    background-color: transparent;\\n    background-image: none; }\\n/**\\r\\n*  autosize\\r\\n**/\\n/***********************************/\\n/**          NEWS LIST           **/\\n/**********************************/\\n.news-list {\\n  margin-bottom: 0;\\n  padding-left: 0; }\\n.news-list li {\\n    list-style: none;\\n    box-sizing: content-box;\\n    border-top: 1px solid #eeeeee;\\n    padding: 12px;\\n    cursor: pointer;\\n    -webkit-transition: background-color 0.2s ease-out;\\n    transition: background-color 0.2s ease-out; }\\n@media screen and (prefers-reduced-motion: reduce) {\\n      .news-list li {\\n        -webkit-transition: none;\\n        transition: none; } }\\n.news-list li:hover {\\n      background: #dbdbdb; }\\n.news-list li:last-child {\\n      margin-bottom: -10px; }\\n.news-list img,\\n  .news-list .icon {\\n    float: left;\\n    height: 50px;\\n    width: 50px; }\\n.news-list .icon {\\n    line-height: 50px;\\n    border-radius: 50%;\\n    text-align: center;\\n    font-size: 28px; }\\n.news-list .news-item-info {\\n    margin-left: 62px;\\n    /*50 + 12px padding*/ }\\n.news-list .name {\\n    text-transform: uppercase; }\\n.news-list .name a {\\n      text-decoration: none; }\\n.news-list .name a:hover {\\n        color: #218bc3; }\\n.autogrow {\\n  overflow: hidden;\\n  resize: none; }\\n.form-checkbox {\\n  margin-left: 5px;\\n  width: 20px;\\n  height: 20px;\\n  box-shadow: none; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"create-laborcat\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"create-laborcat-title\\\" aria-hidden=\\\"true\\\">\\r\\n\\t<div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t<h1 class=\\\"h4 modal-title text-xs-left fw-bold mt\\\" id=\\\"create-laborcat-title\\\">Add Labor Category</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Body-->\\r\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t<form id=\\\"addlaborcatform\\\" #addlaborcatform=\\\"ngForm\\\" role=\\\"form\\\" class=\\\"form-horizontal\\\" data-parsley-priority-enabled=\\\"false\\\" novalidate=\\\"novalidate\\\"\\r\\n\\t\\t\\t\\t\\tdata-parsley-validate data-parsley-focus=\\\"first\\\">\\r\\n\\t\\t\\t\\t\\t<!-- Code -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"code\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Code\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"code\\\" [(ngModel)]=\\\"laborCat.code\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: Code is required\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- Description -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Description\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" [(ngModel)]=\\\"laborCat.description\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: Description is required\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- Primary Skill -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"res-skill\\\" class=\\\"col-md-4 form-control-label text-md-right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tPrimary Skill\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select required [(ngModel)]=\\\"laborCat.skillCode\\\" title=\\\"Primary Skill\\\" name=\\\"primary-skill\\\" class=\\\"form-control fdatable\\\" id=\\\"res-lead\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Select Team Lead\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdata-parsley-required-message=\\\"Error: Primary skill is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option></option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let res of listSkills\\\" [ngValue]=\\\"res.code\\\">{{res.value}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- Base Rate -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"base-rate\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Base Rate\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"base-rate\\\" [(ngModel)]=\\\"laborCat.baseRate\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tdata-parsley-required-message=\\\"Error: Base Rate is required\\\" ng-pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" step=\\\"0.01\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- OP1 Rate Rate -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"op1-rate\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">OP1 Rate\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"op1-rate\\\" [(ngModel)]=\\\"laborCat.op1Rate\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tdata-parsley-required-message=\\\"Error: OP1 Rate is required\\\" ng-pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" step=\\\"0.01\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- OP2 Rate Rate -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"op2-rate\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">OP2 Rate\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"op2-rate\\\" [(ngModel)]=\\\"laborCat.op2Rate\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tdata-parsley-required-message=\\\"Error: OP2 Rate is required\\\" ng-pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" step=\\\"0.01\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- OP3 Rate Rate -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"op3-rate\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">OP3 Rate\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"op3-rate\\\" [(ngModel)]=\\\"laborCat.op3Rate\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tdata-parsley-required-message=\\\"Error: OP3 Rate is required\\\" ng-pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" step=\\\"0.01\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t<!-- OP4 Rate Rate -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"op4-rate\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">OP4 Rate\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"op4-rate\\\" [(ngModel)]=\\\"laborCat.op4Rate\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tdata-parsley-required-message=\\\"Error: OP4 Rate is required\\\" ng-pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" step=\\\"0.01\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t<!-- OP5 Rate Rate -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"op5-rate\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">OP5 Rate\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"op5-rate\\\" [(ngModel)]=\\\"laborCat.op5Rate\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tdata-parsley-required-message=\\\"Error: OP5 Rate is required\\\" ng-pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" step=\\\"0.01\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t<!--Active         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"enabled\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control form-checkbox\\\" id=\\\"enabled\\\" [(ngModel)]=\\\"laborCat.enabled\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div aria-live=\\\"assertive\\\">\\r\\n\\t\\t\\t\\t<div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</alert>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Footer-->\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" id=\\\"btn-save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createLaborCat(laborCat)\\\">Save Labor Category</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reset(false)\\\">Cancel</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","/*\r\n@author : Deloitte\r\nthis is Componentfor adding contact as a popup.\r\n*/\r\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output, SimpleChanges, ViewEncapsulation } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { CodeValue } from '../../../tdl/models/codevalue.model';\r\nimport { LaborCategory } from '../../models/laborcat.model';\r\nimport { LaborCategoryService } from '../../services/laborcat.service';\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: \"[edit-laborcat-popup]\",\r\n  templateUrl: \"./edit-laborcat-popup.template.html\",\r\n  styleUrls: [\"./edit-laborcat-popup.styles.scss\"],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class EditLaborCatPopup\r\n * @implements {OnInit}\r\n */\r\nexport class EditLaborCatPopup implements OnInit, OnDestroy {\r\n  @Input() model;\r\n  @Output() reloadLaborCategories = new EventEmitter<boolean>();\r\n\r\n  public router: Router;\r\n  public showErrorFlag: boolean;\r\n  public alerts: Array<Object>;\r\n  public editLaborCat: LaborCategory;\r\n  public busy: Subscription;\r\n  public busyLoadLaborCategories:Subscription;\r\n  public busyLoadSkills: Subscription;\r\n\r\n  public laborCategories: LaborCategory[] = [];\r\n  public listSkills: CodeValue[]=[];\r\n\r\n  ngOnInit(): void {\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.busy) {\r\n      this.busy.unsubscribe();\r\n    }\r\n    if(this.busyLoadSkills){\r\n      this.busyLoadSkills.unsubscribe();\r\n    }\r\n    if(this.busyLoadLaborCategories){\r\n      this.busyLoadLaborCategories.unsubscribe();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    router: Router,\r\n    private _laborCatService: LaborCategoryService\r\n  ) {\r\n    this.router = router;\r\n\r\n    this.alerts = [\r\n      {\r\n        type: \"warning\",\r\n        msg:\r\n          '<span class=\"fw-semi-bold\">Warning:</span> Placeholder for Error Validation messages'\r\n      }\r\n    ];\r\n\r\n    this.showErrorFlag = false;\r\n\r\n    this.showLaborCategories();\r\n    this.loadLCATSkills();\r\n  }\r\n\r\n  // Update labor cat\r\n  public updateLaborCat(laborCat: LaborCategory) {\r\n    jQuery(\"#editlaborcatform\").parsley().validate();\r\n\r\n    // Toggle to edit mode or navigate to the next screen if validation passes\r\n    if ( jQuery(\"#editlaborcatform\").parsley().isValid() ) {\r\n      laborCat.code = laborCat.code.toUpperCase();\r\n\r\n      this.busy = this._laborCatService.saveLaborCategory(laborCat).subscribe(\r\n        data => {\r\n          if (data) {\r\n            this.reset(true);\r\n          }\r\n        },\r\n        error => {\r\n          this.showErrorFlag = true;\r\n          this.alerts = [];\r\n          this.alerts.push({ type: \"warning\", msg: error });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public reset(flag) {\r\n    jQuery(\"#edit-laborcat\").on(\"hidden\").find(\"#code\").val(\"\");\r\n    jQuery(\"#edit-laborcat\").on(\"hidden\").find(\"#description\").val(\"\");\r\n    jQuery(\"#edit-laborcat\").on(\"hidden\").find(\"#base-rate\").val(\"\");\r\n    jQuery(\"#edit-laborcat\").on(\"hidden\").find(\"#op1-rate\").val(\"\");\r\n    jQuery(\"#edit-laborcat\").on(\"hidden\").find(\"#op2-rate\").val(\"\");\r\n    jQuery(\"#edit-laborcat\").on(\"hidden\").find(\"#op3-rate\").val(\"\");\r\n    jQuery(\"#edit-laborcat\").on(\"hidden\").find(\"#op4-rate\").val(\"\");\r\n    jQuery(\"#edit-laborcat\").on(\"hidden\").find(\"#op5-rate\").val(\"\");\r\n    jQuery(\"#editlaborcatform\").parsley().reset();\r\n    jQuery(\"#edit-laborcat\").modal(\"hide\");\r\n    this.reloadLaborCategories.emit(flag);\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n  public loadLCATSkills(){\r\n    this._laborCatService.getAllLCATSkills().subscribe(data => {\r\n      this.listSkills = data;\r\n    },\r\n    error => {\r\n        this.showErrorFlag = true;\r\n        this.alerts = [];\r\n        this.alerts.push({ type: \"warning\", msg: error });\r\n      }\r\n    );\r\n  }\r\n\r\n  public showLaborCategories() {\r\n    this._laborCatService.getAll().subscribe(data => {\r\n      this.laborCategories = data;\r\n    },\r\n    error => {\r\n        this.showErrorFlag = true;\r\n        this.alerts = [];\r\n        this.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    for (let propName in changes) {\r\n      if (propName === \"model\") {\r\n        let chg = changes[propName];\r\n        if (chg.currentValue) {\r\n          this.editLaborCat = Object.assign({}, chg.currentValue);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-divider {\\n  width: 100%;\\n  border-bottom: 3px solid #778899; }\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid gray;\\n  padding-bottom: 10px; }\\ninput.parsley-error {\\n  border-color: #d9534f;\\n  box-shadow: inset 0 1px 1px rgba(217, 83, 79, 0.075); }\\n.parsley-errors-list {\\n  font-size: 85%;\\n  padding-left: 0;\\n  margin-bottom: 5px; }\\n.parsley-errors-list li {\\n    list-style: none;\\n    color: #d9534f; }\\n.switch {\\n  box-sizing: content-box;\\n  margin-left: -20px; }\\n.switch i {\\n  display: inline-block;\\n  cursor: pointer;\\n  margin-left: -20px;\\n  margin-bottom: -3px;\\n  padding-right: 20px;\\n  transition: all ease 0.2s;\\n  -webkit-transition: all ease 0.2s;\\n  border-radius: 20px;\\n  box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.5); }\\n.switch i:before {\\n  display: block;\\n  content: '';\\n  width: 30px;\\n  height: 30px;\\n  padding: 1px;\\n  border-radius: 20px;\\n  background: white;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }\\n.switch :checked + i {\\n  padding-right: 0;\\n  padding-left: 20px;\\n  background: #64bd63; }\\n.white, .white a {\\n  color: #fff; }\\n.btn-label {\\n  background: transparent;\\n  left: 2px;\\n  padding: 1px 6px; }\\n.md-editor {\\n  display: block;\\n  border: 1px solid #dee2e6; }\\n.md-editor > .md-header, .md-editor .md-footer {\\n    display: block;\\n    padding: 6px 4px;\\n    background: #f5f5f5; }\\n.md-editor > .md-header {\\n    margin: 0; }\\n.md-editor > .md-header .glyphicon {\\n      top: 3px; }\\n.md-editor > .md-preview {\\n    margin-left: -1px;\\n    margin-right: -1px;\\n    padding: 0.5rem 1rem;\\n    background: #fff;\\n    border-top: 1px dashed #dee2e6;\\n    min-height: 10px; }\\n.md-editor > textarea {\\n    font-family: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n    font-size: 1rem;\\n    outline: 0;\\n    outline: thin dotted  \\\\9;\\n    /* IE6-9 */\\n    margin: 0;\\n    display: block;\\n    width: 100%;\\n    border: 0;\\n    border-top: 1px dashed #dee2e6;\\n    border-radius: 0;\\n    box-shadow: none;\\n    background: #dee2e6; }\\n.md-editor > textarea:focus {\\n      box-shadow: none;\\n      background: #fff; }\\n.md-editor.active {\\n    border-color: #4d90fe;\\n    outline: 0; }\\n/**\\r\\n * Bootstrap select\\r\\n */\\n.selectpicker.form-control {\\n  height: auto; }\\n.bootstrap-select .dropdown-toggle {\\n  padding-left: 10px; }\\n.bootstrap-select .dropdown-toggle:after {\\n    margin-right: 0;\\n    margin-left: 0; }\\n.bootstrap-select .dropdown-menu > li > a {\\n  display: block;\\n  width: 100%;\\n  padding: 3px 20px;\\n  clear: both;\\n  font-weight: normal;\\n  line-height: 1.42857143;\\n  color: #555;\\n  text-align: inherit;\\n  white-space: nowrap;\\n  background: none;\\n  border: 0; }\\n.bootstrap-select .dropdown-menu > li > a:hover, .bootstrap-select .dropdown-menu > li > a:focus {\\n    color: #171717;\\n    text-decoration: none;\\n    background-color: #f5f5f5; }\\n.bootstrap-select .dropdown-menu > li > a.active, .bootstrap-select .dropdown-menu > li > a.active:hover, .bootstrap-select .dropdown-menu > li > a.active:focus {\\n    color: #fff;\\n    text-decoration: none;\\n    background-color: #5d8fc2;\\n    outline: 0; }\\n.bootstrap-select .dropdown-menu > li > a.disabled, .bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    color: #868e96; }\\n.bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    text-decoration: none;\\n    cursor: not-allowed;\\n    background-color: transparent;\\n    background-image: none; }\\n/**\\r\\n*  autosize\\r\\n**/\\n/***********************************/\\n/**          NEWS LIST           **/\\n/**********************************/\\n.news-list {\\n  margin-bottom: 0;\\n  padding-left: 0; }\\n.news-list li {\\n    list-style: none;\\n    box-sizing: content-box;\\n    border-top: 1px solid #eeeeee;\\n    padding: 12px;\\n    cursor: pointer;\\n    -webkit-transition: background-color 0.2s ease-out;\\n    transition: background-color 0.2s ease-out; }\\n@media screen and (prefers-reduced-motion: reduce) {\\n      .news-list li {\\n        -webkit-transition: none;\\n        transition: none; } }\\n.news-list li:hover {\\n      background: #dbdbdb; }\\n.news-list li:last-child {\\n      margin-bottom: -10px; }\\n.news-list img,\\n  .news-list .icon {\\n    float: left;\\n    height: 50px;\\n    width: 50px; }\\n.news-list .icon {\\n    line-height: 50px;\\n    border-radius: 50%;\\n    text-align: center;\\n    font-size: 28px; }\\n.news-list .news-item-info {\\n    margin-left: 62px;\\n    /*50 + 12px padding*/ }\\n.news-list .name {\\n    text-transform: uppercase; }\\n.news-list .name a {\\n      text-decoration: none; }\\n.news-list .name a:hover {\\n        color: #218bc3; }\\n.autogrow {\\n  overflow: hidden;\\n  resize: none; }\\n.form-checkbox {\\n  margin-left: 5px;\\n  width: 20px;\\n  height: 20px;\\n  box-shadow: none; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"edit-laborcat\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"edit-laborcat-title\\\" aria-hidden=\\\"true\\\">\\r\\n\\t<div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t<h1 class=\\\"h4 modal-title text-xs-left fw-bold mt\\\" id=\\\"edit-laborcat-title\\\">Edit Labor Category</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Body-->\\r\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t<form id=\\\"editlaborcatform\\\" #editlaborcatform=\\\"ngForm\\\" role=\\\"form\\\" class=\\\"form-horizontal\\\" data-parsley-priority-enabled=\\\"false\\\" novalidate=\\\"novalidate\\\"\\r\\n\\t\\t\\t\\t\\tdata-parsley-validate data-parsley-focus=\\\"first\\\">\\r\\n\\t\\t\\t\\t\\t<!-- Code -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"code\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Code\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"code\\\" [(ngModel)]=\\\"editLaborCat.code\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: Code is required\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- Description -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Description\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" [(ngModel)]=\\\"editLaborCat.description\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: Description is required\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- Primary Skill -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"res-skill\\\" class=\\\"col-md-4 form-control-label text-md-right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tPrimary Skill\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select required [(ngModel)]=\\\"editLaborCat.skillCode\\\" title=\\\"Primary Skill\\\" name=\\\"primary-skill\\\" class=\\\"form-control fdatable\\\" id=\\\"res-lead\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Select Team Lead\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdata-parsley-required-message=\\\"Error: Primary skill is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option></option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let res of listSkills\\\" [ngValue]=\\\"res.code\\\">{{res.value}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<!-- Base Rate -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"base-rate\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Base Rate\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"base-rate\\\" [(ngModel)]=\\\"editLaborCat.baseRate\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tdata-parsley-required-message=\\\"Error: Base Rate is required\\\" ng-pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" step=\\\"0.01\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- OP1 Rate Rate -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"op1-rate\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">OP1 Rate\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"op1-rate\\\" [(ngModel)]=\\\"editLaborCat.op1Rate\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tdata-parsley-required-message=\\\"Error: OP1 Rate is required\\\" ng-pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" step=\\\"0.01\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- OP2 Rate Rate -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"op2-rate\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">OP2 Rate\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"op2-rate\\\" [(ngModel)]=\\\"editLaborCat.op2Rate\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: OP2 Rate is required\\\" ng-pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" step=\\\"0.01\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t<!-- OP3 Rate Rate -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"op3-rate\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">OP3 Rate\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"op3-rate\\\" [(ngModel)]=\\\"editLaborCat.op3Rate\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: OP3 Rate is required\\\" ng-pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" step=\\\"0.01\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t<!-- OP4 Rate Rate -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"op4-rate\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">OP4 Rate\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"op4-rate\\\" [(ngModel)]=\\\"editLaborCat.op4Rate\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: OP4 Rate is required\\\" ng-pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" step=\\\"0.01\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t<!-- OP5 Rate Rate -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"op1-rate\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">OP5 Rate\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"op5-rate\\\" [(ngModel)]=\\\"editLaborCat.op5Rate\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: OP5 Rate is required\\\" ng-pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" step=\\\"0.01\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div> -->\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"enabled\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control form-checkbox\\\" id=\\\"enabled\\\" [(ngModel)]=\\\"editLaborCat.enabled\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div aria-live=\\\"assertive\\\">\\r\\n\\t\\t\\t\\t<div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</alert>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Footer-->\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" id=\\\"btn-save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateLaborCat(editLaborCat)\\\">Save Labor Category</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reset(false)\\\">Cancel</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { AfterViewInit, Component, OnDestroy, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport * as _ from \"lodash\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { LaborCategoryGroup } from '../../models/lcatgroup.model';\r\nimport { LaborCategoryService } from '../../services/laborcat.service';\r\nimport { LaborCategoryGroupService } from '../../services/lcatgroup.service';\r\nimport { LaborCategory } from '../../models/laborcat.model';\r\nimport { ICellRendererAngularComp } from \"ag-grid-angular\";\r\nimport { GridOptions } from \"ag-grid-community\";\r\nimport { isNil } from \"ramda\";\r\n\r\ndeclare var jQuery: any;\r\n\r\n\r\n@Component({\r\n  selector: 'edit-cell',\r\n  template: `<i class=\"glyphicon glyphicon-pencil\" (click)=\"invokeParentMethod()\" data-toggle=\"modal\" title=\"Edit Labor Category\"\r\n                   data-keyboard=\"false\" data-backdrop=\"static\" data-target=\"#edit-laborcat\"></i>`\r\n  // styles: [\r\n  //     `.btn {\r\n  //         line-height: 0.5\r\n  //     }`\r\n  // ]\r\n})\r\nexport class EditLCATComponent implements ICellRendererAngularComp {\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n      this.params = params;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n      this.params.context.componentParent.selectEditLaborCategory(this.params.data);\r\n  }\r\n\r\n  refresh(): boolean {\r\n      return false;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'delete-cell',\r\n  template: `<i class=\"glyphicon glyphicon-trash txt-gap\" (click)=\"invokeParentMethod()\" data-toggle=\"modal\"  title=\"Delete Labor Category\"\r\n  data-keyboard=\"false\" data-backdrop=\"static\" data-target=\"#confirm-popup\"></i>`\r\n  // styles: [\r\n  //     `.btn {\r\n  //         line-height: 0.5\r\n  //     }`\r\n  // ]\r\n})\r\nexport class DeleteLCATComponent implements ICellRendererAngularComp {\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n      this.params = params;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n      this.params.context.componentParent.deleteLaborCategory(this.params.data);\r\n  }\r\n\r\n  refresh(): boolean {\r\n      return false;\r\n  }\r\n}\r\n\r\n// con\r\n@Component({\r\n  selector: \"laborcat-dashboard\",\r\n  templateUrl: 'laborcat-dashboard.template.html',\r\n  styleUrls: [\"./laborcat-dashboard.styles.scss\"],\r\n  providers: [LaborCategoryService, LaborCategoryGroupService],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LaborCatDashboardPage implements OnInit, OnDestroy, AfterViewInit {\r\n  public router: Router;\r\n  public data: any[];\r\n  public lcatGroups: LaborCategoryGroup[]\r\n  public adminCount: number;\r\n  public selLCATGroupId: number;\r\n\r\n  public busyLoadLaborCategories: Subscription;\r\n  public busyLoadLCATGroups: Subscription;\r\n  public busyDeleteLaborCategory: Subscription;\r\n\r\n  public dropdownData = [];\r\n  public showErrorFlag: boolean;\r\n  public alerts: Array<Object>;\r\n  public effectiveDate: Date;\r\n  public selLaborCategory: LaborCategory;\r\n  public showCreateLaborCategory: any;\r\n  public showEditLaborCategory: any;\r\n\r\n  public delLaborCategoryTitle: string = \"Delete Labor Category\";\r\n  public delLaborCategoryMessage: string = \"Are you sure you want to delete Labor Category?\";\r\n  public confirmClicked: boolean = false;\r\n  public cancelClicked: boolean = false;\r\n\r\n  public gridOptions: GridOptions;\r\n\r\n  public gridApi;\r\n  public gridColumnApi;\r\n\r\n  public defaultColDef = {\r\n    sortable: true,\r\n    filter: true,\r\n    headerClass: 'fw-semi-bold'\r\n  };\r\n\r\n  public columnDefs = [\r\n    {\r\n      headerName: \"\",\r\n      field: \"value\",\r\n      cellRendererFramework: EditLCATComponent,\r\n      colId: \"params\",\r\n      width: 50,\r\n      filter: false\r\n    },\r\n    {\r\n      headerName: 'Code',\r\n      field: 'code',\r\n      cellClass: function(params) {\r\n        return params.data.enabled === false ? \"fw-semi-bold inactive\" : \"fw-semi-bold \";\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Description',\r\n      field: 'description',\r\n      cellClass: function(params) {\r\n        return params.data.enabled === false ? \"inactive\" : \"\";\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Skill',\r\n      field: 'skillName',\r\n      cellClass: function(params) {\r\n        return params.data.enabled === false ? \"inactive\" : \"\";\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Base Rate',\r\n      field: 'baseRate',\r\n      cellClass: function(params) {\r\n        return params.data.enabled === false ? \"inactive\" : \"\";\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Active',\r\n      field: 'enabled',\r\n      cellClass: function(params) {\r\n        return params.data.enabled === false ? \"inactive\" : \"\";\r\n      }\r\n    },\r\n    {\r\n      headerName: \"\",\r\n      field: \"value\",\r\n      cellRendererFramework: DeleteLCATComponent,\r\n      colId: \"params\",\r\n      width: 50,\r\n      filter: false\r\n    }\r\n  ];\r\n\r\n  constructor(\r\n    private _laborCatService: LaborCategoryService,\r\n    private _lcatGroupService: LaborCategoryGroupService,\r\n    router: Router) {\r\n    this.alerts = [\r\n      {\r\n        type: \"success\",\r\n        msg:\r\n          '<i class=\"fa fa-circle text-success\"></i><span class=\"alert-text\">Successfully generated 12 monthly reports</span>'\r\n      }\r\n    ];\r\n\r\n    this.router = router;\r\n    this.showCreateLaborCategory = false;\r\n    this.showEditLaborCategory = false;\r\n    this.selLCATGroupId = 1;\r\n\r\n    this.gridOptions = <GridOptions>{\r\n      context: {\r\n          componentParent: this\r\n      },\r\n      enableColResize: true,\r\n      rowHeight: 30\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    let searchInput = jQuery(\"#table-search-input, #search-countries\");\r\n    searchInput\r\n      .focus(e => {\r\n        jQuery(e.target)\r\n          .closest(\".input-group\")\r\n          .addClass(\"focus\");\r\n      })\r\n      .focusout(e => {\r\n        jQuery(e.target)\r\n          .closest(\".input-group\")\r\n          .removeClass(\"focus\");\r\n      });\r\n\r\n      this.loadLCATGroups();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.busyLoadLaborCategories) {\r\n      this.busyLoadLaborCategories.unsubscribe();\r\n    }\r\n    if (this.busyDeleteLaborCategory) {\r\n      this.busyDeleteLaborCategory.unsubscribe();\r\n    }\r\n    if(this.busyLoadLCATGroups){\r\n      this.busyLoadLCATGroups.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n  }\r\n\r\n\r\n  public cosmeticFix(elementID: any){\r\n    // The code below for cosmetic fix - Blue box now surrounds the icon on the search company text box\r\n    let filterInput = jQuery(elementID);\r\n    filterInput\r\n    .focus((e) => {\r\n        jQuery(e.target).closest('.input-group').addClass('focus');\r\n    })\r\n    .focusout((e) => {\r\n        jQuery(e.target).closest('.input-group').removeClass('focus');\r\n    });\r\n  }\r\n\r\n  private loadLCATGroups() {\r\n    let that = this;\r\n    this.busyLoadLCATGroups = this._lcatGroupService.getAll().subscribe(lcg => {\r\n      if (lcg) {\r\n        that.lcatGroups = lcg;\r\n        that.loadLaborCategories(this.selLCATGroupId);\r\n      }\r\n    }, error => {\r\n      this.showErrorFlag = true;\r\n      this.alerts = [];\r\n      this.alerts.push({ type: 'warning', msg: error });\r\n  });\r\n  }\r\n\r\n  private loadLaborCategories(groupId: number) {\r\n\r\n    this.busyLoadLaborCategories = this._laborCatService.getLaborCategoryByGroup(groupId).subscribe(laborcats => {\r\n      if (laborcats) {\r\n        this.data = laborcats;\r\n      }\r\n    }, error => {\r\n      this.showErrorFlag = true;\r\n      this.alerts = [];\r\n      this.alerts.push({ type: 'warning', msg: error });\r\n  });\r\n  }\r\n\r\n  public reloadLaborCategories(reload: boolean) {\r\n    this.showCreateLaborCategory = false;\r\n    this.showEditLaborCategory = false;\r\n    if (reload) {\r\n      this.loadLaborCategories(this.selLCATGroupId);\r\n    } else {\r\n      this.selLaborCategory = new LaborCategory();\r\n    }\r\n  }\r\n\r\n  public deleteLaborCategory(lcat: LaborCategory) {\r\n    if(!isNil(lcat)){\r\n      this.busyDeleteLaborCategory = this._laborCatService.deleteLaborCategoryById(lcat.id).subscribe(data => {\r\n      if (data) {\r\n          this.reloadLaborCategories(true);\r\n        }\r\n      }, error => {\r\n        this.showErrorFlag = true;\r\n        this.alerts = [];\r\n        this.alerts.push({ type: 'warning', msg: error });\r\n      });\r\n    }\r\n  }\r\n\r\n  public addLaborCategory() {\r\n    this.showCreateLaborCategory = true;\r\n  }\r\n\r\n  public selectEditLaborCategory(laborcat) {\r\n    this.showEditLaborCategory = true;\r\n    this.selLaborCategory = laborcat;\r\n  }\r\n\r\n  public onLCATGroupChanged(lcatGroupId: number){\r\n    this.selLCATGroupId = lcatGroupId;\r\n    this.reloadLaborCategories(true);\r\n  }\r\n\r\n  public onClickBackButton(){\r\n\t\tthis.router.navigate([\"/app/tdl/search\"]);\r\n  }\r\n\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid #ddd; }\\n.userdashboardController {\\n  width: 98%; }\\n.inactive {\\n  text-decoration: line-through; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<h1 class=\\\"h4 page-title hd-bdr\\\">Labor Categories</h1>\\r\\n<div data-ng-controller=\\\"laborcatdashboardController\\\" class=\\\"laborcatdashboardController\\\">\\r\\n    <div aria-live=\\\"assertive\\\">\\r\\n        <div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n                        <alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n                            <div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n                        </alert>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-10\\\">\\r\\n            <section class=\\\"widget h-divider\\\" widget>\\r\\n                <div class=\\\"widget-body\\\">\\r\\n                    <div class=\\\"row\\\" style=\\\"margin-bottom: 20px;\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"tdl-pop\\\" class=\\\"col-md-6 form-control-label text-md-right mt10\\\">\\r\\n                                    LCAT Groups\\r\\n                                </label>\\r\\n                                <div role=\\\"alert\\\" class=\\\"col-md-6 col-xs-12\\\">\\r\\n                                    <select required class=\\\"form-control\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"selLCATGroupId\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"onLCATGroupChanged($event.target.value)\\\"\\r\\n                                        data-parsley-required-message=\\\"Error: Reference Type is required\\\">\\r\\n                                        <option *ngFor=\\\"let lg of lcatGroups\\\" [value]=\\\"lg.groupId\\\">{{lg.name}}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-offset-1 col-md-4\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <div class=\\\"pull-right\\\">\\r\\n                                <button id=\\\"btn-cr-laborcat\\\" type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" data-toggle=\\\"modal\\\"\\r\\n                                    data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\" data-target=\\\"#create-laborcat\\\" title=\\\"Add Labor Category\\\"\\r\\n                                    (click)=\\\"addLaborCategory()\\\">\\r\\n                                    <i class=\\\"glyphicon glyphicon-plus\\\"></i>\\r\\n                                    Add Labor Category\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"grid-wrapper\\\">\\r\\n                        <ag-grid-angular\\r\\n                            #agGrid\\r\\n                            style=\\\"width: 100%; height: 650px;\\\"\\r\\n                            class=\\\"ag-theme-balham\\\"\\r\\n                            [rowData]=\\\"data\\\"\\r\\n                            [columnDefs]=\\\"columnDefs\\\"\\r\\n                            [defaultColDef]=\\\"defaultColDef\\\"\\r\\n                            [gridOptions]=\\\"gridOptions\\\"\\r\\n                            [floatingFilter]=\\\"true\\\"\\r\\n                            [pagination]=\\\"true\\\"\\r\\n                            (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                            [paginationAutoPageSize]=\\\"true\\\"\\r\\n                            >\\r\\n                        </ag-grid-angular>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"widget-footer\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n                            <div class=\\\"pull-right\\\">\\r\\n                                <button id=\\\"btn-go-back\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n                                    (click)=\\\"onClickBackButton()\\\">\\r\\n                                    <span class=\\\"glyphicon glyphicon-chevron-left txt-gap\\\"\\r\\n                                        aria-hidden=\\\"true\\\"></span>Back</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </section>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"showCreateLaborCategory\\\" create-laborcat-popup [LCATGroupId]=\\\"selLCATGroupId\\\" (reloadLaborCategories)=\\\"reloadLaborCategories($event)\\\"></div>\\r\\n    <div *ngIf=\\\"showEditLaborCategory\\\" edit-laborcat-popup [model]=\\\"selLaborCategory\\\" (reloadLaborCategories)=\\\"reloadLaborCategories($event)\\\"></div>\\r\\n</div>\"","/*\r\n@author : Deloitte\r\nthis is Component for creating a labor category\r\n*/\r\nimport { Component, Output, EventEmitter, ViewEncapsulation, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { LaborCategoryGroup } from '../../models/lcatgroup.model';\r\nimport { LaborCategoryGroupService } from '../../services/lcatgroup.service';\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: '[create-lcatgroup-popup]',\r\n templateUrl: 'create-lcatgroup-popup.template.html',\r\n  styleUrls: ['./create-lcatgroup-popup.styles.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class CreateLaborCatPopup\r\n * @implements {OnInit}\r\n */\r\n\r\nexport class CreateLCATGroupPopup implements OnInit, OnDestroy {\r\n  @Output() reloadLCATGroups = new EventEmitter<boolean>();\r\n\r\n  public router: Router;\r\n  public showErrorFlag: boolean;\r\n  public alerts: Array<Object>;\r\n  public lcatGroup = new LaborCategoryGroup();\r\n  public busy: Subscription;\r\n  public userenabled: boolean;\r\n\r\n  constructor(router: Router,\r\n    private _lcatGroupService: LaborCategoryGroupService\r\n  ) {\r\n    this.router = router;\r\n\r\n    this.alerts = [\r\n      {\r\n        type: 'warning',\r\n        msg: '<span class=\"fw-semi-bold\">Warning:</span> Placeholder for Error Validation messages'\r\n      }\r\n    ];\r\n\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.busy) {\r\n      this.busy.unsubscribe();\r\n    }\r\n  }\r\n\r\n  // Create a new Labor Cat\r\n  public createLCATGroup(lcg: LaborCategoryGroup) {\r\n    jQuery('#addlcatgroupform').parsley().validate();\r\n\r\n    // Toggle to edit mode or navigate to the next screen if validation passes\r\n    if (jQuery('#addlcatgroupform').parsley().isValid()) {\r\n\r\n      let that = this;\r\n      this.busy = this._lcatGroupService.saveLaborCategoryGroup(lcg).subscribe(data => {\r\n        if (data) {\r\n          that.reset(true);\r\n          that.reloadLCATGroups.emit(true);\r\n        }\r\n      }, error => {\r\n          this.showErrorFlag = true;\r\n          this.alerts = [];\r\n          this.alerts.push({ type: 'warning', msg: error });\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  public reset(flag) {\r\n    jQuery('#create-lcatgroup').on('hidden').find('#code').val('');\r\n    jQuery('#create-lcatgroup').on('hidden').find('#description').val('');\r\n    jQuery('#addlcatgroupform').parsley().reset();\r\n    jQuery('#create-lcatgroup').modal('hide');\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n// public showLaborCategories() {\r\n// \t\tthis._laborCatService.getAll().subscribe(data => {\r\n//       this.laborCategories = data;\r\n//     },\r\n//     error => {\r\n// \t\t\t\tthis.showErrorFlag = true;\r\n// \t\t\t\tthis.alerts = [];\r\n// \t\t\t\tthis.alerts.push({ type: \"warning\", msg: error });\r\n// \t\t\t}\r\n// \t\t);\r\n// \t}\r\n\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-divider {\\n  width: 100%;\\n  border-bottom: 3px solid #778899; }\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid gray;\\n  padding-bottom: 10px; }\\ninput.parsley-error {\\n  border-color: #d9534f;\\n  box-shadow: inset 0 1px 1px rgba(217, 83, 79, 0.075); }\\n.parsley-errors-list {\\n  font-size: 85%;\\n  padding-left: 0;\\n  margin-bottom: 5px; }\\n.parsley-errors-list li {\\n    list-style: none;\\n    color: #d9534f; }\\n.switch {\\n  box-sizing: content-box;\\n  margin-left: -20px; }\\n.switch i {\\n  display: inline-block;\\n  cursor: pointer;\\n  margin-left: -20px;\\n  margin-bottom: -3px;\\n  padding-right: 20px;\\n  transition: all ease 0.2s;\\n  -webkit-transition: all ease 0.2s;\\n  border-radius: 20px;\\n  box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.5); }\\n.switch i:before {\\n  display: block;\\n  content: '';\\n  width: 30px;\\n  height: 30px;\\n  padding: 1px;\\n  border-radius: 20px;\\n  background: white;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }\\n.switch :checked + i {\\n  padding-right: 0;\\n  padding-left: 20px;\\n  background: #64bd63; }\\n.white, .white a {\\n  color: #fff; }\\n.btn-label {\\n  background: transparent;\\n  left: 2px;\\n  padding: 1px 6px; }\\n.md-editor {\\n  display: block;\\n  border: 1px solid #dee2e6; }\\n.md-editor > .md-header, .md-editor .md-footer {\\n    display: block;\\n    padding: 6px 4px;\\n    background: #f5f5f5; }\\n.md-editor > .md-header {\\n    margin: 0; }\\n.md-editor > .md-header .glyphicon {\\n      top: 3px; }\\n.md-editor > .md-preview {\\n    margin-left: -1px;\\n    margin-right: -1px;\\n    padding: 0.5rem 1rem;\\n    background: #fff;\\n    border-top: 1px dashed #dee2e6;\\n    min-height: 10px; }\\n.md-editor > textarea {\\n    font-family: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n    font-size: 1rem;\\n    outline: 0;\\n    outline: thin dotted  \\\\9;\\n    /* IE6-9 */\\n    margin: 0;\\n    display: block;\\n    width: 100%;\\n    border: 0;\\n    border-top: 1px dashed #dee2e6;\\n    border-radius: 0;\\n    box-shadow: none;\\n    background: #dee2e6; }\\n.md-editor > textarea:focus {\\n      box-shadow: none;\\n      background: #fff; }\\n.md-editor.active {\\n    border-color: #4d90fe;\\n    outline: 0; }\\n/**\\r\\n * Bootstrap select\\r\\n */\\n.selectpicker.form-control {\\n  height: auto; }\\n.bootstrap-select .dropdown-toggle {\\n  padding-left: 10px; }\\n.bootstrap-select .dropdown-toggle:after {\\n    margin-right: 0;\\n    margin-left: 0; }\\n.bootstrap-select .dropdown-menu > li > a {\\n  display: block;\\n  width: 100%;\\n  padding: 3px 20px;\\n  clear: both;\\n  font-weight: normal;\\n  line-height: 1.42857143;\\n  color: #555;\\n  text-align: inherit;\\n  white-space: nowrap;\\n  background: none;\\n  border: 0; }\\n.bootstrap-select .dropdown-menu > li > a:hover, .bootstrap-select .dropdown-menu > li > a:focus {\\n    color: #171717;\\n    text-decoration: none;\\n    background-color: #f5f5f5; }\\n.bootstrap-select .dropdown-menu > li > a.active, .bootstrap-select .dropdown-menu > li > a.active:hover, .bootstrap-select .dropdown-menu > li > a.active:focus {\\n    color: #fff;\\n    text-decoration: none;\\n    background-color: #5d8fc2;\\n    outline: 0; }\\n.bootstrap-select .dropdown-menu > li > a.disabled, .bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    color: #868e96; }\\n.bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    text-decoration: none;\\n    cursor: not-allowed;\\n    background-color: transparent;\\n    background-image: none; }\\n/**\\r\\n*  autosize\\r\\n**/\\n/***********************************/\\n/**          NEWS LIST           **/\\n/**********************************/\\n.news-list {\\n  margin-bottom: 0;\\n  padding-left: 0; }\\n.news-list li {\\n    list-style: none;\\n    box-sizing: content-box;\\n    border-top: 1px solid #eeeeee;\\n    padding: 12px;\\n    cursor: pointer;\\n    -webkit-transition: background-color 0.2s ease-out;\\n    transition: background-color 0.2s ease-out; }\\n@media screen and (prefers-reduced-motion: reduce) {\\n      .news-list li {\\n        -webkit-transition: none;\\n        transition: none; } }\\n.news-list li:hover {\\n      background: #dbdbdb; }\\n.news-list li:last-child {\\n      margin-bottom: -10px; }\\n.news-list img,\\n  .news-list .icon {\\n    float: left;\\n    height: 50px;\\n    width: 50px; }\\n.news-list .icon {\\n    line-height: 50px;\\n    border-radius: 50%;\\n    text-align: center;\\n    font-size: 28px; }\\n.news-list .news-item-info {\\n    margin-left: 62px;\\n    /*50 + 12px padding*/ }\\n.news-list .name {\\n    text-transform: uppercase; }\\n.news-list .name a {\\n      text-decoration: none; }\\n.news-list .name a:hover {\\n        color: #218bc3; }\\n.autogrow {\\n  overflow: hidden;\\n  resize: none; }\\n.form-checkbox {\\n  margin-left: 5px;\\n  width: 20px;\\n  height: 20px;\\n  box-shadow: none; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"create-lcatgroup\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"create-lcatgroup-title\\\" aria-hidden=\\\"true\\\">\\r\\n\\t<div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t<h1 class=\\\"h4 modal-title text-xs-left fw-bold mt\\\" id=\\\"create-lcatgroup-title\\\">Add LCAT Group</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Body-->\\r\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t<form id=\\\"addlcatgroupform\\\" #addlcatgroupform=\\\"ngForm\\\" role=\\\"form\\\" class=\\\"form-horizontal\\\" data-parsley-priority-enabled=\\\"false\\\" novalidate=\\\"novalidate\\\"\\r\\n\\t\\t\\t\\t\\tdata-parsley-validate data-parsley-focus=\\\"first\\\">\\r\\n\\t\\t\\t\\t\\t<!-- Name -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"code\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Group Name\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"code\\\" [(ngModel)]=\\\"lcatGroup.name\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: Code is required\\\" >\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Active         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"enabled\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control form-checkbox\\\" id=\\\"enabled\\\" [(ngModel)]=\\\"lcatGroup.enabled\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div aria-live=\\\"assertive\\\">\\r\\n\\t\\t\\t\\t<div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</alert>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Footer-->\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" id=\\\"btn-save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createLCATGroup(lcatGroup)\\\">Save LCAT Group</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reset(false)\\\">Cancel</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","/*\r\n@author : Deloitte\r\nthis is Componentfor adding contact as a popup.\r\n*/\r\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output, SimpleChanges, ViewEncapsulation } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { LaborCategoryGroup } from '../../models/lcatgroup.model';\r\nimport { LaborCategoryGroupService } from '../../services/lcatgroup.service';\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: \"[edit-lcatgroup-popup]\",\r\n  templateUrl: \"./edit-lcatgroup-popup.template.html\",\r\n  styleUrls: [\"./edit-lcatgroup-popup.styles.scss\"],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class EditLaborCatPopup\r\n * @implements {OnInit}\r\n */\r\nexport class EditLCATGroupPopup implements OnInit, OnDestroy {\r\n  @Input() model;\r\n  @Output() reloadLCATGroups = new EventEmitter<boolean>();\r\n\r\n  public router: Router;\r\n  public showErrorFlag: boolean;\r\n  public alerts: Array<Object>;\r\n  public editLCATGroup: LaborCategoryGroup;\r\n  public busy: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.busy) {\r\n      this.busy.unsubscribe();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    router: Router,\r\n    private _lcatGroupService: LaborCategoryGroupService\r\n  ) {\r\n    this.router = router;\r\n\r\n    this.alerts = [\r\n      {\r\n        type: \"warning\",\r\n        msg:\r\n          '<span class=\"fw-semi-bold\">Warning:</span> Placeholder for Error Validation messages'\r\n      }\r\n    ];\r\n\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n  // Update labor cat\r\n  public updateLCATGroup(lcg: LaborCategoryGroup) {\r\n    jQuery(\"#editlcatgroupform\").parsley().validate();\r\n\r\n    // Toggle to edit mode or navigate to the next screen if validation passes\r\n    if ( jQuery(\"#editlcatgroupform\").parsley().isValid() ) {\r\n\r\n      this.busy = this._lcatGroupService.saveLaborCategoryGroup(lcg).subscribe(\r\n        data => {\r\n          if (data) {\r\n            this.reset(true);\r\n          }\r\n        },\r\n        error => {\r\n          this.showErrorFlag = true;\r\n          this.alerts = [];\r\n          this.alerts.push({ type: \"warning\", msg: error });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public reset(flag) {\r\n    jQuery(\"#edit-lcatgroup\").on(\"hidden\").find(\"#code\").val(\"\");\r\n    jQuery(\"#edit-lcatgroup\").on(\"hidden\").find(\"#description\").val(\"\");\r\n    jQuery(\"#editlcatgroupform\").parsley().reset();\r\n    jQuery(\"#edit-lcatgroup\").modal(\"hide\");\r\n    this.reloadLCATGroups.emit(flag);\r\n    this.showErrorFlag = false;\r\n  }\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    for (let propName in changes) {\r\n      if (propName === \"model\") {\r\n        let chg = changes[propName];\r\n        if (chg.currentValue) {\r\n          this.editLCATGroup = Object.assign({}, chg.currentValue);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-divider {\\n  width: 100%;\\n  border-bottom: 3px solid #778899; }\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid gray;\\n  padding-bottom: 10px; }\\ninput.parsley-error {\\n  border-color: #d9534f;\\n  box-shadow: inset 0 1px 1px rgba(217, 83, 79, 0.075); }\\n.parsley-errors-list {\\n  font-size: 85%;\\n  padding-left: 0;\\n  margin-bottom: 5px; }\\n.parsley-errors-list li {\\n    list-style: none;\\n    color: #d9534f; }\\n.switch {\\n  box-sizing: content-box;\\n  margin-left: -20px; }\\n.switch i {\\n  display: inline-block;\\n  cursor: pointer;\\n  margin-left: -20px;\\n  margin-bottom: -3px;\\n  padding-right: 20px;\\n  transition: all ease 0.2s;\\n  -webkit-transition: all ease 0.2s;\\n  border-radius: 20px;\\n  box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.5); }\\n.switch i:before {\\n  display: block;\\n  content: '';\\n  width: 30px;\\n  height: 30px;\\n  padding: 1px;\\n  border-radius: 20px;\\n  background: white;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }\\n.switch :checked + i {\\n  padding-right: 0;\\n  padding-left: 20px;\\n  background: #64bd63; }\\n.white, .white a {\\n  color: #fff; }\\n.btn-label {\\n  background: transparent;\\n  left: 2px;\\n  padding: 1px 6px; }\\n.md-editor {\\n  display: block;\\n  border: 1px solid #dee2e6; }\\n.md-editor > .md-header, .md-editor .md-footer {\\n    display: block;\\n    padding: 6px 4px;\\n    background: #f5f5f5; }\\n.md-editor > .md-header {\\n    margin: 0; }\\n.md-editor > .md-header .glyphicon {\\n      top: 3px; }\\n.md-editor > .md-preview {\\n    margin-left: -1px;\\n    margin-right: -1px;\\n    padding: 0.5rem 1rem;\\n    background: #fff;\\n    border-top: 1px dashed #dee2e6;\\n    min-height: 10px; }\\n.md-editor > textarea {\\n    font-family: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n    font-size: 1rem;\\n    outline: 0;\\n    outline: thin dotted  \\\\9;\\n    /* IE6-9 */\\n    margin: 0;\\n    display: block;\\n    width: 100%;\\n    border: 0;\\n    border-top: 1px dashed #dee2e6;\\n    border-radius: 0;\\n    box-shadow: none;\\n    background: #dee2e6; }\\n.md-editor > textarea:focus {\\n      box-shadow: none;\\n      background: #fff; }\\n.md-editor.active {\\n    border-color: #4d90fe;\\n    outline: 0; }\\n/**\\r\\n * Bootstrap select\\r\\n */\\n.selectpicker.form-control {\\n  height: auto; }\\n.bootstrap-select .dropdown-toggle {\\n  padding-left: 10px; }\\n.bootstrap-select .dropdown-toggle:after {\\n    margin-right: 0;\\n    margin-left: 0; }\\n.bootstrap-select .dropdown-menu > li > a {\\n  display: block;\\n  width: 100%;\\n  padding: 3px 20px;\\n  clear: both;\\n  font-weight: normal;\\n  line-height: 1.42857143;\\n  color: #555;\\n  text-align: inherit;\\n  white-space: nowrap;\\n  background: none;\\n  border: 0; }\\n.bootstrap-select .dropdown-menu > li > a:hover, .bootstrap-select .dropdown-menu > li > a:focus {\\n    color: #171717;\\n    text-decoration: none;\\n    background-color: #f5f5f5; }\\n.bootstrap-select .dropdown-menu > li > a.active, .bootstrap-select .dropdown-menu > li > a.active:hover, .bootstrap-select .dropdown-menu > li > a.active:focus {\\n    color: #fff;\\n    text-decoration: none;\\n    background-color: #5d8fc2;\\n    outline: 0; }\\n.bootstrap-select .dropdown-menu > li > a.disabled, .bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    color: #868e96; }\\n.bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    text-decoration: none;\\n    cursor: not-allowed;\\n    background-color: transparent;\\n    background-image: none; }\\n/**\\r\\n*  autosize\\r\\n**/\\n/***********************************/\\n/**          NEWS LIST           **/\\n/**********************************/\\n.news-list {\\n  margin-bottom: 0;\\n  padding-left: 0; }\\n.news-list li {\\n    list-style: none;\\n    box-sizing: content-box;\\n    border-top: 1px solid #eeeeee;\\n    padding: 12px;\\n    cursor: pointer;\\n    -webkit-transition: background-color 0.2s ease-out;\\n    transition: background-color 0.2s ease-out; }\\n@media screen and (prefers-reduced-motion: reduce) {\\n      .news-list li {\\n        -webkit-transition: none;\\n        transition: none; } }\\n.news-list li:hover {\\n      background: #dbdbdb; }\\n.news-list li:last-child {\\n      margin-bottom: -10px; }\\n.news-list img,\\n  .news-list .icon {\\n    float: left;\\n    height: 50px;\\n    width: 50px; }\\n.news-list .icon {\\n    line-height: 50px;\\n    border-radius: 50%;\\n    text-align: center;\\n    font-size: 28px; }\\n.news-list .news-item-info {\\n    margin-left: 62px;\\n    /*50 + 12px padding*/ }\\n.news-list .name {\\n    text-transform: uppercase; }\\n.news-list .name a {\\n      text-decoration: none; }\\n.news-list .name a:hover {\\n        color: #218bc3; }\\n.autogrow {\\n  overflow: hidden;\\n  resize: none; }\\n.form-checkbox {\\n  margin-left: 5px;\\n  width: 20px;\\n  height: 20px;\\n  box-shadow: none; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"edit-lcatgroup\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"edit-lcatgroup-title\\\" aria-hidden=\\\"true\\\">\\r\\n\\t<div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t<h1 class=\\\"h4 modal-title text-xs-left fw-bold mt\\\" id=\\\"edit-lcatgroup-title\\\">Edit LCAT Group</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Body-->\\r\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t<form id=\\\"editlcatgroupform\\\" #editlcatgroupform=\\\"ngForm\\\" role=\\\"form\\\" class=\\\"form-horizontal\\\" data-parsley-priority-enabled=\\\"false\\\" novalidate=\\\"novalidate\\\"\\r\\n\\t\\t\\t\\t\\tdata-parsley-validate data-parsley-focus=\\\"first\\\">\\r\\n\\t\\t\\t\\t\\t<!-- Name -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"lcg-name\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Group Name\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lcg-name\\\" [(ngModel)]=\\\"editLCATGroup.name\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: Group Name is required\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<!--Active         -->\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"enabled\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Active\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control form-checkbox\\\" id=\\\"enabled\\\" [(ngModel)]=\\\"editLCATGroup.enabled\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div aria-live=\\\"assertive\\\">\\r\\n\\t\\t\\t\\t<div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</alert>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Footer-->\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" id=\\\"btn-save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateLCATGroup(editLCATGroup)\\\">Save LCAT Group</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reset(false)\\\">Cancel</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { AfterViewInit, Component, OnDestroy, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { LaborCategoryGroup } from '../../models/lcatgroup.model';\r\nimport { LaborCategoryService } from '../../services/laborcat.service';\r\nimport { LaborCategoryGroupService } from '../../services/lcatgroup.service';\r\nimport { ICellRendererAngularComp } from \"ag-grid-angular\";\r\nimport { GridOptions } from \"ag-grid-community\";\r\nimport { isNil } from \"ramda\";\r\n\r\ndeclare var jQuery: any;\r\n\r\n\r\n@Component({\r\n  selector: 'edit-cell',\r\n  template: `<i class=\"glyphicon glyphicon-pencil\" (click)=\"invokeParentMethod()\" data-toggle=\"modal\"  title=\"Edit LCAT Group\"\r\n                   data-keyboard=\"false\" data-backdrop=\"static\" data-target=\"#edit-lcatgroup\"></i>`\r\n  // styles: [\r\n  //     `.btn {\r\n  //         line-height: 0.5\r\n  //     }`\r\n  // ]\r\n})\r\nexport class EditLCATGroupComponent implements ICellRendererAngularComp {\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n      this.params = params;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n      this.params.context.componentParent.selectEditLCATGroup(this.params.data);\r\n  }\r\n\r\n  refresh(): boolean {\r\n      return false;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'delete-cell',\r\n  template: `<i class=\"glyphicon glyphicon-trash txt-gap\" (click)=\"invokeParentMethod()\" data-toggle=\"modal\" title=\"Delete LCAT Group\"\r\n  data-keyboard=\"false\" data-backdrop=\"static\" data-target=\"#confirm-popup\"></i>`\r\n  // styles: [\r\n  //     `.btn {\r\n  //         line-height: 0.5\r\n  //     }`\r\n  // ]\r\n})\r\nexport class DeleteLCATGroupComponent implements ICellRendererAngularComp {\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n      this.params = params;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n      this.params.context.componentParent.deleteLaborCategory(this.params.data);\r\n  }\r\n\r\n  refresh(): boolean {\r\n      return false;\r\n  }\r\n}\r\n\r\n\r\n// con\r\n@Component({\r\n  selector: \"lcatgroup-dashboard\",\r\n  templateUrl: \"./lcatgroup-dashboard.template.html\",\r\n  styleUrls: [\"./lcatgroup-dashboard.styles.scss\"],\r\n  providers: [LaborCategoryService, LaborCategoryGroupService],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LCATGroupDashboardPage implements OnInit, OnDestroy, AfterViewInit {\r\n  public router: Router;\r\n  public data: any[];\r\n  public busyLoadLCATGroups: Subscription;\r\n  public busyDeleteLCATGroup: Subscription;\r\n  public busyLoadLaborCategories: Subscription;\r\n  public alerts: Array<Object>;\r\n  public dropdownData = [];\r\n  public showErrorFlag: boolean;\r\n  public selLCATGroup: LaborCategoryGroup;\r\n  public showCreateLCATGroup: any;\r\n  public showEditLCATGroup: any;\r\n\r\n  public delLCATGroupTitle: string = \"Delete LCAT Group\";\r\n  public delLCATGroupMessage: string = \"Are you sure you want to delete LCAT Group?\";\r\n  public confirmClicked: boolean = false;\r\n  public cancelClicked: boolean = false;\r\n\r\n\r\n  public gridOptions: GridOptions;\r\n\r\n  public gridApi;\r\n  public gridColumnApi;\r\n\r\n  public defaultColDef = {\r\n    sortable: true,\r\n    filter: true,\r\n    headerClass: 'fw-semi-bold'\r\n  };\r\n\r\n  public columnDefs = [\r\n    {\r\n      headerName: \"\",\r\n      field: \"value\",\r\n      cellRendererFramework: EditLCATGroupComponent,\r\n      colId: \"params\",\r\n      width: 50,\r\n      filter: false\r\n    },\r\n    {\r\n      headerName: 'Name',\r\n      field: 'name'\r\n    },\r\n    {\r\n      headerName: \"\",\r\n      field: \"value\",\r\n      cellRendererFramework: DeleteLCATGroupComponent,\r\n      colId: \"params\",\r\n      width: 50,\r\n      filter: false\r\n    }\r\n  ];\r\n\r\n  constructor(\r\n    private _lcatGroupService: LaborCategoryGroupService,\r\n    router: Router) {\r\n    this.alerts = [\r\n      {\r\n        type: \"success\",\r\n        msg:\r\n          '<i class=\"fa fa-circle text-success\"></i><span class=\"alert-text\">Successfully generated 12 monthly reports</span>'\r\n      }\r\n    ];\r\n\r\n    this.router = router;\r\n    this.showCreateLCATGroup = false;\r\n    this.showEditLCATGroup = false;\r\n\r\n    this.gridOptions = <GridOptions>{\r\n      context: {\r\n          componentParent: this\r\n      },\r\n      enableColResize: true,\r\n      rowHeight: 30\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    let searchInput = jQuery(\"#table-search-input\");\r\n    searchInput\r\n      .focus(e => {\r\n        jQuery(e.target)\r\n          .closest(\".input-group\")\r\n          .addClass(\"focus\");\r\n      })\r\n      .focusout(e => {\r\n        jQuery(e.target)\r\n          .closest(\".input-group\")\r\n          .removeClass(\"focus\");\r\n      });\r\n\r\n      this.loadLCATGroups();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.busyDeleteLCATGroup) {\r\n      this.busyDeleteLCATGroup.unsubscribe();\r\n    }\r\n    if(this.busyLoadLCATGroups){\r\n      this.busyLoadLCATGroups.unsubscribe();\r\n    }\r\n    if(this.busyLoadLaborCategories){\r\n      this.busyLoadLaborCategories.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n  }\r\n\r\n\r\n  public cosmeticFix(elementID: any){\r\n    // The code below for cosmetic fix - Blue box now surrounds the icon on the search company text box\r\n    let filterInput = jQuery(elementID);\r\n    filterInput\r\n    .focus((e) => {\r\n        jQuery(e.target).closest('.input-group').addClass('focus');\r\n    })\r\n    .focusout((e) => {\r\n        jQuery(e.target).closest('.input-group').removeClass('focus');\r\n    });\r\n  }\r\n\r\n  public loadLCATGroups() {\r\n    let that = this;\r\n    this.busyLoadLCATGroups = this._lcatGroupService.getAll().subscribe(lcg => {\r\n      if (lcg) {\r\n        that.data = lcg;\r\n      }\r\n    }, error => {\r\n      this.showErrorFlag = true;\r\n      this.alerts = [];\r\n      this.alerts.push({ type: 'warning', msg: error });\r\n  });\r\n  }\r\n\r\n  public deleteLCATGroup(lcg: LaborCategoryGroup) {\r\n    if(!isNil(lcg)){\r\n      this.busyDeleteLCATGroup = this._lcatGroupService.deleteLCATGroupById(lcg.groupId).subscribe(data => {\r\n        if (data) {\r\n          this.loadLCATGroups();\r\n        }\r\n      }, error => {\r\n        this.showErrorFlag = true;\r\n        this.alerts = [];\r\n        this.alerts.push({ type: 'warning', msg: error });\r\n       });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  public addLCATGroup() {\r\n    this.showCreateLCATGroup = true;\r\n  }\r\n\r\n  public selectEditLCATGroup(lcg) {\r\n    this.showEditLCATGroup = true;\r\n    this.selLCATGroup = lcg;\r\n  }\r\n\r\n  public reloadLCATGroups(reload: boolean) {\r\n    this.showEditLCATGroup = false;\r\n    this.showCreateLCATGroup = false;\r\n    if (reload) {\r\n      this.loadLCATGroups();\r\n    } else {\r\n      this.selLCATGroup = new LaborCategoryGroup();\r\n    }\r\n  }\r\n\r\n  public onClickBackButton(){\r\n\t\tthis.router.navigate([\"/app/tdl/search\"]);\r\n  }\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid #ddd; }\\n.lcatgroupdashboardController {\\n  width: 98%; }\\n.inactive {\\n  text-decoration: line-through; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<h1 class=\\\"h4 page-title hd-bdr\\\">LCAT Groups</h1>\\r\\n<div data-ng-controller=\\\"lcatgroupdashboardController\\\" class=\\\"lcatgroupdashboardController\\\">\\r\\n    <div aria-live=\\\"assertive\\\">\\r\\n        <div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n                        <alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n                            <div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n                        </alert>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-10\\\">\\r\\n            <section class=\\\"widget h-divider\\\" widget>\\r\\n                <div class=\\\"widget-body\\\">\\r\\n                    <div class=\\\"row\\\" style=\\\"margin-bottom: 20px;\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-offset-1 col-md-4\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <div class=\\\"pull-right\\\">\\r\\n                                <button id=\\\"btn-cr-laborcat\\\" type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" data-toggle=\\\"modal\\\"\\r\\n                                    data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\" data-target=\\\"#create-lcatgroup\\\" title=\\\"Add LCAT Group\\\"\\r\\n                                    (click)=\\\"addLCATGroup()\\\">\\r\\n                                    <i class=\\\"glyphicon glyphicon-plus\\\"></i>\\r\\n                                    Add LCAT Group\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"grid-wrapper\\\">\\r\\n                        <ag-grid-angular\\r\\n                            #agGrid\\r\\n                            style=\\\"width: 100%; height: 650px;\\\"\\r\\n                            class=\\\"ag-theme-balham\\\"\\r\\n                            [rowData]=\\\"data\\\"\\r\\n                            [columnDefs]=\\\"columnDefs\\\"\\r\\n                            [defaultColDef]=\\\"defaultColDef\\\"\\r\\n                            [gridOptions]=\\\"gridOptions\\\"\\r\\n                            [floatingFilter]=\\\"true\\\"\\r\\n                            [pagination]=\\\"true\\\"\\r\\n                            (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                            [paginationAutoPageSize]=\\\"true\\\"\\r\\n                            >\\r\\n                        </ag-grid-angular>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"widget-footer\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n                            <div class=\\\"pull-right\\\">\\r\\n                                <button id=\\\"btn-go-back\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n                                    (click)=\\\"onClickBackButton()\\\">\\r\\n                                    <span class=\\\"glyphicon glyphicon-chevron-left txt-gap\\\"\\r\\n                                        aria-hidden=\\\"true\\\"></span>Back</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </section>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"showCreateLCATGroup\\\" create-lcatgroup-popup (reloadLCATGroups)=\\\"reloadLCATGroups($event)\\\"></div>\\r\\n    <div *ngIf=\\\"showEditLCATGroup\\\" edit-lcatgroup-popup [model]=\\\"selLCATGroup\\\" (reloadLCATGroups)=\\\"reloadLCATGroups($event)\\\"></div>\\r\\n</div>\"","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewEncapsulation } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { isNil } from 'ramda';\r\nimport { Subscription } from \"rxjs\";\r\nimport { Lookup } from '../../models/lookup.model';\r\nimport { LookupService } from '../../services/lookup.service';\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n\tselector: \"[create-lookup-popup]\",\r\n\ttemplateUrl: \"./create-lookup-popup.template.html\",\r\n\tstyleUrls: [\"./create-lookup-popup.styles.scss\"],\r\n\tencapsulation: ViewEncapsulation.None,\r\n\tproviders: []\r\n})\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class CreateResourcePopup\r\n * @implements {OnInit}\r\n */\r\nexport class CreateLookupPopup implements OnInit, OnDestroy {\r\n\t@Input() ReferTypeId;\r\n\t@Output() reloadLookups = new EventEmitter<boolean>();\r\n\r\n\tpublic router: Router;\r\n\tpublic showErrorFlag: boolean;\r\n\tpublic alerts: Array<Object>;\r\n\tpublic lookup = new Lookup();\r\n\tpublic busyCreateLookup: Subscription;\r\n\r\n\tconstructor(\r\n\t\trouter: Router,\r\n\t\tprivate lookupService: LookupService\r\n\t) {\r\n\t\tthis.router = router;\r\n\r\n\t\tthis.alerts = [\r\n\t\t\t{\r\n\t\t\t\ttype: \"warning\",\r\n\t\t\t\tmsg:\r\n\t\t\t\t\t'<span class=\"fw-semi-bold\">Warning:</span> Placeholder for Error Validation messages'\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\tthis.showErrorFlag = false;\r\n\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.showErrorFlag = false;\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.busyCreateLookup) {\r\n\t\t\tthis.busyCreateLookup.unsubscribe();\r\n\t\t}\r\n\t}\r\n\tpublic createLookup(lv: Lookup) {\r\n\t\tjQuery(\"#addlookupform\")\r\n\t\t\t.parsley()\r\n\t\t\t.validate();\r\n\r\n\t\t// Toggle to edit mode or navigate to the next screen if validation passes\r\n\t\tif (\r\n\t\t\tjQuery(\"#addlookupform\")\r\n\t\t\t\t.parsley()\r\n\t\t\t\t.isValid()\r\n\t\t) {\r\n\r\n\t\t\tthis.lookup.refTypeId = this.ReferTypeId;\r\n\t\t\tthis.lookup.refCode = isNil(lv.refCode) ? \"\" : lv.refCode.toUpperCase();\r\n\t\t\tthis.lookup.refValue = lv.refValue;\r\n\r\n\t\t\tthis.busyCreateLookup = this.lookupService.createLookup(this.lookup).subscribe(\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\tthis.reset(true);\r\n\t\t\t\t\t\tthis.reloadLookups.emit(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tthis.showErrorFlag = true;\r\n\t\t\t\t\tthis.alerts = [];\r\n\t\t\t\t\tthis.alerts.push({ type: \"warning\", msg: error });\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic reset(flag) {\r\n\t\tjQuery(\"#create-lookup\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#ref-code\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#create-lookup\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#ref-val\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#addlookupform\")\r\n\t\t\t.parsley()\r\n\t\t\t.reset();\r\n\t\tjQuery(\"#create-lookup\").modal(\"hide\");\r\n\t\tthis.showErrorFlag = false;\r\n\t}\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-divider {\\n  width: 100%;\\n  border-bottom: 3px solid #778899; }\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid gray;\\n  padding-bottom: 10px; }\\ninput.parsley-error {\\n  border-color: #d9534f;\\n  box-shadow: inset 0 1px 1px rgba(217, 83, 79, 0.075); }\\n.parsley-errors-list {\\n  font-size: 85%;\\n  padding-left: 0;\\n  margin-bottom: 5px; }\\n.parsley-errors-list li {\\n    list-style: none;\\n    color: #d9534f; }\\n.switch {\\n  box-sizing: content-box;\\n  margin-left: -20px; }\\n.switch i {\\n  display: inline-block;\\n  cursor: pointer;\\n  margin-left: -20px;\\n  margin-bottom: -3px;\\n  padding-right: 20px;\\n  transition: all ease 0.2s;\\n  -webkit-transition: all ease 0.2s;\\n  border-radius: 20px;\\n  box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.5); }\\n.switch i:before {\\n  display: block;\\n  content: '';\\n  width: 30px;\\n  height: 30px;\\n  padding: 1px;\\n  border-radius: 20px;\\n  background: white;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }\\n.switch :checked + i {\\n  padding-right: 0;\\n  padding-left: 20px;\\n  background: #64bd63; }\\n.white, .white a {\\n  color: #fff; }\\n.btn-label {\\n  background: transparent;\\n  left: 2px;\\n  padding: 1px 6px; }\\n.md-editor {\\n  display: block;\\n  border: 1px solid #dee2e6; }\\n.md-editor > .md-header, .md-editor .md-footer {\\n    display: block;\\n    padding: 6px 4px;\\n    background: #f5f5f5; }\\n.md-editor > .md-header {\\n    margin: 0; }\\n.md-editor > .md-header .glyphicon {\\n      top: 3px; }\\n.md-editor > .md-preview {\\n    margin-left: -1px;\\n    margin-right: -1px;\\n    padding: 0.5rem 1rem;\\n    background: #fff;\\n    border-top: 1px dashed #dee2e6;\\n    min-height: 10px; }\\n.md-editor > textarea {\\n    font-family: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n    font-size: 1rem;\\n    outline: 0;\\n    outline: thin dotted  \\\\9;\\n    /* IE6-9 */\\n    margin: 0;\\n    display: block;\\n    width: 100%;\\n    border: 0;\\n    border-top: 1px dashed #dee2e6;\\n    border-radius: 0;\\n    box-shadow: none;\\n    background: #dee2e6; }\\n.md-editor > textarea:focus {\\n      box-shadow: none;\\n      background: #fff; }\\n.md-editor.active {\\n    border-color: #4d90fe;\\n    outline: 0; }\\n/**\\r\\n * Bootstrap select\\r\\n */\\n.selectpicker.form-control {\\n  height: auto; }\\n.bootstrap-select .dropdown-toggle {\\n  padding-left: 10px; }\\n.bootstrap-select .dropdown-toggle:after {\\n    margin-right: 0;\\n    margin-left: 0; }\\n.bootstrap-select .dropdown-menu > li > a {\\n  display: block;\\n  width: 100%;\\n  padding: 3px 20px;\\n  clear: both;\\n  font-weight: normal;\\n  line-height: 1.42857143;\\n  color: #555;\\n  text-align: inherit;\\n  white-space: nowrap;\\n  background: none;\\n  border: 0; }\\n.bootstrap-select .dropdown-menu > li > a:hover, .bootstrap-select .dropdown-menu > li > a:focus {\\n    color: #171717;\\n    text-decoration: none;\\n    background-color: #f5f5f5; }\\n.bootstrap-select .dropdown-menu > li > a.active, .bootstrap-select .dropdown-menu > li > a.active:hover, .bootstrap-select .dropdown-menu > li > a.active:focus {\\n    color: #fff;\\n    text-decoration: none;\\n    background-color: #5d8fc2;\\n    outline: 0; }\\n.bootstrap-select .dropdown-menu > li > a.disabled, .bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    color: #868e96; }\\n.bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    text-decoration: none;\\n    cursor: not-allowed;\\n    background-color: transparent;\\n    background-image: none; }\\n/**\\r\\n*  autosize\\r\\n**/\\n/***********************************/\\n/**          NEWS LIST           **/\\n/**********************************/\\n.news-list {\\n  margin-bottom: 0;\\n  padding-left: 0; }\\n.news-list li {\\n    list-style: none;\\n    box-sizing: content-box;\\n    border-top: 1px solid #eeeeee;\\n    padding: 12px;\\n    cursor: pointer;\\n    -webkit-transition: background-color 0.2s ease-out;\\n    transition: background-color 0.2s ease-out; }\\n@media screen and (prefers-reduced-motion: reduce) {\\n      .news-list li {\\n        -webkit-transition: none;\\n        transition: none; } }\\n.news-list li:hover {\\n      background: #dbdbdb; }\\n.news-list li:last-child {\\n      margin-bottom: -10px; }\\n.news-list img,\\n  .news-list .icon {\\n    float: left;\\n    height: 50px;\\n    width: 50px; }\\n.news-list .icon {\\n    line-height: 50px;\\n    border-radius: 50%;\\n    text-align: center;\\n    font-size: 28px; }\\n.news-list .news-item-info {\\n    margin-left: 62px;\\n    /*50 + 12px padding*/ }\\n.news-list .name {\\n    text-transform: uppercase; }\\n.news-list .name a {\\n      text-decoration: none; }\\n.news-list .name a:hover {\\n        color: #218bc3; }\\n.autogrow {\\n  overflow: hidden;\\n  resize: none; }\\n.form-checkbox {\\n  margin-left: 5px;\\n  width: 20px;\\n  height: 20px;\\n  box-shadow: none; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vY29tcG9uZW50cy9sb29rdXAvQzpcXFVzZXJzXFxhc2FwYVxcRG9jdW1lbnRzXFxDYmFzc1xcY2Jhc3JlcG9cXGNiYXMtdWkvc3JjXFxzY3NzXFxfdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL2FkbWluL2NvbXBvbmVudHMvbG9va3VwL0M6XFxVc2Vyc1xcYXNhcGFcXERvY3VtZW50c1xcQ2Jhc3NcXGNiYXNyZXBvXFxjYmFzLXVpL3NyY1xcYXBwXFxhZG1pblxcY29tcG9uZW50c1xcbG9va3VwXFxjcmVhdGUtbG9va3VwLXBvcHVwLnN0eWxlcy5zY3NzIiwic3JjL2FwcC9hZG1pbi9jb21wb25lbnRzL2xvb2t1cC9DOlxcVXNlcnNcXGFzYXBhXFxEb2N1bWVudHNcXENiYXNzXFxjYmFzcmVwb1xcY2Jhcy11aS9ub2RlX21vZHVsZXNcXGJvb3RzdHJhcFxcc2Nzc1xcbWl4aW5zXFxfYm94LXNoYWRvdy5zY3NzIiwic3JjL2FwcC9hZG1pbi9jb21wb25lbnRzL2xvb2t1cC9DOlxcVXNlcnNcXGFzYXBhXFxEb2N1bWVudHNcXENiYXNzXFxjYmFzcmVwb1xcY2Jhcy11aS9ub2RlX21vZHVsZXNcXGJvb3RzdHJhcFxcc2Nzc1xcX3ZhcmlhYmxlcy5zY3NzIiwic3JjL2FwcC9hZG1pbi9jb21wb25lbnRzL2xvb2t1cC9DOlxcVXNlcnNcXGFzYXBhXFxEb2N1bWVudHNcXENiYXNzXFxjYmFzcmVwb1xcY2Jhcy11aS9ub2RlX21vZHVsZXNcXGJvb3RzdHJhcFxcc2Nzc1xcbWl4aW5zXFxfaG92ZXIuc2NzcyIsInNyYy9hcHAvYWRtaW4vY29tcG9uZW50cy9sb29rdXAvQzpcXFVzZXJzXFxhc2FwYVxcRG9jdW1lbnRzXFxDYmFzc1xcY2Jhc3JlcG9cXGNiYXMtdWkvbm9kZV9tb2R1bGVzXFxib290c3RyYXBcXHNjc3NcXG1peGluc1xcX3RyYW5zaXRpb24uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFhQTs7OzhFQUc4RTtBQ2Q5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SDtJQTZCSSxrQkFBaUI7SUFDakIsbUJBQWtCO0lBQ2xCLG1CQUFrQjtJQUNsQixnQkFBZSxFQUNoQjtBQWpDSDtJQW9DSSxrQkFBaUI7SUFBRSxxQkFBcUIsRUFDekM7QUFyQ0g7SUF3Q0ksMEJBQXlCLEVBUTFCO0FBaERIO01BMkNNLHNCQUFxQixFQUl0QjtBQS9DTDtRQTZDUSxlRC9LWSxFQ2dMYjtBQUtQO0VBQ0UsaUJBQWdCO0VBQ2hCLGFBQVksRUFDYjtBQUVEO0VBQ0UsaUJBQWU7RUFDZixZQUFXO0VBQ1gsYUFBWTtFQUNaLGlCQUFnQixFQUNqQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBvbmVudHMvbG9va3VwL2NyZWF0ZS1sb29rdXAtcG9wdXAuc3R5bGVzLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTaW5nIHZhcmlhYmxlc1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiRlbmFibGUtc2hhZG93czogdHJ1ZSAhZGVmYXVsdDtcclxuXHJcbiRnbHlwaGljb25zLWhhbGZsaW5ncy1pbmNsdWRlLWJvbnVzOiBmYWxzZSAhZGVmYXVsdDtcclxuJGdseXBoaWNvbnMtaGFsZmxpbmdzLWNsYXNzLXByZWZpeDogZ2x5cGhpY29uICFkZWZhdWx0O1xyXG4kZ2x5cGhpY29ucy1oYWxmbGluZ3MtZm9udC1iYXNlLXNpemU6IDE0cHggIWRlZmF1bHQ7XHJcblxyXG4kZ2x5cGhpY29ucy1oYWxmbGluZ3MtZm9udC1wYXRoOiAnfi9mb250cy9nbHlwaGljb25zJyAhZGVmYXVsdDtcclxuJGZhLWZvbnQtcGF0aDogJ34vZm9udC1hd2Vzb21lL2ZvbnRzJyAhZGVmYXVsdDtcclxuXHJcbi8qXHJcblxyXG4gKiBUeXBvZ3JhcGh5XHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4kZm9udC1zaXplLWluaXRpYWw6IDE0cHg7IC8vIHJlc2V0IGRlZmF1bHQgYnJvd3NlciB2YWx1ZSBmcm9tIDE2cHggdG8gMTNweFxyXG4kZm9udC1zaXplLWJhc2U6IDFyZW0gIWRlZmF1bHQ7XHJcbiRmb250LXNpemUtbGc6IDEuMjVyZW0gIWRlZmF1bHQ7XHJcbiRmb250LXNpemUtc206IDAuODc1cmVtICFkZWZhdWx0O1xyXG4kZm9udC1zaXplLWxhcmdlcjogMS4xcmVtO1xyXG4kZm9udC1zaXplLW1pbmk6IDAuOXJlbTtcclxuJGZvbnQtc2l6ZS1pbmRleDogMC43cmVtO1xyXG5cclxuJHNtYWxsLWZvbnQtc2l6ZTogODUlICFkZWZhdWx0O1xyXG5cclxuJGZvbnQtZmFtaWx5LWJhc2U6ICdvcGVuJyxcclxuc2Fucy1zZXJpZjtcclxuJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY6ICdvcGVuJyxcclxuc2Fucy1zZXJpZjtcclxuXHJcbi8vIENvbG9yIHN5c3RlbVxyXG4vL1xyXG5cclxuJHdoaXRlOiAjZmZmICFkZWZhdWx0O1xyXG4kZ3JheS0xMDA6ICNmNWY1ZjUgIWRlZmF1bHQ7XHJcbiRncmF5LTIwMDogI2VlZWVlZSAhZGVmYXVsdDtcclxuJGdyYXktMzAwOiAjZGVlMmU2ICFkZWZhdWx0O1xyXG4kZ3JheS00MDA6ICNjZWQ0ZGEgIWRlZmF1bHQ7XHJcbiRncmF5LTUwMDogI2FkYjViZCAhZGVmYXVsdDtcclxuJGdyYXktNjAwOiAjODY4ZTk2ICFkZWZhdWx0O1xyXG4kZ3JheS03MDA6ICM1NTUgIWRlZmF1bHQ7XHJcbiRncmF5LTgwMDogIzM0MzQzNCAhZGVmYXVsdDtcclxuJGdyYXktOTAwOiAjMjQyNDI0ICFkZWZhdWx0O1xyXG4kYmxhY2s6ICMwMDAgIWRlZmF1bHQ7XHJcbiRncmF5LWxpZ2h0OiAjZGRkICFkZWZhdWx0O1xyXG5cclxuXHJcbiRibHVlOiAjNWQ4ZmMyICFkZWZhdWx0O1xyXG4kcmVkOiAjZGQ1ODI2ICFkZWZhdWx0O1xyXG4keWVsbG93OiAjZjBiNTE4ICFkZWZhdWx0O1xyXG4kZ3JlZW46ICM2NGJkNjMgIWRlZmF1bHQ7XHJcbiRjeWFuOiAjNWRjNGJmICFkZWZhdWx0O1xyXG5cclxuJHRoZW1lLWNvbG9yczogKHByaW1hcnk6ICRibHVlLFxyXG5zZWNvbmRhcnk6ICRncmF5LTYwMCxcclxuc3VjY2VzczogJGdyZWVuLFxyXG5wcmltYXJ5LWxpZ2h0OiAjZGVlNGVlLFxyXG5zdWNjZXNzLWxpZ2h0OiAjZWNmYWVjLFxyXG5pbmZvLWxpZ2h0OiAjZjJmYWZhLFxyXG53YXJuaW5nLWxpZ2h0OiAjZmRmN2U2LFxyXG5kYW5nZXItbGlnaHQ6ICNmZmYyZWYsXHJcbmluZm86ICRjeWFuLFxyXG53YXJuaW5nOiAkeWVsbG93LFxyXG5kYW5nZXI6ICRyZWQsXHJcbmRhcms6ICRncmF5LTgwMCxcclxuaW52ZXJzZTogJGdyYXktNzAwLFxyXG5ncmF5OiAkZ3JheS0zMDAsXHJcbmRlZmF1bHQ6ICNmOGY4ZjgpO1xyXG5cclxuJGxpbmstY29sb3I6ICMyMThiYzM7XHJcblxyXG4kdGV4dC1jb2xvcjogJGdyYXktNzAwICFkZWZhdWx0O1xyXG5cclxuJGZvbnQtd2VpZ2h0LWJvbGQ6IDcwMCAhZGVmYXVsdDtcclxuJGZvbnQtd2VpZ2h0LXNlbWktYm9sZDogNjAwICFkZWZhdWx0O1xyXG4kZm9udC13ZWlnaHQtbm9ybWFsOiA1MDAgIWRlZmF1bHQ7XHJcbiRmb250LXdlaWdodC10aGluOiAzMDAgIWRlZmF1bHQ7XHJcbiRmb250LXdlaWdodC1iYXNlOiAkZm9udC13ZWlnaHQtbm9ybWFsICFkZWZhdWx0O1xyXG5cclxuJGZvbnQtc2l6ZS1zbWFsbGVyOiA4NSUgIWRlZmF1bHQ7XHJcbiRoZWFkaW5ncy1mb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LW5vcm1hbCAhZGVmYXVsdDtcclxuXHJcbiRhZGRpdGlvbi1iZzogI2Y4ZjhmOCAhZGVmYXVsdDtcclxuXHJcbiRib2R5LWJnOiBsaWdodGdyYXkgIWRlZmF1bHQ7IC8vICNmNWY1ZjUgIWRlZmF1bHQ7XHJcbiRib2R5LWJnLWxpZ2h0OiBsaWdodGVuKCRib2R5LWJnLCAzJSk7XHJcblxyXG4vLz09IENvbXBvbmVudHNcclxuLy9cclxuXHJcbiRwYWRkaW5nLWJhc2UtdmVydGljYWw6IDAuNXJlbSAhZGVmYXVsdDtcclxuJHBhZGRpbmctYmFzZS1ob3Jpem9udGFsOiAxcmVtICFkZWZhdWx0O1xyXG5cclxuJHBhZGRpbmctbGFyZ2UtdmVydGljYWw6IDAuNzVyZW0gIWRlZmF1bHQ7XHJcbiRwYWRkaW5nLWxhcmdlLWhvcml6b250YWw6IDEuMjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4kcGFkZGluZy1zbWFsbC12ZXJ0aWNhbDogMC4yNXJlbSAhZGVmYXVsdDtcclxuJHBhZGRpbmctc21hbGwtaG9yaXpvbnRhbDogMC43NXJlbSAhZGVmYXVsdDtcclxuXHJcbiRtYXJnaW4tYmFzZS12ZXJ0aWNhbDogMC41cmVtICFkZWZhdWx0O1xyXG4kbWFyZ2luLWJhc2UtaG9yaXpvbnRhbDogMXJlbSAhZGVmYXVsdDtcclxuXHJcbiRtYXJnaW4tbGFyZ2UtdmVydGljYWw6IDAuNzVyZW0gIWRlZmF1bHQ7XHJcbiRtYXJnaW4tbGFyZ2UtaG9yaXpvbnRhbDogMS4yNXJlbSAhZGVmYXVsdDtcclxuXHJcbiRtYXJnaW4tc21hbGwtdmVydGljYWw6IDAuMjVyZW0gIWRlZmF1bHQ7XHJcbiRtYXJnaW4tc21hbGwtaG9yaXpvbnRhbDogMC43NXJlbSAhZGVmYXVsdDtcclxuXHJcbiRib3JkZXItcmFkaXVzOiAuM3JlbSAhZGVmYXVsdDtcclxuJGJvcmRlci1yYWRpdXMtbGc6IC4zNXJlbSAhZGVmYXVsdDtcclxuJGJvcmRlci1yYWRpdXMtc206IC4yNXJlbSAhZGVmYXVsdDtcclxuXHJcbiRuYXYtbGluay1wYWRkaW5nOiAxNHB4O1xyXG5cclxuLy89PSBTaWRlYmFyXHJcbi8vXHJcbiRzaWRlYmFyLXBhZGRpbmctaG9yaXpvbnRhbDogMTFweDtcclxuJHNpZGViYXItd2lkdGgtb3BlbjogMjIwcHg7XHJcbiRzaWRlYmFyLXdpZHRoLWNsb3NlZDogNTBweDtcclxuJHNpZGViYXItdHJhbnNpdGlvbi10aW1lOiAwLjNzICFkZWZhdWx0O1xyXG4kc2lkZWJhci1zbGltLXNjcm9sbC13aWR0aDogNHB4O1xyXG4kc2lkZWJhci13aWR0aDogJHNpZGViYXItd2lkdGgtb3Blbiskc2lkZWJhci1zbGltLXNjcm9sbC13aWR0aCAhZGVmYXVsdDtcclxuXHJcbiRzaWRlYmFyLWJnLWNvbG9yOiAjMTc1MjlGO1xyXG4kc2lkZWJhci1jb2xvcjogJHdoaXRlO1xyXG5cclxuJHNpZGViYXItaXRlbS1ib3JkZXItY29sb3I6ICMyZDJkMmQ7XHJcbiRzaWRlYmFyLWl0ZW0tYWN0aXZlLWNvbG9yOiAjZjJiZTM1O1xyXG4kc2lkZWJhci1pdGVtLWhvdmVyLWJnLWNvbG9yOiAjMTExO1xyXG5cclxuJGNoYXQtc2lkZWJhci1iZy1jb2xvcjogJGdyYXktOTAwICFkZWZhdWx0O1xyXG4kY2hhdC1zaWRlYmFyLXdpZHRoOiAyNTBweCskc2lkZWJhci1zbGltLXNjcm9sbC13aWR0aCAhZGVmYXVsdDtcclxuXHJcbiRicmVhZGNydW1iLWRpdmlkZXI6ICcnO1xyXG4kYnJlYWRjcnVtYi1wYWRkaW5nLXk6IDA7XHJcbiRicmVhZGNydW1iLWJnOiB0cmFuc3BhcmVudDtcclxuXHJcbiRiYWRnZS1mb250LXdlaWdodDogNjAwO1xyXG5cclxuJHdpZGdldC1iZzogI2ZmZjtcclxuJHdpZGdldC10aXRsZS1jb2xvcjogIzQ0NDtcclxuJHdpZGdldC1zaGFkb3c6IDAgMCAxMHB4IGRhcmtlbigkYm9keS1iZywgNSUpO1xyXG5cclxuXHJcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQ6IDEuNTtcclxuXHJcbiRpbnB1dC1idG4tcGFkZGluZy15LXNtOiAwLjRyZW07XHJcbiRpbnB1dC1idG4tcGFkZGluZy14LXNtOiAwLjhyZW07XHJcblxyXG4kaW5wdXQtaGVpZ2h0LXNtYWxsOiAzMHB4O1xyXG5cclxuLy89PSBOYXZiYXJcclxuLy9cclxuXHJcbiRuYXZiYXItaGVpZ2h0OiA1MHB4ICFkZWZhdWx0O1xyXG4kbmF2YmFyLXBhZGRpbmcteTogMCAhZGVmYXVsdDtcclxuJG5hdmJhci1wYWRkaW5nLXg6IDAgIWRlZmF1bHQ7XHJcblxyXG4kbmF2YmFyLWRhc2hib2FyZC1iZzogJHdoaXRlICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhc2hib2FyZC1jb2xvcjogIzc3NyAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXNoYm9hcmQtYm9yZGVyOiBkYXJrZW4oJG5hdmJhci1kYXNoYm9hcmQtYmcsIDYuNSUpICFkZWZhdWx0O1xyXG5cclxuLy8gTmF2YmFyIGxpbmtzXHJcbiRuYXZiYXItZGFzaGJvYXJkLWxpbmstY29sb3I6ICM2NjYgIWRlZmF1bHQ7XHJcblxyXG4vLyBOYXZiYXIgbGlua3NcclxuJG5hdmJhci1kYXNoYm9hcmQtbGluay1ob3Zlci1jb2xvcjogIzMzMyAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXNoYm9hcmQtbGluay1ob3Zlci1iZzogdHJhbnNwYXJlbnQgIWRlZmF1bHQ7XHJcbiRuYXZiYXItZGFzaGJvYXJkLWxpbmstYWN0aXZlLWNvbG9yOiAjNTU1ICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhc2hib2FyZC1saW5rLWFjdGl2ZS1iZzogZGFya2VuKCRuYXZiYXItZGFzaGJvYXJkLWJnLCA2LjUlKSAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXNoYm9hcmQtbGluay1kaXNhYmxlZC1jb2xvcjogI2NjYyAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXNoYm9hcmQtbGluay1kaXNhYmxlZC1iZzogdHJhbnNwYXJlbnQgIWRlZmF1bHQ7XHJcblxyXG4vLyBOYXZiYXIgYnJhbmQgbGFiZWxcclxuJG5hdmJhci1kYXNoYm9hcmQtYnJhbmQtY29sb3I6ICRuYXZiYXItZGFzaGJvYXJkLWxpbmstY29sb3IgIWRlZmF1bHQ7XHJcbiRuYXZiYXItZGFzaGJvYXJkLWJyYW5kLWhvdmVyLWNvbG9yOiBkYXJrZW4oJG5hdmJhci1kYXNoYm9hcmQtYnJhbmQtY29sb3IsIDEwJSkgIWRlZmF1bHQ7XHJcbiRuYXZiYXItZGFzaGJvYXJkLWJyYW5kLWhvdmVyLWJnOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuXHJcbi8vIE5hdmJhciB0b2dnbGVcclxuJG5hdmJhci1kYXNoYm9hcmQtdG9nZ2xlLWhvdmVyLWJnOiAjZGRkICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhc2hib2FyZC10b2dnbGUtaWNvbi1iYXItYmc6ICM4ODggIWRlZmF1bHQ7XHJcbiRuYXZiYXItZGFzaGJvYXJkLXRvZ2dsZS1ib3JkZXItY29sb3I6ICNkZGQgIWRlZmF1bHQ7XHJcblxyXG5cclxuLy8gQ29udGVudFxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4kY29udGVudC1wYWRkaW5nOiA0MHB4O1xyXG4kY29udGVudC1wYWRkaW5nLXRvcDogJGNvbnRlbnQtcGFkZGluZyskbmF2YmFyLWhlaWdodCAhZGVmYXVsdDtcclxuXHJcbi8vIFNjcmVlbnNcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuJHNjcmVlbi1sZy1oZWlnaHQ6IDY3MHB4ICFkZWZhdWx0O1xyXG5cclxuXHJcbi8vPT0gQnV0dG9uc1xyXG4vL1xyXG4kYnRuLWRlZmF1bHQtYmc6ICRhZGRpdGlvbi1iZyAhZGVmYXVsdDtcclxuJGJ0bi1kZWZhdWx0LWJvcmRlcjogcmdiYSgwLCAwLCAwLCAwLjE1KSAhZGVmYXVsdDtcclxuXHJcbi8vIERyb3Bkb3duc1xyXG4kZHJvcGRvd24tbGluay1jb2xvcjogJHRleHQtY29sb3I7XHJcblxyXG4vLyBXaWRnZXRzXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuJHdpZGdldC1wYWRkaW5nLXZlcnRpY2FsOiAxNXB4ICFkZWZhdWx0O1xyXG4kd2lkZ2V0LXBhZGRpbmctaG9yaXpvbnRhbDogMjBweCAhZGVmYXVsdDtcclxuJHdpZGdldC1iZy1jb2xvcjogJHdoaXRlO1xyXG5cclxuLy89PSBOYXZzXHJcbi8vXHJcbiRuYXYtdGFicy1hY3RpdmUtbGluay1ob3Zlci1iZzogJHdoaXRlICFkZWZhdWx0O1xyXG4kbmF2LXRhYnMtYWN0aXZlLWxpbmstaG92ZXItY29sb3I6ICRncmF5LTcwMCAhZGVmYXVsdDtcclxuXHJcbi8vPT0gRm9ybXNcclxuLy9cclxuJGlucHV0LWJvcmRlci1mb2N1czogIzRkOTBmZSAhZGVmYXVsdDsgLy93ZWJraXQgZm9jdXMgY29sb3JcclxuJGxlZ2VuZC1jb2xvcjogbGlnaHRlbigkdGV4dC1jb2xvciwgMTUlKSAhZGVmYXVsdDtcclxuXHJcbiRwcmUtYmc6ICNmNWY1ZjUgIWRlZmF1bHQ7XHJcblxyXG4kY3Vyc29yLWRpc2FibGVkOiBub3QtYWxsb3dlZCAhZGVmYXVsdDtcclxuXHJcbi8vIEZvcm0gc3RhdGVzIGFuZCBhbGVydHNcclxuLy9cclxuLy8gRGVmaW5lIGNvbG9ycyBmb3IgZm9ybSBmZWVkYmFjayBzdGF0ZXMgYW5kLCBieSBkZWZhdWx0LCBhbGVydHMuXHJcblxyXG4kc3RhdGUtc3VjY2Vzcy10ZXh0OiAjM2M3NjNkICFkZWZhdWx0O1xyXG4kc3RhdGUtc3VjY2Vzcy1iZzogI2RmZjBkOCAhZGVmYXVsdDtcclxuJHN0YXRlLXN1Y2Nlc3MtYm9yZGVyOiBkYXJrZW4oJHN0YXRlLXN1Y2Nlc3MtYmcsIDUlKSAhZGVmYXVsdDtcclxuXHJcbiRzdGF0ZS1pbmZvLXRleHQ6ICMzMTcwOGYgIWRlZmF1bHQ7XHJcbiRzdGF0ZS1pbmZvLWJnOiAjZDllZGY3ICFkZWZhdWx0O1xyXG4kc3RhdGUtaW5mby1ib3JkZXI6IGRhcmtlbigkc3RhdGUtaW5mby1iZywgNyUpICFkZWZhdWx0O1xyXG5cclxuJHN0YXRlLXdhcm5pbmctdGV4dDogIzhhNmQzYiAhZGVmYXVsdDtcclxuJHN0YXRlLXdhcm5pbmctYmc6ICNmY2Y4ZTMgIWRlZmF1bHQ7XHJcbiRtYXJrLWJnOiAkc3RhdGUtd2FybmluZy1iZyAhZGVmYXVsdDtcclxuJHN0YXRlLXdhcm5pbmctYm9yZGVyOiBkYXJrZW4oJHN0YXRlLXdhcm5pbmctYmcsIDUlKSAhZGVmYXVsdDtcclxuXHJcbiRzdGF0ZS1kYW5nZXItdGV4dDogI2E5NDQ0MiAhZGVmYXVsdDtcclxuJHN0YXRlLWRhbmdlci1iZzogI2YyZGVkZSAhZGVmYXVsdDtcclxuJHN0YXRlLWRhbmdlci1ib3JkZXI6IGRhcmtlbigkc3RhdGUtZGFuZ2VyLWJnLCA1JSkgIWRlZmF1bHQ7XHJcblxyXG4vLyogIFBvcG92ZXIgICovXHJcbiRwb3BvdmVyLWJnOiAjZWJlZmYxICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1hcnJvdy1vdXRlci1jb2xvcjogJHBvcG92ZXItYmcgIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWFycm93LWNvbG9yOiAkcG9wb3Zlci1iZyAhZGVmYXVsdDtcclxuXHJcbiRicmFuZC1wcmltYXJ5OiBkYXJrZW4oIzQyOGJjYSwgNi41JSkgIWRlZmF1bHQ7IC8vICMzMzdhYjdcclxuJHBhZ2luYXRpb24tYWN0aXZlLWJvcmRlcjogJGJyYW5kLXByaW1hcnkgIWRlZmF1bHQ7XHJcbiRwYW5lbC1iZzogI2ZmZiAhZGVmYXVsdDtcclxuJHBhbmVsLWRlZmF1bHQtaGVhZGluZy1iZzogI2Y1ZjVmNSAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tZGlzYWJsZWQtYm9yZGVyOiAjZGRkICFkZWZhdWx0O1xyXG4kaW5wdXQtYmctZGlzYWJsZWQ6ICRncmF5LTMwMCAhZGVmYXVsdDtcclxuJGdyYXktYmFzZTogIzAwMCAhZGVmYXVsdDtcclxuJGdyYXktZGFya2VyOiBsaWdodGVuKCRncmF5LWJhc2UsIDEzLjUlKSAhZGVmYXVsdDsgLy8gIzIyMlxyXG4kZ3JheS1kYXJrOiBsaWdodGVuKCRncmF5LWJhc2UsIDIwJSkgIWRlZmF1bHQ7IC8vICMzMzNcclxuJGdyYXk6IGxpZ2h0ZW4oJGdyYXktYmFzZSwgMzMuNSUpICFkZWZhdWx0OyAvLyAjNTU1XHJcbiRncmF5LWxpZ2h0OiBsaWdodGVuKCRncmF5LWJhc2UsIDQ2LjclKSAhZGVmYXVsdDsgLy8gIzc3N1xyXG4kZ3JheS1saWdodGVyOiBsaWdodGVuKCRncmF5LWJhc2UsIDkzLjUlKSAhZGVmYXVsdDsgLy8gI2VlZVxyXG4kZ3JheS1zZW1pLWxpZ2h0ZXI6ICRncmF5LTMwMCAhZGVmYXVsdDtcclxuXHJcbi8vKiogVW5pdC1sZXNzIGBsaW5lLWhlaWdodGAgZm9yIHVzZSBpbiBjb21wb25lbnRzIGxpa2UgYnV0dG9ucy5cclxuJGxpbmUtaGVpZ2h0LWJhc2U6IDEuNDI4NTcxNDI5ICFkZWZhdWx0OyAvLyAyMC8xNFxyXG4vLyoqIENvbXB1dGVkIFwibGluZS1oZWlnaHRcIiAoYGZvbnQtc2l6ZWAgKiBgbGluZS1oZWlnaHRgKSBmb3IgdXNlIHdpdGggYG1hcmdpbmAsIGBwYWRkaW5nYCwgZXRjLlxyXG4kbGluZS1oZWlnaHQtY29tcHV0ZWQ6IGZsb29yKCgkZm9udC1zaXplLWJhc2UgKiAkbGluZS1oZWlnaHQtYmFzZSkpICFkZWZhdWx0OyAvLyB+MjBweFxyXG5cclxuJGJyYW5kLXByaW1hcnk6IGRhcmtlbigjNDI4YmNhLCA2LjUlKSAhZGVmYXVsdDsgLy8gIzMzN2FiN1xyXG4kYnJhbmQtc3VjY2VzczogIzVjYjg1YyAhZGVmYXVsdDtcclxuJGJyYW5kLWluZm86ICM1YmMwZGUgIWRlZmF1bHQ7XHJcbiRicmFuZC13YXJuaW5nOiAjZjBhZDRlICFkZWZhdWx0O1xyXG4kYnJhbmQtZGFuZ2VyOiAjZDk1MzRmICFkZWZhdWx0O1xyXG5cclxuJHBhZ2luYXRpb24tYm9yZGVyOiAjZGRkICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1ob3Zlci1ib3JkZXI6ICNkZGQgIWRlZmF1bHQ7XHJcblxyXG4kc3BhY2VyLXk6IDEgZW0gIWRlZmF1bHQ7IiwiQGltcG9ydCBcImhlbHBlcnNcIjtcclxuXHJcbi5oLWRpdmlkZXJ7XHJcbiB3aWR0aDoxMDAlO1xyXG4gYm9yZGVyLWJvdHRvbTozcHggc29saWQgIzc3ODg5OTtcclxufVxyXG5cclxuLmgtdGhpbi1kaXZpZGVye1xyXG4gd2lkdGg6MTAwJTtcclxuIGJvcmRlci1ib3R0b206MXB4IHNvbGlkIGdyYXk7XHJcbiBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuaW5wdXQucGFyc2xleS1lcnJvcntcclxuICBib3JkZXItY29sb3I6ICRicmFuZC1kYW5nZXI7XHJcbiAgQGluY2x1ZGUgYm94LXNoYWRvdyhpbnNldCAwIDFweCAxcHggcmdiYSgkYnJhbmQtZGFuZ2VyLC4wNzUpKTtcclxufVxyXG5cclxuLnBhcnNsZXktZXJyb3JzLWxpc3R7XHJcbiAgZm9udC1zaXplOiAkZm9udC1zaXplLXNtYWxsZXI7XHJcbiAgcGFkZGluZy1sZWZ0OiAwO1xyXG4gIG1hcmdpbi1ib3R0b206IDVweDtcclxuXHJcbiAgbGl7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgY29sb3I6ICRicmFuZC1kYW5nZXI7XHJcbiAgfVxyXG59XHJcblxyXG4uc3dpdGNoe1xyXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xyXG4gIG1hcmdpbi1sZWZ0OiAtMjBweDtcclxufVxyXG5cclxuLnN3aXRjaCBpIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIG1hcmdpbi1sZWZ0OiAtMjBweDtcclxuICBtYXJnaW4tYm90dG9tOi0zcHg7XHJcbiAgcGFkZGluZy1yaWdodDogMjBweDtcclxuICB0cmFuc2l0aW9uOiBhbGwgZWFzZSAwLjJzO1xyXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIGVhc2UgMC4ycztcclxuICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMCAxcHggcmdiYSgwLDAsMCwuNSk7XHJcbn1cclxuXHJcbi5zd2l0Y2ggaTpiZWZvcmUge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGNvbnRlbnQ6ICcnO1xyXG4gIHdpZHRoOiAzMHB4O1xyXG4gIGhlaWdodDogMzBweDtcclxuICBwYWRkaW5nOiAxcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICBib3gtc2hhZG93OiAwIDFweCAycHggcmdiYSgwLDAsMCwuNSk7XHJcbn1cclxuLnN3aXRjaCA6Y2hlY2tlZCArIGkge1xyXG4gIHBhZGRpbmctcmlnaHQ6IDA7XHJcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xyXG4gIGJhY2tncm91bmQ6IHJnYigxMDAsIDE4OSwgOTkpO1xyXG59XHJcblxyXG5cclxuLndoaXRlLCAud2hpdGUgYSB7XHJcbiAgY29sb3I6ICNmZmY7XHJcbn1cclxuXHJcbi5idG4tbGFiZWwge1xyXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIGxlZnQ6IDJweDtcclxuICBwYWRkaW5nOiAxcHggNnB4O1xyXG59XHJcblxyXG4ubWQtZWRpdG9yIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBib3JkZXI6IDFweCBzb2xpZCAkdGFibGUtYm9yZGVyLWNvbG9yO1xyXG5cclxuICA+IC5tZC1oZWFkZXIsIC5tZC1mb290ZXIge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwYWRkaW5nOiA2cHggNHB4O1xyXG4gICAgYmFja2dyb3VuZDogJHBhbmVsLWRlZmF1bHQtaGVhZGluZy1iZztcclxuICB9XHJcblxyXG4gID4gLm1kLWhlYWRlciB7XHJcbiAgICBtYXJnaW46IDA7XHJcblxyXG4gICAgLmdseXBoaWNvbiB7XHJcbiAgICAgIHRvcDogM3B4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgPiAubWQtcHJldmlldyB7XHJcbiAgICBtYXJnaW4tbGVmdDogLTFweDtcclxuICAgIG1hcmdpbi1yaWdodDogLTFweDtcclxuICAgIHBhZGRpbmc6ICRwYWRkaW5nLWJhc2UtdmVydGljYWwgJHBhZGRpbmctYmFzZS1ob3Jpem9udGFsO1xyXG4gICAgYmFja2dyb3VuZDogJHBhbmVsLWJnO1xyXG4gICAgYm9yZGVyLXRvcDogMXB4IGRhc2hlZCAkdGFibGUtYm9yZGVyLWNvbG9yO1xyXG4gICAgbWluLWhlaWdodDogMTBweDtcclxuICB9XHJcblxyXG4gID4gdGV4dGFyZWEge1xyXG4gICAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseS1tb25vc3BhY2U7XHJcbiAgICBmb250LXNpemU6ICRmb250LXNpemUtYmFzZTtcclxuICAgIG91dGxpbmU6IDA7XHJcbiAgICBvdXRsaW5lOiB0aGluIGRvdHRlZCAgXFw5OyAvKiBJRTYtOSAqL1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIGJvcmRlci10b3A6IDFweCBkYXNoZWQgJHRhYmxlLWJvcmRlci1jb2xvcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgICBib3gtc2hhZG93OiBub25lO1xyXG4gICAgYmFja2dyb3VuZDogJGlucHV0LWJnLWRpc2FibGVkO1xyXG4gICAgJjpmb2N1cyB7XHJcbiAgICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICAgIGJhY2tncm91bmQ6ICRpbnB1dC1iZztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIEhvdmVyIHN0YXRlXHJcbiAgJGNvbG9yOiAkaW5wdXQtYm9yZGVyLWZvY3VzO1xyXG4gICYuYWN0aXZlIHtcclxuICAgIGJvcmRlci1jb2xvcjogJGNvbG9yO1xyXG4gICAgb3V0bGluZTogMDtcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBCb290c3RyYXAgc2VsZWN0XHJcbiAqL1xyXG5cclxuLnNlbGVjdHBpY2tlci5mb3JtLWNvbnRyb2wge1xyXG4gIGhlaWdodDogYXV0bztcclxufVxyXG5cclxuLmJvb3RzdHJhcC1zZWxlY3Qge1xyXG4gIC5kcm9wZG93bi10b2dnbGUge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG5cclxuICAgICY6YWZ0ZXIge1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgfVxyXG4gIH1cclxuICAuZHJvcGRvd24tbWVudSA+IGxpID4gYSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHdpZHRoOiAxMDAlOyAvLyBGb3IgYDxidXR0b24+YHNcclxuICAgIHBhZGRpbmc6IDNweCAyMHB4O1xyXG4gICAgY2xlYXI6IGJvdGg7XHJcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC1iYXNlO1xyXG4gICAgY29sb3I6ICRkcm9wZG93bi1saW5rLWNvbG9yO1xyXG4gICAgdGV4dC1hbGlnbjogaW5oZXJpdDsgLy8gRm9yIGA8YnV0dG9uPmBzXHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOyAvLyBwcmV2ZW50IGxpbmtzIGZyb20gcmFuZG9tbHkgYnJlYWtpbmcgb250byBuZXcgbGluZXNcclxuICAgIGJhY2tncm91bmQ6IG5vbmU7IC8vIEZvciBgPGJ1dHRvbj5gc1xyXG4gICAgYm9yZGVyOiAwOyAvLyBGb3IgYDxidXR0b24+YHNcclxuXHJcbiAgICBAaW5jbHVkZSBob3Zlci1mb2N1cyB7XHJcbiAgICAgIGNvbG9yOiAkZHJvcGRvd24tbGluay1ob3Zlci1jb2xvcjtcclxuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZHJvcGRvd24tbGluay1ob3Zlci1iZztcclxuICAgIH1cclxuXHJcbiAgICAvLyBBY3RpdmUgc3RhdGVcclxuICAgICYuYWN0aXZlIHtcclxuICAgICAgQGluY2x1ZGUgcGxhaW4taG92ZXItZm9jdXMge1xyXG4gICAgICAgIGNvbG9yOiAkZHJvcGRvd24tbGluay1hY3RpdmUtY29sb3I7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRkcm9wZG93bi1saW5rLWFjdGl2ZS1iZztcclxuICAgICAgICBvdXRsaW5lOiAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRGlzYWJsZWQgc3RhdGVcclxuICAgIC8vXHJcbiAgICAvLyBHcmF5IG91dCB0ZXh0IGFuZCBlbnN1cmUgdGhlIGhvdmVyL2ZvY3VzIHN0YXRlIHJlbWFpbnMgZ3JheVxyXG4gICAgJi5kaXNhYmxlZCB7XHJcbiAgICAgIEBpbmNsdWRlIHBsYWluLWhvdmVyLWZvY3VzIHtcclxuICAgICAgICBjb2xvcjogJGRyb3Bkb3duLWxpbmstZGlzYWJsZWQtY29sb3I7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIE51a2UgaG92ZXIvZm9jdXMgZWZmZWN0c1xyXG4gICAgICBAaW5jbHVkZSBob3Zlci1mb2N1cyB7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIGN1cnNvcjogJGN1cnNvci1kaXNhYmxlZDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lOyAvLyBSZW1vdmUgQ1NTIGdyYWRpZW50XHJcbiAgICAgICAgLy8gQGluY2x1ZGUgcmVzZXQtZmlsdGVyKCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4qICBhdXRvc2l6ZVxyXG4qKi9cclxuXHJcbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cclxuLyoqICAgICAgICAgIE5FV1MgTElTVCAgICAgICAgICAgKiovXHJcbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuLm5ld3MtbGlzdHtcclxuICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gIHBhZGRpbmctbGVmdDogMDtcclxuXHJcbiAgbGl7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgYm94LXNpemluZzogY29udGVudC1ib3g7XHJcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgJGdyYXktbGlnaHRlcjtcclxuICAgIHBhZGRpbmc6IDEycHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKGJhY2tncm91bmQtY29sb3IgLjJzIGVhc2Utb3V0KTtcclxuXHJcbiAgICAmOmhvdmVye1xyXG4gICAgICBiYWNrZ3JvdW5kOiAkYm9keS1iZy1saWdodDtcclxuICAgIH1cclxuXHJcbiAgICAmOmxhc3QtY2hpbGR7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IC0xMHB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaW1nLFxyXG4gIC5pY29ue1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICB3aWR0aDogNTBweDtcclxuICB9XHJcblxyXG4gIC5pY29ue1xyXG4gICAgbGluZS1oZWlnaHQ6IDUwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IDI4cHg7XHJcbiAgfVxyXG5cclxuICAubmV3cy1pdGVtLWluZm97XHJcbiAgICBtYXJnaW4tbGVmdDogNjJweDsgLyo1MCArIDEycHggcGFkZGluZyovXHJcbiAgfVxyXG5cclxuICAubmFtZXtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblxyXG4gICAgYXtcclxuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAmOmhvdmVye1xyXG4gICAgICAgIGNvbG9yOiAkbGluay1jb2xvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmF1dG9ncm93IHtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHJlc2l6ZTogbm9uZTtcclxufVxyXG5cclxuLmZvcm0tY2hlY2tib3h7XHJcbiAgbWFyZ2luLWxlZnQ6NXB4O1xyXG4gIHdpZHRoOiAyMHB4O1xyXG4gIGhlaWdodDogMjBweDtcclxuICBib3gtc2hhZG93OiBub25lO1xyXG59IiwiQG1peGluIGJveC1zaGFkb3coJHNoYWRvdy4uLikge1xuICBAaWYgJGVuYWJsZS1zaGFkb3dzIHtcbiAgICBib3gtc2hhZG93OiAkc2hhZG93O1xuICB9XG59XG4iLCIvLyBWYXJpYWJsZXNcbi8vXG4vLyBWYXJpYWJsZXMgc2hvdWxkIGZvbGxvdyB0aGUgYCRjb21wb25lbnQtc3RhdGUtcHJvcGVydHktc2l6ZWAgZm9ybXVsYSBmb3Jcbi8vIGNvbnNpc3RlbnQgbmFtaW5nLiBFeDogJG5hdi1saW5rLWRpc2FibGVkLWNvbG9yIGFuZCAkbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzLlxuXG4vLyBDb2xvciBzeXN0ZW1cblxuJHdoaXRlOiAgICAjZmZmICFkZWZhdWx0O1xuJGdyYXktMTAwOiAjZjhmOWZhICFkZWZhdWx0O1xuJGdyYXktMjAwOiAjZTllY2VmICFkZWZhdWx0O1xuJGdyYXktMzAwOiAjZGVlMmU2ICFkZWZhdWx0O1xuJGdyYXktNDAwOiAjY2VkNGRhICFkZWZhdWx0O1xuJGdyYXktNTAwOiAjYWRiNWJkICFkZWZhdWx0O1xuJGdyYXktNjAwOiAjNmM3NTdkICFkZWZhdWx0O1xuJGdyYXktNzAwOiAjNDk1MDU3ICFkZWZhdWx0O1xuJGdyYXktODAwOiAjMzQzYTQwICFkZWZhdWx0O1xuJGdyYXktOTAwOiAjMjEyNTI5ICFkZWZhdWx0O1xuJGJsYWNrOiAgICAjMDAwICFkZWZhdWx0O1xuXG4kZ3JheXM6ICgpICFkZWZhdWx0O1xuLy8gc3R5bGVsaW50LWRpc2FibGUtbmV4dC1saW5lIHNjc3MvZG9sbGFyLXZhcmlhYmxlLWRlZmF1bHRcbiRncmF5czogbWFwLW1lcmdlKFxuICAoXG4gICAgXCIxMDBcIjogJGdyYXktMTAwLFxuICAgIFwiMjAwXCI6ICRncmF5LTIwMCxcbiAgICBcIjMwMFwiOiAkZ3JheS0zMDAsXG4gICAgXCI0MDBcIjogJGdyYXktNDAwLFxuICAgIFwiNTAwXCI6ICRncmF5LTUwMCxcbiAgICBcIjYwMFwiOiAkZ3JheS02MDAsXG4gICAgXCI3MDBcIjogJGdyYXktNzAwLFxuICAgIFwiODAwXCI6ICRncmF5LTgwMCxcbiAgICBcIjkwMFwiOiAkZ3JheS05MDBcbiAgKSxcbiAgJGdyYXlzXG4pO1xuXG4kYmx1ZTogICAgIzAwN2JmZiAhZGVmYXVsdDtcbiRpbmRpZ286ICAjNjYxMGYyICFkZWZhdWx0O1xuJHB1cnBsZTogICM2ZjQyYzEgIWRlZmF1bHQ7XG4kcGluazogICAgI2U4M2U4YyAhZGVmYXVsdDtcbiRyZWQ6ICAgICAjZGMzNTQ1ICFkZWZhdWx0O1xuJG9yYW5nZTogICNmZDdlMTQgIWRlZmF1bHQ7XG4keWVsbG93OiAgI2ZmYzEwNyAhZGVmYXVsdDtcbiRncmVlbjogICAjMjhhNzQ1ICFkZWZhdWx0O1xuJHRlYWw6ICAgICMyMGM5OTcgIWRlZmF1bHQ7XG4kY3lhbjogICAgIzE3YTJiOCAhZGVmYXVsdDtcblxuJGNvbG9yczogKCkgIWRlZmF1bHQ7XG4vLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc2Nzcy9kb2xsYXItdmFyaWFibGUtZGVmYXVsdFxuJGNvbG9yczogbWFwLW1lcmdlKFxuICAoXG4gICAgXCJibHVlXCI6ICAgICAgICRibHVlLFxuICAgIFwiaW5kaWdvXCI6ICAgICAkaW5kaWdvLFxuICAgIFwicHVycGxlXCI6ICAgICAkcHVycGxlLFxuICAgIFwicGlua1wiOiAgICAgICAkcGluayxcbiAgICBcInJlZFwiOiAgICAgICAgJHJlZCxcbiAgICBcIm9yYW5nZVwiOiAgICAgJG9yYW5nZSxcbiAgICBcInllbGxvd1wiOiAgICAgJHllbGxvdyxcbiAgICBcImdyZWVuXCI6ICAgICAgJGdyZWVuLFxuICAgIFwidGVhbFwiOiAgICAgICAkdGVhbCxcbiAgICBcImN5YW5cIjogICAgICAgJGN5YW4sXG4gICAgXCJ3aGl0ZVwiOiAgICAgICR3aGl0ZSxcbiAgICBcImdyYXlcIjogICAgICAgJGdyYXktNjAwLFxuICAgIFwiZ3JheS1kYXJrXCI6ICAkZ3JheS04MDBcbiAgKSxcbiAgJGNvbG9yc1xuKTtcblxuJHByaW1hcnk6ICAgICAgICRibHVlICFkZWZhdWx0O1xuJHNlY29uZGFyeTogICAgICRncmF5LTYwMCAhZGVmYXVsdDtcbiRzdWNjZXNzOiAgICAgICAkZ3JlZW4gIWRlZmF1bHQ7XG4kaW5mbzogICAgICAgICAgJGN5YW4gIWRlZmF1bHQ7XG4kd2FybmluZzogICAgICAgJHllbGxvdyAhZGVmYXVsdDtcbiRkYW5nZXI6ICAgICAgICAkcmVkICFkZWZhdWx0O1xuJGxpZ2h0OiAgICAgICAgICRncmF5LTEwMCAhZGVmYXVsdDtcbiRkYXJrOiAgICAgICAgICAkZ3JheS04MDAgIWRlZmF1bHQ7XG5cbiR0aGVtZS1jb2xvcnM6ICgpICFkZWZhdWx0O1xuLy8gc3R5bGVsaW50LWRpc2FibGUtbmV4dC1saW5lIHNjc3MvZG9sbGFyLXZhcmlhYmxlLWRlZmF1bHRcbiR0aGVtZS1jb2xvcnM6IG1hcC1tZXJnZShcbiAgKFxuICAgIFwicHJpbWFyeVwiOiAgICAkcHJpbWFyeSxcbiAgICBcInNlY29uZGFyeVwiOiAgJHNlY29uZGFyeSxcbiAgICBcInN1Y2Nlc3NcIjogICAgJHN1Y2Nlc3MsXG4gICAgXCJpbmZvXCI6ICAgICAgICRpbmZvLFxuICAgIFwid2FybmluZ1wiOiAgICAkd2FybmluZyxcbiAgICBcImRhbmdlclwiOiAgICAgJGRhbmdlcixcbiAgICBcImxpZ2h0XCI6ICAgICAgJGxpZ2h0LFxuICAgIFwiZGFya1wiOiAgICAgICAkZGFya1xuICApLFxuICAkdGhlbWUtY29sb3JzXG4pO1xuXG4vLyBTZXQgYSBzcGVjaWZpYyBqdW1wIHBvaW50IGZvciByZXF1ZXN0aW5nIGNvbG9yIGp1bXBzXG4kdGhlbWUtY29sb3ItaW50ZXJ2YWw6ICAgICAgOCUgIWRlZmF1bHQ7XG5cbi8vIFRoZSB5aXEgbGlnaHRuZXNzIHZhbHVlIHRoYXQgZGV0ZXJtaW5lcyB3aGVuIHRoZSBsaWdodG5lc3Mgb2YgY29sb3IgY2hhbmdlcyBmcm9tIFwiZGFya1wiIHRvIFwibGlnaHRcIi4gQWNjZXB0YWJsZSB2YWx1ZXMgYXJlIGJldHdlZW4gMCBhbmQgMjU1LlxuJHlpcS1jb250cmFzdGVkLXRocmVzaG9sZDogIDE1MCAhZGVmYXVsdDtcblxuLy8gQ3VzdG9taXplIHRoZSBsaWdodCBhbmQgZGFyayB0ZXh0IGNvbG9ycyBmb3IgdXNlIGluIG91ciBZSVEgY29sb3IgY29udHJhc3QgZnVuY3Rpb24uXG4keWlxLXRleHQtZGFyazogICAgICAgICAgICAgJGdyYXktOTAwICFkZWZhdWx0O1xuJHlpcS10ZXh0LWxpZ2h0OiAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcblxuXG4vLyBPcHRpb25zXG4vL1xuLy8gUXVpY2tseSBtb2RpZnkgZ2xvYmFsIHN0eWxpbmcgYnkgZW5hYmxpbmcgb3IgZGlzYWJsaW5nIG9wdGlvbmFsIGZlYXR1cmVzLlxuXG4kZW5hYmxlLWNhcmV0OiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ1ZSAhZGVmYXVsdDtcbiRlbmFibGUtcm91bmRlZDogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnVlICFkZWZhdWx0O1xuJGVuYWJsZS1zaGFkb3dzOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhbHNlICFkZWZhdWx0O1xuJGVuYWJsZS1ncmFkaWVudHM6ICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhbHNlICFkZWZhdWx0O1xuJGVuYWJsZS10cmFuc2l0aW9uczogICAgICAgICAgICAgICAgICAgICAgICAgIHRydWUgIWRlZmF1bHQ7XG4kZW5hYmxlLXByZWZlcnMtcmVkdWNlZC1tb3Rpb24tbWVkaWEtcXVlcnk6ICAgdHJ1ZSAhZGVmYXVsdDtcbiRlbmFibGUtaG92ZXItbWVkaWEtcXVlcnk6ICAgICAgICAgICAgICAgICAgICBmYWxzZSAhZGVmYXVsdDsgLy8gRGVwcmVjYXRlZCwgbm8gbG9uZ2VyIGFmZmVjdHMgYW55IGNvbXBpbGVkIENTU1xuJGVuYWJsZS1ncmlkLWNsYXNzZXM6ICAgICAgICAgICAgICAgICAgICAgICAgIHRydWUgIWRlZmF1bHQ7XG4kZW5hYmxlLXByaW50LXN0eWxlczogICAgICAgICAgICAgICAgICAgICAgICAgdHJ1ZSAhZGVmYXVsdDtcbiRlbmFibGUtdmFsaWRhdGlvbi1pY29uczogICAgICAgICAgICAgICAgICAgICB0cnVlICFkZWZhdWx0O1xuXG5cbi8vIFNwYWNpbmdcbi8vXG4vLyBDb250cm9sIHRoZSBkZWZhdWx0IHN0eWxpbmcgb2YgbW9zdCBCb290c3RyYXAgZWxlbWVudHMgYnkgbW9kaWZ5aW5nIHRoZXNlXG4vLyB2YXJpYWJsZXMuIE1vc3RseSBmb2N1c2VkIG9uIHNwYWNpbmcuXG4vLyBZb3UgY2FuIGFkZCBtb3JlIGVudHJpZXMgdG8gdGhlICRzcGFjZXJzIG1hcCwgc2hvdWxkIHlvdSBuZWVkIG1vcmUgdmFyaWF0aW9uLlxuXG4kc3BhY2VyOiAxcmVtICFkZWZhdWx0O1xuJHNwYWNlcnM6ICgpICFkZWZhdWx0O1xuLy8gc3R5bGVsaW50LWRpc2FibGUtbmV4dC1saW5lIHNjc3MvZG9sbGFyLXZhcmlhYmxlLWRlZmF1bHRcbiRzcGFjZXJzOiBtYXAtbWVyZ2UoXG4gIChcbiAgICAwOiAwLFxuICAgIDE6ICgkc3BhY2VyICogLjI1KSxcbiAgICAyOiAoJHNwYWNlciAqIC41KSxcbiAgICAzOiAkc3BhY2VyLFxuICAgIDQ6ICgkc3BhY2VyICogMS41KSxcbiAgICA1OiAoJHNwYWNlciAqIDMpXG4gICksXG4gICRzcGFjZXJzXG4pO1xuXG4vLyBUaGlzIHZhcmlhYmxlIGFmZmVjdHMgdGhlIGAuaC0qYCBhbmQgYC53LSpgIGNsYXNzZXMuXG4kc2l6ZXM6ICgpICFkZWZhdWx0O1xuLy8gc3R5bGVsaW50LWRpc2FibGUtbmV4dC1saW5lIHNjc3MvZG9sbGFyLXZhcmlhYmxlLWRlZmF1bHRcbiRzaXplczogbWFwLW1lcmdlKFxuICAoXG4gICAgMjU6IDI1JSxcbiAgICA1MDogNTAlLFxuICAgIDc1OiA3NSUsXG4gICAgMTAwOiAxMDAlLFxuICAgIGF1dG86IGF1dG9cbiAgKSxcbiAgJHNpemVzXG4pO1xuXG5cbi8vIEJvZHlcbi8vXG4vLyBTZXR0aW5ncyBmb3IgdGhlIGA8Ym9keT5gIGVsZW1lbnQuXG5cbiRib2R5LWJnOiAgICAgICAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XG4kYm9keS1jb2xvcjogICAgICAgICAgICAgICAgJGdyYXktOTAwICFkZWZhdWx0O1xuXG5cbi8vIExpbmtzXG4vL1xuLy8gU3R5bGUgYW5jaG9yIGVsZW1lbnRzLlxuXG4kbGluay1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGVtZS1jb2xvcihcInByaW1hcnlcIikgIWRlZmF1bHQ7XG4kbGluay1kZWNvcmF0aW9uOiAgICAgICAgICAgICAgICAgICAgICAgICBub25lICFkZWZhdWx0O1xuJGxpbmstaG92ZXItY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgZGFya2VuKCRsaW5rLWNvbG9yLCAxNSUpICFkZWZhdWx0O1xuJGxpbmstaG92ZXItZGVjb3JhdGlvbjogICAgICAgICAgICAgICAgICAgdW5kZXJsaW5lICFkZWZhdWx0O1xuLy8gRGFya2VuIHBlcmNlbnRhZ2UgZm9yIGxpbmtzIHdpdGggYC50ZXh0LSpgIGNsYXNzIChlLmcuIGAudGV4dC1zdWNjZXNzYClcbiRlbXBoYXNpemVkLWxpbmstaG92ZXItZGFya2VuLXBlcmNlbnRhZ2U6IDE1JSAhZGVmYXVsdDtcblxuLy8gUGFyYWdyYXBoc1xuLy9cbi8vIFN0eWxlIHAgZWxlbWVudC5cblxuJHBhcmFncmFwaC1tYXJnaW4tYm90dG9tOiAgIDFyZW0gIWRlZmF1bHQ7XG5cblxuLy8gR3JpZCBicmVha3BvaW50c1xuLy9cbi8vIERlZmluZSB0aGUgbWluaW11bSBkaW1lbnNpb25zIGF0IHdoaWNoIHlvdXIgbGF5b3V0IHdpbGwgY2hhbmdlLFxuLy8gYWRhcHRpbmcgdG8gZGlmZmVyZW50IHNjcmVlbiBzaXplcywgZm9yIHVzZSBpbiBtZWRpYSBxdWVyaWVzLlxuXG4kZ3JpZC1icmVha3BvaW50czogKCkgIWRlZmF1bHQ7XG4vLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc2Nzcy9kb2xsYXItdmFyaWFibGUtZGVmYXVsdFxuJGdyaWQtYnJlYWtwb2ludHM6IG1hcC1tZXJnZShcbiAgKFxuICAgIHhzOiAwLFxuICAgIHNtOiA1NzZweCxcbiAgICBtZDogNzY4cHgsXG4gICAgbGc6IDk5MnB4LFxuICAgIHhsOiAxMjAwcHhcbiAgKSxcbiAgJGdyaWQtYnJlYWtwb2ludHNcbik7XG5cbkBpbmNsdWRlIF9hc3NlcnQtYXNjZW5kaW5nKCRncmlkLWJyZWFrcG9pbnRzLCBcIiRncmlkLWJyZWFrcG9pbnRzXCIpO1xuQGluY2x1ZGUgX2Fzc2VydC1zdGFydHMtYXQtemVybygkZ3JpZC1icmVha3BvaW50cyk7XG5cblxuLy8gR3JpZCBjb250YWluZXJzXG4vL1xuLy8gRGVmaW5lIHRoZSBtYXhpbXVtIHdpZHRoIG9mIGAuY29udGFpbmVyYCBmb3IgZGlmZmVyZW50IHNjcmVlbiBzaXplcy5cblxuJGNvbnRhaW5lci1tYXgtd2lkdGhzOiAoKSAhZGVmYXVsdDtcbi8vIHN0eWxlbGludC1kaXNhYmxlLW5leHQtbGluZSBzY3NzL2RvbGxhci12YXJpYWJsZS1kZWZhdWx0XG4kY29udGFpbmVyLW1heC13aWR0aHM6IG1hcC1tZXJnZShcbiAgKFxuICAgIHNtOiA1NDBweCxcbiAgICBtZDogNzIwcHgsXG4gICAgbGc6IDk2MHB4LFxuICAgIHhsOiAxMTQwcHhcbiAgKSxcbiAgJGNvbnRhaW5lci1tYXgtd2lkdGhzXG4pO1xuXG5AaW5jbHVkZSBfYXNzZXJ0LWFzY2VuZGluZygkY29udGFpbmVyLW1heC13aWR0aHMsIFwiJGNvbnRhaW5lci1tYXgtd2lkdGhzXCIpO1xuXG5cbi8vIEdyaWQgY29sdW1uc1xuLy9cbi8vIFNldCB0aGUgbnVtYmVyIG9mIGNvbHVtbnMgYW5kIHNwZWNpZnkgdGhlIHdpZHRoIG9mIHRoZSBndXR0ZXJzLlxuXG4kZ3JpZC1jb2x1bW5zOiAgICAgICAgICAgICAgICAxMiAhZGVmYXVsdDtcbiRncmlkLWd1dHRlci13aWR0aDogICAgICAgICAgIDMwcHggIWRlZmF1bHQ7XG5cblxuLy8gQ29tcG9uZW50c1xuLy9cbi8vIERlZmluZSBjb21tb24gcGFkZGluZyBhbmQgYm9yZGVyIHJhZGl1cyBzaXplcyBhbmQgbW9yZS5cblxuJGxpbmUtaGVpZ2h0LWxnOiAgICAgICAgICAgICAgMS41ICFkZWZhdWx0O1xuJGxpbmUtaGVpZ2h0LXNtOiAgICAgICAgICAgICAgMS41ICFkZWZhdWx0O1xuXG4kYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICAgICAxcHggIWRlZmF1bHQ7XG4kYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICAgICAkZ3JheS0zMDAgIWRlZmF1bHQ7XG5cbiRib3JkZXItcmFkaXVzOiAgICAgICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcbiRib3JkZXItcmFkaXVzLWxnOiAgICAgICAgICAgIC4zcmVtICFkZWZhdWx0O1xuJGJvcmRlci1yYWRpdXMtc206ICAgICAgICAgICAgLjJyZW0gIWRlZmF1bHQ7XG5cbiRyb3VuZGVkLXBpbGw6ICAgICAgICAgICAgICAgIDUwcmVtICFkZWZhdWx0O1xuXG4kYm94LXNoYWRvdy1zbTogICAgICAgICAgICAgICAwIC4xMjVyZW0gLjI1cmVtIHJnYmEoJGJsYWNrLCAuMDc1KSAhZGVmYXVsdDtcbiRib3gtc2hhZG93OiAgICAgICAgICAgICAgICAgIDAgLjVyZW0gMXJlbSByZ2JhKCRibGFjaywgLjE1KSAhZGVmYXVsdDtcbiRib3gtc2hhZG93LWxnOiAgICAgICAgICAgICAgIDAgMXJlbSAzcmVtIHJnYmEoJGJsYWNrLCAuMTc1KSAhZGVmYXVsdDtcblxuJGNvbXBvbmVudC1hY3RpdmUtY29sb3I6ICAgICAgJHdoaXRlICFkZWZhdWx0O1xuJGNvbXBvbmVudC1hY3RpdmUtYmc6ICAgICAgICAgdGhlbWUtY29sb3IoXCJwcmltYXJ5XCIpICFkZWZhdWx0O1xuXG4kY2FyZXQtd2lkdGg6ICAgICAgICAgICAgICAgICAuM2VtICFkZWZhdWx0O1xuXG4kdHJhbnNpdGlvbi1iYXNlOiAgICAgICAgICAgICBhbGwgLjJzIGVhc2UtaW4tb3V0ICFkZWZhdWx0O1xuJHRyYW5zaXRpb24tZmFkZTogICAgICAgICAgICAgb3BhY2l0eSAuMTVzIGxpbmVhciAhZGVmYXVsdDtcbiR0cmFuc2l0aW9uLWNvbGxhcHNlOiAgICAgICAgIGhlaWdodCAuMzVzIGVhc2UgIWRlZmF1bHQ7XG5cbiRlbWJlZC1yZXNwb25zaXZlLWFzcGVjdC1yYXRpb3M6ICgpICFkZWZhdWx0O1xuLy8gc3R5bGVsaW50LWRpc2FibGUtbmV4dC1saW5lIHNjc3MvZG9sbGFyLXZhcmlhYmxlLWRlZmF1bHRcbiRlbWJlZC1yZXNwb25zaXZlLWFzcGVjdC1yYXRpb3M6IGpvaW4oXG4gIChcbiAgICAoMjEgOSksXG4gICAgKDE2IDkpLFxuICAgICgzIDQpLFxuICAgICgxIDEpLFxuICApLFxuICAkZW1iZWQtcmVzcG9uc2l2ZS1hc3BlY3QtcmF0aW9zXG4pO1xuXG4vLyBGb250c1xuLy9cbi8vIEZvbnQsIGxpbmUtaGVpZ2h0LCBhbmQgY29sb3IgZm9yIGJvZHkgdGV4dCwgaGVhZGluZ3MsIGFuZCBtb3JlLlxuXG4vLyBzdHlsZWxpbnQtZGlzYWJsZSB2YWx1ZS1rZXl3b3JkLWNhc2VcbiRmb250LWZhbWlseS1zYW5zLXNlcmlmOiAgICAgIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTZWdvZSBVSVwiLCBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgQXJpYWwsIFwiTm90byBTYW5zXCIsIHNhbnMtc2VyaWYsIFwiQXBwbGUgQ29sb3IgRW1vamlcIiwgXCJTZWdvZSBVSSBFbW9qaVwiLCBcIlNlZ29lIFVJIFN5bWJvbFwiLCBcIk5vdG8gQ29sb3IgRW1vamlcIiAhZGVmYXVsdDtcbiRmb250LWZhbWlseS1tb25vc3BhY2U6ICAgICAgIFNGTW9uby1SZWd1bGFyLCBNZW5sbywgTW9uYWNvLCBDb25zb2xhcywgXCJMaWJlcmF0aW9uIE1vbm9cIiwgXCJDb3VyaWVyIE5ld1wiLCBtb25vc3BhY2UgIWRlZmF1bHQ7XG4kZm9udC1mYW1pbHktYmFzZTogICAgICAgICAgICAkZm9udC1mYW1pbHktc2Fucy1zZXJpZiAhZGVmYXVsdDtcbi8vIHN0eWxlbGludC1lbmFibGUgdmFsdWUta2V5d29yZC1jYXNlXG5cbiRmb250LXNpemUtYmFzZTogICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7IC8vIEFzc3VtZXMgdGhlIGJyb3dzZXIgZGVmYXVsdCwgdHlwaWNhbGx5IGAxNnB4YFxuJGZvbnQtc2l6ZS1sZzogICAgICAgICAgICAgICAgKCRmb250LXNpemUtYmFzZSAqIDEuMjUpICFkZWZhdWx0O1xuJGZvbnQtc2l6ZS1zbTogICAgICAgICAgICAgICAgKCRmb250LXNpemUtYmFzZSAqIC44NzUpICFkZWZhdWx0O1xuXG4kZm9udC13ZWlnaHQtbGlnaHRlcjogICAgICAgICBsaWdodGVyICFkZWZhdWx0O1xuJGZvbnQtd2VpZ2h0LWxpZ2h0OiAgICAgICAgICAgMzAwICFkZWZhdWx0O1xuJGZvbnQtd2VpZ2h0LW5vcm1hbDogICAgICAgICAgNDAwICFkZWZhdWx0O1xuJGZvbnQtd2VpZ2h0LWJvbGQ6ICAgICAgICAgICAgNzAwICFkZWZhdWx0O1xuJGZvbnQtd2VpZ2h0LWJvbGRlcjogICAgICAgICAgYm9sZGVyICFkZWZhdWx0O1xuXG4kZm9udC13ZWlnaHQtYmFzZTogICAgICAgICAgICAkZm9udC13ZWlnaHQtbm9ybWFsICFkZWZhdWx0O1xuJGxpbmUtaGVpZ2h0LWJhc2U6ICAgICAgICAgICAgMS41ICFkZWZhdWx0O1xuXG4kaDEtZm9udC1zaXplOiAgICAgICAgICAgICAgICAkZm9udC1zaXplLWJhc2UgKiAyLjUgIWRlZmF1bHQ7XG4kaDItZm9udC1zaXplOiAgICAgICAgICAgICAgICAkZm9udC1zaXplLWJhc2UgKiAyICFkZWZhdWx0O1xuJGgzLWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgJGZvbnQtc2l6ZS1iYXNlICogMS43NSAhZGVmYXVsdDtcbiRoNC1mb250LXNpemU6ICAgICAgICAgICAgICAgICRmb250LXNpemUtYmFzZSAqIDEuNSAhZGVmYXVsdDtcbiRoNS1mb250LXNpemU6ICAgICAgICAgICAgICAgICRmb250LXNpemUtYmFzZSAqIDEuMjUgIWRlZmF1bHQ7XG4kaDYtZm9udC1zaXplOiAgICAgICAgICAgICAgICAkZm9udC1zaXplLWJhc2UgIWRlZmF1bHQ7XG5cbiRoZWFkaW5ncy1tYXJnaW4tYm90dG9tOiAgICAgICRzcGFjZXIgLyAyICFkZWZhdWx0O1xuJGhlYWRpbmdzLWZvbnQtZmFtaWx5OiAgICAgICAgaW5oZXJpdCAhZGVmYXVsdDtcbiRoZWFkaW5ncy1mb250LXdlaWdodDogICAgICAgIDUwMCAhZGVmYXVsdDtcbiRoZWFkaW5ncy1saW5lLWhlaWdodDogICAgICAgIDEuMiAhZGVmYXVsdDtcbiRoZWFkaW5ncy1jb2xvcjogICAgICAgICAgICAgIGluaGVyaXQgIWRlZmF1bHQ7XG5cbiRkaXNwbGF5MS1zaXplOiAgICAgICAgICAgICAgIDZyZW0gIWRlZmF1bHQ7XG4kZGlzcGxheTItc2l6ZTogICAgICAgICAgICAgICA1LjVyZW0gIWRlZmF1bHQ7XG4kZGlzcGxheTMtc2l6ZTogICAgICAgICAgICAgICA0LjVyZW0gIWRlZmF1bHQ7XG4kZGlzcGxheTQtc2l6ZTogICAgICAgICAgICAgICAzLjVyZW0gIWRlZmF1bHQ7XG5cbiRkaXNwbGF5MS13ZWlnaHQ6ICAgICAgICAgICAgIDMwMCAhZGVmYXVsdDtcbiRkaXNwbGF5Mi13ZWlnaHQ6ICAgICAgICAgICAgIDMwMCAhZGVmYXVsdDtcbiRkaXNwbGF5My13ZWlnaHQ6ICAgICAgICAgICAgIDMwMCAhZGVmYXVsdDtcbiRkaXNwbGF5NC13ZWlnaHQ6ICAgICAgICAgICAgIDMwMCAhZGVmYXVsdDtcbiRkaXNwbGF5LWxpbmUtaGVpZ2h0OiAgICAgICAgICRoZWFkaW5ncy1saW5lLWhlaWdodCAhZGVmYXVsdDtcblxuJGxlYWQtZm9udC1zaXplOiAgICAgICAgICAgICAgKCRmb250LXNpemUtYmFzZSAqIDEuMjUpICFkZWZhdWx0O1xuJGxlYWQtZm9udC13ZWlnaHQ6ICAgICAgICAgICAgMzAwICFkZWZhdWx0O1xuXG4kc21hbGwtZm9udC1zaXplOiAgICAgICAgICAgICA4MCUgIWRlZmF1bHQ7XG5cbiR0ZXh0LW11dGVkOiAgICAgICAgICAgICAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcblxuJGJsb2NrcXVvdGUtc21hbGwtY29sb3I6ICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xuJGJsb2NrcXVvdGUtc21hbGwtZm9udC1zaXplOiAgJHNtYWxsLWZvbnQtc2l6ZSAhZGVmYXVsdDtcbiRibG9ja3F1b3RlLWZvbnQtc2l6ZTogICAgICAgICgkZm9udC1zaXplLWJhc2UgKiAxLjI1KSAhZGVmYXVsdDtcblxuJGhyLWJvcmRlci1jb2xvcjogICAgICAgICAgICAgcmdiYSgkYmxhY2ssIC4xKSAhZGVmYXVsdDtcbiRoci1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XG5cbiRtYXJrLXBhZGRpbmc6ICAgICAgICAgICAgICAgIC4yZW0gIWRlZmF1bHQ7XG5cbiRkdC1mb250LXdlaWdodDogICAgICAgICAgICAgICRmb250LXdlaWdodC1ib2xkICFkZWZhdWx0O1xuXG4ka2JkLWJveC1zaGFkb3c6ICAgICAgICAgICAgICBpbnNldCAwIC0uMXJlbSAwIHJnYmEoJGJsYWNrLCAuMjUpICFkZWZhdWx0O1xuJG5lc3RlZC1rYmQtZm9udC13ZWlnaHQ6ICAgICAgJGZvbnQtd2VpZ2h0LWJvbGQgIWRlZmF1bHQ7XG5cbiRsaXN0LWlubGluZS1wYWRkaW5nOiAgICAgICAgIC41cmVtICFkZWZhdWx0O1xuXG4kbWFyay1iZzogICAgICAgICAgICAgICAgICAgICAjZmNmOGUzICFkZWZhdWx0O1xuXG4kaHItbWFyZ2luLXk6ICAgICAgICAgICAgICAgICAkc3BhY2VyICFkZWZhdWx0O1xuXG5cbi8vIFRhYmxlc1xuLy9cbi8vIEN1c3RvbWl6ZXMgdGhlIGAudGFibGVgIGNvbXBvbmVudCB3aXRoIGJhc2ljIHZhbHVlcywgZWFjaCB1c2VkIGFjcm9zcyBhbGwgdGFibGUgdmFyaWF0aW9ucy5cblxuJHRhYmxlLWNlbGwtcGFkZGluZzogICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xuJHRhYmxlLWNlbGwtcGFkZGluZy1zbTogICAgICAgLjNyZW0gIWRlZmF1bHQ7XG5cbiR0YWJsZS1iZzogICAgICAgICAgICAgICAgICAgIHRyYW5zcGFyZW50ICFkZWZhdWx0O1xuJHRhYmxlLWFjY2VudC1iZzogICAgICAgICAgICAgcmdiYSgkYmxhY2ssIC4wNSkgIWRlZmF1bHQ7XG4kdGFibGUtaG92ZXItYmc6ICAgICAgICAgICAgICByZ2JhKCRibGFjaywgLjA3NSkgIWRlZmF1bHQ7XG4kdGFibGUtYWN0aXZlLWJnOiAgICAgICAgICAgICAkdGFibGUtaG92ZXItYmcgIWRlZmF1bHQ7XG5cbiR0YWJsZS1ib3JkZXItd2lkdGg6ICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XG4kdGFibGUtYm9yZGVyLWNvbG9yOiAgICAgICAgICAkZ3JheS0zMDAgIWRlZmF1bHQ7XG5cbiR0YWJsZS1oZWFkLWJnOiAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcbiR0YWJsZS1oZWFkLWNvbG9yOiAgICAgICAgICAgICRncmF5LTcwMCAhZGVmYXVsdDtcblxuJHRhYmxlLWRhcmstYmc6ICAgICAgICAgICAgICAgJGdyYXktOTAwICFkZWZhdWx0O1xuJHRhYmxlLWRhcmstYWNjZW50LWJnOiAgICAgICAgcmdiYSgkd2hpdGUsIC4wNSkgIWRlZmF1bHQ7XG4kdGFibGUtZGFyay1ob3Zlci1iZzogICAgICAgICByZ2JhKCR3aGl0ZSwgLjA3NSkgIWRlZmF1bHQ7XG4kdGFibGUtZGFyay1ib3JkZXItY29sb3I6ICAgICBsaWdodGVuKCRncmF5LTkwMCwgNy41JSkgIWRlZmF1bHQ7XG4kdGFibGUtZGFyay1jb2xvcjogICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XG5cbiR0YWJsZS1zdHJpcGVkLW9yZGVyOiAgICAgICAgIG9kZCAhZGVmYXVsdDtcblxuJHRhYmxlLWNhcHRpb24tY29sb3I6ICAgICAgICAgJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XG5cbiR0YWJsZS1iZy1sZXZlbDogICAgICAgICAgICAgIC05ICFkZWZhdWx0O1xuJHRhYmxlLWJvcmRlci1sZXZlbDogICAgICAgICAgLTYgIWRlZmF1bHQ7XG5cblxuLy8gQnV0dG9ucyArIEZvcm1zXG4vL1xuLy8gU2hhcmVkIHZhcmlhYmxlcyB0aGF0IGFyZSByZWFzc2lnbmVkIHRvIGAkaW5wdXQtYCBhbmQgYCRidG4tYCBzcGVjaWZpYyB2YXJpYWJsZXMuXG5cbiRpbnB1dC1idG4tcGFkZGluZy15OiAgICAgICAgIC4zNzVyZW0gIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLXBhZGRpbmcteDogICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLWZvbnQtc2l6ZTogICAgICAgICAkZm9udC1zaXplLWJhc2UgIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0OiAgICAgICAkbGluZS1oZWlnaHQtYmFzZSAhZGVmYXVsdDtcblxuJGlucHV0LWJ0bi1mb2N1cy13aWR0aDogICAgICAgLjJyZW0gIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLWZvY3VzLWNvbG9yOiAgICAgICByZ2JhKCRjb21wb25lbnQtYWN0aXZlLWJnLCAuMjUpICFkZWZhdWx0O1xuJGlucHV0LWJ0bi1mb2N1cy1ib3gtc2hhZG93OiAgMCAwIDAgJGlucHV0LWJ0bi1mb2N1cy13aWR0aCAkaW5wdXQtYnRuLWZvY3VzLWNvbG9yICFkZWZhdWx0O1xuXG4kaW5wdXQtYnRuLXBhZGRpbmcteS1zbTogICAgICAuMjVyZW0gIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLXBhZGRpbmcteC1zbTogICAgICAuNXJlbSAhZGVmYXVsdDtcbiRpbnB1dC1idG4tZm9udC1zaXplLXNtOiAgICAgICRmb250LXNpemUtc20gIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXNtOiAgICAkbGluZS1oZWlnaHQtc20gIWRlZmF1bHQ7XG5cbiRpbnB1dC1idG4tcGFkZGluZy15LWxnOiAgICAgIC41cmVtICFkZWZhdWx0O1xuJGlucHV0LWJ0bi1wYWRkaW5nLXgtbGc6ICAgICAgMXJlbSAhZGVmYXVsdDtcbiRpbnB1dC1idG4tZm9udC1zaXplLWxnOiAgICAgICRmb250LXNpemUtbGcgIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LWxnOiAgICAkbGluZS1oZWlnaHQtbGcgIWRlZmF1bHQ7XG5cbiRpbnB1dC1idG4tYm9yZGVyLXdpZHRoOiAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XG5cblxuLy8gQnV0dG9uc1xuLy9cbi8vIEZvciBlYWNoIG9mIEJvb3RzdHJhcCdzIGJ1dHRvbnMsIGRlZmluZSB0ZXh0LCBiYWNrZ3JvdW5kLCBhbmQgYm9yZGVyIGNvbG9yLlxuXG4kYnRuLXBhZGRpbmcteTogICAgICAgICAgICAgICAkaW5wdXQtYnRuLXBhZGRpbmcteSAhZGVmYXVsdDtcbiRidG4tcGFkZGluZy14OiAgICAgICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy14ICFkZWZhdWx0O1xuJGJ0bi1mb250LXNpemU6ICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1mb250LXNpemUgIWRlZmF1bHQ7XG4kYnRuLWxpbmUtaGVpZ2h0OiAgICAgICAgICAgICAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0ICFkZWZhdWx0O1xuXG4kYnRuLXBhZGRpbmcteS1zbTogICAgICAgICAgICAkaW5wdXQtYnRuLXBhZGRpbmcteS1zbSAhZGVmYXVsdDtcbiRidG4tcGFkZGluZy14LXNtOiAgICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy14LXNtICFkZWZhdWx0O1xuJGJ0bi1mb250LXNpemUtc206ICAgICAgICAgICAgJGlucHV0LWJ0bi1mb250LXNpemUtc20gIWRlZmF1bHQ7XG4kYnRuLWxpbmUtaGVpZ2h0LXNtOiAgICAgICAgICAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXNtICFkZWZhdWx0O1xuXG4kYnRuLXBhZGRpbmcteS1sZzogICAgICAgICAgICAkaW5wdXQtYnRuLXBhZGRpbmcteS1sZyAhZGVmYXVsdDtcbiRidG4tcGFkZGluZy14LWxnOiAgICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy14LWxnICFkZWZhdWx0O1xuJGJ0bi1mb250LXNpemUtbGc6ICAgICAgICAgICAgJGlucHV0LWJ0bi1mb250LXNpemUtbGcgIWRlZmF1bHQ7XG4kYnRuLWxpbmUtaGVpZ2h0LWxnOiAgICAgICAgICAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LWxnICFkZWZhdWx0O1xuXG4kYnRuLWJvcmRlci13aWR0aDogICAgICAgICAgICAkaW5wdXQtYnRuLWJvcmRlci13aWR0aCAhZGVmYXVsdDtcblxuJGJ0bi1mb250LXdlaWdodDogICAgICAgICAgICAgJGZvbnQtd2VpZ2h0LW5vcm1hbCAhZGVmYXVsdDtcbiRidG4tYm94LXNoYWRvdzogICAgICAgICAgICAgIGluc2V0IDAgMXB4IDAgcmdiYSgkd2hpdGUsIC4xNSksIDAgMXB4IDFweCByZ2JhKCRibGFjaywgLjA3NSkgIWRlZmF1bHQ7XG4kYnRuLWZvY3VzLXdpZHRoOiAgICAgICAgICAgICAkaW5wdXQtYnRuLWZvY3VzLXdpZHRoICFkZWZhdWx0O1xuJGJ0bi1mb2N1cy1ib3gtc2hhZG93OiAgICAgICAgJGlucHV0LWJ0bi1mb2N1cy1ib3gtc2hhZG93ICFkZWZhdWx0O1xuJGJ0bi1kaXNhYmxlZC1vcGFjaXR5OiAgICAgICAgLjY1ICFkZWZhdWx0O1xuJGJ0bi1hY3RpdmUtYm94LXNoYWRvdzogICAgICAgaW5zZXQgMCAzcHggNXB4IHJnYmEoJGJsYWNrLCAuMTI1KSAhZGVmYXVsdDtcblxuJGJ0bi1saW5rLWRpc2FibGVkLWNvbG9yOiAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xuXG4kYnRuLWJsb2NrLXNwYWNpbmcteTogICAgICAgICAuNXJlbSAhZGVmYXVsdDtcblxuLy8gQWxsb3dzIGZvciBjdXN0b21pemluZyBidXR0b24gcmFkaXVzIGluZGVwZW5kZW50bHkgZnJvbSBnbG9iYWwgYm9yZGVyIHJhZGl1c1xuJGJ0bi1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG4kYnRuLWJvcmRlci1yYWRpdXMtbGc6ICAgICAgICAkYm9yZGVyLXJhZGl1cy1sZyAhZGVmYXVsdDtcbiRidG4tYm9yZGVyLXJhZGl1cy1zbTogICAgICAgICRib3JkZXItcmFkaXVzLXNtICFkZWZhdWx0O1xuXG4kYnRuLXRyYW5zaXRpb246ICAgICAgICAgICAgICBjb2xvciAuMTVzIGVhc2UtaW4tb3V0LCBiYWNrZ3JvdW5kLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsIGJvcmRlci1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LCBib3gtc2hhZG93IC4xNXMgZWFzZS1pbi1vdXQgIWRlZmF1bHQ7XG5cblxuLy8gRm9ybXNcblxuJGxhYmVsLW1hcmdpbi1ib3R0b206ICAgICAgICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xuXG4kaW5wdXQtcGFkZGluZy15OiAgICAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1wYWRkaW5nLXkgIWRlZmF1bHQ7XG4kaW5wdXQtcGFkZGluZy14OiAgICAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1wYWRkaW5nLXggIWRlZmF1bHQ7XG4kaW5wdXQtZm9udC1zaXplOiAgICAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1mb250LXNpemUgIWRlZmF1bHQ7XG4kaW5wdXQtZm9udC13ZWlnaHQ6ICAgICAgICAgICAgICAgICAgICAgJGZvbnQtd2VpZ2h0LWJhc2UgIWRlZmF1bHQ7XG4kaW5wdXQtbGluZS1oZWlnaHQ6ICAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1saW5lLWhlaWdodCAhZGVmYXVsdDtcblxuJGlucHV0LXBhZGRpbmcteS1zbTogICAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy15LXNtICFkZWZhdWx0O1xuJGlucHV0LXBhZGRpbmcteC1zbTogICAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy14LXNtICFkZWZhdWx0O1xuJGlucHV0LWZvbnQtc2l6ZS1zbTogICAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tZm9udC1zaXplLXNtICFkZWZhdWx0O1xuJGlucHV0LWxpbmUtaGVpZ2h0LXNtOiAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tbGluZS1oZWlnaHQtc20gIWRlZmF1bHQ7XG5cbiRpbnB1dC1wYWRkaW5nLXktbGc6ICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLXBhZGRpbmcteS1sZyAhZGVmYXVsdDtcbiRpbnB1dC1wYWRkaW5nLXgtbGc6ICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLXBhZGRpbmcteC1sZyAhZGVmYXVsdDtcbiRpbnB1dC1mb250LXNpemUtbGc6ICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLWZvbnQtc2l6ZS1sZyAhZGVmYXVsdDtcbiRpbnB1dC1saW5lLWhlaWdodC1sZzogICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LWxnICFkZWZhdWx0O1xuXG4kaW5wdXQtYmc6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xuJGlucHV0LWRpc2FibGVkLWJnOiAgICAgICAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcblxuJGlucHV0LWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgICAgICRncmF5LTcwMCAhZGVmYXVsdDtcbiRpbnB1dC1ib3JkZXItY29sb3I6ICAgICAgICAgICAgICAgICAgICAkZ3JheS00MDAgIWRlZmF1bHQ7XG4kaW5wdXQtYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1ib3JkZXItd2lkdGggIWRlZmF1bHQ7XG4kaW5wdXQtYm94LXNoYWRvdzogICAgICAgICAgICAgICAgICAgICAgaW5zZXQgMCAxcHggMXB4IHJnYmEoJGJsYWNrLCAuMDc1KSAhZGVmYXVsdDtcblxuJGlucHV0LWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuJGlucHV0LWJvcmRlci1yYWRpdXMtbGc6ICAgICAgICAgICAgICAgICRib3JkZXItcmFkaXVzLWxnICFkZWZhdWx0O1xuJGlucHV0LWJvcmRlci1yYWRpdXMtc206ICAgICAgICAgICAgICAgICRib3JkZXItcmFkaXVzLXNtICFkZWZhdWx0O1xuXG4kaW5wdXQtZm9jdXMtYmc6ICAgICAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJnICFkZWZhdWx0O1xuJGlucHV0LWZvY3VzLWJvcmRlci1jb2xvcjogICAgICAgICAgICAgIGxpZ2h0ZW4oJGNvbXBvbmVudC1hY3RpdmUtYmcsIDI1JSkgIWRlZmF1bHQ7XG4kaW5wdXQtZm9jdXMtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgJGlucHV0LWNvbG9yICFkZWZhdWx0O1xuJGlucHV0LWZvY3VzLXdpZHRoOiAgICAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tZm9jdXMtd2lkdGggIWRlZmF1bHQ7XG4kaW5wdXQtZm9jdXMtYm94LXNoYWRvdzogICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1mb2N1cy1ib3gtc2hhZG93ICFkZWZhdWx0O1xuXG4kaW5wdXQtcGxhY2Vob2xkZXItY29sb3I6ICAgICAgICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xuJGlucHV0LXBsYWludGV4dC1jb2xvcjogICAgICAgICAgICAgICAgICRib2R5LWNvbG9yICFkZWZhdWx0O1xuXG4kaW5wdXQtaGVpZ2h0LWJvcmRlcjogICAgICAgICAgICAgICAgICAgJGlucHV0LWJvcmRlci13aWR0aCAqIDIgIWRlZmF1bHQ7XG5cbiRpbnB1dC1oZWlnaHQtaW5uZXI6ICAgICAgICAgICAgICAgICAgICAoJGlucHV0LWJ0bi1mb250LXNpemUgKiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0KSArICgkaW5wdXQtYnRuLXBhZGRpbmcteSAqIDIpICFkZWZhdWx0O1xuJGlucHV0LWhlaWdodDogICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGMoI3skaW5wdXQtaGVpZ2h0LWlubmVyfSArICN7JGlucHV0LWhlaWdodC1ib3JkZXJ9KSAhZGVmYXVsdDtcblxuJGlucHV0LWhlaWdodC1pbm5lci1zbTogICAgICAgICAgICAgICAgICgkaW5wdXQtYnRuLWZvbnQtc2l6ZS1zbSAqICRpbnB1dC1idG4tbGluZS1oZWlnaHQtc20pICsgKCRpbnB1dC1idG4tcGFkZGluZy15LXNtICogMikgIWRlZmF1bHQ7XG4kaW5wdXQtaGVpZ2h0LXNtOiAgICAgICAgICAgICAgICAgICAgICAgY2FsYygjeyRpbnB1dC1oZWlnaHQtaW5uZXItc219ICsgI3skaW5wdXQtaGVpZ2h0LWJvcmRlcn0pICFkZWZhdWx0O1xuXG4kaW5wdXQtaGVpZ2h0LWlubmVyLWxnOiAgICAgICAgICAgICAgICAgKCRpbnB1dC1idG4tZm9udC1zaXplLWxnICogJGlucHV0LWJ0bi1saW5lLWhlaWdodC1sZykgKyAoJGlucHV0LWJ0bi1wYWRkaW5nLXktbGcgKiAyKSAhZGVmYXVsdDtcbiRpbnB1dC1oZWlnaHQtbGc6ICAgICAgICAgICAgICAgICAgICAgICBjYWxjKCN7JGlucHV0LWhlaWdodC1pbm5lci1sZ30gKyAjeyRpbnB1dC1oZWlnaHQtYm9yZGVyfSkgIWRlZmF1bHQ7XG5cbiRpbnB1dC10cmFuc2l0aW9uOiAgICAgICAgICAgICAgICAgICAgICBib3JkZXItY29sb3IgLjE1cyBlYXNlLWluLW91dCwgYm94LXNoYWRvdyAuMTVzIGVhc2UtaW4tb3V0ICFkZWZhdWx0O1xuXG4kZm9ybS10ZXh0LW1hcmdpbi10b3A6ICAgICAgICAgICAgICAgICAgLjI1cmVtICFkZWZhdWx0O1xuXG4kZm9ybS1jaGVjay1pbnB1dC1ndXR0ZXI6ICAgICAgICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcbiRmb3JtLWNoZWNrLWlucHV0LW1hcmdpbi15OiAgICAgICAgICAgICAuM3JlbSAhZGVmYXVsdDtcbiRmb3JtLWNoZWNrLWlucHV0LW1hcmdpbi14OiAgICAgICAgICAgICAuMjVyZW0gIWRlZmF1bHQ7XG5cbiRmb3JtLWNoZWNrLWlubGluZS1tYXJnaW4teDogICAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XG4kZm9ybS1jaGVjay1pbmxpbmUtaW5wdXQtbWFyZ2luLXg6ICAgICAgLjMxMjVyZW0gIWRlZmF1bHQ7XG5cbiRmb3JtLWdyaWQtZ3V0dGVyLXdpZHRoOiAgICAgICAgICAgICAgICAxMHB4ICFkZWZhdWx0O1xuJGZvcm0tZ3JvdXAtbWFyZ2luLWJvdHRvbTogICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XG5cbiRpbnB1dC1ncm91cC1hZGRvbi1jb2xvcjogICAgICAgICAgICAgICAkaW5wdXQtY29sb3IgIWRlZmF1bHQ7XG4kaW5wdXQtZ3JvdXAtYWRkb24tYmc6ICAgICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xuJGlucHV0LWdyb3VwLWFkZG9uLWJvcmRlci1jb2xvcjogICAgICAgICRpbnB1dC1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XG5cbiRjdXN0b20tZm9ybXMtdHJhbnNpdGlvbjogICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsIGJvcmRlci1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LCBib3gtc2hhZG93IC4xNXMgZWFzZS1pbi1vdXQgIWRlZmF1bHQ7XG5cbiRjdXN0b20tY29udHJvbC1ndXR0ZXI6ICAgICAgICAgICAgICAgICAuNXJlbSAhZGVmYXVsdDtcbiRjdXN0b20tY29udHJvbC1zcGFjZXIteDogICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xuXG4kY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLXNpemU6ICAgICAgICAgMXJlbSAhZGVmYXVsdDtcbiRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYmc6ICAgICAgICAgICAkaW5wdXQtYmcgIWRlZmF1bHQ7XG5cbiRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYmctc2l6ZTogICAgICA1MCUgNTAlICFkZWZhdWx0O1xuJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1ib3gtc2hhZG93OiAgICRpbnB1dC1ib3gtc2hhZG93ICFkZWZhdWx0O1xuJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1ib3JkZXItY29sb3I6ICRncmF5LTUwMCAhZGVmYXVsdDtcbiRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYm9yZGVyLXdpZHRoOiAkaW5wdXQtYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xuXG4kY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWRpc2FibGVkLWJnOiAgICAgICAgICAkaW5wdXQtZGlzYWJsZWQtYmcgIWRlZmF1bHQ7XG4kY3VzdG9tLWNvbnRyb2wtbGFiZWwtZGlzYWJsZWQtY29sb3I6ICAgICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XG5cbiRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1jb2xvcjogICAgICAgICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xuJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWJnOiAgICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XG4kY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtZGlzYWJsZWQtYmc6ICByZ2JhKHRoZW1lLWNvbG9yKFwicHJpbWFyeVwiKSwgLjUpICFkZWZhdWx0O1xuJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWJveC1zaGFkb3c6ICAgbm9uZSAhZGVmYXVsdDtcbiRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1ib3JkZXItY29sb3I6ICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1iZyAhZGVmYXVsdDtcblxuJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1mb2N1cy1ib3gtc2hhZG93OiAgICAgJGlucHV0LWJ0bi1mb2N1cy1ib3gtc2hhZG93ICFkZWZhdWx0O1xuJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1mb2N1cy1ib3JkZXItY29sb3I6ICAgJGlucHV0LWZvY3VzLWJvcmRlci1jb2xvciAhZGVmYXVsdDtcblxuJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1hY3RpdmUtY29sb3I6ICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XG4kY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWFjdGl2ZS1iZzogICAgICAgICAgICBsaWdodGVuKCRjb21wb25lbnQtYWN0aXZlLWJnLCAzNSUpICFkZWZhdWx0O1xuJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1hY3RpdmUtYm94LXNoYWRvdzogICAgbm9uZSAhZGVmYXVsdDtcbiRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYWN0aXZlLWJvcmRlci1jb2xvcjogICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYWN0aXZlLWJnICFkZWZhdWx0O1xuXG4kY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1ib3JkZXItcmFkaXVzOiAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcbiRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWljb24tY2hlY2tlZDogICAgICAgIHN0ci1yZXBsYWNlKHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgOCA4JyUzZSUzY3BhdGggZmlsbD0nI3skY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtY29sb3J9JyBkPSdNNi41NjQuNzVsLTMuNTkgMy42MTItMS41MzgtMS41NUwwIDQuMjYgMi45NzQgNy4yNSA4IDIuMTkzeicvJTNlJTNjL3N2ZyUzZVwiKSwgXCIjXCIsIFwiJTIzXCIpICFkZWZhdWx0O1xuXG4kY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1pbmRldGVybWluYXRlLWJnOiAgICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XG4kY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1pbmRldGVybWluYXRlLWNvbG9yOiAgICAgICAgJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWNvbG9yICFkZWZhdWx0O1xuJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaWNvbi1pbmRldGVybWluYXRlOiAgICAgICAgIHN0ci1yZXBsYWNlKHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgNCA0JyUzZSUzY3BhdGggc3Ryb2tlPScjeyRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWluZGV0ZXJtaW5hdGUtY29sb3J9JyBkPSdNMCAyaDQnLyUzZSUzYy9zdmclM2VcIiksIFwiI1wiLCBcIiUyM1wiKSAhZGVmYXVsdDtcbiRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWluZGV0ZXJtaW5hdGUtYm94LXNoYWRvdzogICBub25lICFkZWZhdWx0O1xuJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaW5kZXRlcm1pbmF0ZS1ib3JkZXItY29sb3I6ICRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWluZGV0ZXJtaW5hdGUtYmcgIWRlZmF1bHQ7XG5cbiRjdXN0b20tcmFkaW8taW5kaWNhdG9yLWJvcmRlci1yYWRpdXM6ICAgICAgICAgIDUwJSAhZGVmYXVsdDtcbiRjdXN0b20tcmFkaW8taW5kaWNhdG9yLWljb24tY2hlY2tlZDogICAgICAgICAgIHN0ci1yZXBsYWNlKHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PSctNCAtNCA4IDgnJTNlJTNjY2lyY2xlIHI9JzMnIGZpbGw9JyN7JGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWNvbG9yfScvJTNlJTNjL3N2ZyUzZVwiKSwgXCIjXCIsIFwiJTIzXCIpICFkZWZhdWx0O1xuXG4kY3VzdG9tLXN3aXRjaC13aWR0aDogICAgICAgICAgICAgICAgICAgICAgICAgICAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLXNpemUgKiAxLjc1ICFkZWZhdWx0O1xuJGN1c3RvbS1zd2l0Y2gtaW5kaWNhdG9yLWJvcmRlci1yYWRpdXM6ICAgICAgICAgJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1zaXplIC8gMiAhZGVmYXVsdDtcbiRjdXN0b20tc3dpdGNoLWluZGljYXRvci1zaXplOiAgICAgICAgICAgICAgICAgIGNhbGMoI3skY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLXNpemV9IC0gI3skY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWJvcmRlci13aWR0aCAqIDR9KSAhZGVmYXVsdDtcblxuJGN1c3RvbS1zZWxlY3QtcGFkZGluZy15OiAgICAgICAgICAgJGlucHV0LWJ0bi1wYWRkaW5nLXkgIWRlZmF1bHQ7XG4kY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXg6ICAgICAgICAgICAkaW5wdXQtYnRuLXBhZGRpbmcteCAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWhlaWdodDogICAgICAgICAgICAgICRpbnB1dC1oZWlnaHQgIWRlZmF1bHQ7XG4kY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3ItcGFkZGluZzogICAxcmVtICFkZWZhdWx0OyAvLyBFeHRyYSBwYWRkaW5nIHRvIGFjY291bnQgZm9yIHRoZSBwcmVzZW5jZSBvZiB0aGUgYmFja2dyb3VuZC1pbWFnZSBiYXNlZCBpbmRpY2F0b3JcbiRjdXN0b20tc2VsZWN0LWZvbnQtd2VpZ2h0OiAgICAgICAgICRpbnB1dC1mb250LXdlaWdodCAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWxpbmUtaGVpZ2h0OiAgICAgICAgICRpbnB1dC1saW5lLWhlaWdodCAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWNvbG9yOiAgICAgICAgICAgICAgICRpbnB1dC1jb2xvciAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWRpc2FibGVkLWNvbG9yOiAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWJnOiAgICAgICAgICAgICAgICAgICRpbnB1dC1iZyAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWRpc2FibGVkLWJnOiAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWJnLXNpemU6ICAgICAgICAgICAgIDhweCAxMHB4ICFkZWZhdWx0OyAvLyBJbiBwaXhlbHMgYmVjYXVzZSBpbWFnZSBkaW1lbnNpb25zXG4kY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3ItY29sb3I6ICAgICAkZ3JheS04MDAgIWRlZmF1bHQ7XG4kY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3I6ICAgICAgICAgICBzdHItcmVwbGFjZSh1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNjc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDQgNSclM2UlM2NwYXRoIGZpbGw9JyN7JGN1c3RvbS1zZWxlY3QtaW5kaWNhdG9yLWNvbG9yfScgZD0nTTIgMEwwIDJoNHptMCA1TDAgM2g0eicvJTNlJTNjL3N2ZyUzZVwiKSwgXCIjXCIsIFwiJTIzXCIpICFkZWZhdWx0O1xuJGN1c3RvbS1zZWxlY3QtYmFja2dyb3VuZDogICAgICAgICAgJGN1c3RvbS1zZWxlY3QtaW5kaWNhdG9yIG5vLXJlcGVhdCByaWdodCAkY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXggY2VudGVyIC8gJGN1c3RvbS1zZWxlY3QtYmctc2l6ZSAhZGVmYXVsdDsgLy8gVXNlZCBzbyB3ZSBjYW4gaGF2ZSBtdWx0aXBsZSBiYWNrZ3JvdW5kIGVsZW1lbnRzIChlLmcuLCBhcnJvdyBhbmQgZmVlZGJhY2sgaWNvbilcblxuJGN1c3RvbS1zZWxlY3QtZmVlZGJhY2staWNvbi1wYWRkaW5nLXJpZ2h0OiAkaW5wdXQtaGVpZ2h0LWlubmVyICogMyAvIDQgKyAkY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXggKyAkY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3ItcGFkZGluZyAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWZlZWRiYWNrLWljb24tcG9zaXRpb246ICAgICAgY2VudGVyIHJpZ2h0ICgkY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXggKyAkY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3ItcGFkZGluZykgIWRlZmF1bHQ7XG4kY3VzdG9tLXNlbGVjdC1mZWVkYmFjay1pY29uLXNpemU6ICAgICAgICAgICgkaW5wdXQtaGVpZ2h0LWlubmVyIC8gMikgKCRpbnB1dC1oZWlnaHQtaW5uZXIgLyAyKSAhZGVmYXVsdDtcblxuJGN1c3RvbS1zZWxlY3QtYm9yZGVyLXdpZHRoOiAgICAgICAgJGlucHV0LWJvcmRlci13aWR0aCAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWJvcmRlci1jb2xvcjogICAgICAgICRpbnB1dC1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XG4kY3VzdG9tLXNlbGVjdC1ib3JkZXItcmFkaXVzOiAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWJveC1zaGFkb3c6ICAgICAgICAgIGluc2V0IDAgMXB4IDJweCByZ2JhKCRibGFjaywgLjA3NSkgIWRlZmF1bHQ7XG5cbiRjdXN0b20tc2VsZWN0LWZvY3VzLWJvcmRlci1jb2xvcjogICRpbnB1dC1mb2N1cy1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XG4kY3VzdG9tLXNlbGVjdC1mb2N1cy13aWR0aDogICAgICAgICAkaW5wdXQtZm9jdXMtd2lkdGggIWRlZmF1bHQ7XG4kY3VzdG9tLXNlbGVjdC1mb2N1cy1ib3gtc2hhZG93OiAgICAwIDAgMCAkY3VzdG9tLXNlbGVjdC1mb2N1cy13aWR0aCByZ2JhKCRjdXN0b20tc2VsZWN0LWZvY3VzLWJvcmRlci1jb2xvciwgLjUpICFkZWZhdWx0O1xuXG4kY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXktc206ICAgICAgICAkaW5wdXQtcGFkZGluZy15LXNtICFkZWZhdWx0O1xuJGN1c3RvbS1zZWxlY3QtcGFkZGluZy14LXNtOiAgICAgICAgJGlucHV0LXBhZGRpbmcteC1zbSAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWZvbnQtc2l6ZS1zbTogICAgICAgICRpbnB1dC1idG4tZm9udC1zaXplLXNtICFkZWZhdWx0O1xuJGN1c3RvbS1zZWxlY3QtaGVpZ2h0LXNtOiAgICAgICAgICAgJGlucHV0LWhlaWdodC1zbSAhZGVmYXVsdDtcblxuJGN1c3RvbS1zZWxlY3QtcGFkZGluZy15LWxnOiAgICAgICAgJGlucHV0LXBhZGRpbmcteS1sZyAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LXBhZGRpbmcteC1sZzogICAgICAgICRpbnB1dC1wYWRkaW5nLXgtbGcgIWRlZmF1bHQ7XG4kY3VzdG9tLXNlbGVjdC1mb250LXNpemUtbGc6ICAgICAgICAkaW5wdXQtYnRuLWZvbnQtc2l6ZS1sZyAhZGVmYXVsdDtcbiRjdXN0b20tc2VsZWN0LWhlaWdodC1sZzogICAgICAgICAgICRpbnB1dC1oZWlnaHQtbGcgIWRlZmF1bHQ7XG5cbiRjdXN0b20tcmFuZ2UtdHJhY2std2lkdGg6ICAgICAgICAgIDEwMCUgIWRlZmF1bHQ7XG4kY3VzdG9tLXJhbmdlLXRyYWNrLWhlaWdodDogICAgICAgICAuNXJlbSAhZGVmYXVsdDtcbiRjdXN0b20tcmFuZ2UtdHJhY2stY3Vyc29yOiAgICAgICAgIHBvaW50ZXIgIWRlZmF1bHQ7XG4kY3VzdG9tLXJhbmdlLXRyYWNrLWJnOiAgICAgICAgICAgICAkZ3JheS0zMDAgIWRlZmF1bHQ7XG4kY3VzdG9tLXJhbmdlLXRyYWNrLWJvcmRlci1yYWRpdXM6ICAxcmVtICFkZWZhdWx0O1xuJGN1c3RvbS1yYW5nZS10cmFjay1ib3gtc2hhZG93OiAgICAgaW5zZXQgMCAuMjVyZW0gLjI1cmVtIHJnYmEoJGJsYWNrLCAuMSkgIWRlZmF1bHQ7XG5cbiRjdXN0b20tcmFuZ2UtdGh1bWItd2lkdGg6ICAgICAgICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XG4kY3VzdG9tLXJhbmdlLXRodW1iLWhlaWdodDogICAgICAgICAgICAgICAgICAkY3VzdG9tLXJhbmdlLXRodW1iLXdpZHRoICFkZWZhdWx0O1xuJGN1c3RvbS1yYW5nZS10aHVtYi1iZzogICAgICAgICAgICAgICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XG4kY3VzdG9tLXJhbmdlLXRodW1iLWJvcmRlcjogICAgICAgICAgICAgICAgICAwICFkZWZhdWx0O1xuJGN1c3RvbS1yYW5nZS10aHVtYi1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcbiRjdXN0b20tcmFuZ2UtdGh1bWItYm94LXNoYWRvdzogICAgICAgICAgICAgIDAgLjFyZW0gLjI1cmVtIHJnYmEoJGJsYWNrLCAuMSkgIWRlZmF1bHQ7XG4kY3VzdG9tLXJhbmdlLXRodW1iLWZvY3VzLWJveC1zaGFkb3c6ICAgICAgICAwIDAgMCAxcHggJGJvZHktYmcsICRpbnB1dC1mb2N1cy1ib3gtc2hhZG93ICFkZWZhdWx0O1xuJGN1c3RvbS1yYW5nZS10aHVtYi1mb2N1cy1ib3gtc2hhZG93LXdpZHRoOiAgJGlucHV0LWZvY3VzLXdpZHRoICFkZWZhdWx0OyAvLyBGb3IgZm9jdXMgYm94IHNoYWRvdyBpc3N1ZSBpbiBJRS9FZGdlXG4kY3VzdG9tLXJhbmdlLXRodW1iLWFjdGl2ZS1iZzogICAgICAgICAgICAgICBsaWdodGVuKCRjb21wb25lbnQtYWN0aXZlLWJnLCAzNSUpICFkZWZhdWx0O1xuJGN1c3RvbS1yYW5nZS10aHVtYi1kaXNhYmxlZC1iZzogICAgICAgICAgICAgJGdyYXktNTAwICFkZWZhdWx0O1xuXG4kY3VzdG9tLWZpbGUtaGVpZ2h0OiAgICAgICAgICAgICAgICAkaW5wdXQtaGVpZ2h0ICFkZWZhdWx0O1xuJGN1c3RvbS1maWxlLWhlaWdodC1pbm5lcjogICAgICAgICAgJGlucHV0LWhlaWdodC1pbm5lciAhZGVmYXVsdDtcbiRjdXN0b20tZmlsZS1mb2N1cy1ib3JkZXItY29sb3I6ICAgICRpbnB1dC1mb2N1cy1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XG4kY3VzdG9tLWZpbGUtZm9jdXMtYm94LXNoYWRvdzogICAgICAkaW5wdXQtZm9jdXMtYm94LXNoYWRvdyAhZGVmYXVsdDtcbiRjdXN0b20tZmlsZS1kaXNhYmxlZC1iZzogICAgICAgICAgICRpbnB1dC1kaXNhYmxlZC1iZyAhZGVmYXVsdDtcblxuJGN1c3RvbS1maWxlLXBhZGRpbmcteTogICAgICAgICAgICAgJGlucHV0LXBhZGRpbmcteSAhZGVmYXVsdDtcbiRjdXN0b20tZmlsZS1wYWRkaW5nLXg6ICAgICAgICAgICAgICRpbnB1dC1wYWRkaW5nLXggIWRlZmF1bHQ7XG4kY3VzdG9tLWZpbGUtbGluZS1oZWlnaHQ6ICAgICAgICAgICAkaW5wdXQtbGluZS1oZWlnaHQgIWRlZmF1bHQ7XG4kY3VzdG9tLWZpbGUtZm9udC13ZWlnaHQ6ICAgICAgICAgICAkaW5wdXQtZm9udC13ZWlnaHQgIWRlZmF1bHQ7XG4kY3VzdG9tLWZpbGUtY29sb3I6ICAgICAgICAgICAgICAgICAkaW5wdXQtY29sb3IgIWRlZmF1bHQ7XG4kY3VzdG9tLWZpbGUtYmc6ICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYmcgIWRlZmF1bHQ7XG4kY3VzdG9tLWZpbGUtYm9yZGVyLXdpZHRoOiAgICAgICAgICAkaW5wdXQtYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xuJGN1c3RvbS1maWxlLWJvcmRlci1jb2xvcjogICAgICAgICAgJGlucHV0LWJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiRjdXN0b20tZmlsZS1ib3JkZXItcmFkaXVzOiAgICAgICAgICRpbnB1dC1ib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuJGN1c3RvbS1maWxlLWJveC1zaGFkb3c6ICAgICAgICAgICAgJGlucHV0LWJveC1zaGFkb3cgIWRlZmF1bHQ7XG4kY3VzdG9tLWZpbGUtYnV0dG9uLWNvbG9yOiAgICAgICAgICAkY3VzdG9tLWZpbGUtY29sb3IgIWRlZmF1bHQ7XG4kY3VzdG9tLWZpbGUtYnV0dG9uLWJnOiAgICAgICAgICAgICAkaW5wdXQtZ3JvdXAtYWRkb24tYmcgIWRlZmF1bHQ7XG4kY3VzdG9tLWZpbGUtdGV4dDogKFxuICBlbjogXCJCcm93c2VcIlxuKSAhZGVmYXVsdDtcblxuXG4vLyBGb3JtIHZhbGlkYXRpb25cblxuJGZvcm0tZmVlZGJhY2stbWFyZ2luLXRvcDogICAgICAgICAgJGZvcm0tdGV4dC1tYXJnaW4tdG9wICFkZWZhdWx0O1xuJGZvcm0tZmVlZGJhY2stZm9udC1zaXplOiAgICAgICAgICAgJHNtYWxsLWZvbnQtc2l6ZSAhZGVmYXVsdDtcbiRmb3JtLWZlZWRiYWNrLXZhbGlkLWNvbG9yOiAgICAgICAgIHRoZW1lLWNvbG9yKFwic3VjY2Vzc1wiKSAhZGVmYXVsdDtcbiRmb3JtLWZlZWRiYWNrLWludmFsaWQtY29sb3I6ICAgICAgIHRoZW1lLWNvbG9yKFwiZGFuZ2VyXCIpICFkZWZhdWx0O1xuXG4kZm9ybS1mZWVkYmFjay1pY29uLXZhbGlkLWNvbG9yOiAgICAkZm9ybS1mZWVkYmFjay12YWxpZC1jb2xvciAhZGVmYXVsdDtcbiRmb3JtLWZlZWRiYWNrLWljb24tdmFsaWQ6ICAgICAgICAgIHN0ci1yZXBsYWNlKHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgOCA4JyUzZSUzY3BhdGggZmlsbD0nI3skZm9ybS1mZWVkYmFjay1pY29uLXZhbGlkLWNvbG9yfScgZD0nTTIuMyA2LjczTC42IDQuNTNjLS40LTEuMDQuNDYtMS40IDEuMS0uOGwxLjEgMS40IDMuNC0zLjhjLjYtLjYzIDEuNi0uMjcgMS4yLjdsLTQgNC42Yy0uNDMuNS0uOC40LTEuMS4xeicvJTNlJTNjL3N2ZyUzZVwiKSwgXCIjXCIsIFwiJTIzXCIpICFkZWZhdWx0O1xuJGZvcm0tZmVlZGJhY2staWNvbi1pbnZhbGlkLWNvbG9yOiAgJGZvcm0tZmVlZGJhY2staW52YWxpZC1jb2xvciAhZGVmYXVsdDtcbiRmb3JtLWZlZWRiYWNrLWljb24taW52YWxpZDogICAgICAgIHN0ci1yZXBsYWNlKHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyBmaWxsPScjeyRmb3JtLWZlZWRiYWNrLWljb24taW52YWxpZC1jb2xvcn0nIHZpZXdCb3g9Jy0yIC0yIDcgNyclM2UlM2NwYXRoIHN0cm9rZT0nJTIzZDk1MzRmJyBkPSdNMCAwbDMgM20wLTNMMCAzJy8lM2UlM2NjaXJjbGUgcj0nLjUnLyUzZSUzY2NpcmNsZSBjeD0nMycgcj0nLjUnLyUzZSUzY2NpcmNsZSBjeT0nMycgcj0nLjUnLyUzZSUzY2NpcmNsZSBjeD0nMycgY3k9JzMnIHI9Jy41Jy8lM2UlM2Mvc3ZnJTNFXCIpLCBcIiNcIiwgXCIlMjNcIikgIWRlZmF1bHQ7XG5cblxuLy8gRHJvcGRvd25zXG4vL1xuLy8gRHJvcGRvd24gbWVudSBjb250YWluZXIgYW5kIGNvbnRlbnRzLlxuXG4kZHJvcGRvd24tbWluLXdpZHRoOiAgICAgICAgICAgICAgICAxMHJlbSAhZGVmYXVsdDtcbiRkcm9wZG93bi1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xuJGRyb3Bkb3duLXNwYWNlcjogICAgICAgICAgICAgICAgICAgLjEyNXJlbSAhZGVmYXVsdDtcbiRkcm9wZG93bi1iZzogICAgICAgICAgICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcbiRkcm9wZG93bi1ib3JkZXItY29sb3I6ICAgICAgICAgICAgIHJnYmEoJGJsYWNrLCAuMTUpICFkZWZhdWx0O1xuJGRyb3Bkb3duLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG4kZHJvcGRvd24tYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xuJGRyb3Bkb3duLWlubmVyLWJvcmRlci1yYWRpdXM6ICAgICAgY2FsYygjeyRkcm9wZG93bi1ib3JkZXItcmFkaXVzfSAtICN7JGRyb3Bkb3duLWJvcmRlci13aWR0aH0pICFkZWZhdWx0O1xuJGRyb3Bkb3duLWRpdmlkZXItYmc6ICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xuJGRyb3Bkb3duLWJveC1zaGFkb3c6ICAgICAgICAgICAgICAgMCAuNXJlbSAxcmVtIHJnYmEoJGJsYWNrLCAuMTc1KSAhZGVmYXVsdDtcblxuJGRyb3Bkb3duLWxpbmstY29sb3I6ICAgICAgICAgICAgICAgJGdyYXktOTAwICFkZWZhdWx0O1xuJGRyb3Bkb3duLWxpbmstaG92ZXItY29sb3I6ICAgICAgICAgZGFya2VuKCRncmF5LTkwMCwgNSUpICFkZWZhdWx0O1xuJGRyb3Bkb3duLWxpbmstaG92ZXItYmc6ICAgICAgICAgICAgJGdyYXktMTAwICFkZWZhdWx0O1xuXG4kZHJvcGRvd24tbGluay1hY3RpdmUtY29sb3I6ICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcbiRkcm9wZG93bi1saW5rLWFjdGl2ZS1iZzogICAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWJnICFkZWZhdWx0O1xuXG4kZHJvcGRvd24tbGluay1kaXNhYmxlZC1jb2xvcjogICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XG5cbiRkcm9wZG93bi1pdGVtLXBhZGRpbmcteTogICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcbiRkcm9wZG93bi1pdGVtLXBhZGRpbmcteDogICAgICAgICAgIDEuNXJlbSAhZGVmYXVsdDtcblxuJGRyb3Bkb3duLWhlYWRlci1jb2xvcjogICAgICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xuXG5cbi8vIFotaW5kZXggbWFzdGVyIGxpc3Rcbi8vXG4vLyBXYXJuaW5nOiBBdm9pZCBjdXN0b21pemluZyB0aGVzZSB2YWx1ZXMuIFRoZXkncmUgdXNlZCBmb3IgYSBiaXJkJ3MgZXllIHZpZXdcbi8vIG9mIGNvbXBvbmVudHMgZGVwZW5kZW50IG9uIHRoZSB6LWF4aXMgYW5kIGFyZSBkZXNpZ25lZCB0byBhbGwgd29yayB0b2dldGhlci5cblxuJHppbmRleC1kcm9wZG93bjogICAgICAgICAgICAgICAgICAgMTAwMCAhZGVmYXVsdDtcbiR6aW5kZXgtc3RpY2t5OiAgICAgICAgICAgICAgICAgICAgIDEwMjAgIWRlZmF1bHQ7XG4kemluZGV4LWZpeGVkOiAgICAgICAgICAgICAgICAgICAgICAxMDMwICFkZWZhdWx0O1xuJHppbmRleC1tb2RhbC1iYWNrZHJvcDogICAgICAgICAgICAgMTA0MCAhZGVmYXVsdDtcbiR6aW5kZXgtbW9kYWw6ICAgICAgICAgICAgICAgICAgICAgIDEwNTAgIWRlZmF1bHQ7XG4kemluZGV4LXBvcG92ZXI6ICAgICAgICAgICAgICAgICAgICAxMDYwICFkZWZhdWx0O1xuJHppbmRleC10b29sdGlwOiAgICAgICAgICAgICAgICAgICAgMTA3MCAhZGVmYXVsdDtcblxuXG4vLyBOYXZzXG5cbiRuYXYtbGluay1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xuJG5hdi1saW5rLXBhZGRpbmcteDogICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcbiRuYXYtbGluay1kaXNhYmxlZC1jb2xvcjogICAgICAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcblxuJG5hdi10YWJzLWJvcmRlci1jb2xvcjogICAgICAgICAgICAgJGdyYXktMzAwICFkZWZhdWx0O1xuJG5hdi10YWJzLWJvcmRlci13aWR0aDogICAgICAgICAgICAgJGJvcmRlci13aWR0aCAhZGVmYXVsdDtcbiRuYXYtdGFicy1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuJG5hdi10YWJzLWxpbmstaG92ZXItYm9yZGVyLWNvbG9yOiAgJGdyYXktMjAwICRncmF5LTIwMCAkbmF2LXRhYnMtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuJG5hdi10YWJzLWxpbmstYWN0aXZlLWNvbG9yOiAgICAgICAgJGdyYXktNzAwICFkZWZhdWx0O1xuJG5hdi10YWJzLWxpbmstYWN0aXZlLWJnOiAgICAgICAgICAgJGJvZHktYmcgIWRlZmF1bHQ7XG4kbmF2LXRhYnMtbGluay1hY3RpdmUtYm9yZGVyLWNvbG9yOiAkZ3JheS0zMDAgJGdyYXktMzAwICRuYXYtdGFicy1saW5rLWFjdGl2ZS1iZyAhZGVmYXVsdDtcblxuJG5hdi1waWxscy1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG4kbmF2LXBpbGxzLWxpbmstYWN0aXZlLWNvbG9yOiAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcbiRuYXYtcGlsbHMtbGluay1hY3RpdmUtYmc6ICAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWJnICFkZWZhdWx0O1xuXG4kbmF2LWRpdmlkZXItY29sb3I6ICAgICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XG4kbmF2LWRpdmlkZXItbWFyZ2luLXk6ICAgICAgICAgICAgICAkc3BhY2VyIC8gMiAhZGVmYXVsdDtcblxuXG4vLyBOYXZiYXJcblxuJG5hdmJhci1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAgJHNwYWNlciAvIDIgIWRlZmF1bHQ7XG4kbmF2YmFyLXBhZGRpbmcteDogICAgICAgICAgICAgICAgICAkc3BhY2VyICFkZWZhdWx0O1xuXG4kbmF2YmFyLW5hdi1saW5rLXBhZGRpbmcteDogICAgICAgICAuNXJlbSAhZGVmYXVsdDtcblxuJG5hdmJhci1icmFuZC1mb250LXNpemU6ICAgICAgICAgICAgJGZvbnQtc2l6ZS1sZyAhZGVmYXVsdDtcbi8vIENvbXB1dGUgdGhlIG5hdmJhci1icmFuZCBwYWRkaW5nLXkgc28gdGhlIG5hdmJhci1icmFuZCB3aWxsIGhhdmUgdGhlIHNhbWUgaGVpZ2h0IGFzIG5hdmJhci10ZXh0IGFuZCBuYXYtbGlua1xuJG5hdi1saW5rLWhlaWdodDogICAgICAgICAgICAgICAgICAgJGZvbnQtc2l6ZS1iYXNlICogJGxpbmUtaGVpZ2h0LWJhc2UgKyAkbmF2LWxpbmstcGFkZGluZy15ICogMiAhZGVmYXVsdDtcbiRuYXZiYXItYnJhbmQtaGVpZ2h0OiAgICAgICAgICAgICAgICRuYXZiYXItYnJhbmQtZm9udC1zaXplICogJGxpbmUtaGVpZ2h0LWJhc2UgIWRlZmF1bHQ7XG4kbmF2YmFyLWJyYW5kLXBhZGRpbmcteTogICAgICAgICAgICAoJG5hdi1saW5rLWhlaWdodCAtICRuYXZiYXItYnJhbmQtaGVpZ2h0KSAvIDIgIWRlZmF1bHQ7XG5cbiRuYXZiYXItdG9nZ2xlci1wYWRkaW5nLXk6ICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcbiRuYXZiYXItdG9nZ2xlci1wYWRkaW5nLXg6ICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcbiRuYXZiYXItdG9nZ2xlci1mb250LXNpemU6ICAgICAgICAgICRmb250LXNpemUtbGcgIWRlZmF1bHQ7XG4kbmF2YmFyLXRvZ2dsZXItYm9yZGVyLXJhZGl1czogICAgICAkYnRuLWJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG5cbiRuYXZiYXItZGFyay1jb2xvcjogICAgICAgICAgICAgICAgIHJnYmEoJHdoaXRlLCAuNSkgIWRlZmF1bHQ7XG4kbmF2YmFyLWRhcmstaG92ZXItY29sb3I6ICAgICAgICAgICByZ2JhKCR3aGl0ZSwgLjc1KSAhZGVmYXVsdDtcbiRuYXZiYXItZGFyay1hY3RpdmUtY29sb3I6ICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcbiRuYXZiYXItZGFyay1kaXNhYmxlZC1jb2xvcjogICAgICAgIHJnYmEoJHdoaXRlLCAuMjUpICFkZWZhdWx0O1xuJG5hdmJhci1kYXJrLXRvZ2dsZXItaWNvbi1iZzogICAgICAgc3RyLXJlcGxhY2UodXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB2aWV3Qm94PScwIDAgMzAgMzAnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyclM2UlM2NwYXRoIHN0cm9rZT0nI3skbmF2YmFyLWRhcmstY29sb3J9JyBzdHJva2Utd2lkdGg9JzInIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLW1pdGVybGltaXQ9JzEwJyBkPSdNNCA3aDIyTTQgMTVoMjJNNCAyM2gyMicvJTNlJTNjL3N2ZyUzZVwiKSwgXCIjXCIsIFwiJTIzXCIpICFkZWZhdWx0O1xuJG5hdmJhci1kYXJrLXRvZ2dsZXItYm9yZGVyLWNvbG9yOiAgcmdiYSgkd2hpdGUsIC4xKSAhZGVmYXVsdDtcblxuJG5hdmJhci1saWdodC1jb2xvcjogICAgICAgICAgICAgICAgcmdiYSgkYmxhY2ssIC41KSAhZGVmYXVsdDtcbiRuYXZiYXItbGlnaHQtaG92ZXItY29sb3I6ICAgICAgICAgIHJnYmEoJGJsYWNrLCAuNykgIWRlZmF1bHQ7XG4kbmF2YmFyLWxpZ2h0LWFjdGl2ZS1jb2xvcjogICAgICAgICByZ2JhKCRibGFjaywgLjkpICFkZWZhdWx0O1xuJG5hdmJhci1saWdodC1kaXNhYmxlZC1jb2xvcjogICAgICAgcmdiYSgkYmxhY2ssIC4zKSAhZGVmYXVsdDtcbiRuYXZiYXItbGlnaHQtdG9nZ2xlci1pY29uLWJnOiAgICAgIHN0ci1yZXBsYWNlKHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2Nzdmcgdmlld0JveD0nMCAwIDMwIDMwJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnJTNlJTNjcGF0aCBzdHJva2U9JyN7JG5hdmJhci1saWdodC1jb2xvcn0nIHN0cm9rZS13aWR0aD0nMicgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbWl0ZXJsaW1pdD0nMTAnIGQ9J000IDdoMjJNNCAxNWgyMk00IDIzaDIyJy8lM2UlM2Mvc3ZnJTNlXCIpLCBcIiNcIiwgXCIlMjNcIikgIWRlZmF1bHQ7XG4kbmF2YmFyLWxpZ2h0LXRvZ2dsZXItYm9yZGVyLWNvbG9yOiByZ2JhKCRibGFjaywgLjEpICFkZWZhdWx0O1xuXG4kbmF2YmFyLWxpZ2h0LWJyYW5kLWNvbG9yOiAgICAgICAgICAgICAgICAkbmF2YmFyLWxpZ2h0LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcbiRuYXZiYXItbGlnaHQtYnJhbmQtaG92ZXItY29sb3I6ICAgICAgICAgICRuYXZiYXItbGlnaHQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xuJG5hdmJhci1kYXJrLWJyYW5kLWNvbG9yOiAgICAgICAgICAgICAgICAgJG5hdmJhci1kYXJrLWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcbiRuYXZiYXItZGFyay1icmFuZC1ob3Zlci1jb2xvcjogICAgICAgICAgICRuYXZiYXItZGFyay1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XG5cblxuLy8gUGFnaW5hdGlvblxuXG4kcGFnaW5hdGlvbi1wYWRkaW5nLXk6ICAgICAgICAgICAgICAuNXJlbSAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLXBhZGRpbmcteDogICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLXBhZGRpbmcteS1zbTogICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLXBhZGRpbmcteC1zbTogICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tcGFkZGluZy15LWxnOiAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tcGFkZGluZy14LWxnOiAgICAgICAgICAgMS41cmVtICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tbGluZS1oZWlnaHQ6ICAgICAgICAgICAgMS4yNSAhZGVmYXVsdDtcblxuJHBhZ2luYXRpb24tY29sb3I6ICAgICAgICAgICAgICAgICAgJGxpbmstY29sb3IgIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1iZzogICAgICAgICAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1ib3JkZXItd2lkdGg6ICAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tYm9yZGVyLWNvbG9yOiAgICAgICAgICAgJGdyYXktMzAwICFkZWZhdWx0O1xuXG4kcGFnaW5hdGlvbi1mb2N1cy1ib3gtc2hhZG93OiAgICAgICAkaW5wdXQtYnRuLWZvY3VzLWJveC1zaGFkb3cgIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1mb2N1cy1vdXRsaW5lOiAgICAgICAgICAwICFkZWZhdWx0O1xuXG4kcGFnaW5hdGlvbi1ob3Zlci1jb2xvcjogICAgICAgICAgICAkbGluay1ob3Zlci1jb2xvciAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWhvdmVyLWJnOiAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWhvdmVyLWJvcmRlci1jb2xvcjogICAgICRncmF5LTMwMCAhZGVmYXVsdDtcblxuJHBhZ2luYXRpb24tYWN0aXZlLWNvbG9yOiAgICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1hY3RpdmUtYmc6ICAgICAgICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWFjdGl2ZS1ib3JkZXItY29sb3I6ICAgICRwYWdpbmF0aW9uLWFjdGl2ZS1iZyAhZGVmYXVsdDtcblxuJHBhZ2luYXRpb24tZGlzYWJsZWQtY29sb3I6ICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tZGlzYWJsZWQtYmc6ICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tZGlzYWJsZWQtYm9yZGVyLWNvbG9yOiAgJGdyYXktMzAwICFkZWZhdWx0O1xuXG5cbi8vIEp1bWJvdHJvblxuXG4kanVtYm90cm9uLXBhZGRpbmc6ICAgICAgICAgICAgICAgICAycmVtICFkZWZhdWx0O1xuJGp1bWJvdHJvbi1iZzogICAgICAgICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xuXG5cbi8vIENhcmRzXG5cbiRjYXJkLXNwYWNlci15OiAgICAgICAgICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcbiRjYXJkLXNwYWNlci14OiAgICAgICAgICAgICAgICAgICAgIDEuMjVyZW0gIWRlZmF1bHQ7XG4kY2FyZC1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xuJGNhcmQtYm9yZGVyLXJhZGl1czogICAgICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG4kY2FyZC1ib3JkZXItY29sb3I6ICAgICAgICAgICAgICAgICByZ2JhKCRibGFjaywgLjEyNSkgIWRlZmF1bHQ7XG4kY2FyZC1pbm5lci1ib3JkZXItcmFkaXVzOiAgICAgICAgICBjYWxjKCN7JGNhcmQtYm9yZGVyLXJhZGl1c30gLSAjeyRjYXJkLWJvcmRlci13aWR0aH0pICFkZWZhdWx0O1xuJGNhcmQtY2FwLWJnOiAgICAgICAgICAgICAgICAgICAgICAgcmdiYSgkYmxhY2ssIC4wMykgIWRlZmF1bHQ7XG4kY2FyZC1jYXAtY29sb3I6ICAgICAgICAgICAgICAgICAgICBpbmhlcml0ICFkZWZhdWx0O1xuJGNhcmQtYmc6ICAgICAgICAgICAgICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xuXG4kY2FyZC1pbWctb3ZlcmxheS1wYWRkaW5nOiAgICAgICAgICAxLjI1cmVtICFkZWZhdWx0O1xuXG4kY2FyZC1ncm91cC1tYXJnaW46ICAgICAgICAgICAgICAgICAkZ3JpZC1ndXR0ZXItd2lkdGggLyAyICFkZWZhdWx0O1xuJGNhcmQtZGVjay1tYXJnaW46ICAgICAgICAgICAgICAgICAgJGNhcmQtZ3JvdXAtbWFyZ2luICFkZWZhdWx0O1xuXG4kY2FyZC1jb2x1bW5zLWNvdW50OiAgICAgICAgICAgICAgICAzICFkZWZhdWx0O1xuJGNhcmQtY29sdW1ucy1nYXA6ICAgICAgICAgICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcbiRjYXJkLWNvbHVtbnMtbWFyZ2luOiAgICAgICAgICAgICAgICRjYXJkLXNwYWNlci15ICFkZWZhdWx0O1xuXG5cbi8vIFRvb2x0aXBzXG5cbiR0b29sdGlwLWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgICRmb250LXNpemUtc20gIWRlZmF1bHQ7XG4kdG9vbHRpcC1tYXgtd2lkdGg6ICAgICAgICAgICAgICAgICAyMDBweCAhZGVmYXVsdDtcbiR0b29sdGlwLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcbiR0b29sdGlwLWJnOiAgICAgICAgICAgICAgICAgICAgICAgICRibGFjayAhZGVmYXVsdDtcbiR0b29sdGlwLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuJHRvb2x0aXAtb3BhY2l0eTogICAgICAgICAgICAgICAgICAgLjkgIWRlZmF1bHQ7XG4kdG9vbHRpcC1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAuMjVyZW0gIWRlZmF1bHQ7XG4kdG9vbHRpcC1wYWRkaW5nLXg6ICAgICAgICAgICAgICAgICAuNXJlbSAhZGVmYXVsdDtcbiR0b29sdGlwLW1hcmdpbjogICAgICAgICAgICAgICAgICAgIDAgIWRlZmF1bHQ7XG5cbiR0b29sdGlwLWFycm93LXdpZHRoOiAgICAgICAgICAgICAgIC44cmVtICFkZWZhdWx0O1xuJHRvb2x0aXAtYXJyb3ctaGVpZ2h0OiAgICAgICAgICAgICAgLjRyZW0gIWRlZmF1bHQ7XG4kdG9vbHRpcC1hcnJvdy1jb2xvcjogICAgICAgICAgICAgICAkdG9vbHRpcC1iZyAhZGVmYXVsdDtcblxuLy8gRm9ybSB0b29sdGlwcyBtdXN0IGNvbWUgYWZ0ZXIgcmVndWxhciB0b29sdGlwc1xuJGZvcm0tZmVlZGJhY2stdG9vbHRpcC1wYWRkaW5nLXk6ICAgICAkdG9vbHRpcC1wYWRkaW5nLXkgIWRlZmF1bHQ7XG4kZm9ybS1mZWVkYmFjay10b29sdGlwLXBhZGRpbmcteDogICAgICR0b29sdGlwLXBhZGRpbmcteCAhZGVmYXVsdDtcbiRmb3JtLWZlZWRiYWNrLXRvb2x0aXAtZm9udC1zaXplOiAgICAgJHRvb2x0aXAtZm9udC1zaXplICFkZWZhdWx0O1xuJGZvcm0tZmVlZGJhY2stdG9vbHRpcC1saW5lLWhlaWdodDogICAkbGluZS1oZWlnaHQtYmFzZSAhZGVmYXVsdDtcbiRmb3JtLWZlZWRiYWNrLXRvb2x0aXAtb3BhY2l0eTogICAgICAgJHRvb2x0aXAtb3BhY2l0eSAhZGVmYXVsdDtcbiRmb3JtLWZlZWRiYWNrLXRvb2x0aXAtYm9yZGVyLXJhZGl1czogJHRvb2x0aXAtYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcblxuXG4vLyBQb3BvdmVyc1xuXG4kcG9wb3Zlci1mb250LXNpemU6ICAgICAgICAgICAgICAgICAkZm9udC1zaXplLXNtICFkZWZhdWx0O1xuJHBvcG92ZXItYmc6ICAgICAgICAgICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xuJHBvcG92ZXItbWF4LXdpZHRoOiAgICAgICAgICAgICAgICAgMjc2cHggIWRlZmF1bHQ7XG4kcG9wb3Zlci1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xuJHBvcG92ZXItYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICAgcmdiYSgkYmxhY2ssIC4yKSAhZGVmYXVsdDtcbiRwb3BvdmVyLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgICRib3JkZXItcmFkaXVzLWxnICFkZWZhdWx0O1xuJHBvcG92ZXItYm94LXNoYWRvdzogICAgICAgICAgICAgICAgMCAuMjVyZW0gLjVyZW0gcmdiYSgkYmxhY2ssIC4yKSAhZGVmYXVsdDtcblxuJHBvcG92ZXItaGVhZGVyLWJnOiAgICAgICAgICAgICAgICAgZGFya2VuKCRwb3BvdmVyLWJnLCAzJSkgIWRlZmF1bHQ7XG4kcG9wb3Zlci1oZWFkZXItY29sb3I6ICAgICAgICAgICAgICAkaGVhZGluZ3MtY29sb3IgIWRlZmF1bHQ7XG4kcG9wb3Zlci1oZWFkZXItcGFkZGluZy15OiAgICAgICAgICAuNXJlbSAhZGVmYXVsdDtcbiRwb3BvdmVyLWhlYWRlci1wYWRkaW5nLXg6ICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcblxuJHBvcG92ZXItYm9keS1jb2xvcjogICAgICAgICAgICAgICAgJGJvZHktY29sb3IgIWRlZmF1bHQ7XG4kcG9wb3Zlci1ib2R5LXBhZGRpbmcteTogICAgICAgICAgICAkcG9wb3Zlci1oZWFkZXItcGFkZGluZy15ICFkZWZhdWx0O1xuJHBvcG92ZXItYm9keS1wYWRkaW5nLXg6ICAgICAgICAgICAgJHBvcG92ZXItaGVhZGVyLXBhZGRpbmcteCAhZGVmYXVsdDtcblxuJHBvcG92ZXItYXJyb3ctd2lkdGg6ICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcbiRwb3BvdmVyLWFycm93LWhlaWdodDogICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xuJHBvcG92ZXItYXJyb3ctY29sb3I6ICAgICAgICAgICAgICAgJHBvcG92ZXItYmcgIWRlZmF1bHQ7XG5cbiRwb3BvdmVyLWFycm93LW91dGVyLWNvbG9yOiAgICAgICAgIGZhZGUtaW4oJHBvcG92ZXItYm9yZGVyLWNvbG9yLCAuMDUpICFkZWZhdWx0O1xuXG5cbi8vIFRvYXN0c1xuJHRvYXN0LW1heC13aWR0aDogMzUwcHggIWRlZmF1bHQ7XG4kdG9hc3QtcGFkZGluZy14OiAuNzVyZW0gIWRlZmF1bHQ7XG4kdG9hc3QtcGFkZGluZy15OiAuMjVyZW0gIWRlZmF1bHQ7XG4kdG9hc3QtZm9udC1zaXplOiAuODc1cmVtICFkZWZhdWx0O1xuJHRvYXN0LWJhY2tncm91bmQtY29sb3I6IHJnYmEoJHdoaXRlLCAuODUpICFkZWZhdWx0O1xuJHRvYXN0LWJvcmRlci13aWR0aDogMXB4ICFkZWZhdWx0O1xuJHRvYXN0LWJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAuMSkgIWRlZmF1bHQ7XG4kdG9hc3QtYm9yZGVyLXJhZGl1czogLjI1cmVtICFkZWZhdWx0O1xuJHRvYXN0LWJveC1zaGFkb3c6IDAgLjI1cmVtIC43NXJlbSByZ2JhKCRibGFjaywgLjEpICFkZWZhdWx0O1xuXG4kdG9hc3QtaGVhZGVyLWNvbG9yOiAkZ3JheS02MDAgIWRlZmF1bHQ7XG4kdG9hc3QtaGVhZGVyLWJhY2tncm91bmQtY29sb3I6IHJnYmEoJHdoaXRlLCAuODUpICFkZWZhdWx0O1xuJHRvYXN0LWhlYWRlci1ib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgLjA1KSAhZGVmYXVsdDtcblxuXG4vLyBCYWRnZXNcblxuJGJhZGdlLWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgICAgNzUlICFkZWZhdWx0O1xuJGJhZGdlLWZvbnQtd2VpZ2h0OiAgICAgICAgICAgICAgICAgJGZvbnQtd2VpZ2h0LWJvbGQgIWRlZmF1bHQ7XG4kYmFkZ2UtcGFkZGluZy15OiAgICAgICAgICAgICAgICAgICAuMjVlbSAhZGVmYXVsdDtcbiRiYWRnZS1wYWRkaW5nLXg6ICAgICAgICAgICAgICAgICAgIC40ZW0gIWRlZmF1bHQ7XG4kYmFkZ2UtYm9yZGVyLXJhZGl1czogICAgICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcblxuJGJhZGdlLXBpbGwtcGFkZGluZy14OiAgICAgICAgICAgICAgLjZlbSAhZGVmYXVsdDtcbi8vIFVzZSBhIGhpZ2hlciB0aGFuIG5vcm1hbCB2YWx1ZSB0byBlbnN1cmUgY29tcGxldGVseSByb3VuZGVkIGVkZ2VzIHdoZW5cbi8vIGN1c3RvbWl6aW5nIHBhZGRpbmcgb3IgZm9udC1zaXplIG9uIGxhYmVscy5cbiRiYWRnZS1waWxsLWJvcmRlci1yYWRpdXM6ICAgICAgICAgIDEwcmVtICFkZWZhdWx0O1xuXG5cbi8vIE1vZGFsc1xuXG4vLyBQYWRkaW5nIGFwcGxpZWQgdG8gdGhlIG1vZGFsIGJvZHlcbiRtb2RhbC1pbm5lci1wYWRkaW5nOiAgICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XG5cbiRtb2RhbC1kaWFsb2ctbWFyZ2luOiAgICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xuJG1vZGFsLWRpYWxvZy1tYXJnaW4teS1zbS11cDogICAgICAgMS43NXJlbSAhZGVmYXVsdDtcblxuJG1vZGFsLXRpdGxlLWxpbmUtaGVpZ2h0OiAgICAgICAgICAgJGxpbmUtaGVpZ2h0LWJhc2UgIWRlZmF1bHQ7XG5cbiRtb2RhbC1jb250ZW50LWJnOiAgICAgICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcbiRtb2RhbC1jb250ZW50LWJvcmRlci1jb2xvcjogICAgICAgIHJnYmEoJGJsYWNrLCAuMikgIWRlZmF1bHQ7XG4kbW9kYWwtY29udGVudC1ib3JkZXItd2lkdGg6ICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xuJG1vZGFsLWNvbnRlbnQtYm9yZGVyLXJhZGl1czogICAgICAgJGJvcmRlci1yYWRpdXMtbGcgIWRlZmF1bHQ7XG4kbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzOiAgICAgICAwIC4yNXJlbSAuNXJlbSByZ2JhKCRibGFjaywgLjUpICFkZWZhdWx0O1xuJG1vZGFsLWNvbnRlbnQtYm94LXNoYWRvdy1zbS11cDogICAgMCAuNXJlbSAxcmVtIHJnYmEoJGJsYWNrLCAuNSkgIWRlZmF1bHQ7XG5cbiRtb2RhbC1iYWNrZHJvcC1iZzogICAgICAgICAgICAgICAgICRibGFjayAhZGVmYXVsdDtcbiRtb2RhbC1iYWNrZHJvcC1vcGFjaXR5OiAgICAgICAgICAgIC41ICFkZWZhdWx0O1xuJG1vZGFsLWhlYWRlci1ib3JkZXItY29sb3I6ICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xuJG1vZGFsLWZvb3Rlci1ib3JkZXItY29sb3I6ICAgICAgICAgJG1vZGFsLWhlYWRlci1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XG4kbW9kYWwtaGVhZGVyLWJvcmRlci13aWR0aDogICAgICAgICAkbW9kYWwtY29udGVudC1ib3JkZXItd2lkdGggIWRlZmF1bHQ7XG4kbW9kYWwtZm9vdGVyLWJvcmRlci13aWR0aDogICAgICAgICAkbW9kYWwtaGVhZGVyLWJvcmRlci13aWR0aCAhZGVmYXVsdDtcbiRtb2RhbC1oZWFkZXItcGFkZGluZy15OiAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XG4kbW9kYWwtaGVhZGVyLXBhZGRpbmcteDogICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xuJG1vZGFsLWhlYWRlci1wYWRkaW5nOiAgICAgICAgICAgICAgJG1vZGFsLWhlYWRlci1wYWRkaW5nLXkgJG1vZGFsLWhlYWRlci1wYWRkaW5nLXggIWRlZmF1bHQ7IC8vIEtlZXAgdGhpcyBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHlcblxuJG1vZGFsLXhsOiAgICAgICAgICAgICAgICAgICAgICAgICAgMTE0MHB4ICFkZWZhdWx0O1xuJG1vZGFsLWxnOiAgICAgICAgICAgICAgICAgICAgICAgICAgODAwcHggIWRlZmF1bHQ7XG4kbW9kYWwtbWQ6ICAgICAgICAgICAgICAgICAgICAgICAgICA1MDBweCAhZGVmYXVsdDtcbiRtb2RhbC1zbTogICAgICAgICAgICAgICAgICAgICAgICAgIDMwMHB4ICFkZWZhdWx0O1xuXG4kbW9kYWwtZmFkZS10cmFuc2Zvcm06ICAgICAgICAgICAgICB0cmFuc2xhdGUoMCwgLTUwcHgpICFkZWZhdWx0O1xuJG1vZGFsLXNob3ctdHJhbnNmb3JtOiAgICAgICAgICAgICAgbm9uZSAhZGVmYXVsdDtcbiRtb2RhbC10cmFuc2l0aW9uOiAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybSAuM3MgZWFzZS1vdXQgIWRlZmF1bHQ7XG5cblxuLy8gQWxlcnRzXG4vL1xuLy8gRGVmaW5lIGFsZXJ0IGNvbG9ycywgYm9yZGVyIHJhZGl1cywgYW5kIHBhZGRpbmcuXG5cbiRhbGVydC1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcbiRhbGVydC1wYWRkaW5nLXg6ICAgICAgICAgICAgICAgICAgIDEuMjVyZW0gIWRlZmF1bHQ7XG4kYWxlcnQtbWFyZ2luLWJvdHRvbTogICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xuJGFsZXJ0LWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG4kYWxlcnQtbGluay1mb250LXdlaWdodDogICAgICAgICAgICAkZm9udC13ZWlnaHQtYm9sZCAhZGVmYXVsdDtcbiRhbGVydC1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XG5cbiRhbGVydC1iZy1sZXZlbDogICAgICAgICAgICAgICAgICAgIC0xMCAhZGVmYXVsdDtcbiRhbGVydC1ib3JkZXItbGV2ZWw6ICAgICAgICAgICAgICAgIC05ICFkZWZhdWx0O1xuJGFsZXJ0LWNvbG9yLWxldmVsOiAgICAgICAgICAgICAgICAgNiAhZGVmYXVsdDtcblxuXG4vLyBQcm9ncmVzcyBiYXJzXG5cbiRwcm9ncmVzcy1oZWlnaHQ6ICAgICAgICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XG4kcHJvZ3Jlc3MtZm9udC1zaXplOiAgICAgICAgICAgICAgICAoJGZvbnQtc2l6ZS1iYXNlICogLjc1KSAhZGVmYXVsdDtcbiRwcm9ncmVzcy1iZzogICAgICAgICAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcbiRwcm9ncmVzcy1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuJHByb2dyZXNzLWJveC1zaGFkb3c6ICAgICAgICAgICAgICAgaW5zZXQgMCAuMXJlbSAuMXJlbSByZ2JhKCRibGFjaywgLjEpICFkZWZhdWx0O1xuJHByb2dyZXNzLWJhci1jb2xvcjogICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xuJHByb2dyZXNzLWJhci1iZzogICAgICAgICAgICAgICAgICAgdGhlbWUtY29sb3IoXCJwcmltYXJ5XCIpICFkZWZhdWx0O1xuJHByb2dyZXNzLWJhci1hbmltYXRpb24tdGltaW5nOiAgICAgMXMgbGluZWFyIGluZmluaXRlICFkZWZhdWx0O1xuJHByb2dyZXNzLWJhci10cmFuc2l0aW9uOiAgICAgICAgICAgd2lkdGggLjZzIGVhc2UgIWRlZmF1bHQ7XG5cblxuLy8gTGlzdCBncm91cFxuXG4kbGlzdC1ncm91cC1iZzogICAgICAgICAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1ib3JkZXItY29sb3I6ICAgICAgICAgICByZ2JhKCRibGFjaywgLjEyNSkgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1ib3JkZXItd2lkdGg6ICAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xuJGxpc3QtZ3JvdXAtYm9yZGVyLXJhZGl1czogICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG5cbiRsaXN0LWdyb3VwLWl0ZW0tcGFkZGluZy15OiAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWl0ZW0tcGFkZGluZy14OiAgICAgICAgIDEuMjVyZW0gIWRlZmF1bHQ7XG5cbiRsaXN0LWdyb3VwLWhvdmVyLWJnOiAgICAgICAgICAgICAgICRncmF5LTEwMCAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWFjdGl2ZS1jb2xvcjogICAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xuJGxpc3QtZ3JvdXAtYWN0aXZlLWJnOiAgICAgICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1hY3RpdmUtYm9yZGVyLWNvbG9yOiAgICAkbGlzdC1ncm91cC1hY3RpdmUtYmcgIWRlZmF1bHQ7XG5cbiRsaXN0LWdyb3VwLWRpc2FibGVkLWNvbG9yOiAgICAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWRpc2FibGVkLWJnOiAgICAgICAgICAgICRsaXN0LWdyb3VwLWJnICFkZWZhdWx0O1xuXG4kbGlzdC1ncm91cC1hY3Rpb24tY29sb3I6ICAgICAgICAgICAkZ3JheS03MDAgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1hY3Rpb24taG92ZXItY29sb3I6ICAgICAkbGlzdC1ncm91cC1hY3Rpb24tY29sb3IgIWRlZmF1bHQ7XG5cbiRsaXN0LWdyb3VwLWFjdGlvbi1hY3RpdmUtY29sb3I6ICAgICRib2R5LWNvbG9yICFkZWZhdWx0O1xuJGxpc3QtZ3JvdXAtYWN0aW9uLWFjdGl2ZS1iZzogICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xuXG5cbi8vIEltYWdlIHRodW1ibmFpbHNcblxuJHRodW1ibmFpbC1wYWRkaW5nOiAgICAgICAgICAgICAgICAgLjI1cmVtICFkZWZhdWx0O1xuJHRodW1ibmFpbC1iZzogICAgICAgICAgICAgICAgICAgICAgJGJvZHktYmcgIWRlZmF1bHQ7XG4kdGh1bWJuYWlsLWJvcmRlci13aWR0aDogICAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xuJHRodW1ibmFpbC1ib3JkZXItY29sb3I6ICAgICAgICAgICAgJGdyYXktMzAwICFkZWZhdWx0O1xuJHRodW1ibmFpbC1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG4kdGh1bWJuYWlsLWJveC1zaGFkb3c6ICAgICAgICAgICAgICAwIDFweCAycHggcmdiYSgkYmxhY2ssIC4wNzUpICFkZWZhdWx0O1xuXG5cbi8vIEZpZ3VyZXNcblxuJGZpZ3VyZS1jYXB0aW9uLWZvbnQtc2l6ZTogICAgICAgICAgOTAlICFkZWZhdWx0O1xuJGZpZ3VyZS1jYXB0aW9uLWNvbG9yOiAgICAgICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xuXG5cbi8vIEJyZWFkY3J1bWJzXG5cbiRicmVhZGNydW1iLXBhZGRpbmcteTogICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcbiRicmVhZGNydW1iLXBhZGRpbmcteDogICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XG4kYnJlYWRjcnVtYi1pdGVtLXBhZGRpbmc6ICAgICAgICAgICAuNXJlbSAhZGVmYXVsdDtcblxuJGJyZWFkY3J1bWItbWFyZ2luLWJvdHRvbTogICAgICAgICAgMXJlbSAhZGVmYXVsdDtcblxuJGJyZWFkY3J1bWItYmc6ICAgICAgICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xuJGJyZWFkY3J1bWItZGl2aWRlci1jb2xvcjogICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xuJGJyZWFkY3J1bWItYWN0aXZlLWNvbG9yOiAgICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xuJGJyZWFkY3J1bWItZGl2aWRlcjogICAgICAgICAgICAgICAgcXVvdGUoXCIvXCIpICFkZWZhdWx0O1xuXG4kYnJlYWRjcnVtYi1ib3JkZXItcmFkaXVzOiAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcblxuXG4vLyBDYXJvdXNlbFxuXG4kY2Fyb3VzZWwtY29udHJvbC1jb2xvcjogICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xuJGNhcm91c2VsLWNvbnRyb2wtd2lkdGg6ICAgICAgICAgICAgIDE1JSAhZGVmYXVsdDtcbiRjYXJvdXNlbC1jb250cm9sLW9wYWNpdHk6ICAgICAgICAgICAuNSAhZGVmYXVsdDtcbiRjYXJvdXNlbC1jb250cm9sLWhvdmVyLW9wYWNpdHk6ICAgICAuOSAhZGVmYXVsdDtcbiRjYXJvdXNlbC1jb250cm9sLXRyYW5zaXRpb246ICAgICAgICBvcGFjaXR5IC4xNXMgZWFzZSAhZGVmYXVsdDtcblxuJGNhcm91c2VsLWluZGljYXRvci13aWR0aDogICAgICAgICAgIDMwcHggIWRlZmF1bHQ7XG4kY2Fyb3VzZWwtaW5kaWNhdG9yLWhlaWdodDogICAgICAgICAgM3B4ICFkZWZhdWx0O1xuJGNhcm91c2VsLWluZGljYXRvci1oaXQtYXJlYS1oZWlnaHQ6IDEwcHggIWRlZmF1bHQ7XG4kY2Fyb3VzZWwtaW5kaWNhdG9yLXNwYWNlcjogICAgICAgICAgM3B4ICFkZWZhdWx0O1xuJGNhcm91c2VsLWluZGljYXRvci1hY3RpdmUtYmc6ICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcbiRjYXJvdXNlbC1pbmRpY2F0b3ItdHJhbnNpdGlvbjogICAgICBvcGFjaXR5IC42cyBlYXNlICFkZWZhdWx0O1xuXG4kY2Fyb3VzZWwtY2FwdGlvbi13aWR0aDogICAgICAgICAgICAgNzAlICFkZWZhdWx0O1xuJGNhcm91c2VsLWNhcHRpb24tY29sb3I6ICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcblxuJGNhcm91c2VsLWNvbnRyb2wtaWNvbi13aWR0aDogICAgICAgIDIwcHggIWRlZmF1bHQ7XG5cbiRjYXJvdXNlbC1jb250cm9sLXByZXYtaWNvbi1iZzogICAgICBzdHItcmVwbGFjZSh1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNjc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgZmlsbD0nI3skY2Fyb3VzZWwtY29udHJvbC1jb2xvcn0nIHZpZXdCb3g9JzAgMCA4IDgnJTNlJTNjcGF0aCBkPSdNNS4yNSAwbC00IDQgNCA0IDEuNS0xLjUtMi41LTIuNSAyLjUtMi41LTEuNS0xLjV6Jy8lM2UlM2Mvc3ZnJTNlXCIpLCBcIiNcIiwgXCIlMjNcIikgIWRlZmF1bHQ7XG4kY2Fyb3VzZWwtY29udHJvbC1uZXh0LWljb24tYmc6ICAgICAgc3RyLXJlcGxhY2UodXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIGZpbGw9JyN7JGNhcm91c2VsLWNvbnRyb2wtY29sb3J9JyB2aWV3Qm94PScwIDAgOCA4JyUzZSUzY3BhdGggZD0nTTIuNzUgMGwtMS41IDEuNSAyLjUgMi41LTIuNSAyLjUgMS41IDEuNSA0LTQtNC00eicvJTNlJTNjL3N2ZyUzZVwiKSwgXCIjXCIsIFwiJTIzXCIpICFkZWZhdWx0O1xuXG4kY2Fyb3VzZWwtdHJhbnNpdGlvbi1kdXJhdGlvbjogICAgICAgLjZzICFkZWZhdWx0O1xuJGNhcm91c2VsLXRyYW5zaXRpb246ICAgICAgICAgICAgICAgIHRyYW5zZm9ybSAkY2Fyb3VzZWwtdHJhbnNpdGlvbi1kdXJhdGlvbiBlYXNlLWluLW91dCAhZGVmYXVsdDsgLy8gRGVmaW5lIHRyYW5zZm9ybSB0cmFuc2l0aW9uIGZpcnN0IGlmIHVzaW5nIG11bHRpcGxlIHRyYW5zaXRpb25zIChlLmcuLCBgdHJhbnNmb3JtIDJzIGVhc2UsIG9wYWNpdHkgLjVzIGVhc2Utb3V0YClcblxuXG4vLyBTcGlubmVyc1xuXG4kc3Bpbm5lci13aWR0aDogICAgICAgICAycmVtICFkZWZhdWx0O1xuJHNwaW5uZXItaGVpZ2h0OiAgICAgICAgJHNwaW5uZXItd2lkdGggIWRlZmF1bHQ7XG4kc3Bpbm5lci1ib3JkZXItd2lkdGg6ICAuMjVlbSAhZGVmYXVsdDtcblxuJHNwaW5uZXItd2lkdGgtc206ICAgICAgICAxcmVtICFkZWZhdWx0O1xuJHNwaW5uZXItaGVpZ2h0LXNtOiAgICAgICAkc3Bpbm5lci13aWR0aC1zbSAhZGVmYXVsdDtcbiRzcGlubmVyLWJvcmRlci13aWR0aC1zbTogLjJlbSAhZGVmYXVsdDtcblxuXG4vLyBDbG9zZVxuXG4kY2xvc2UtZm9udC1zaXplOiAgICAgICAgICAgICAgICAgICAkZm9udC1zaXplLWJhc2UgKiAxLjUgIWRlZmF1bHQ7XG4kY2xvc2UtZm9udC13ZWlnaHQ6ICAgICAgICAgICAgICAgICAkZm9udC13ZWlnaHQtYm9sZCAhZGVmYXVsdDtcbiRjbG9zZS1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICRibGFjayAhZGVmYXVsdDtcbiRjbG9zZS10ZXh0LXNoYWRvdzogICAgICAgICAgICAgICAgIDAgMXB4IDAgJHdoaXRlICFkZWZhdWx0O1xuXG5cbi8vIENvZGVcblxuJGNvZGUtZm9udC1zaXplOiAgICAgICAgICAgICAgICAgICAgODcuNSUgIWRlZmF1bHQ7XG4kY29kZS1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICAkcGluayAhZGVmYXVsdDtcblxuJGtiZC1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAgICAgLjJyZW0gIWRlZmF1bHQ7XG4ka2JkLXBhZGRpbmcteDogICAgICAgICAgICAgICAgICAgICAuNHJlbSAhZGVmYXVsdDtcbiRrYmQtZm9udC1zaXplOiAgICAgICAgICAgICAgICAgICAgICRjb2RlLWZvbnQtc2l6ZSAhZGVmYXVsdDtcbiRrYmQtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcbiRrYmQtYmc6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICRncmF5LTkwMCAhZGVmYXVsdDtcblxuJHByZS1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICAgJGdyYXktOTAwICFkZWZhdWx0O1xuJHByZS1zY3JvbGxhYmxlLW1heC1oZWlnaHQ6ICAgICAgICAgMzQwcHggIWRlZmF1bHQ7XG5cblxuLy8gVXRpbGl0aWVzXG5cbiRvdmVyZmxvd3M6IGF1dG8sIGhpZGRlbiAhZGVmYXVsdDtcbiRwb3NpdGlvbnM6IHN0YXRpYywgcmVsYXRpdmUsIGFic29sdXRlLCBmaXhlZCwgc3RpY2t5ICFkZWZhdWx0O1xuXG5cbi8vIFByaW50aW5nXG5cbiRwcmludC1wYWdlLXNpemU6ICAgICAgICAgICAgICAgICAgIGEzICFkZWZhdWx0O1xuJHByaW50LWJvZHktbWluLXdpZHRoOiAgICAgICAgICAgICAgbWFwLWdldCgkZ3JpZC1icmVha3BvaW50cywgXCJsZ1wiKSAhZGVmYXVsdDtcbiIsIi8vIEhvdmVyIG1peGluIGFuZCBgJGVuYWJsZS1ob3Zlci1tZWRpYS1xdWVyeWAgYXJlIGRlcHJlY2F0ZWQuXG4vL1xuLy8gT3JpZ2luYWxseSBhZGRlZCBkdXJpbmcgb3VyIGFscGhhcyBhbmQgbWFpbnRhaW5lZCBkdXJpbmcgYmV0YXMsIHRoaXMgbWl4aW4gd2FzXG4vLyBkZXNpZ25lZCB0byBwcmV2ZW50IGA6aG92ZXJgIHN0aWNraW5lc3Mgb24gaU9TLWFuIGlzc3VlIHdoZXJlIGhvdmVyIHN0eWxlc1xuLy8gd291bGQgcGVyc2lzdCBhZnRlciBpbml0aWFsIHRvdWNoLlxuLy9cbi8vIEZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LCB3ZSd2ZSBrZXB0IHRoZXNlIG1peGlucyBhbmQgdXBkYXRlZCB0aGVtIHRvXG4vLyBhbHdheXMgcmV0dXJuIHRoZWlyIHJlZ3VsYXIgcHNldWRvLWNsYXNzZXMgaW5zdGVhZCBvZiBhIHNoaW1tZWQgbWVkaWEgcXVlcnkuXG4vL1xuLy8gSXNzdWU6IGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9pc3N1ZXMvMjUxOTVcblxuQG1peGluIGhvdmVyIHtcbiAgJjpob3ZlciB7IEBjb250ZW50OyB9XG59XG5cbkBtaXhpbiBob3Zlci1mb2N1cyB7XG4gICY6aG92ZXIsXG4gICY6Zm9jdXMge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBwbGFpbi1ob3Zlci1mb2N1cyB7XG4gICYsXG4gICY6aG92ZXIsXG4gICY6Zm9jdXMge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBob3Zlci1mb2N1cy1hY3RpdmUge1xuICAmOmhvdmVyLFxuICAmOmZvY3VzLFxuICAmOmFjdGl2ZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cbiIsIi8vIHN0eWxlbGludC1kaXNhYmxlIHByb3BlcnR5LWJsYWNrbGlzdFxuQG1peGluIHRyYW5zaXRpb24oJHRyYW5zaXRpb24uLi4pIHtcbiAgQGlmICRlbmFibGUtdHJhbnNpdGlvbnMge1xuICAgIEBpZiBsZW5ndGgoJHRyYW5zaXRpb24pID09IDAge1xuICAgICAgdHJhbnNpdGlvbjogJHRyYW5zaXRpb24tYmFzZTtcbiAgICB9IEBlbHNlIHtcbiAgICAgIHRyYW5zaXRpb246ICR0cmFuc2l0aW9uO1xuICAgIH1cbiAgfVxuXG4gIEBpZiAkZW5hYmxlLXByZWZlcnMtcmVkdWNlZC1tb3Rpb24tbWVkaWEtcXVlcnkge1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiByZWR1Y2UpIHtcbiAgICAgIHRyYW5zaXRpb246IG5vbmU7XG4gICAgfVxuICB9XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"create-lookup\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"create-lookup-title\\\"\\r\\n aria-hidden=\\\"true\\\">\\r\\n\\t<div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t<h1 class=\\\"h4 modal-title text-xs-left fw-bold mt\\\" id=\\\"create-lookup-title\\\">Add Lookup</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Body-->\\r\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t<form id=\\\"addlookupform\\\" #addlookupform=\\\"ngForm\\\" role=\\\"form\\\" class=\\\"form-horizontal\\\"\\r\\n\\t\\t\\t\\t data-parsley-priority-enabled=\\\"false\\\" novalidate=\\\"novalidate\\\" data-parsley-validate data-parsley-focus=\\\"first\\\">\\r\\n\\t\\t\\t\\t\\t<!-- Name-->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"ref-code\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Code\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ref-code\\\" [(ngModel)]=\\\"lookup.refCode\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t required maxlength=\\\"4\\\" data-parsley-maxlength=\\\"4\\\" data-parsley-required-message=\\\"Error: Code is required\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t placeholder=\\\"Max 4 characters\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- Description-->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"ref-val\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Description\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ref-val\\\" [(ngModel)]=\\\"lookup.refValue\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: Description is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div aria-live=\\\"assertive\\\">\\r\\n\\t\\t\\t\\t<div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</alert>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Footer-->\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" id=\\\"btn-save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createLookup(lookup)\\\">Save Lookup</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reset(false)\\\">Cancel</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewEncapsulation, SimpleChanges } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { isNil } from 'ramda';\r\nimport { Subscription } from \"rxjs\";\r\nimport { Lookup } from '../../models/lookup.model';\r\nimport { LookupService } from '../../services/lookup.service';\r\ndeclare var jQuery: any;\r\n@Component({\r\n\tselector: \"[edit-lookup-popup]\",\r\n\ttemplateUrl: \"./edit-lookup-popup.template.html\",\r\n\tstyleUrls: [\"./edit-lookup-popup.styles.scss\"],\r\n\tencapsulation: ViewEncapsulation.None,\r\n\tproviders: []\r\n})\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class EditLookupPopup\r\n * @implements {OnInit}\r\n */\r\nexport class EditLookupPopup implements OnInit, OnDestroy {\r\n\t@Input() model: Lookup;\r\n\t@Output() reloadLookups = new EventEmitter<boolean>();\r\n\r\n\tpublic router: Router;\r\n\tpublic showErrorFlag: boolean;\r\n\tpublic alerts: Array<Object>;\r\n\tpublic editLookup = new Lookup();\r\n\tpublic busyEditLookup: Subscription;\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.showErrorFlag = false;\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.busyEditLookup) {\r\n\t\t\tthis.busyEditLookup.unsubscribe();\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(\r\n\t\trouter: Router,\tprivate lookupService: LookupService\r\n\t) {\r\n\t\tthis.router = router;\r\n\r\n\t\tthis.alerts = [\r\n\t\t\t{\r\n\t\t\t\ttype: \"warning\",\r\n\t\t\t\tmsg:\r\n\t\t\t\t\t'<span class=\"fw-semi-bold\">Warning:</span> Placeholder for Error Validation messages'\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\tthis.showErrorFlag = false;\r\n\t}\r\n\r\n\t// Update lookup\r\n\tpublic updateLookup(lv: Lookup) {\r\n\t\tjQuery(\"#editlookupform\")\r\n\t\t\t.parsley()\r\n\t\t\t.validate();\r\n\r\n\t\t// Toggle to edit mode or navigate to the next screen if validation passes\r\n\t\tif (\r\n\t\t\tjQuery(\"#editlookupform\")\r\n\t\t\t\t.parsley()\r\n\t\t\t\t.isValid()\r\n\t\t) {\r\n\t\t\tthis.editLookup.refCode = isNil(lv.refCode) ? \"\" : lv.refCode.toUpperCase();\r\n\t\t\tthis.editLookup.refValue = lv.refValue;\r\n\r\n\t\t\tthis.busyEditLookup = this.lookupService.updateLookup(this.editLookup).subscribe(\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\tthis.reset(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tif (!isNil(error) && error.indexOf(\"USER_EMAIL_UK\") > -1) {\r\n\t\t\t\t\t\terror = \"Lookup already exists\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.showErrorFlag = true;\r\n\t\t\t\t\tthis.alerts = [];\r\n\t\t\t\t\tthis.alerts.push({\r\n\t\t\t\t\t\ttype: \"warning\",\r\n\t\t\t\t\t\tmsg: isNil(error) ? \"Error: unable to save resource\" : error\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic reset(flag) {\r\n\t\tjQuery(\"#edit-lookup\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#ref-code\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#edit-lookup\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#ref-val\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#editlookupform\")\r\n\t\t\t.parsley()\r\n\t\t\t.reset();\r\n\t\tjQuery(\"#edit-lookup\").modal(\"hide\");\r\n\t\tthis.reloadLookups.emit(flag);\r\n\t\tthis.showErrorFlag = false;\r\n\t}\r\n\r\n\tngOnChanges(changes: SimpleChanges) {\r\n\t\tfor (let propName in changes) {\r\n\t\t\tif (propName === \"model\") {\r\n\t\t\t\tlet chg = changes[propName];\r\n\t\t\t\tif (chg.currentValue) {\r\n\t\t\t\t\tthis.editLookup = Object.assign({}, chg.currentValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-divider {\\n  width: 100%;\\n  border-bottom: 3px solid #778899; }\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid gray;\\n  padding-bottom: 10px; }\\ninput.parsley-error {\\n  border-color: #d9534f;\\n  box-shadow: inset 0 1px 1px rgba(217, 83, 79, 0.075); }\\n.parsley-errors-list {\\n  font-size: 85%;\\n  padding-left: 0;\\n  margin-bottom: 5px; }\\n.parsley-errors-list li {\\n    list-style: none;\\n    color: #d9534f; }\\n.switch {\\n  box-sizing: content-box;\\n  margin-left: -20px; }\\n.switch i {\\n  display: inline-block;\\n  cursor: pointer;\\n  margin-left: -20px;\\n  margin-bottom: -3px;\\n  padding-right: 20px;\\n  transition: all ease 0.2s;\\n  -webkit-transition: all ease 0.2s;\\n  border-radius: 20px;\\n  box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.5); }\\n.switch i:before {\\n  display: block;\\n  content: '';\\n  width: 30px;\\n  height: 30px;\\n  padding: 1px;\\n  border-radius: 20px;\\n  background: white;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }\\n.switch :checked + i {\\n  padding-right: 0;\\n  padding-left: 20px;\\n  background: #64bd63; }\\n.white, .white a {\\n  color: #fff; }\\n.btn-label {\\n  background: transparent;\\n  left: 2px;\\n  padding: 1px 6px; }\\n.md-editor {\\n  display: block;\\n  border: 1px solid #dee2e6; }\\n.md-editor > .md-header, .md-editor .md-footer {\\n    display: block;\\n    padding: 6px 4px;\\n    background: #f5f5f5; }\\n.md-editor > .md-header {\\n    margin: 0; }\\n.md-editor > .md-header .glyphicon {\\n      top: 3px; }\\n.md-editor > .md-preview {\\n    margin-left: -1px;\\n    margin-right: -1px;\\n    padding: 0.5rem 1rem;\\n    background: #fff;\\n    border-top: 1px dashed #dee2e6;\\n    min-height: 10px; }\\n.md-editor > textarea {\\n    font-family: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n    font-size: 1rem;\\n    outline: 0;\\n    outline: thin dotted  \\\\9;\\n    /* IE6-9 */\\n    margin: 0;\\n    display: block;\\n    width: 100%;\\n    border: 0;\\n    border-top: 1px dashed #dee2e6;\\n    border-radius: 0;\\n    box-shadow: none;\\n    background: #dee2e6; }\\n.md-editor > textarea:focus {\\n      box-shadow: none;\\n      background: #fff; }\\n.md-editor.active {\\n    border-color: #4d90fe;\\n    outline: 0; }\\n/**\\r\\n * Bootstrap select\\r\\n */\\n.selectpicker.form-control {\\n  height: auto; }\\n.bootstrap-select .dropdown-toggle {\\n  padding-left: 10px; }\\n.bootstrap-select .dropdown-toggle:after {\\n    margin-right: 0;\\n    margin-left: 0; }\\n.bootstrap-select .dropdown-menu > li > a {\\n  display: block;\\n  width: 100%;\\n  padding: 3px 20px;\\n  clear: both;\\n  font-weight: normal;\\n  line-height: 1.42857143;\\n  color: #555;\\n  text-align: inherit;\\n  white-space: nowrap;\\n  background: none;\\n  border: 0; }\\n.bootstrap-select .dropdown-menu > li > a:hover, .bootstrap-select .dropdown-menu > li > a:focus {\\n    color: #171717;\\n    text-decoration: none;\\n    background-color: #f5f5f5; }\\n.bootstrap-select .dropdown-menu > li > a.active, .bootstrap-select .dropdown-menu > li > a.active:hover, .bootstrap-select .dropdown-menu > li > a.active:focus {\\n    color: #fff;\\n    text-decoration: none;\\n    background-color: #5d8fc2;\\n    outline: 0; }\\n.bootstrap-select .dropdown-menu > li > a.disabled, .bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    color: #868e96; }\\n.bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    text-decoration: none;\\n    cursor: not-allowed;\\n    background-color: transparent;\\n    background-image: none; }\\n/**\\r\\n*  autosize\\r\\n**/\\n/***********************************/\\n/**          NEWS LIST           **/\\n/**********************************/\\n.news-list {\\n  margin-bottom: 0;\\n  padding-left: 0; }\\n.news-list li {\\n    list-style: none;\\n    box-sizing: content-box;\\n    border-top: 1px solid #eeeeee;\\n    padding: 12px;\\n    cursor: pointer;\\n    -webkit-transition: background-color 0.2s ease-out;\\n    transition: background-color 0.2s ease-out; }\\n@media screen and (prefers-reduced-motion: reduce) {\\n      .news-list li {\\n        -webkit-transition: none;\\n        transition: none; } }\\n.news-list li:hover {\\n      background: #dbdbdb; }\\n.news-list li:last-child {\\n      margin-bottom: -10px; }\\n.news-list img,\\n  .news-list .icon {\\n    float: left;\\n    height: 50px;\\n    width: 50px; }\\n.news-list .icon {\\n    line-height: 50px;\\n    border-radius: 50%;\\n    text-align: center;\\n    font-size: 28px; }\\n.news-list .news-item-info {\\n    margin-left: 62px;\\n    /*50 + 12px padding*/ }\\n.news-list .name {\\n    text-transform: uppercase; }\\n.news-list .name a {\\n      text-decoration: none; }\\n.news-list .name a:hover {\\n        color: #218bc3; }\\n.autogrow {\\n  overflow: hidden;\\n  resize: none; }\\n.form-checkbox {\\n  margin-left: 5px;\\n  width: 20px;\\n  height: 20px;\\n  box-shadow: none; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"edit-lookup\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"edit-lookup-title\\\"\\r\\n aria-hidden=\\\"true\\\">\\r\\n\\t<div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t<h1 class=\\\"h4 modal-title text-xs-left fw-bold mt\\\" id=\\\"edit-lookup-title\\\">Edit Lookup</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Body-->\\r\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t<form id=\\\"editlookupform\\\" #editlookupform=\\\"ngForm\\\" role=\\\"form\\\" class=\\\"form-horizontal\\\"\\r\\n\\t\\t\\t\\t data-parsley-priority-enabled=\\\"false\\\" novalidate=\\\"novalidate\\\" data-parsley-validate data-parsley-focus=\\\"first\\\">\\r\\n\\t\\t\\t\\t\\t<!-- Name-->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"ref-code\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Code\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ref-code\\\" [(ngModel)]=\\\"editLookup.refCode\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t required maxlength=\\\"4\\\" data-parsley-maxlength=\\\"4\\\" data-parsley-required-message=\\\"Error: Code is required\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t placeholder=\\\"Max 4 characters\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- Description-->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"ref-val\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Description\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ref-val\\\" [(ngModel)]=\\\"editLookup.refValue\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: Description is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div aria-live=\\\"assertive\\\">\\r\\n\\t\\t\\t\\t<div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</alert>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Footer-->\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" id=\\\"btn-save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateLookup(editLookup)\\\">Save Lookup</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reset(false)\\\">Cancel</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnDestroy, OnInit, ViewEncapsulation, AfterViewInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport * as _ from \"lodash\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { Lookup } from '../../models/lookup.model';\r\nimport { LookupService } from '../../services/lookup.service';\r\nimport { isNil } from 'ramda';\r\nimport { ReferenceType } from '../../models/refertype.model';\r\nimport { ICellRendererAngularComp } from \"ag-grid-angular\";\r\nimport { GridOptions } from \"ag-grid-community\";\r\n\r\ndeclare var jQuery: any;\r\n\r\n\r\n@Component({\r\n  selector: 'edit-cell',\r\n  template: `<i class=\"glyphicon glyphicon-pencil\" (click)=\"invokeParentMethod()\" data-toggle=\"modal\" title=\"Edit Lookup\"\r\n                   data-keyboard=\"false\" data-backdrop=\"static\" data-target=\"#edit-lookup\"></i>`\r\n  // styles: [\r\n  //     `.btn {\r\n  //         line-height: 0.5\r\n  //     }`\r\n  // ]\r\n})\r\nexport class EditLookupComponent implements ICellRendererAngularComp {\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n      this.params = params;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n      this.params.context.componentParent.selectEditLookup(this.params.data);\r\n  }\r\n\r\n  refresh(): boolean {\r\n      return false;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'delete-cell',\r\n  template: `<i class=\"glyphicon glyphicon-trash txt-gap\" (click)=\"invokeParentMethod()\" data-toggle=\"modal\"  title=\"Delete Lookup\"\r\n  data-keyboard=\"false\" data-backdrop=\"static\" data-target=\"#confirm-popup\"></i>`\r\n  // styles: [\r\n  //     `.btn {\r\n  //         line-height: 0.5\r\n  //     }`\r\n  // ]\r\n})\r\nexport class DeleteLookupComponent implements ICellRendererAngularComp {\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n      this.params = params;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n      this.params.context.componentParent.deleteLookup(this.params.data);\r\n  }\r\n\r\n  refresh(): boolean {\r\n      return false;\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: \"lookup-dashboard\",\r\n  templateUrl: \"./lookup-dashboard.template.html\",\r\n  styleUrls: [\"./lookup-dashboard.styles.scss\"],\r\n  providers: [LookupService],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LookupDashboardPage implements OnInit, OnDestroy, AfterViewInit {\r\n  public router: Router;\r\n  public data: any[];\r\n  public refTypes: ReferenceType[];\r\n  public adminCount: number;\r\n\r\n  public busyLoadLookups: Subscription;\r\n  public busyDeleteLookup: Subscription;\r\n  public busyLoadRefereneTypes: Subscription;\r\n\r\n  public selRefTypeId: number;\r\n\r\n  public dropdownData = [];\r\n  public showErrorFlag: boolean;\r\n  public alerts: Array<Object>;\r\n  public effectiveDate: Date;\r\n  public selLookup: Lookup;\r\n  public showCreateLookup: any;\r\n  public showEditLookup: any;\r\n\r\n  public dellookuptitle: string = \"Delete Lookup\";\r\n  public dellookupmessage: string = \"Are you sure you want to delete lookup?\";\r\n  public confirmClicked: boolean = false;\r\n  public cancelClicked: boolean = false;\r\n\r\n  public gridOptions: GridOptions;\r\n\r\n  public gridApi;\r\n  public gridColumnApi;\r\n\r\n  public defaultColDef = {\r\n    sortable: true,\r\n    filter: true,\r\n    headerClass: 'fw-semi-bold'\r\n  };\r\n\r\n  public columnDefs = [\r\n    {\r\n      headerName: \"\",\r\n      field: \"value\",\r\n      cellRendererFramework: EditLookupComponent,\r\n      colId: \"params\",\r\n      width: 50,\r\n      filter: false\r\n    },\r\n    {\r\n      headerName: 'Code',\r\n      field: 'refCode',\r\n    },\r\n    {\r\n      headerName: 'Value',\r\n      field: 'refValue'\r\n    },\r\n    {\r\n      headerName: \"\",\r\n      field: \"value\",\r\n      cellRendererFramework: DeleteLookupComponent,\r\n      colId: \"params\",\r\n      width: 50,\r\n      filter: false\r\n    }\r\n  ];\r\n\r\n  constructor(private lookupService: LookupService, router: Router) {\r\n    this.alerts = [\r\n      {\r\n        type: \"success\",\r\n        msg:\r\n          '<i class=\"fa fa-circle text-success\"></i><span class=\"alert-text\"></span>'\r\n      }\r\n    ];\r\n\r\n    this.router = router;\r\n    this.showCreateLookup = false;\r\n    this.showEditLookup = false;\r\n    this.selRefTypeId = 1;\r\n\r\n    this.gridOptions = <GridOptions>{\r\n      context: {\r\n          componentParent: this\r\n      },\r\n      enableColResize: true,\r\n      rowHeight: 30\r\n    };\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    let searchInput = jQuery(\"#table-search-input\");\r\n    searchInput\r\n      .focus(e => {\r\n        jQuery(e.target)\r\n          .closest(\".input-group\")\r\n          .addClass(\"focus\");\r\n      })\r\n      .focusout(e => {\r\n        jQuery(e.target)\r\n          .closest(\".input-group\")\r\n          .removeClass(\"focus\");\r\n      });\r\n\r\n    this.loadReferenceTypes();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.busyLoadLookups) {\r\n      this.busyLoadLookups.unsubscribe();\r\n    }\r\n    if (this.busyDeleteLookup) {\r\n      this.busyDeleteLookup.unsubscribe();\r\n    }\r\n    if(this.busyLoadRefereneTypes){\r\n      this.busyLoadRefereneTypes.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n  }\r\n\r\n\r\n\r\n  public cosmeticFix(elementID: any){\r\n    // The code below for cosmetic fix - Blue box now surrounds the icon on the search company text box\r\n    let filterInput = jQuery(elementID);\r\n    filterInput\r\n    .focus((e) => {\r\n        jQuery(e.target).closest('.input-group').addClass('focus');\r\n    })\r\n    .focusout((e) => {\r\n        jQuery(e.target).closest('.input-group').removeClass('focus');\r\n    });\r\n  }\r\n\r\n  private loadReferenceTypes() {\r\n    let that = this;\r\n    this.busyLoadRefereneTypes = this.lookupService.getAllRefTypes().subscribe(rt => {\r\n      if (rt) {\r\n        that.refTypes = rt;\r\n        if(isNil(that.refTypes)){\r\n          that.selRefTypeId = rt[0].referenceTypeId;\r\n        }\r\n        that.loadLookups(that.selRefTypeId);\r\n      }\r\n    }, error => {\r\n      that.showErrorFlag = true;\r\n      that.alerts = [];\r\n      that.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n  private loadLookups(rtid:number) {\r\n    let that = this;\r\n    this.busyLoadLookups = this.lookupService.getAllByRefTypeId(rtid).subscribe(lv => {\r\n      if (lv) {\r\n        that.data = lv;\r\n      }\r\n    }, error => {\r\n      that.showErrorFlag = true;\r\n      that.alerts = [];\r\n      that.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n  public reloadLookups(reload: boolean) {\r\n    this.showCreateLookup = false;\r\n    this.showEditLookup = false;\r\n    if (reload) {\r\n      this.loadLookups(this.selRefTypeId);\r\n    } else {\r\n      this.selLookup = new Lookup();\r\n    }\r\n  }\r\n\r\n  public deleteLookup(lookup: Lookup) {\r\n    if(!isNil(lookup)){\r\n      this.busyDeleteLookup = this.lookupService.deleteLookupById(lookup.lookupId).subscribe(data => {\r\n        if (data) {\r\n          this.reloadLookups(true);\r\n        }\r\n      }, error => {\r\n        this.showErrorFlag = true;\r\n        this.alerts = [];\r\n        this.alerts.push({ type: 'warning', msg: error });\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  public addLookup() {\r\n    this.showCreateLookup = true;\r\n  }\r\n\r\n  public selectEditLookup(lookupValue) {\r\n    this.showEditLookup = true;\r\n    this.selLookup = lookupValue;\r\n  }\r\n\r\n  public onReferenceTypeChanged(newRefTypeId: number){\r\n    this.selRefTypeId = newRefTypeId;\r\n    this.reloadLookups(true);\r\n  }\r\n\r\n  public onClickBackButton(){\r\n\t\tthis.router.navigate([\"/app/tdl/search\"]);\r\n  }\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid #ddd; }\\n.lookupdashboardController {\\n  width: 98%; }\\n.inactive {\\n  text-decoration: line-through; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<h1 class=\\\"h4 page-title hd-bdr\\\">Lookups</h1>\\r\\n<div data-ng-controller=\\\"lookupdashboardController\\\" class=\\\"lookupdashboardController\\\">\\r\\n    <div aria-live=\\\"assertive\\\">\\r\\n        <div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n                        <alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n                            <div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n                        </alert>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <section class=\\\"widget h-divider\\\" widget>\\r\\n                <div class=\\\"widget-body\\\">\\r\\n                    <div class=\\\"row\\\" style=\\\"margin-bottom: 20px;\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"tdl-pop\\\" class=\\\"col-md-6 form-control-label text-md-right mt10\\\">\\r\\n                                    Reference Type\\r\\n                                </label>\\r\\n                                <div role=\\\"alert\\\" class=\\\"col-md-6 col-xs-12\\\">\\r\\n                                    <select required class=\\\"form-control\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"selRefTypeId\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"onReferenceTypeChanged($event.target.value)\\\"\\r\\n                                        data-parsley-required-message=\\\"Error: Reference Type is required\\\">\\r\\n                                        <option *ngFor=\\\"let rt of refTypes\\\" [value]=\\\"rt.referenceTypeId\\\">{{rt.description}}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-offset-1 col-md-4\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <div class=\\\"pull-right\\\">\\r\\n                                <button id=\\\"btn-cr-lookup\\\" type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" data-toggle=\\\"modal\\\"\\r\\n                                    data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\" data-target=\\\"#create-lookup\\\" title=\\\"Add Lookup\\\"\\r\\n                                    (click)=\\\"addLookup()\\\">\\r\\n                                    <i class=\\\"glyphicon glyphicon-plus\\\"></i>\\r\\n                                    Add Lookup\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"grid-wrapper\\\">\\r\\n                        <ag-grid-angular\\r\\n                            #agGrid\\r\\n                            style=\\\"width: 100%; height: 650px;\\\"\\r\\n                            class=\\\"ag-theme-balham\\\"\\r\\n                            [rowData]=\\\"data\\\"\\r\\n                            [columnDefs]=\\\"columnDefs\\\"\\r\\n                            [defaultColDef]=\\\"defaultColDef\\\"\\r\\n                            [gridOptions]=\\\"gridOptions\\\"\\r\\n                            [floatingFilter]=\\\"true\\\"\\r\\n                            [pagination]=\\\"true\\\"\\r\\n                            (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                            [paginationAutoPageSize]=\\\"true\\\"\\r\\n                            >\\r\\n                        </ag-grid-angular>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"widget-footer\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n                            <div class=\\\"pull-right\\\">\\r\\n                                <button id=\\\"btn-go-back\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n                                    (click)=\\\"onClickBackButton()\\\">\\r\\n                                    <span class=\\\"glyphicon glyphicon-chevron-left txt-gap\\\"\\r\\n                                        aria-hidden=\\\"true\\\"></span>Back</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </section>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"showCreateLookup\\\" create-lookup-popup [ReferTypeId]=\\\"selRefTypeId\\\" (reloadLookups)=\\\"reloadLookups($event)\\\"></div>\\r\\n    <div *ngIf=\\\"showEditLookup\\\" edit-lookup-popup [model]=\\\"selLookup\\\" (reloadLookups)=\\\"reloadLookups($event)\\\"></div>\\r\\n</div>\"","/*\r\n@author : Deloitte\r\nthis is Component for creating user\r\n*/\r\nimport { Component, EventEmitter, OnDestroy, OnInit, Output, ViewEncapsulation } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { isNil } from 'ramda';\r\nimport { Subscription } from \"rxjs\";\r\nimport { CodeValue } from \"../../../tdl/models/codevalue.model\";\r\nimport { Resource } from \"../../../tdl/models/resource.model\";\r\nimport { LaborCategory } from \"../../models/laborcat.model\";\r\nimport { AdminService } from \"../../services/admin.service\";\r\nimport { LaborCategoryService } from '../../services/laborcat.service';\r\nimport { ResourceService } from '../../../tdl/services/resource.service';\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n\tselector: \"[create-resource-popup]\",\r\n\ttemplateUrl: \"./create-resource-popup.template.html\",\r\n\tstyleUrls: [\"./create-resource-popup.styles.scss\"],\r\n\tencapsulation: ViewEncapsulation.None,\r\n\tproviders: [LaborCategoryService]\r\n})\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class CreateResourcePopup\r\n * @implements {OnInit}\r\n */\r\nexport class CreateResourcePopup implements OnInit, OnDestroy {\r\n\t@Output() reloadResources = new EventEmitter<boolean>();\r\n\r\n\tpublic router: Router;\r\n\tpublic showErrorFlag: boolean;\r\n\tpublic alerts: Array<Object>;\r\n\tpublic resource = new Resource();\r\n\r\n\tpublic laborCategories: LaborCategory[] = [];\r\n\tpublic resourceTypes: CodeValue[] = [];\r\n\tpublic resourceTeams: CodeValue[] = [];\r\n\tpublic listResources: Resource[];\r\n\r\n\tpublic busy: Subscription;\r\n\tpublic busylcat: Subscription;\r\n\tpublic busyrtype: Subscription;\r\n\tpublic busyrteam: Subscription;\r\n\tpublic busyLoadResources: Subscription;\r\n\r\n\tpublic userenabled: boolean;\r\n\tpublic placeholder: boolean;\r\n\r\n\tconstructor(\r\n\t\trouter: Router,\r\n\t\tprivate _adminService: AdminService,\r\n\t\tprivate resourceService: ResourceService,\r\n\t\tprivate laborcatService: LaborCategoryService\r\n\t) {\r\n\t\tthis.router = router;\r\n\r\n\t\tthis.alerts = [\r\n\t\t\t{\r\n\t\t\t\ttype: \"warning\",\r\n\t\t\t\tmsg:\r\n\t\t\t\t\t'<span class=\"fw-semi-bold\">Warning:</span> Placeholder for Error Validation messages'\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\tthis.showErrorFlag = false;\r\n\r\n\t\tthis.userenabled = true;\r\n\t\tthis.showLaborCategories();\r\n\t\tthis.showResourceTypes();\r\n\t\tthis.showResourceTeams();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.showErrorFlag = false;\r\n\t\tthis.loadResources();\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.busy) {\r\n\t\t\tthis.busy.unsubscribe();\r\n\t\t}\r\n\t\tif (this.busylcat) {\r\n\t\t\tthis.busylcat.unsubscribe();\r\n\t\t}\r\n\t\tif (this.busyrtype) {\r\n\t\t\tthis.busyrtype.unsubscribe();\r\n\t\t}\r\n\t\tif (this.busyrteam) {\r\n\t\t\tthis.busyrteam.unsubscribe();\r\n\t\t}\r\n\t\tif (this.busyLoadResources) {\r\n\t\t\tthis.busyLoadResources.unsubscribe();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic loadResources() {\r\n\t\tthis.busyLoadResources = this.resourceService\r\n\t\t\t.getAllActiveResources()\r\n\t\t\t.subscribe(\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\tthis.listResources = data;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tthis.showErrorFlag = true;\r\n\t\t\t\t\tthis.alerts = [];\r\n\t\t\t\t\tthis.alerts.push({ type: \"warning\", msg: error });\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t}\r\n\r\n\t// Create a new resource\r\n\tpublic createResource(resource: Resource) {\r\n\t\tjQuery(\"#addresourceform\")\r\n\t\t\t.parsley()\r\n\t\t\t.validate();\r\n\r\n\t\t// Toggle to edit mode or navigate to the next screen if validation passes\r\n\t\tif (\r\n\t\t\tjQuery(\"#addresourceform\")\r\n\t\t\t\t.parsley()\r\n\t\t\t\t.isValid()\r\n\t\t) {\r\n\t\t\tresource.active = this.userenabled === true ? \"Y\" : \"N\";\r\n\t\t\tresource.placeholder = this.placeholder === true ? \"Y\" : \"N\";\r\n\t\t\tresource.displayName = resource.name;\r\n\t\t\tresource.lookupName = resource.name;\r\n\r\n\t\t\t// Default to first item on the the list.\r\n\t\t\tif(!isNil(this.laborCategories) && isNil(resource.lcatCode)){\r\n\t\t\t\tif(this.laborCategories.length > 0){\r\n\t\t\t\t\tresource.lcatCode = this.laborCategories[0].code;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.busy = this._adminService.createResource(resource).subscribe(\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\tthis.reset(true);\r\n\t\t\t\t\t\tthis.reloadResources.emit(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tif (error.indexOf(\"USER_EMAIL_UK\") > -1) {\r\n\t\t\t\t\t\terror = \"Resource already exists\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.showErrorFlag = true;\r\n\t\t\t\t\tthis.alerts = [];\r\n\t\t\t\t\tthis.alerts.push({ type: \"warning\", msg: error });\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic reset(flag) {\r\n\t\tjQuery(\"#create-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#first-name\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#create-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#last-name\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#create-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#email-address\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#create-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#password\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#create-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#phone-number\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#create-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#res-type\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#create-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#res-team\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#create-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#maxhours\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#create-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find('input[type=\"email\"]')\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#create-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find('input[type=\"checkbox\"]')\r\n\t\t\t.prop(\"checked\", false);\r\n\t\tjQuery(\"#addresourceform\")\r\n\t\t\t.parsley()\r\n\t\t\t.reset();\r\n\t\tjQuery(\"#create-resource\").modal(\"hide\");\r\n\t\tthis.showErrorFlag = false;\r\n\t}\r\n\r\n\tpublic showLaborCategories() {\r\n\t\tlet that = this;\r\n\t\tthis.busylcat = this.laborcatService.getAllActive().subscribe(\r\n\t\t\tdata => {\r\n\t\t\t\tthat.laborCategories = data;\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tthat.showErrorFlag = true;\r\n\t\t\t\tthat.alerts = [];\r\n\t\t\t\tthat.alerts.push({ type: \"warning\", msg: error });\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tpublic showResourceTypes() {\r\n\t\tthis.busyrtype = this._adminService.getResourceTypes().subscribe(\r\n\t\t\tdata => {\r\n\t\t\t\tthis.resourceTypes = data;\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tthis.showErrorFlag = true;\r\n\t\t\t\tthis.alerts = [];\r\n\t\t\t\tthis.alerts.push({ type: \"warning\", msg: error });\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tpublic showResourceTeams() {\r\n\t\tthis.busyrteam = this._adminService.getResourceTeams().subscribe(\r\n\t\t\tdata => {\r\n\t\t\t\tthis.resourceTeams = data;\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tthis.showErrorFlag = true;\r\n\t\t\t\tthis.alerts = [];\r\n\t\t\t\tthis.alerts.push({ type: \"warning\", msg: error });\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-divider {\\n  width: 100%;\\n  border-bottom: 3px solid #778899; }\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid gray;\\n  padding-bottom: 10px; }\\ninput.parsley-error {\\n  border-color: #d9534f;\\n  box-shadow: inset 0 1px 1px rgba(217, 83, 79, 0.075); }\\n.parsley-errors-list {\\n  font-size: 85%;\\n  padding-left: 0;\\n  margin-bottom: 5px; }\\n.parsley-errors-list li {\\n    list-style: none;\\n    color: #d9534f; }\\n.switch {\\n  box-sizing: content-box;\\n  margin-left: -20px; }\\n.switch i {\\n  display: inline-block;\\n  cursor: pointer;\\n  margin-left: -20px;\\n  margin-bottom: -3px;\\n  padding-right: 20px;\\n  transition: all ease 0.2s;\\n  -webkit-transition: all ease 0.2s;\\n  border-radius: 20px;\\n  box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.5); }\\n.switch i:before {\\n  display: block;\\n  content: '';\\n  width: 30px;\\n  height: 30px;\\n  padding: 1px;\\n  border-radius: 20px;\\n  background: white;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }\\n.switch :checked + i {\\n  padding-right: 0;\\n  padding-left: 20px;\\n  background: #64bd63; }\\n.white, .white a {\\n  color: #fff; }\\n.btn-label {\\n  background: transparent;\\n  left: 2px;\\n  padding: 1px 6px; }\\n.md-editor {\\n  display: block;\\n  border: 1px solid #dee2e6; }\\n.md-editor > .md-header, .md-editor .md-footer {\\n    display: block;\\n    padding: 6px 4px;\\n    background: #f5f5f5; }\\n.md-editor > .md-header {\\n    margin: 0; }\\n.md-editor > .md-header .glyphicon {\\n      top: 3px; }\\n.md-editor > .md-preview {\\n    margin-left: -1px;\\n    margin-right: -1px;\\n    padding: 0.5rem 1rem;\\n    background: #fff;\\n    border-top: 1px dashed #dee2e6;\\n    min-height: 10px; }\\n.md-editor > textarea {\\n    font-family: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n    font-size: 1rem;\\n    outline: 0;\\n    outline: thin dotted  \\\\9;\\n    /* IE6-9 */\\n    margin: 0;\\n    display: block;\\n    width: 100%;\\n    border: 0;\\n    border-top: 1px dashed #dee2e6;\\n    border-radius: 0;\\n    box-shadow: none;\\n    background: #dee2e6; }\\n.md-editor > textarea:focus {\\n      box-shadow: none;\\n      background: #fff; }\\n.md-editor.active {\\n    border-color: #4d90fe;\\n    outline: 0; }\\n/**\\r\\n * Bootstrap select\\r\\n */\\n.selectpicker.form-control {\\n  height: auto; }\\n.bootstrap-select .dropdown-toggle {\\n  padding-left: 10px; }\\n.bootstrap-select .dropdown-toggle:after {\\n    margin-right: 0;\\n    margin-left: 0; }\\n.bootstrap-select .dropdown-menu > li > a {\\n  display: block;\\n  width: 100%;\\n  padding: 3px 20px;\\n  clear: both;\\n  font-weight: normal;\\n  line-height: 1.42857143;\\n  color: #555;\\n  text-align: inherit;\\n  white-space: nowrap;\\n  background: none;\\n  border: 0; }\\n.bootstrap-select .dropdown-menu > li > a:hover, .bootstrap-select .dropdown-menu > li > a:focus {\\n    color: #171717;\\n    text-decoration: none;\\n    background-color: #f5f5f5; }\\n.bootstrap-select .dropdown-menu > li > a.active, .bootstrap-select .dropdown-menu > li > a.active:hover, .bootstrap-select .dropdown-menu > li > a.active:focus {\\n    color: #fff;\\n    text-decoration: none;\\n    background-color: #5d8fc2;\\n    outline: 0; }\\n.bootstrap-select .dropdown-menu > li > a.disabled, .bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    color: #868e96; }\\n.bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    text-decoration: none;\\n    cursor: not-allowed;\\n    background-color: transparent;\\n    background-image: none; }\\n/**\\r\\n*  autosize\\r\\n**/\\n/***********************************/\\n/**          NEWS LIST           **/\\n/**********************************/\\n.news-list {\\n  margin-bottom: 0;\\n  padding-left: 0; }\\n.news-list li {\\n    list-style: none;\\n    box-sizing: content-box;\\n    border-top: 1px solid #eeeeee;\\n    padding: 12px;\\n    cursor: pointer;\\n    -webkit-transition: background-color 0.2s ease-out;\\n    transition: background-color 0.2s ease-out; }\\n@media screen and (prefers-reduced-motion: reduce) {\\n      .news-list li {\\n        -webkit-transition: none;\\n        transition: none; } }\\n.news-list li:hover {\\n      background: #dbdbdb; }\\n.news-list li:last-child {\\n      margin-bottom: -10px; }\\n.news-list img,\\n  .news-list .icon {\\n    float: left;\\n    height: 50px;\\n    width: 50px; }\\n.news-list .icon {\\n    line-height: 50px;\\n    border-radius: 50%;\\n    text-align: center;\\n    font-size: 28px; }\\n.news-list .news-item-info {\\n    margin-left: 62px;\\n    /*50 + 12px padding*/ }\\n.news-list .name {\\n    text-transform: uppercase; }\\n.news-list .name a {\\n      text-decoration: none; }\\n.news-list .name a:hover {\\n        color: #218bc3; }\\n.autogrow {\\n  overflow: hidden;\\n  resize: none; }\\n.form-checkbox {\\n  margin-left: 5px;\\n  width: 20px;\\n  height: 20px;\\n  box-shadow: none; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"create-resource\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"create-resource-title\\\"\\r\\n aria-hidden=\\\"true\\\">\\r\\n\\t<div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t<h1 class=\\\"h4 modal-title text-xs-left fw-bold mt\\\" id=\\\"create-resource-title\\\">Add Resource</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Body-->\\r\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t<form id=\\\"addresourceform\\\" #addresourceform=\\\"ngForm\\\" role=\\\"form\\\" class=\\\"form-horizontal\\\"\\r\\n\\t\\t\\t\\t data-parsley-priority-enabled=\\\"false\\\" novalidate=\\\"novalidate\\\" data-parsley-validate data-parsley-focus=\\\"first\\\">\\r\\n\\t\\t\\t\\t\\t<!-- Name-->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Name\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"resource.name\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tplacehoder=\\\"Lastname, Firstname\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t required data-parsley-required-message=\\\"Error: Name is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Lookup Name-->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"lookup-name\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Lookup Name\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lookup-name\\\" [(ngModel)]=\\\"resource.lookupName\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t    required data-parsley-required-message=\\\"Error: Lookup Name is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t<!--Display Name-->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"display-name\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Display Name\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"display-name\\\" [(ngModel)]=\\\"resource.displayName\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: Display Name is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t -->\\r\\n\\t\\t\\t\\t\\t<!-- Labor Category -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"user-roles\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Labor Category\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"resource.lcatCode\\\" name=\\\"laborCategories\\\" class=\\\"form-control fdatable\\\" id=\\\"res-lcat\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t required data-parsley-required-message=\\\"Error: Labor Category is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let lcat of laborCategories\\\" [value]=\\\"lcat.code\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{lcat.description}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t<!-- Resource Type -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"res-type\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Resource Type\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"resource.typeCode\\\" name=\\\"restype\\\" class=\\\"form-control fdatable\\\" id=\\\"res-type\\\" required\\r\\n\\t\\t\\t\\t\\t\\t\\t data-parsley-required-message=\\\"Error: Resource Type is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let rtype of resourceTypes\\\" [value]=\\\"rtype.code\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{rtype.value}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- Team Name -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"res-team\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Team\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"resource.teamCode\\\" name=\\\"resteam\\\" class=\\\"form-control fdatable\\\" id=\\\"res-team\\\" required\\r\\n\\t\\t\\t\\t\\t\\t\\t data-parsley-required-message=\\\"Error: Resource Team is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let rteam of resourceTeams\\\" [value]=\\\"rteam.code\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{rteam.value}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t<!-- Team Lead -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"res-lead\\\" class=\\\"col-md-4 form-control-label text-md-right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tTeam Lead\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"resource.leadID\\\" title=\\\"Team Lead\\\" name=\\\"Team Lead\\\" class=\\\"form-control fdatable\\\" id=\\\"res-lead\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t placeholder=\\\"Select Team Lead\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option></option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let res of listResources\\\" [ngValue]=\\\"res.resourceID\\\">{{res.name}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t<!--Email Address         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"email-address\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Email\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email-address\\\" [(ngModel)]=\\\"resource.email\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t required data-parsley-error-message=\\\"Error: User ID is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Phone         -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"phone\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Phone\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"phone\\\" class=\\\"form-control\\\" id=\\\"password\\\" [(ngModel)]=\\\"resource.phone\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t    required data-parsley-error-message=\\\"Error: Phone is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t<!--Employee ID         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"employeeid\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Employee ID\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"employeeid\\\" [(ngModel)]=\\\"resource.employeeID\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t required data-parsley-error-message=\\\"Error: Employee ID is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Rate         -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"rate\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Rate\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rate\\\" [(ngModel)]=\\\"resource.rate\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired data-parsley-error-message=\\\"Error: Rate is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\t -->\\r\\n\\t\\t\\t\\t\\t<!--Max Hours         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"maxhours\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Max Hours\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"maxhours\\\" [(ngModel)]=\\\"resource.maxHours\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Active         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"enabled\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control form-checkbox\\\" id=\\\"enabled\\\" [(ngModel)]=\\\"userenabled\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Placeholder         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"placeholder\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Placeholder\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control form-checkbox\\\" id=\\\"placeholder\\\" [(ngModel)]=\\\"placeholder\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div aria-live=\\\"assertive\\\">\\r\\n\\t\\t\\t\\t<div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</alert>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Footer-->\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" id=\\\"btn-save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createResource(resource)\\\">Save Resource</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reset(false)\\\">Cancel</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, SimpleChanges, ViewEncapsulation, OnChanges } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { isNil } from \"ramda\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { CodeValue } from \"../../../tdl/models/codevalue.model\";\r\nimport { Resource } from \"../../../tdl/models/resource.model\";\r\nimport { ResourceService } from '../../../tdl/services/resource.service';\r\nimport { LaborCategory } from '../../models/laborcat.model';\r\nimport { AdminService } from \"../../services/admin.service\";\r\nimport { LaborCategoryService } from '../../services/laborcat.service';\r\n/*\r\n@author : Deloitte\r\nthis is Componentfor adding contact as a popup.\r\n*/\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n\tselector: \"[edit-resource-popup]\",\r\n\ttemplateUrl: \"./edit-resource-popup.template.html\",\r\n\tstyleUrls: [\"./edit-resource-popup.styles.scss\"],\r\n\tencapsulation: ViewEncapsulation.None,\r\n\tproviders: [LaborCategoryService]\r\n})\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class EditResourcePopup\r\n * @implements {OnInit}\r\n */\r\nexport class EditResourcePopup implements OnInit, OnDestroy, OnChanges {\r\n\t@Input() model;\r\n\t@Output() reloadResources = new EventEmitter<boolean>();\r\n\r\n\tpublic router: Router;\r\n\tpublic showErrorFlag: boolean;\r\n\tpublic alerts: Array<Object>;\r\n\tpublic editResource = new Resource();\r\n\r\n\tpublic laborCategories: LaborCategory[] = [];\r\n\tpublic resourceTypes: CodeValue[] = [];\r\n\tpublic resourceTeams: CodeValue[] = [];\r\n\tpublic positionNames: CodeValue[] = [];\r\n\tpublic listResources: Resource[];\r\n\r\n\tpublic busy: Subscription;\r\n\tpublic busylcat: Subscription;\r\n\tpublic busyrtype: Subscription;\r\n\tpublic busyrteam: Subscription;\r\n\tpublic busyLoadPositions: Subscription;\r\n\tpublic busyLoadResources: Subscription;\r\n\r\n\tpublic userenabled: boolean;\r\n\tpublic placeholder: boolean;\r\n\tpublic cdm: boolean;\r\n\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.showErrorFlag = false;\r\n\t\tthis.loadResources();\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.busy) {\r\n\t\t\tthis.busy.unsubscribe();\r\n\t\t}\r\n\t\tif (this.busylcat) {\r\n\t\t\tthis.busylcat.unsubscribe();\r\n\t\t}\r\n\t\tif (this.busyrtype) {\r\n\t\t\tthis.busyrtype.unsubscribe();\r\n\t\t}\r\n\t\tif (this.busyrteam) {\r\n\t\t\tthis.busyrteam.unsubscribe();\r\n\t\t}\r\n\t\tif (this.busyLoadResources) {\r\n\t\t\tthis.busyLoadResources.unsubscribe();\r\n\t\t}\r\n\t\tif(this.busyLoadPositions){\r\n\t\t\tthis.busyLoadPositions.unsubscribe();\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(\r\n\t\trouter: Router,\r\n\t\tprivate _adminService: AdminService,\r\n\t\tprivate resourceService: ResourceService,\r\n\t\tprivate laborCatService: LaborCategoryService\r\n\t) {\r\n\t\tthis.router = router;\r\n\r\n\t\tthis.alerts = [\r\n\t\t\t{\r\n\t\t\t\ttype: \"warning\",\r\n\t\t\t\tmsg:\r\n\t\t\t\t\t'<span class=\"fw-semi-bold\">Warning:</span> Placeholder for Error Validation messages'\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\tthis.showErrorFlag = false;\r\n\r\n\t\tthis.showLaborCategories();\r\n\t\tthis.showResourceTypes();\r\n\t\tthis.showResourceTeams();\r\n\t\tthis.showPositionNames();\r\n\t}\r\n\r\n\tpublic loadResources() {\r\n\t\tthis.busyLoadResources = this.resourceService\r\n\t\t\t.getAllActiveResources()\r\n\t\t\t.subscribe(\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\tthis.listResources = data;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tthis.showErrorFlag = true;\r\n\t\t\t\t\tthis.alerts = [];\r\n\t\t\t\t\tthis.alerts.push({ type: \"warning\", msg: error });\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t}\r\n\r\n\t// Update resource\r\n\tpublic updateResource(resource: Resource) {\r\n\t\tjQuery(\"#editresourceform\")\r\n\t\t\t.parsley()\r\n\t\t\t.validate();\r\n\r\n\t\t// Toggle to edit mode or navigate to the next screen if validation passes\r\n\t\tif (\r\n\t\t\tjQuery(\"#editresourceform\")\r\n\t\t\t\t.parsley()\r\n\t\t\t\t.isValid()\r\n\t\t) {\r\n\t\t\tresource.displayName = resource.name;\r\n\t\t\tresource.lookupName = resource.name;\r\n\t\t\tresource.active = this.userenabled === true ? \"Y\" : \"N\";\r\n\t\t\tresource.placeholder = this.placeholder === true ? \"Y\" : \"N\";\r\n\t\t\tresource.cdm = this.cdm === true ? \"Y\" : \"N\";\r\n\r\n\t\t\tthis.busy = this._adminService.updateResource(resource).subscribe(\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\tthis.reset(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tif (!isNil(error) && error.indexOf(\"USER_EMAIL_UK\") > -1) {\r\n\t\t\t\t\t\terror = \"Resource already exists\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.showErrorFlag = true;\r\n\t\t\t\t\tthis.alerts = [];\r\n\t\t\t\t\tthis.alerts.push({\r\n\t\t\t\t\t\ttype: \"warning\",\r\n\t\t\t\t\t\tmsg: isNil(error) ? \"Error: unable to save resource\" : error\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic reset(flag) {\r\n\t\tjQuery(\"#edit-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#first-name\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#edit-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#last-name\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#edit-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#email-address\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#edit-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#password\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#edit-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#phone-number\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#edit-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#res-type\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#edit-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#res-team\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#edit-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find('input[type=\"email\"]')\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#edit-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find(\"#maxhours\")\r\n\t\t\t.val(\"\");\r\n\t\tjQuery(\"#edit-resource\")\r\n\t\t\t.on(\"hidden\")\r\n\t\t\t.find('input[type=\"checkbox\"]')\r\n\t\t\t.prop(\"checked\", false);\r\n\t\tjQuery(\"#editresourceform\")\r\n\t\t\t.parsley()\r\n\t\t\t.reset();\r\n\t\tjQuery(\"#edit-resource\").modal(\"hide\");\r\n\t\tthis.reloadResources.emit(flag);\r\n\t\tthis.showErrorFlag = false;\r\n\t}\r\n\r\n\tpublic showLaborCategories() {\r\n\t\tthis.busylcat = this.laborCatService.getAllActive().subscribe(\r\n\t\t\tdata => {\r\n\t\t\t\tthis.laborCategories = data;\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tthis.showErrorFlag = true;\r\n\t\t\t\tthis.alerts = [];\r\n\t\t\t\tthis.alerts.push({ type: \"warning\", msg: error });\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tpublic showResourceTypes() {\r\n\t\tthis.busyrtype = this._adminService.getResourceTypes().subscribe(\r\n\t\t\tdata => {\r\n\t\t\t\tthis.resourceTypes = data;\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tthis.showErrorFlag = true;\r\n\t\t\t\tthis.alerts = [];\r\n\t\t\t\tthis.alerts.push({ type: \"warning\", msg: error });\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tpublic showResourceTeams() {\r\n\t\tthis.busyrteam = this._adminService.getResourceTeams().subscribe(\r\n\t\t\tdata => {\r\n\t\t\t\tthis.resourceTeams = data;\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tthis.showErrorFlag = true;\r\n\t\t\t\tthis.alerts = [];\r\n\t\t\t\tthis.alerts.push({ type: \"warning\", msg: error });\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tpublic showPositionNames() {\r\n\t\tthis.busyLoadPositions = this._adminService.getPositionNames().subscribe(\r\n\t\t\tdata => {\r\n\t\t\t\tthis.positionNames = data;\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tthis.showErrorFlag = true;\r\n\t\t\t\tthis.alerts = [];\r\n\t\t\t\tthis.alerts.push({ type: \"warning\", msg: error });\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tngOnChanges(changes: SimpleChanges) {\r\n\t\tfor (let propName in changes) {\r\n\t\t\tif (propName === \"model\") {\r\n\t\t\t\tlet chg = changes[propName];\r\n\t\t\t\tif (chg.currentValue) {\r\n\t\t\t\t\tthis.editResource = Object.assign({}, chg.currentValue);\r\n\t\t\t\t\tthis.userenabled =\r\n\t\t\t\t\t\tthis.editResource.active === \"Y\" ? true : false;\r\n\t\t\t\t\tthis.placeholder =\r\n\t\t\t\t\t\tthis.editResource.placeholder === \"Y\" ? true : false;\r\n\t\t\t\t\tthis.cdm =\r\n\t\t\t\t\t\tthis.editResource.cdm === \"Y\" ? true : false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-divider {\\n  width: 100%;\\n  border-bottom: 3px solid #778899; }\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid gray;\\n  padding-bottom: 10px; }\\ninput.parsley-error {\\n  border-color: #d9534f;\\n  box-shadow: inset 0 1px 1px rgba(217, 83, 79, 0.075); }\\n.parsley-errors-list {\\n  font-size: 85%;\\n  padding-left: 0;\\n  margin-bottom: 5px; }\\n.parsley-errors-list li {\\n    list-style: none;\\n    color: #d9534f; }\\n.switch {\\n  box-sizing: content-box;\\n  margin-left: -20px; }\\n.switch i {\\n  display: inline-block;\\n  cursor: pointer;\\n  margin-left: -20px;\\n  margin-bottom: -3px;\\n  padding-right: 20px;\\n  transition: all ease 0.2s;\\n  -webkit-transition: all ease 0.2s;\\n  border-radius: 20px;\\n  box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.5); }\\n.switch i:before {\\n  display: block;\\n  content: '';\\n  width: 30px;\\n  height: 30px;\\n  padding: 1px;\\n  border-radius: 20px;\\n  background: white;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }\\n.switch :checked + i {\\n  padding-right: 0;\\n  padding-left: 20px;\\n  background: #64bd63; }\\n.white, .white a {\\n  color: #fff; }\\n.btn-label {\\n  background: transparent;\\n  left: 2px;\\n  padding: 1px 6px; }\\n.md-editor {\\n  display: block;\\n  border: 1px solid #dee2e6; }\\n.md-editor > .md-header, .md-editor .md-footer {\\n    display: block;\\n    padding: 6px 4px;\\n    background: #f5f5f5; }\\n.md-editor > .md-header {\\n    margin: 0; }\\n.md-editor > .md-header .glyphicon {\\n      top: 3px; }\\n.md-editor > .md-preview {\\n    margin-left: -1px;\\n    margin-right: -1px;\\n    padding: 0.5rem 1rem;\\n    background: #fff;\\n    border-top: 1px dashed #dee2e6;\\n    min-height: 10px; }\\n.md-editor > textarea {\\n    font-family: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n    font-size: 1rem;\\n    outline: 0;\\n    outline: thin dotted  \\\\9;\\n    /* IE6-9 */\\n    margin: 0;\\n    display: block;\\n    width: 100%;\\n    border: 0;\\n    border-top: 1px dashed #dee2e6;\\n    border-radius: 0;\\n    box-shadow: none;\\n    background: #dee2e6; }\\n.md-editor > textarea:focus {\\n      box-shadow: none;\\n      background: #fff; }\\n.md-editor.active {\\n    border-color: #4d90fe;\\n    outline: 0; }\\n/**\\r\\n * Bootstrap select\\r\\n */\\n.selectpicker.form-control {\\n  height: auto; }\\n.bootstrap-select .dropdown-toggle {\\n  padding-left: 10px; }\\n.bootstrap-select .dropdown-toggle:after {\\n    margin-right: 0;\\n    margin-left: 0; }\\n.bootstrap-select .dropdown-menu > li > a {\\n  display: block;\\n  width: 100%;\\n  padding: 3px 20px;\\n  clear: both;\\n  font-weight: normal;\\n  line-height: 1.42857143;\\n  color: #555;\\n  text-align: inherit;\\n  white-space: nowrap;\\n  background: none;\\n  border: 0; }\\n.bootstrap-select .dropdown-menu > li > a:hover, .bootstrap-select .dropdown-menu > li > a:focus {\\n    color: #171717;\\n    text-decoration: none;\\n    background-color: #f5f5f5; }\\n.bootstrap-select .dropdown-menu > li > a.active, .bootstrap-select .dropdown-menu > li > a.active:hover, .bootstrap-select .dropdown-menu > li > a.active:focus {\\n    color: #fff;\\n    text-decoration: none;\\n    background-color: #5d8fc2;\\n    outline: 0; }\\n.bootstrap-select .dropdown-menu > li > a.disabled, .bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    color: #868e96; }\\n.bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    text-decoration: none;\\n    cursor: not-allowed;\\n    background-color: transparent;\\n    background-image: none; }\\n/**\\r\\n*  autosize\\r\\n**/\\n/***********************************/\\n/**          NEWS LIST           **/\\n/**********************************/\\n.news-list {\\n  margin-bottom: 0;\\n  padding-left: 0; }\\n.news-list li {\\n    list-style: none;\\n    box-sizing: content-box;\\n    border-top: 1px solid #eeeeee;\\n    padding: 12px;\\n    cursor: pointer;\\n    -webkit-transition: background-color 0.2s ease-out;\\n    transition: background-color 0.2s ease-out; }\\n@media screen and (prefers-reduced-motion: reduce) {\\n      .news-list li {\\n        -webkit-transition: none;\\n        transition: none; } }\\n.news-list li:hover {\\n      background: #dbdbdb; }\\n.news-list li:last-child {\\n      margin-bottom: -10px; }\\n.news-list img,\\n  .news-list .icon {\\n    float: left;\\n    height: 50px;\\n    width: 50px; }\\n.news-list .icon {\\n    line-height: 50px;\\n    border-radius: 50%;\\n    text-align: center;\\n    font-size: 28px; }\\n.news-list .news-item-info {\\n    margin-left: 62px;\\n    /*50 + 12px padding*/ }\\n.news-list .name {\\n    text-transform: uppercase; }\\n.news-list .name a {\\n      text-decoration: none; }\\n.news-list .name a:hover {\\n        color: #218bc3; }\\n.autogrow {\\n  overflow: hidden;\\n  resize: none; }\\n.form-checkbox {\\n  margin-left: 5px;\\n  width: 20px;\\n  height: 20px;\\n  box-shadow: none; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"edit-resource\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"edit-resource-title\\\"\\r\\n aria-hidden=\\\"true\\\">\\r\\n\\t<div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t<h1 class=\\\"h4 modal-title text-xs-left fw-bold mt\\\" id=\\\"edit-resource-title\\\">Edit Resource</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Body-->\\r\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t<form id=\\\"editresourceform\\\" #editresourceform=\\\"ngForm\\\" role=\\\"form\\\" class=\\\"form-horizontal\\\"\\r\\n\\t\\t\\t\\t data-parsley-priority-enabled=\\\"false\\\" novalidate=\\\"novalidate\\\" data-parsley-validate data-parsley-focus=\\\"first\\\">\\r\\n\\t\\t\\t\\t\\t<!-- Name-->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Name\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"editResource.name\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t required data-parsley-required-message=\\\"Error: Name is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Lookup Name-->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"lookup-name\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Lookup Name\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lookup-name\\\" [(ngModel)]=\\\"editResource.lookupName\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: Lookup Name is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t<!--Display Name-->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"display-name\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Display Name\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"display-name\\\" [(ngModel)]=\\\"editResource.displayName\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired data-parsley-required-message=\\\"Error: Display Name is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t -->\\r\\n\\t\\t\\t\\t\\t<!-- Labor Category -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"user-roles\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Labor Category\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"editResource.lcatCode\\\" name=\\\"laborCategories\\\" class=\\\"form-control fdatable\\\" id=\\\"user-roles\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t required data-parsley-required-message=\\\"Error: Labor Category is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let lcat of laborCategories\\\" [value]=\\\"lcat.code\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{lcat.description}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t<!-- Resource Type -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"res-type\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Resource Type\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"editResource.typeCode\\\" name=\\\"restype\\\" class=\\\"form-control fdatable\\\" id=\\\"res-type\\\" required\\r\\n\\t\\t\\t\\t\\t\\t\\t data-parsley-required-message=\\\"Error: Resource Type is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let rtype of resourceTypes\\\" [value]=\\\"rtype.code\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{rtype.value}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- Position Names -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"res-pos\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Position\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"editResource.positionCode\\\" name=\\\"res-pos\\\" class=\\\"form-control fdatable\\\" id=\\\"res-pos\\\" required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-parsley-required-message=\\\"Error: Position is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let pos of positionNames\\\" [value]=\\\"pos.code\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{pos.value}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- Team Name -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"res-team\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Team\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"editResource.teamCode\\\" name=\\\"resteam\\\" class=\\\"form-control fdatable\\\" id=\\\"res-team\\\" required\\r\\n\\t\\t\\t\\t\\t\\t\\t data-parsley-required-message=\\\"Error: Resource Type is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let rteam of resourceTeams\\\" [value]=\\\"rteam.code\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{rteam.value}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t<!-- Team Lead -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"res-lead\\\" class=\\\"col-md-4 form-control-label text-md-right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tTeam Lead\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required field</span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"editResource.leadID\\\" title=\\\"Team Lead\\\" name=\\\"Team Lead\\\" class=\\\"form-control fdatable\\\" id=\\\"res-lead\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t required placeholder=\\\"Select Team Lead\\\" data-parsley-required-message=\\\"Error: Team Lead is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option></option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let res of listResources\\\" [ngValue]=\\\"res.resourceID\\\">{{res.name}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t<!--Email Address         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"email-address\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Email\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email-address\\\" [(ngModel)]=\\\"editResource.email\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t required data-parsley-error-message=\\\"Error: Email is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Phone         -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"phone\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Phone\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"phone\\\" class=\\\"form-control\\\" id=\\\"password\\\" [(ngModel)]=\\\"editResource.phone\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired data-parsley-error-message=\\\"Error: Phone is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t<!--Employee ID         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"employeeid\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Employee ID\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"employeeid\\\" [(ngModel)]=\\\"editResource.employeeID\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t [ngModelOptions]=\\\"{standalone: true}\\\" required data-parsley-error-message=\\\"Error: Employee ID is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Rate         -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"rate\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Rate\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rate\\\" [(ngModel)]=\\\"editResource.rate\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trequired data-parsley-error-message=\\\"Error: Rate is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t -->\\r\\n\\t\\t\\t\\t\\t<!--Max Hours         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"maxhours\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Max Hours\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"maxhours\\\" [(ngModel)]=\\\"editResource.maxHours\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Active         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"enabled\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control form-checkbox\\\" id=\\\"enabled\\\" [(ngModel)]=\\\"userenabled\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Placeholder         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"placeholder\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Placeholder\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control form-checkbox\\\" id=\\\"placeholder\\\" [(ngModel)]=\\\"placeholder\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--CDM         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"cdm\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">Center Delivery Manager\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control form-checkbox\\\" id=\\\"cdm\\\" [(ngModel)]=\\\"cdm\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div aria-live=\\\"assertive\\\">\\r\\n\\t\\t\\t\\t<div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</alert>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Footer-->\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" id=\\\"btn-save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateResource(editResource)\\\">Save Resource</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reset(false)\\\">Cancel</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { AfterViewInit, Component, OnDestroy, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ICellRendererAngularComp } from \"ag-grid-angular\";\r\nimport { GridOptions } from \"ag-grid-community\";\r\nimport \"ag-grid-enterprise\";\r\nimport \"ag-grid-enterprise/chartsModule\";\r\nimport { isNil } from \"ramda\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { Resource } from '../../../tdl/models/resource.model';\r\nimport { ResourceService } from '../../../tdl/services/resource.service';\r\n\r\ndeclare var jQuery: any;\r\n\r\n\r\n@Component({\r\n  selector: 'edit-cell',\r\n  template: `<i class=\"glyphicon glyphicon-pencil\" (click)=\"invokeParentMethod()\" data-toggle=\"modal\" title=\"Edit Resource\"\r\n                   data-keyboard=\"false\" data-backdrop=\"static\" data-target=\"#edit-resource\"></i>`\r\n  // styles: [\r\n  //     `.btn {\r\n  //         line-height: 0.5\r\n  //     }`\r\n  // ]\r\n})\r\nexport class EditResourceComponent implements ICellRendererAngularComp {\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n      this.params = params;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n      this.params.context.componentParent.selectEditResource(this.params.data);\r\n  }\r\n\r\n  refresh(): boolean {\r\n      return false;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'delete-cell',\r\n  template: `<i class=\"glyphicon glyphicon-trash txt-gap\" (click)=\"invokeParentMethod()\" data-toggle=\"modal\" title=\"Delete Resource\"\r\n  data-keyboard=\"false\" data-backdrop=\"static\" data-target=\"#confirm-popup\"></i>`\r\n  // styles: [\r\n  //     `.btn {\r\n  //         line-height: 0.5\r\n  //     }`\r\n  // ]\r\n})\r\nexport class DeleteResourceComponent implements ICellRendererAngularComp {\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n      this.params = params;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n      this.params.context.componentParent.deleteResource(this.params.data);\r\n  }\r\n\r\n  refresh(): boolean {\r\n      return false;\r\n  }\r\n}\r\n\r\n\r\n// con\r\n@Component({\r\n  selector: \"resource-dashboard\",\r\n  templateUrl: 'resource-dashboard.template.html',\r\n  styleUrls: [\"./resource-dashboard.styles.scss\"],\r\n  providers: [ResourceService],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ResourceDashboardPage implements OnInit, OnDestroy, AfterViewInit {\r\n  public router: Router;\r\n  public data: any[];\r\n  public adminCount: number;\r\n\r\n  public busyLoadResources: Subscription;\r\n  public busyDeleteResource: Subscription;\r\n\r\n  public dropdownData = [];\r\n  public showErrorFlag: boolean;\r\n  public alerts: Array<Object>;\r\n  public effectiveDate: Date;\r\n  public selResource: Resource;\r\n  public showCreateResource: any;\r\n  public showEditResource: any;\r\n\r\n  public delresourcetitle: string = \"Delete Resource\";\r\n  public delresourcemessage: string = \"Are you sure you want to delete resource?\";\r\n  public confirmClicked: boolean = false;\r\n  public cancelClicked: boolean = false;\r\n\r\n  public gridOptions: GridOptions;\r\n\r\n  public gridApi;\r\n  public gridColumnApi;\r\n\r\n  public defaultColDef = {\r\n    sortable: true,\r\n    filter: true,\r\n    headerClass: 'fw-semi-bold'\r\n  };\r\n\r\n  public columnDefs = [\r\n    {\r\n      headerName: \"\",\r\n      field: \"value\",\r\n      cellRendererFramework: EditResourceComponent,\r\n      colId: \"params\",\r\n      width: 50,\r\n      filter: false\r\n    },\r\n    {\r\n      headerName: 'Name',\r\n      field: 'name',\r\n      cellClass: function(params) {\r\n        return params.data.active !== 'Y' ? \"fw-semi-bold inactive\" : \"fw-semi-bold \";\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Placeholder',\r\n      field: 'placeholder',\r\n      cellClass: function(params) {\r\n        return params.data.active !== 'Y' ? \"inactive\" : \"\";\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Position',\r\n      field: 'positionName',\r\n      cellClass: function(params) {\r\n        return params.data.active !== 'Y' ? \"inactive\" : \"\";\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Active',\r\n      field: 'active',\r\n      cellClass: function(params) {\r\n        return params.data.active !== 'Y' ? \"inactive\" : \"\";\r\n      }\r\n    },\r\n    {\r\n      headerName: 'CDM',\r\n      field: 'cdm',\r\n      cellClass: function(params) {\r\n        return params.data.active !== 'Y' ? \"inactive\" : \"\";\r\n      }\r\n    },\r\n    {\r\n      headerName: \"\",\r\n      field: \"value\",\r\n      cellRendererFramework: DeleteResourceComponent,\r\n      colId: \"params\",\r\n      width: 50,\r\n      filter: false\r\n    }\r\n  ];\r\n\r\n  constructor(private resourceService: ResourceService, router: Router) {\r\n    this.alerts = [\r\n      {\r\n        type: \"success\",\r\n        msg:\r\n          '<i class=\"fa fa-circle text-success\"></i><span class=\"alert-text\">Successfully generated 12 monthly reports</span>'\r\n      }\r\n    ];\r\n\r\n    this.router = router;\r\n    this.showCreateResource = false;\r\n    this.showEditResource = false;\r\n\r\n    this.gridOptions = <GridOptions>{\r\n      context: {\r\n          componentParent: this\r\n      },\r\n      enableColResize: true,\r\n      rowHeight: 30\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    let searchInput = jQuery(\"#table-search-input, #search-countries\");\r\n    searchInput\r\n      .focus(e => {\r\n        jQuery(e.target)\r\n          .closest(\".input-group\")\r\n          .addClass(\"focus\");\r\n      })\r\n      .focusout(e => {\r\n        jQuery(e.target)\r\n          .closest(\".input-group\")\r\n          .removeClass(\"focus\");\r\n      });\r\n\r\n    // load the users\r\n    this.loadResources();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.busyLoadResources) {\r\n      this.busyLoadResources.unsubscribe();\r\n    }\r\n    if (this.busyDeleteResource) {\r\n      this.busyDeleteResource.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n   }\r\n\r\n\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n  }\r\n\r\n  public cosmeticFix(elementID: any){\r\n    // The code below for cosmetic fix - Blue box now surrounds the icon on the search company text box\r\n    let filterInput = jQuery(elementID);\r\n    filterInput\r\n    .focus((e) => {\r\n        jQuery(e.target).closest('.input-group').addClass('focus');\r\n    })\r\n    .focusout((e) => {\r\n        jQuery(e.target).closest('.input-group').removeClass('focus');\r\n    });\r\n  }\r\n\r\n  private loadResources() {\r\n    let that = this;\r\n    this.busyLoadResources = this.resourceService.getAllNonPlaceholderResourcesOnly().subscribe(resources => {\r\n      if (resources) {\r\n        that.data = resources;\r\n      }\r\n    }, error => {\r\n      that.showErrorFlag = true;\r\n      that.alerts = [];\r\n      that.alerts.push({ type: 'warning', msg: error });\r\n  });\r\n  }\r\n\r\n  public reloadResources(reload: boolean) {\r\n    this.showCreateResource = false;\r\n    this.showEditResource = false;\r\n    if (reload) {\r\n      this.loadResources();\r\n    } else {\r\n      this.selResource = new Resource();\r\n    }\r\n  }\r\n\r\n  public deleteResource(res: Resource) {\r\n    if(!isNil(res)){\r\n      this.busyDeleteResource = this.resourceService.deleteResourceById(res.resourceID).subscribe(data => {\r\n        if (data) {\r\n          this.reloadResources(true);\r\n        }\r\n      }, error => {\r\n        this.showErrorFlag = true;\r\n        this.alerts = [];\r\n        this.alerts.push({ type: 'warning', msg: error });\r\n      });\r\n    }\r\n  }\r\n\r\n  public addResource() {\r\n    this.showCreateResource = true;\r\n  }\r\n\r\n  public selectEditResource(resource) {\r\n    this.showEditResource = true;\r\n    this.selResource = resource;\r\n  }\r\n\r\n  public refreshResourceFilterObject() {\r\n  }\r\n\r\n  public launchSkillsSurvey(resourceId: number){\r\n    this.router.navigate(['app/resource/survey', resourceId]);\r\n  }\r\n  public onClickBackButton(){\r\n\t\tthis.router.navigate([\"/app/tdl/search\"]);\r\n  }\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid #ddd; }\\n.resourcedashboardController {\\n  width: 98%; }\\n.inactive {\\n  text-decoration: line-through; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vY29tcG9uZW50cy9yZXNvdXJjZXMvQzpcXFVzZXJzXFxhc2FwYVxcRG9jdW1lbnRzXFxDYmFzc1xcY2Jhc3JlcG9cXGNiYXMtdWkvc3JjXFxzY3NzXFxfdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL2FkbWluL2NvbXBvbmVudHMvcmVzb3VyY2VzL0M6XFxVc2Vyc1xcYXNhcGFcXERvY3VtZW50c1xcQ2Jhc3NcXGNiYXNyZXBvXFxjYmFzLXVpL3NyY1xcYXBwXFxhZG1pblxcY29tcG9uZW50c1xccmVzb3VyY2VzXFxyZXNvdXJjZS1kYXNoYm9hcmQuc3R5bGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBYUE7Ozs4RUFHOEU7QUNkOUU7RUFDSSxZQUFVO0VBQ1YsOEJBQTRCLEVBQy9CO0FBRUQ7RUFDRSxXQUFTLEVBQ1Y7QUFFRDtFQUNFLDhCQUE2QixFQUM5QiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBvbmVudHMvcmVzb3VyY2VzL3Jlc291cmNlLWRhc2hib2FyZC5zdHlsZXMuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNpbmcgdmFyaWFibGVzXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuJGVuYWJsZS1zaGFkb3dzOiB0cnVlICFkZWZhdWx0O1xyXG5cclxuJGdseXBoaWNvbnMtaGFsZmxpbmdzLWluY2x1ZGUtYm9udXM6IGZhbHNlICFkZWZhdWx0O1xyXG4kZ2x5cGhpY29ucy1oYWxmbGluZ3MtY2xhc3MtcHJlZml4OiBnbHlwaGljb24gIWRlZmF1bHQ7XHJcbiRnbHlwaGljb25zLWhhbGZsaW5ncy1mb250LWJhc2Utc2l6ZTogMTRweCAhZGVmYXVsdDtcclxuXHJcbiRnbHlwaGljb25zLWhhbGZsaW5ncy1mb250LXBhdGg6ICd+L2ZvbnRzL2dseXBoaWNvbnMnICFkZWZhdWx0O1xyXG4kZmEtZm9udC1wYXRoOiAnfi9mb250LWF3ZXNvbWUvZm9udHMnICFkZWZhdWx0O1xyXG5cclxuLypcclxuXHJcbiAqIFR5cG9ncmFwaHlcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbiRmb250LXNpemUtaW5pdGlhbDogMTRweDsgLy8gcmVzZXQgZGVmYXVsdCBicm93c2VyIHZhbHVlIGZyb20gMTZweCB0byAxM3B4XHJcbiRmb250LXNpemUtYmFzZTogMXJlbSAhZGVmYXVsdDtcclxuJGZvbnQtc2l6ZS1sZzogMS4yNXJlbSAhZGVmYXVsdDtcclxuJGZvbnQtc2l6ZS1zbTogMC44NzVyZW0gIWRlZmF1bHQ7XHJcbiRmb250LXNpemUtbGFyZ2VyOiAxLjFyZW07XHJcbiRmb250LXNpemUtbWluaTogMC45cmVtO1xyXG4kZm9udC1zaXplLWluZGV4OiAwLjdyZW07XHJcblxyXG4kc21hbGwtZm9udC1zaXplOiA4NSUgIWRlZmF1bHQ7XHJcblxyXG4kZm9udC1mYW1pbHktYmFzZTogJ29wZW4nLFxyXG5zYW5zLXNlcmlmO1xyXG4kZm9udC1mYW1pbHktc2Fucy1zZXJpZjogJ29wZW4nLFxyXG5zYW5zLXNlcmlmO1xyXG5cclxuLy8gQ29sb3Igc3lzdGVtXHJcbi8vXHJcblxyXG4kd2hpdGU6ICNmZmYgIWRlZmF1bHQ7XHJcbiRncmF5LTEwMDogI2Y1ZjVmNSAhZGVmYXVsdDtcclxuJGdyYXktMjAwOiAjZWVlZWVlICFkZWZhdWx0O1xyXG4kZ3JheS0zMDA6ICNkZWUyZTYgIWRlZmF1bHQ7XHJcbiRncmF5LTQwMDogI2NlZDRkYSAhZGVmYXVsdDtcclxuJGdyYXktNTAwOiAjYWRiNWJkICFkZWZhdWx0O1xyXG4kZ3JheS02MDA6ICM4NjhlOTYgIWRlZmF1bHQ7XHJcbiRncmF5LTcwMDogIzU1NSAhZGVmYXVsdDtcclxuJGdyYXktODAwOiAjMzQzNDM0ICFkZWZhdWx0O1xyXG4kZ3JheS05MDA6ICMyNDI0MjQgIWRlZmF1bHQ7XHJcbiRibGFjazogIzAwMCAhZGVmYXVsdDtcclxuJGdyYXktbGlnaHQ6ICNkZGQgIWRlZmF1bHQ7XHJcblxyXG5cclxuJGJsdWU6ICM1ZDhmYzIgIWRlZmF1bHQ7XHJcbiRyZWQ6ICNkZDU4MjYgIWRlZmF1bHQ7XHJcbiR5ZWxsb3c6ICNmMGI1MTggIWRlZmF1bHQ7XHJcbiRncmVlbjogIzY0YmQ2MyAhZGVmYXVsdDtcclxuJGN5YW46ICM1ZGM0YmYgIWRlZmF1bHQ7XHJcblxyXG4kdGhlbWUtY29sb3JzOiAocHJpbWFyeTogJGJsdWUsXHJcbnNlY29uZGFyeTogJGdyYXktNjAwLFxyXG5zdWNjZXNzOiAkZ3JlZW4sXHJcbnByaW1hcnktbGlnaHQ6ICNkZWU0ZWUsXHJcbnN1Y2Nlc3MtbGlnaHQ6ICNlY2ZhZWMsXHJcbmluZm8tbGlnaHQ6ICNmMmZhZmEsXHJcbndhcm5pbmctbGlnaHQ6ICNmZGY3ZTYsXHJcbmRhbmdlci1saWdodDogI2ZmZjJlZixcclxuaW5mbzogJGN5YW4sXHJcbndhcm5pbmc6ICR5ZWxsb3csXHJcbmRhbmdlcjogJHJlZCxcclxuZGFyazogJGdyYXktODAwLFxyXG5pbnZlcnNlOiAkZ3JheS03MDAsXHJcbmdyYXk6ICRncmF5LTMwMCxcclxuZGVmYXVsdDogI2Y4ZjhmOCk7XHJcblxyXG4kbGluay1jb2xvcjogIzIxOGJjMztcclxuXHJcbiR0ZXh0LWNvbG9yOiAkZ3JheS03MDAgIWRlZmF1bHQ7XHJcblxyXG4kZm9udC13ZWlnaHQtYm9sZDogNzAwICFkZWZhdWx0O1xyXG4kZm9udC13ZWlnaHQtc2VtaS1ib2xkOiA2MDAgIWRlZmF1bHQ7XHJcbiRmb250LXdlaWdodC1ub3JtYWw6IDUwMCAhZGVmYXVsdDtcclxuJGZvbnQtd2VpZ2h0LXRoaW46IDMwMCAhZGVmYXVsdDtcclxuJGZvbnQtd2VpZ2h0LWJhc2U6ICRmb250LXdlaWdodC1ub3JtYWwgIWRlZmF1bHQ7XHJcblxyXG4kZm9udC1zaXplLXNtYWxsZXI6IDg1JSAhZGVmYXVsdDtcclxuJGhlYWRpbmdzLWZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtbm9ybWFsICFkZWZhdWx0O1xyXG5cclxuJGFkZGl0aW9uLWJnOiAjZjhmOGY4ICFkZWZhdWx0O1xyXG5cclxuJGJvZHktYmc6IGxpZ2h0Z3JheSAhZGVmYXVsdDsgLy8gI2Y1ZjVmNSAhZGVmYXVsdDtcclxuJGJvZHktYmctbGlnaHQ6IGxpZ2h0ZW4oJGJvZHktYmcsIDMlKTtcclxuXHJcbi8vPT0gQ29tcG9uZW50c1xyXG4vL1xyXG5cclxuJHBhZGRpbmctYmFzZS12ZXJ0aWNhbDogMC41cmVtICFkZWZhdWx0O1xyXG4kcGFkZGluZy1iYXNlLWhvcml6b250YWw6IDFyZW0gIWRlZmF1bHQ7XHJcblxyXG4kcGFkZGluZy1sYXJnZS12ZXJ0aWNhbDogMC43NXJlbSAhZGVmYXVsdDtcclxuJHBhZGRpbmctbGFyZ2UtaG9yaXpvbnRhbDogMS4yNXJlbSAhZGVmYXVsdDtcclxuXHJcbiRwYWRkaW5nLXNtYWxsLXZlcnRpY2FsOiAwLjI1cmVtICFkZWZhdWx0O1xyXG4kcGFkZGluZy1zbWFsbC1ob3Jpem9udGFsOiAwLjc1cmVtICFkZWZhdWx0O1xyXG5cclxuJG1hcmdpbi1iYXNlLXZlcnRpY2FsOiAwLjVyZW0gIWRlZmF1bHQ7XHJcbiRtYXJnaW4tYmFzZS1ob3Jpem9udGFsOiAxcmVtICFkZWZhdWx0O1xyXG5cclxuJG1hcmdpbi1sYXJnZS12ZXJ0aWNhbDogMC43NXJlbSAhZGVmYXVsdDtcclxuJG1hcmdpbi1sYXJnZS1ob3Jpem9udGFsOiAxLjI1cmVtICFkZWZhdWx0O1xyXG5cclxuJG1hcmdpbi1zbWFsbC12ZXJ0aWNhbDogMC4yNXJlbSAhZGVmYXVsdDtcclxuJG1hcmdpbi1zbWFsbC1ob3Jpem9udGFsOiAwLjc1cmVtICFkZWZhdWx0O1xyXG5cclxuJGJvcmRlci1yYWRpdXM6IC4zcmVtICFkZWZhdWx0O1xyXG4kYm9yZGVyLXJhZGl1cy1sZzogLjM1cmVtICFkZWZhdWx0O1xyXG4kYm9yZGVyLXJhZGl1cy1zbTogLjI1cmVtICFkZWZhdWx0O1xyXG5cclxuJG5hdi1saW5rLXBhZGRpbmc6IDE0cHg7XHJcblxyXG4vLz09IFNpZGViYXJcclxuLy9cclxuJHNpZGViYXItcGFkZGluZy1ob3Jpem9udGFsOiAxMXB4O1xyXG4kc2lkZWJhci13aWR0aC1vcGVuOiAyMjBweDtcclxuJHNpZGViYXItd2lkdGgtY2xvc2VkOiA1MHB4O1xyXG4kc2lkZWJhci10cmFuc2l0aW9uLXRpbWU6IDAuM3MgIWRlZmF1bHQ7XHJcbiRzaWRlYmFyLXNsaW0tc2Nyb2xsLXdpZHRoOiA0cHg7XHJcbiRzaWRlYmFyLXdpZHRoOiAkc2lkZWJhci13aWR0aC1vcGVuKyRzaWRlYmFyLXNsaW0tc2Nyb2xsLXdpZHRoICFkZWZhdWx0O1xyXG5cclxuJHNpZGViYXItYmctY29sb3I6ICMxNzUyOUY7XHJcbiRzaWRlYmFyLWNvbG9yOiAkd2hpdGU7XHJcblxyXG4kc2lkZWJhci1pdGVtLWJvcmRlci1jb2xvcjogIzJkMmQyZDtcclxuJHNpZGViYXItaXRlbS1hY3RpdmUtY29sb3I6ICNmMmJlMzU7XHJcbiRzaWRlYmFyLWl0ZW0taG92ZXItYmctY29sb3I6ICMxMTE7XHJcblxyXG4kY2hhdC1zaWRlYmFyLWJnLWNvbG9yOiAkZ3JheS05MDAgIWRlZmF1bHQ7XHJcbiRjaGF0LXNpZGViYXItd2lkdGg6IDI1MHB4KyRzaWRlYmFyLXNsaW0tc2Nyb2xsLXdpZHRoICFkZWZhdWx0O1xyXG5cclxuJGJyZWFkY3J1bWItZGl2aWRlcjogJyc7XHJcbiRicmVhZGNydW1iLXBhZGRpbmcteTogMDtcclxuJGJyZWFkY3J1bWItYmc6IHRyYW5zcGFyZW50O1xyXG5cclxuJGJhZGdlLWZvbnQtd2VpZ2h0OiA2MDA7XHJcblxyXG4kd2lkZ2V0LWJnOiAjZmZmO1xyXG4kd2lkZ2V0LXRpdGxlLWNvbG9yOiAjNDQ0O1xyXG4kd2lkZ2V0LXNoYWRvdzogMCAwIDEwcHggZGFya2VuKCRib2R5LWJnLCA1JSk7XHJcblxyXG5cclxuJGlucHV0LWJ0bi1saW5lLWhlaWdodDogMS41O1xyXG5cclxuJGlucHV0LWJ0bi1wYWRkaW5nLXktc206IDAuNHJlbTtcclxuJGlucHV0LWJ0bi1wYWRkaW5nLXgtc206IDAuOHJlbTtcclxuXHJcbiRpbnB1dC1oZWlnaHQtc21hbGw6IDMwcHg7XHJcblxyXG4vLz09IE5hdmJhclxyXG4vL1xyXG5cclxuJG5hdmJhci1oZWlnaHQ6IDUwcHggIWRlZmF1bHQ7XHJcbiRuYXZiYXItcGFkZGluZy15OiAwICFkZWZhdWx0O1xyXG4kbmF2YmFyLXBhZGRpbmcteDogMCAhZGVmYXVsdDtcclxuXHJcbiRuYXZiYXItZGFzaGJvYXJkLWJnOiAkd2hpdGUgIWRlZmF1bHQ7XHJcbiRuYXZiYXItZGFzaGJvYXJkLWNvbG9yOiAjNzc3ICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhc2hib2FyZC1ib3JkZXI6IGRhcmtlbigkbmF2YmFyLWRhc2hib2FyZC1iZywgNi41JSkgIWRlZmF1bHQ7XHJcblxyXG4vLyBOYXZiYXIgbGlua3NcclxuJG5hdmJhci1kYXNoYm9hcmQtbGluay1jb2xvcjogIzY2NiAhZGVmYXVsdDtcclxuXHJcbi8vIE5hdmJhciBsaW5rc1xyXG4kbmF2YmFyLWRhc2hib2FyZC1saW5rLWhvdmVyLWNvbG9yOiAjMzMzICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhc2hib2FyZC1saW5rLWhvdmVyLWJnOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXNoYm9hcmQtbGluay1hY3RpdmUtY29sb3I6ICM1NTUgIWRlZmF1bHQ7XHJcbiRuYXZiYXItZGFzaGJvYXJkLWxpbmstYWN0aXZlLWJnOiBkYXJrZW4oJG5hdmJhci1kYXNoYm9hcmQtYmcsIDYuNSUpICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhc2hib2FyZC1saW5rLWRpc2FibGVkLWNvbG9yOiAjY2NjICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhc2hib2FyZC1saW5rLWRpc2FibGVkLWJnOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuXHJcbi8vIE5hdmJhciBicmFuZCBsYWJlbFxyXG4kbmF2YmFyLWRhc2hib2FyZC1icmFuZC1jb2xvcjogJG5hdmJhci1kYXNoYm9hcmQtbGluay1jb2xvciAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXNoYm9hcmQtYnJhbmQtaG92ZXItY29sb3I6IGRhcmtlbigkbmF2YmFyLWRhc2hib2FyZC1icmFuZC1jb2xvciwgMTAlKSAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXNoYm9hcmQtYnJhbmQtaG92ZXItYmc6IHRyYW5zcGFyZW50ICFkZWZhdWx0O1xyXG5cclxuLy8gTmF2YmFyIHRvZ2dsZVxyXG4kbmF2YmFyLWRhc2hib2FyZC10b2dnbGUtaG92ZXItYmc6ICNkZGQgIWRlZmF1bHQ7XHJcbiRuYXZiYXItZGFzaGJvYXJkLXRvZ2dsZS1pY29uLWJhci1iZzogIzg4OCAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXNoYm9hcmQtdG9nZ2xlLWJvcmRlci1jb2xvcjogI2RkZCAhZGVmYXVsdDtcclxuXHJcblxyXG4vLyBDb250ZW50XHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiRjb250ZW50LXBhZGRpbmc6IDQwcHg7XHJcbiRjb250ZW50LXBhZGRpbmctdG9wOiAkY29udGVudC1wYWRkaW5nKyRuYXZiYXItaGVpZ2h0ICFkZWZhdWx0O1xyXG5cclxuLy8gU2NyZWVuc1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4kc2NyZWVuLWxnLWhlaWdodDogNjcwcHggIWRlZmF1bHQ7XHJcblxyXG5cclxuLy89PSBCdXR0b25zXHJcbi8vXHJcbiRidG4tZGVmYXVsdC1iZzogJGFkZGl0aW9uLWJnICFkZWZhdWx0O1xyXG4kYnRuLWRlZmF1bHQtYm9yZGVyOiByZ2JhKDAsIDAsIDAsIDAuMTUpICFkZWZhdWx0O1xyXG5cclxuLy8gRHJvcGRvd25zXHJcbiRkcm9wZG93bi1saW5rLWNvbG9yOiAkdGV4dC1jb2xvcjtcclxuXHJcbi8vIFdpZGdldHNcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4kd2lkZ2V0LXBhZGRpbmctdmVydGljYWw6IDE1cHggIWRlZmF1bHQ7XHJcbiR3aWRnZXQtcGFkZGluZy1ob3Jpem9udGFsOiAyMHB4ICFkZWZhdWx0O1xyXG4kd2lkZ2V0LWJnLWNvbG9yOiAkd2hpdGU7XHJcblxyXG4vLz09IE5hdnNcclxuLy9cclxuJG5hdi10YWJzLWFjdGl2ZS1saW5rLWhvdmVyLWJnOiAkd2hpdGUgIWRlZmF1bHQ7XHJcbiRuYXYtdGFicy1hY3RpdmUtbGluay1ob3Zlci1jb2xvcjogJGdyYXktNzAwICFkZWZhdWx0O1xyXG5cclxuLy89PSBGb3Jtc1xyXG4vL1xyXG4kaW5wdXQtYm9yZGVyLWZvY3VzOiAjNGQ5MGZlICFkZWZhdWx0OyAvL3dlYmtpdCBmb2N1cyBjb2xvclxyXG4kbGVnZW5kLWNvbG9yOiBsaWdodGVuKCR0ZXh0LWNvbG9yLCAxNSUpICFkZWZhdWx0O1xyXG5cclxuJHByZS1iZzogI2Y1ZjVmNSAhZGVmYXVsdDtcclxuXHJcbiRjdXJzb3ItZGlzYWJsZWQ6IG5vdC1hbGxvd2VkICFkZWZhdWx0O1xyXG5cclxuLy8gRm9ybSBzdGF0ZXMgYW5kIGFsZXJ0c1xyXG4vL1xyXG4vLyBEZWZpbmUgY29sb3JzIGZvciBmb3JtIGZlZWRiYWNrIHN0YXRlcyBhbmQsIGJ5IGRlZmF1bHQsIGFsZXJ0cy5cclxuXHJcbiRzdGF0ZS1zdWNjZXNzLXRleHQ6ICMzYzc2M2QgIWRlZmF1bHQ7XHJcbiRzdGF0ZS1zdWNjZXNzLWJnOiAjZGZmMGQ4ICFkZWZhdWx0O1xyXG4kc3RhdGUtc3VjY2Vzcy1ib3JkZXI6IGRhcmtlbigkc3RhdGUtc3VjY2Vzcy1iZywgNSUpICFkZWZhdWx0O1xyXG5cclxuJHN0YXRlLWluZm8tdGV4dDogIzMxNzA4ZiAhZGVmYXVsdDtcclxuJHN0YXRlLWluZm8tYmc6ICNkOWVkZjcgIWRlZmF1bHQ7XHJcbiRzdGF0ZS1pbmZvLWJvcmRlcjogZGFya2VuKCRzdGF0ZS1pbmZvLWJnLCA3JSkgIWRlZmF1bHQ7XHJcblxyXG4kc3RhdGUtd2FybmluZy10ZXh0OiAjOGE2ZDNiICFkZWZhdWx0O1xyXG4kc3RhdGUtd2FybmluZy1iZzogI2ZjZjhlMyAhZGVmYXVsdDtcclxuJG1hcmstYmc6ICRzdGF0ZS13YXJuaW5nLWJnICFkZWZhdWx0O1xyXG4kc3RhdGUtd2FybmluZy1ib3JkZXI6IGRhcmtlbigkc3RhdGUtd2FybmluZy1iZywgNSUpICFkZWZhdWx0O1xyXG5cclxuJHN0YXRlLWRhbmdlci10ZXh0OiAjYTk0NDQyICFkZWZhdWx0O1xyXG4kc3RhdGUtZGFuZ2VyLWJnOiAjZjJkZWRlICFkZWZhdWx0O1xyXG4kc3RhdGUtZGFuZ2VyLWJvcmRlcjogZGFya2VuKCRzdGF0ZS1kYW5nZXItYmcsIDUlKSAhZGVmYXVsdDtcclxuXHJcbi8vKiAgUG9wb3ZlciAgKi9cclxuJHBvcG92ZXItYmc6ICNlYmVmZjEgIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWFycm93LW91dGVyLWNvbG9yOiAkcG9wb3Zlci1iZyAhZGVmYXVsdDtcclxuJHBvcG92ZXItYXJyb3ctY29sb3I6ICRwb3BvdmVyLWJnICFkZWZhdWx0O1xyXG5cclxuJGJyYW5kLXByaW1hcnk6IGRhcmtlbigjNDI4YmNhLCA2LjUlKSAhZGVmYXVsdDsgLy8gIzMzN2FiN1xyXG4kcGFnaW5hdGlvbi1hY3RpdmUtYm9yZGVyOiAkYnJhbmQtcHJpbWFyeSAhZGVmYXVsdDtcclxuJHBhbmVsLWJnOiAjZmZmICFkZWZhdWx0O1xyXG4kcGFuZWwtZGVmYXVsdC1oZWFkaW5nLWJnOiAjZjVmNWY1ICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1ib3JkZXI6ICNkZGQgIWRlZmF1bHQ7XHJcbiRpbnB1dC1iZy1kaXNhYmxlZDogJGdyYXktMzAwICFkZWZhdWx0O1xyXG4kZ3JheS1iYXNlOiAjMDAwICFkZWZhdWx0O1xyXG4kZ3JheS1kYXJrZXI6IGxpZ2h0ZW4oJGdyYXktYmFzZSwgMTMuNSUpICFkZWZhdWx0OyAvLyAjMjIyXHJcbiRncmF5LWRhcms6IGxpZ2h0ZW4oJGdyYXktYmFzZSwgMjAlKSAhZGVmYXVsdDsgLy8gIzMzM1xyXG4kZ3JheTogbGlnaHRlbigkZ3JheS1iYXNlLCAzMy41JSkgIWRlZmF1bHQ7IC8vICM1NTVcclxuJGdyYXktbGlnaHQ6IGxpZ2h0ZW4oJGdyYXktYmFzZSwgNDYuNyUpICFkZWZhdWx0OyAvLyAjNzc3XHJcbiRncmF5LWxpZ2h0ZXI6IGxpZ2h0ZW4oJGdyYXktYmFzZSwgOTMuNSUpICFkZWZhdWx0OyAvLyAjZWVlXHJcbiRncmF5LXNlbWktbGlnaHRlcjogJGdyYXktMzAwICFkZWZhdWx0O1xyXG5cclxuLy8qKiBVbml0LWxlc3MgYGxpbmUtaGVpZ2h0YCBmb3IgdXNlIGluIGNvbXBvbmVudHMgbGlrZSBidXR0b25zLlxyXG4kbGluZS1oZWlnaHQtYmFzZTogMS40Mjg1NzE0MjkgIWRlZmF1bHQ7IC8vIDIwLzE0XHJcbi8vKiogQ29tcHV0ZWQgXCJsaW5lLWhlaWdodFwiIChgZm9udC1zaXplYCAqIGBsaW5lLWhlaWdodGApIGZvciB1c2Ugd2l0aCBgbWFyZ2luYCwgYHBhZGRpbmdgLCBldGMuXHJcbiRsaW5lLWhlaWdodC1jb21wdXRlZDogZmxvb3IoKCRmb250LXNpemUtYmFzZSAqICRsaW5lLWhlaWdodC1iYXNlKSkgIWRlZmF1bHQ7IC8vIH4yMHB4XHJcblxyXG4kYnJhbmQtcHJpbWFyeTogZGFya2VuKCM0MjhiY2EsIDYuNSUpICFkZWZhdWx0OyAvLyAjMzM3YWI3XHJcbiRicmFuZC1zdWNjZXNzOiAjNWNiODVjICFkZWZhdWx0O1xyXG4kYnJhbmQtaW5mbzogIzViYzBkZSAhZGVmYXVsdDtcclxuJGJyYW5kLXdhcm5pbmc6ICNmMGFkNGUgIWRlZmF1bHQ7XHJcbiRicmFuZC1kYW5nZXI6ICNkOTUzNGYgIWRlZmF1bHQ7XHJcblxyXG4kcGFnaW5hdGlvbi1ib3JkZXI6ICNkZGQgIWRlZmF1bHQ7XHJcbiRwYWdpbmF0aW9uLWhvdmVyLWJvcmRlcjogI2RkZCAhZGVmYXVsdDtcclxuXHJcbiRzcGFjZXIteTogMSBlbSAhZGVmYXVsdDsiLCJAaW1wb3J0IFwiaGVscGVyc1wiO1xyXG5cclxuLmgtdGhpbi1kaXZpZGVye1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICAgIGJvcmRlci1ib3R0b206MXB4IHNvbGlkICNkZGQ7XHJcbn1cclxuXHJcbi5yZXNvdXJjZWRhc2hib2FyZENvbnRyb2xsZXJ7XHJcbiAgd2lkdGg6OTglO1xyXG59XHJcblxyXG4uaW5hY3RpdmV7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XHJcbn0iXX0= */\"","module.exports = \"<h1 class=\\\"h4 page-title hd-bdr\\\">Resources</h1>\\r\\n<div data-ng-controller=\\\"resourcedashboardController\\\" class=\\\"resourcedashboardController\\\">\\r\\n    <div aria-live=\\\"assertive\\\">\\r\\n        <div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n                        <alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n                            <div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n                        </alert>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <section class=\\\"widget h-divider\\\" widget>\\r\\n                <div class=\\\"widget-body\\\">\\r\\n                    <div class=\\\"row\\\" style=\\\"margin-bottom: 20px;\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-offset-1 col-md-4\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <div class=\\\"pull-right\\\">\\r\\n                                <button id=\\\"btn-cr-resource\\\" type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" data-toggle=\\\"modal\\\"\\r\\n                                    data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\" data-target=\\\"#create-resource\\\" title=\\\"Add Resource\\\"\\r\\n                                    (click)=\\\"addResource()\\\">\\r\\n                                    <i class=\\\"glyphicon glyphicon-plus\\\"></i>\\r\\n                                    Add Resource\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"grid-wrapper\\\">\\r\\n                        <ag-grid-angular\\r\\n                            #agGrid\\r\\n                            style=\\\"width: 100%; height: 650px;\\\"\\r\\n                            class=\\\"ag-theme-balham\\\"\\r\\n                            [rowData]=\\\"data\\\"\\r\\n                            [columnDefs]=\\\"columnDefs\\\"\\r\\n                            [defaultColDef]=\\\"defaultColDef\\\"\\r\\n                            [gridOptions]=\\\"gridOptions\\\"\\r\\n                            [floatingFilter]=\\\"true\\\"\\r\\n                            [pagination]=\\\"true\\\"\\r\\n                            (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                            [paginationAutoPageSize]=\\\"true\\\"\\r\\n                            >\\r\\n                        </ag-grid-angular>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"widget-footer\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n                            <div class=\\\"pull-right\\\">\\r\\n                                <button id=\\\"btn-go-back\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n                                    (click)=\\\"onClickBackButton()\\\">\\r\\n                                    <span class=\\\"glyphicon glyphicon-chevron-left txt-gap\\\"\\r\\n                                        aria-hidden=\\\"true\\\"></span>Back</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </section>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"showCreateResource\\\" create-resource-popup (reloadResources)=\\\"reloadResources($event)\\\"></div>\\r\\n    <div *ngIf=\\\"showEditResource\\\" edit-resource-popup [model]=\\\"selResource\\\" (reloadResources)=\\\"reloadResources($event)\\\"></div>\\r\\n</div>\"","/*\r\n@author : Deloitte\r\nthis is Component for creating user\r\n*/\r\nimport { Component, EventEmitter, OnDestroy, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Role } from '../../models/role.model';\r\nimport { User } from '../../models/user.model';\r\nimport { AdminService } from '../../services/admin.service';\r\nimport { RoleService } from '../../services/role.service';\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: '[create-user-popup]',\r\n templateUrl: 'create-user-popup.template.html',\r\n  styleUrls: ['./create-user-popup.styles.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class CreateUserPopup\r\n * @implements {OnInit}\r\n */\r\n\r\nexport class CreateUserPopup implements OnInit, OnDestroy {\r\n  @Output() reloadUsers = new EventEmitter<boolean>();\r\n\r\n  public router: Router;\r\n  public showErrorFlag: boolean;\r\n  public alerts: Array<Object>;\r\n  public user = new User();\r\n  public userRoles: Role[] = [];\r\n  public busy: Subscription;\r\n  public userenabled: boolean;\r\n\r\n  constructor(router: Router,\r\n    private _adminService: AdminService,\r\n    private _roleService: RoleService\r\n  ) {\r\n    this.router = router;\r\n\r\n    this.alerts = [\r\n      {\r\n        type: 'warning',\r\n        msg: '<span class=\"fw-semi-bold\">Warning:</span> Placeholder for Error Validation messages'\r\n      }\r\n    ];\r\n\r\n    this.showErrorFlag = false;\r\n\r\n    this.showUserRoles();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.busy) {\r\n      this.busy.unsubscribe();\r\n    }\r\n  }\r\n\r\n  // Create a new user\r\n  public createUser(user: User) {\r\n    jQuery('#adduserform').parsley().validate();\r\n\r\n    // Toggle to edit mode or navigate to the next screen if validation passes\r\n    if (jQuery('#adduserform').parsley().isValid()) {\r\n      switch(user.role){\r\n        case \"Administrator\":\r\n          user.role = \"ROLE_ADMIN\";\r\n          break;\r\n\r\n        case \"PMO\":\r\n          user.role = \"ROLE_PMO\";\r\n          break;\r\n\r\n        case \"Project Manager\":\r\n          user.role = \"ROLE_PM\";\r\n          break;\r\n\r\n        default:\r\n          user.role = \"ROLE_USER\";\r\n          break;\r\n      }\r\n      user.email = user.email.toLowerCase();\r\n      user.enabled = (this.userenabled === true ? 'Y' : 'N');\r\n\r\n      this.busy = this._adminService.createUser(user).subscribe(data => {\r\n        if (data) {\r\n          this.reset(true);\r\n          this.reloadUsers.emit(true);\r\n        }\r\n      }, error => {\r\n          if (error.indexOf('USER_EMAIL_UK') > -1) {\r\n            error = \"User already exists\";\r\n          }\r\n          this.showErrorFlag = true;\r\n          this.alerts = [];\r\n          this.alerts.push({ type: 'warning', msg: error });\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  public reset(flag) {\r\n    jQuery('#create-user').on('hidden').find('#first-name').val('');\r\n    jQuery('#create-user').on('hidden').find('#last-name').val('');\r\n    jQuery('#create-user').on('hidden').find('#email-address').val('');\r\n    jQuery('#create-user').on('hidden').find('#password').val('');\r\n    jQuery('#create-user').on('hidden').find('#phone-number').val('');\r\n    jQuery('#create-user').on('hidden').find('input[type=\"email\"]').val('');\r\n    jQuery('#create-user').on('hidden').find('input[type=\"checkbox\"]').prop('checked', false);\r\n    jQuery('#adduserform').parsley().reset();\r\n    jQuery('#create-user').modal('hide');\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n  public showUserRoles() {\r\n    this._roleService.getRoles().subscribe(\r\n      r => {\r\n      this.userRoles = r;\r\n      }, error => {\r\n        this.showErrorFlag = true;\r\n        this.alerts = [];\r\n        this.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-divider {\\n  width: 100%;\\n  border-bottom: 3px solid #778899; }\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid gray;\\n  padding-bottom: 10px; }\\ninput.parsley-error {\\n  border-color: #d9534f;\\n  box-shadow: inset 0 1px 1px rgba(217, 83, 79, 0.075); }\\n.parsley-errors-list {\\n  font-size: 85%;\\n  padding-left: 0;\\n  margin-bottom: 5px; }\\n.parsley-errors-list li {\\n    list-style: none;\\n    color: #d9534f; }\\n.switch {\\n  box-sizing: content-box;\\n  margin-left: -20px; }\\n.switch i {\\n  display: inline-block;\\n  cursor: pointer;\\n  margin-left: -20px;\\n  margin-bottom: -3px;\\n  padding-right: 20px;\\n  transition: all ease 0.2s;\\n  -webkit-transition: all ease 0.2s;\\n  border-radius: 20px;\\n  box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.5); }\\n.switch i:before {\\n  display: block;\\n  content: '';\\n  width: 30px;\\n  height: 30px;\\n  padding: 1px;\\n  border-radius: 20px;\\n  background: white;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }\\n.switch :checked + i {\\n  padding-right: 0;\\n  padding-left: 20px;\\n  background: #64bd63; }\\n.white, .white a {\\n  color: #fff; }\\n.btn-label {\\n  background: transparent;\\n  left: 2px;\\n  padding: 1px 6px; }\\n.md-editor {\\n  display: block;\\n  border: 1px solid #dee2e6; }\\n.md-editor > .md-header, .md-editor .md-footer {\\n    display: block;\\n    padding: 6px 4px;\\n    background: #f5f5f5; }\\n.md-editor > .md-header {\\n    margin: 0; }\\n.md-editor > .md-header .glyphicon {\\n      top: 3px; }\\n.md-editor > .md-preview {\\n    margin-left: -1px;\\n    margin-right: -1px;\\n    padding: 0.5rem 1rem;\\n    background: #fff;\\n    border-top: 1px dashed #dee2e6;\\n    min-height: 10px; }\\n.md-editor > textarea {\\n    font-family: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n    font-size: 1rem;\\n    outline: 0;\\n    outline: thin dotted  \\\\9;\\n    /* IE6-9 */\\n    margin: 0;\\n    display: block;\\n    width: 100%;\\n    border: 0;\\n    border-top: 1px dashed #dee2e6;\\n    border-radius: 0;\\n    box-shadow: none;\\n    background: #dee2e6; }\\n.md-editor > textarea:focus {\\n      box-shadow: none;\\n      background: #fff; }\\n.md-editor.active {\\n    border-color: #4d90fe;\\n    outline: 0; }\\n/**\\r\\n * Bootstrap select\\r\\n */\\n.selectpicker.form-control {\\n  height: auto; }\\n.bootstrap-select .dropdown-toggle {\\n  padding-left: 10px; }\\n.bootstrap-select .dropdown-toggle:after {\\n    margin-right: 0;\\n    margin-left: 0; }\\n.bootstrap-select .dropdown-menu > li > a {\\n  display: block;\\n  width: 100%;\\n  padding: 3px 20px;\\n  clear: both;\\n  font-weight: normal;\\n  line-height: 1.42857143;\\n  color: #555;\\n  text-align: inherit;\\n  white-space: nowrap;\\n  background: none;\\n  border: 0; }\\n.bootstrap-select .dropdown-menu > li > a:hover, .bootstrap-select .dropdown-menu > li > a:focus {\\n    color: #171717;\\n    text-decoration: none;\\n    background-color: #f5f5f5; }\\n.bootstrap-select .dropdown-menu > li > a.active, .bootstrap-select .dropdown-menu > li > a.active:hover, .bootstrap-select .dropdown-menu > li > a.active:focus {\\n    color: #fff;\\n    text-decoration: none;\\n    background-color: #5d8fc2;\\n    outline: 0; }\\n.bootstrap-select .dropdown-menu > li > a.disabled, .bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    color: #868e96; }\\n.bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    text-decoration: none;\\n    cursor: not-allowed;\\n    background-color: transparent;\\n    background-image: none; }\\n/**\\r\\n*  autosize\\r\\n**/\\n/***********************************/\\n/**          NEWS LIST           **/\\n/**********************************/\\n.news-list {\\n  margin-bottom: 0;\\n  padding-left: 0; }\\n.news-list li {\\n    list-style: none;\\n    box-sizing: content-box;\\n    border-top: 1px solid #eeeeee;\\n    padding: 12px;\\n    cursor: pointer;\\n    -webkit-transition: background-color 0.2s ease-out;\\n    transition: background-color 0.2s ease-out; }\\n@media screen and (prefers-reduced-motion: reduce) {\\n      .news-list li {\\n        -webkit-transition: none;\\n        transition: none; } }\\n.news-list li:hover {\\n      background: #dbdbdb; }\\n.news-list li:last-child {\\n      margin-bottom: -10px; }\\n.news-list img,\\n  .news-list .icon {\\n    float: left;\\n    height: 50px;\\n    width: 50px; }\\n.news-list .icon {\\n    line-height: 50px;\\n    border-radius: 50%;\\n    text-align: center;\\n    font-size: 28px; }\\n.news-list .news-item-info {\\n    margin-left: 62px;\\n    /*50 + 12px padding*/ }\\n.news-list .name {\\n    text-transform: uppercase; }\\n.news-list .name a {\\n      text-decoration: none; }\\n.news-list .name a:hover {\\n        color: #218bc3; }\\n.autogrow {\\n  overflow: hidden;\\n  resize: none; }\\n.form-checkbox {\\n  margin-left: 5px;\\n  width: 20px;\\n  height: 20px;\\n  box-shadow: none; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"create-user\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"create-user-title\\\" aria-hidden=\\\"true\\\">\\r\\n\\t<div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t<h1 class=\\\"h4 modal-title text-xs-left fw-bold mt\\\" id=\\\"create-user-title\\\">Add User</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Body-->\\r\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t<form id=\\\"adduserform\\\" #adduserform=\\\"ngForm\\\" role=\\\"form\\\" class=\\\"form-horizontal\\\" data-parsley-priority-enabled=\\\"false\\\" novalidate=\\\"novalidate\\\"\\r\\n\\t\\t\\t\\t\\tdata-parsley-validate data-parsley-focus=\\\"first\\\">\\r\\n\\t\\t\\t\\t\\t<!-- Role -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"user-roles\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Role\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"user.role\\\" name=\\\"userRoles\\\" class=\\\"form-control fdatable\\\" id=\\\"user-roles\\\" required data-parsley-required-message=\\\"Error: Role is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let role of userRoles\\\" [value]=\\\"role.roleDescription\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{role.roleDescription}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--First Name-->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"first-name\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">First Name\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"first-name\\\" [(ngModel)]=\\\"user.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t    required data-parsley-required-message=\\\"Error: First Name is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Last Name-->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"last-name\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Last Name\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"last-name\\\" [(ngModel)]=\\\"user.lastName\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t    required data-parsley-required-message=\\\"Error: Last Name is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Email Address         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"email-address\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">User ID\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email-address\\\" [(ngModel)]=\\\"user.email\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t    required data-parsley-error-message=\\\"Error: User ID is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Password         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"password\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Password\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t    required data-parsley-error-message=\\\"Error: Password is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Employee ID         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"employeeid\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Employee ID\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"employeeid\\\" [(ngModel)]=\\\"user.employeeId\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired data-parsley-error-message=\\\"Error: Employee ID is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<!--Enabled         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"enabled\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Enabled\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control form-checkbox\\\" id=\\\"enabled\\\" [(ngModel)]=\\\"userenabled\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div aria-live=\\\"assertive\\\">\\r\\n\\t\\t\\t\\t<div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</alert>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Footer-->\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" id=\\\"btn-save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createUser(user)\\\">Save User</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reset(false)\\\">Cancel</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","/*\r\n@author : Deloitte\r\nthis is Componentfor adding contact as a popup.\r\n*/\r\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output, SimpleChanges, ViewEncapsulation } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { Role } from \"../../models/role.model\";\r\nimport { User } from \"../../models/user.model\";\r\nimport { AdminService } from \"../../services/admin.service\";\r\nimport { RoleService } from \"../../services/role.service\";\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: \"[edit-user-popup]\",\r\n  templateUrl: 'edit-user-popup.template.html',\r\n  styleUrls: [\"./edit-user-popup.styles.scss\"],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class EditUserPage\r\n * @implements {OnInit}\r\n */\r\nexport class EditUserPopup implements OnInit, OnDestroy {\r\n  @Input() model;\r\n  @Output() reloadUsers = new EventEmitter<boolean>();\r\n\r\n  public router: Router;\r\n  public showErrorFlag: boolean;\r\n  public alerts: Array<Object>;\r\n  public editUser = new User();\r\n  public userRoles: Role[] = [];\r\n  public busy: Subscription;\r\n  public userenabled: boolean;\r\n\r\n  ngOnInit(): void {\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.busy) {\r\n      this.busy.unsubscribe();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    router: Router,\r\n    private _adminService: AdminService,\r\n    private _roleService: RoleService\r\n  ) {\r\n    this.router = router;\r\n\r\n    this.alerts = [\r\n      {\r\n        type: \"warning\",\r\n        msg:\r\n          '<span class=\"fw-semi-bold\">Warning:</span> Placeholder for Error Validation messages'\r\n      }\r\n    ];\r\n\r\n    this.showErrorFlag = false;\r\n\r\n    this.showUserRoles();\r\n  }\r\n\r\n  // Update user\r\n  public updateUser(user: User) {\r\n    jQuery(\"#edituserform\").parsley().validate();\r\n\r\n    // Toggle to edit mode or navigate to the next screen if validation passes\r\n    if ( jQuery(\"#edituserform\").parsley().isValid() ) {\r\n      switch (user.role) {\r\n        case \"Administrator\":\r\n          user.role = \"ROLE_ADMIN\";\r\n          break;\r\n\r\n        case \"PMO\":\r\n          user.role = \"ROLE_PMO\";\r\n          break;\r\n\r\n        case \"Project Manager\":\r\n          user.role = \"ROLE_PM\";\r\n          break;\r\n\r\n        default:\r\n          user.role = \"ROLE_USER\";\r\n          break;\r\n      }\r\n      user.email = user.email.toLowerCase();\r\n      user.enabled = (this.userenabled === true ? \"Y\" : \"N\");\r\n\r\n      this.busy = this._adminService.updateUser(user).subscribe(\r\n        data => {\r\n          if (data) {\r\n            this.reset(true);\r\n          }\r\n        },\r\n        error => {\r\n          if (error.indexOf(\"USER_EMAIL_UK\") > -1) {\r\n            error = \"User already exists\";\r\n          }\r\n          this.showErrorFlag = true;\r\n          this.alerts = [];\r\n          this.alerts.push({ type: \"warning\", msg: error });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public reset(flag) {\r\n    jQuery(\"#edit-user\").on(\"hidden\").find(\"#first-name\").val(\"\");\r\n    jQuery(\"#edit-user\").on(\"hidden\").find(\"#last-name\").val(\"\");\r\n    jQuery(\"#edit-user\").on(\"hidden\").find(\"#email-address\").val(\"\");\r\n    jQuery(\"#edit-user\").on(\"hidden\").find(\"#password\").val(\"\");\r\n    jQuery(\"#edit-user\").on(\"hidden\").find(\"#phone-number\").val(\"\");\r\n    jQuery(\"#edit-user\").on(\"hidden\").find('input[type=\"email\"]').val(\"\");\r\n    jQuery(\"#edit-user\").on(\"hidden\").find('input[type=\"checkbox\"]').prop(\"checked\", false);\r\n    jQuery(\"#edituserform\").parsley().reset();\r\n    jQuery(\"#edit-user\").modal(\"hide\");\r\n    this.reloadUsers.emit(flag);\r\n    this.showErrorFlag = false;\r\n  }\r\n\r\n  public showUserRoles() {\r\n    this._roleService.getRoles().subscribe(\r\n      r => {\r\n        // let roles = r.map(r => r.roleDescription);\r\n        // console.log(`...edit-user-popup.component: roles===${JSON.stringify(roles)}`);\r\n\r\n        // Initialize blank role first and concat the rolenames afterwards\r\n        this.userRoles = r;\r\n      }, error => {\r\n        this.showErrorFlag = true;\r\n        this.alerts = [];\r\n        this.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    for (let propName in changes) {\r\n      if (propName === \"model\") {\r\n        let chg = changes[propName];\r\n        if (chg.currentValue) {\r\n          this.editUser = Object.assign({}, chg.currentValue);\r\n          this.userenabled = (this.editUser.enabled === \"Y\" ? true : false);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-divider {\\n  width: 100%;\\n  border-bottom: 3px solid #778899; }\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid gray;\\n  padding-bottom: 10px; }\\ninput.parsley-error {\\n  border-color: #d9534f;\\n  box-shadow: inset 0 1px 1px rgba(217, 83, 79, 0.075); }\\n.parsley-errors-list {\\n  font-size: 85%;\\n  padding-left: 0;\\n  margin-bottom: 5px; }\\n.parsley-errors-list li {\\n    list-style: none;\\n    color: #d9534f; }\\n.switch {\\n  box-sizing: content-box;\\n  margin-left: -20px; }\\n.switch i {\\n  display: inline-block;\\n  cursor: pointer;\\n  margin-left: -20px;\\n  margin-bottom: -3px;\\n  padding-right: 20px;\\n  transition: all ease 0.2s;\\n  -webkit-transition: all ease 0.2s;\\n  border-radius: 20px;\\n  box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.5); }\\n.switch i:before {\\n  display: block;\\n  content: '';\\n  width: 30px;\\n  height: 30px;\\n  padding: 1px;\\n  border-radius: 20px;\\n  background: white;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }\\n.switch :checked + i {\\n  padding-right: 0;\\n  padding-left: 20px;\\n  background: #64bd63; }\\n.white, .white a {\\n  color: #fff; }\\n.btn-label {\\n  background: transparent;\\n  left: 2px;\\n  padding: 1px 6px; }\\n.md-editor {\\n  display: block;\\n  border: 1px solid #dee2e6; }\\n.md-editor > .md-header, .md-editor .md-footer {\\n    display: block;\\n    padding: 6px 4px;\\n    background: #f5f5f5; }\\n.md-editor > .md-header {\\n    margin: 0; }\\n.md-editor > .md-header .glyphicon {\\n      top: 3px; }\\n.md-editor > .md-preview {\\n    margin-left: -1px;\\n    margin-right: -1px;\\n    padding: 0.5rem 1rem;\\n    background: #fff;\\n    border-top: 1px dashed #dee2e6;\\n    min-height: 10px; }\\n.md-editor > textarea {\\n    font-family: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n    font-size: 1rem;\\n    outline: 0;\\n    outline: thin dotted  \\\\9;\\n    /* IE6-9 */\\n    margin: 0;\\n    display: block;\\n    width: 100%;\\n    border: 0;\\n    border-top: 1px dashed #dee2e6;\\n    border-radius: 0;\\n    box-shadow: none;\\n    background: #dee2e6; }\\n.md-editor > textarea:focus {\\n      box-shadow: none;\\n      background: #fff; }\\n.md-editor.active {\\n    border-color: #4d90fe;\\n    outline: 0; }\\n/**\\r\\n * Bootstrap select\\r\\n */\\n.selectpicker.form-control {\\n  height: auto; }\\n.bootstrap-select .dropdown-toggle {\\n  padding-left: 10px; }\\n.bootstrap-select .dropdown-toggle:after {\\n    margin-right: 0;\\n    margin-left: 0; }\\n.bootstrap-select .dropdown-menu > li > a {\\n  display: block;\\n  width: 100%;\\n  padding: 3px 20px;\\n  clear: both;\\n  font-weight: normal;\\n  line-height: 1.42857143;\\n  color: #555;\\n  text-align: inherit;\\n  white-space: nowrap;\\n  background: none;\\n  border: 0; }\\n.bootstrap-select .dropdown-menu > li > a:hover, .bootstrap-select .dropdown-menu > li > a:focus {\\n    color: #171717;\\n    text-decoration: none;\\n    background-color: #f5f5f5; }\\n.bootstrap-select .dropdown-menu > li > a.active, .bootstrap-select .dropdown-menu > li > a.active:hover, .bootstrap-select .dropdown-menu > li > a.active:focus {\\n    color: #fff;\\n    text-decoration: none;\\n    background-color: #5d8fc2;\\n    outline: 0; }\\n.bootstrap-select .dropdown-menu > li > a.disabled, .bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    color: #868e96; }\\n.bootstrap-select .dropdown-menu > li > a.disabled:hover, .bootstrap-select .dropdown-menu > li > a.disabled:focus {\\n    text-decoration: none;\\n    cursor: not-allowed;\\n    background-color: transparent;\\n    background-image: none; }\\n/**\\r\\n*  autosize\\r\\n**/\\n/***********************************/\\n/**          NEWS LIST           **/\\n/**********************************/\\n.news-list {\\n  margin-bottom: 0;\\n  padding-left: 0; }\\n.news-list li {\\n    list-style: none;\\n    box-sizing: content-box;\\n    border-top: 1px solid #eeeeee;\\n    padding: 12px;\\n    cursor: pointer;\\n    -webkit-transition: background-color 0.2s ease-out;\\n    transition: background-color 0.2s ease-out; }\\n@media screen and (prefers-reduced-motion: reduce) {\\n      .news-list li {\\n        -webkit-transition: none;\\n        transition: none; } }\\n.news-list li:hover {\\n      background: #dbdbdb; }\\n.news-list li:last-child {\\n      margin-bottom: -10px; }\\n.news-list img,\\n  .news-list .icon {\\n    float: left;\\n    height: 50px;\\n    width: 50px; }\\n.news-list .icon {\\n    line-height: 50px;\\n    border-radius: 50%;\\n    text-align: center;\\n    font-size: 28px; }\\n.news-list .news-item-info {\\n    margin-left: 62px;\\n    /*50 + 12px padding*/ }\\n.news-list .name {\\n    text-transform: uppercase; }\\n.news-list .name a {\\n      text-decoration: none; }\\n.news-list .name a:hover {\\n        color: #218bc3; }\\n.autogrow {\\n  overflow: hidden;\\n  resize: none; }\\n.form-checkbox {\\n  margin-left: 5px;\\n  width: 20px;\\n  height: 20px;\\n  box-shadow: none; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"edit-user\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"edit-user-title\\\" aria-hidden=\\\"true\\\">\\r\\n\\t<div class=\\\"modal-dialog modal-lg\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t<h1 class=\\\"h4 modal-title text-xs-left fw-bold mt\\\" id=\\\"edit-user-title\\\">Edit User</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Body-->\\r\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t<form id=\\\"edituserform\\\" #edituserform=\\\"ngForm\\\" role=\\\"form\\\" class=\\\"form-horizontal\\\" data-parsley-priority-enabled=\\\"false\\\" novalidate=\\\"novalidate\\\"\\r\\n\\t\\t\\t\\t\\tdata-parsley-validate data-parsley-focus=\\\"first\\\">\\r\\n\\t\\t\\t\\t\\t<!-- Role Description -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"user-roles\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Role\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"editUser.role\\\" name=\\\"userRoles\\\" class=\\\"form-control fdatable\\\" id=\\\"user-roles\\\" required data-parsley-required-message=\\\"Error: Role is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let role of userRoles\\\" [value]=\\\"role.roleDescription\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{role.roleDescription}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--First Name-->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"first-name\\\" class=\\\"col-md-3 form-control-label text-md-right\\\">First Name\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"first-name\\\" [(ngModel)]=\\\"editUser.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t    required data-parsley-required-message=\\\"Error: First Name is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Last Name-->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"last-name\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Last Name\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"last-name\\\" [(ngModel)]=\\\"editUser.lastName\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t    required data-parsley-required-message=\\\"Error: Last Name is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--User ID         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"email-address\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">User ID\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email-address\\\" [(ngModel)]=\\\"editUser.email\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t    required data-parsley-error-message=\\\"Error: User ID is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Password         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"password\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Password\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [(ngModel)]=\\\"editUser.password\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t    required data-parsley-error-message=\\\"Error: Password is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--Employee ID         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"employeeid\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Employee ID\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"help-block\\\">Required </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"employeeid\\\" [(ngModel)]=\\\"editUser.employeeId\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired data-parsley-error-message=\\\"Error: Employee ID is required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<!--Enabled         -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"enabled\\\" class=\\\"col-md-2 form-control-label text-md-right\\\">Enabled\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control form-checkbox\\\" id=\\\"enabled\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"userenabled\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div aria-live=\\\"assertive\\\">\\r\\n\\t\\t\\t\\t<div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</alert>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--Modal Footer-->\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" id=\\\"btn-save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateUser(editUser)\\\">Save User</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reset(false)\\\">Cancel</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { AfterViewInit, Component, OnDestroy, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport * as _ from 'lodash';\r\nimport { Subscription } from \"rxjs\";\r\nimport { User } from '../../models/user.model';\r\nimport { AdminService } from '../../services/admin.service';\r\nimport { ICellRendererAngularComp } from \"ag-grid-angular\";\r\nimport { GridOptions } from \"ag-grid-community\";\r\nimport { isNil } from \"ramda\";\r\n\r\ndeclare var jQuery: any;\r\n\r\n\r\n@Component({\r\n  selector: 'edit-cell',\r\n  template: `<i class=\"glyphicon glyphicon-pencil\" (click)=\"invokeParentMethod()\" data-toggle=\"modal\" title=\"Edit User\"\r\n                   data-keyboard=\"false\" data-backdrop=\"static\" data-target=\"#edit-user\"></i>`\r\n})\r\nexport class EditUserComponent implements ICellRendererAngularComp {\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n      this.params = params;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n      this.params.context.componentParent.selectEditUser(this.params.data);\r\n  }\r\n\r\n  refresh(): boolean {\r\n      return false;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'delete-cell',\r\n  template: `<i class=\"glyphicon glyphicon-trash txt-gap\" (click)=\"invokeParentMethod()\" data-toggle=\"modal\" title=\"Delete User\"\r\n  data-keyboard=\"false\" data-backdrop=\"static\" data-target=\"#confirm-popup\"></i>`\r\n})\r\nexport class DeleteUserComponent implements ICellRendererAngularComp {\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n      this.params = params;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n      this.params.context.componentParent.deleteUser(this.params.data);\r\n  }\r\n\r\n  refresh(): boolean {\r\n      return false;\r\n  }\r\n}\r\n\r\n\r\n// con\r\n@Component({\r\n  selector: \"user-dashboard\",\r\n  templateUrl: \"./user-dashboard.template.html\",\r\n  styleUrls: [\"./user-dashboard.styles.scss\"],\r\n  providers: [AdminService],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class UserDashboardPage implements OnInit, OnDestroy, AfterViewInit {\r\n  public router: Router;\r\n  public data: any[];\r\n  public adminCount: number;\r\n\r\n  public busyLoadMissingUsers: Subscription;\r\n  public busyLoadUsers: Subscription;\r\n  public busyDeleteUser: Subscription;\r\n\r\n  public dropdownData = [];\r\n  public showErrorFlag: boolean;\r\n  public alerts: Array<Object>;\r\n  public effectiveDate: Date;\r\n  public selUser: User;\r\n  public showCreateUser: any;\r\n  public showEditUser: any;\r\n\r\n  public delusertitle: string = \"Delete User\";\r\n  public delusermessage: string = \"Are you sure you want to delete user?\";\r\n  public confirmClicked: boolean = false;\r\n  public cancelClicked: boolean = false;\r\n\r\n  public gridOptions: GridOptions;\r\n\r\n  public gridApi;\r\n  public gridColumnApi;\r\n\r\n  public defaultColDef = {\r\n    sortable: true,\r\n    filter: true,\r\n    headerClass: 'fw-semi-bold'\r\n  };\r\n\r\n  public columnDefs = [\r\n    {\r\n      headerName: \"\",\r\n      field: \"value\",\r\n      cellRendererFramework: EditUserComponent,\r\n      colId: \"params\",\r\n      width: 50,\r\n      filter: false\r\n    },\r\n    {\r\n      headerName: 'First Name',\r\n      field: 'firstName',\r\n      cellClass: function(params) {\r\n        return params.data.enabled !== 'Y' ? \"fw-semi-bold inactive\" : \"fw-semi-bold \";\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Last Name',\r\n      field: 'lastName',\r\n      cellClass: function(params) {\r\n        return params.data.enabled !== 'Y' ? \"inactive\" : \"\";\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Login Id',\r\n      field: 'email',\r\n      cellClass: function(params) {\r\n        return params.data.enabled !== 'Y' ? \"inactive\" : \"\";\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Role',\r\n      field: 'role',\r\n      cellClass: function(params) {\r\n        return params.data.enabled !== 'Y' ? \"inactive\" : \"\";\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Active',\r\n      field: 'enabled',\r\n      cellClass: function(params) {\r\n        return params.data.enabled !== 'Y' ? \"inactive\" : \"\";\r\n      }\r\n    },\r\n    {\r\n      headerName: \"\",\r\n      field: \"value\",\r\n      cellRendererFramework: DeleteUserComponent,\r\n      colId: \"params\",\r\n      width: 50,\r\n      filter: false\r\n    }\r\n];\r\n\r\n\r\n  constructor(private _adminService: AdminService, router: Router) {\r\n    this.alerts = [\r\n      {\r\n        type: \"success\",\r\n        msg:\r\n          '<i class=\"fa fa-circle text-success\"></i><span class=\"alert-text\">Successfully generated 12 monthly reports</span>'\r\n      }\r\n    ];\r\n\r\n    this.router = router;\r\n    this.showCreateUser = false;\r\n    this.showEditUser = false;\r\n\r\n    this.gridOptions = <GridOptions>{\r\n      context: {\r\n          componentParent: this\r\n      },\r\n      enableColResize: true,\r\n      rowHeight: 30\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    let searchInput = jQuery(\"#table-search-input, #search-countries\");\r\n    searchInput\r\n      .focus(e => {\r\n        jQuery(e.target)\r\n          .closest(\".input-group\")\r\n          .addClass(\"focus\");\r\n      })\r\n      .focusout(e => {\r\n        jQuery(e.target)\r\n          .closest(\".input-group\")\r\n          .removeClass(\"focus\");\r\n      });\r\n\r\n    // load the users\r\n    this.loadUsers();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.busyLoadMissingUsers) {\r\n      this.busyLoadMissingUsers.unsubscribe();\r\n    }\r\n    if (this.busyLoadUsers) {\r\n      this.busyLoadUsers.unsubscribe();\r\n    }\r\n    if (this.busyDeleteUser) {\r\n      this.busyDeleteUser.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n\r\n\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n  }\r\n\r\n  public cosmeticFix(elementID: any){\r\n    // The code below for cosmetic fix - Blue box now surrounds the icon on the search company text box\r\n    let filterInput = jQuery(elementID);\r\n    filterInput\r\n    .focus((e) => {\r\n        jQuery(e.target).closest('.input-group').addClass('focus');\r\n    })\r\n    .focusout((e) => {\r\n        jQuery(e.target).closest('.input-group').removeClass('focus');\r\n    });\r\n  }\r\n\r\n  public loadUsers() {\r\n    this.busyLoadUsers = this._adminService.getUsers().subscribe(users => {\r\n      if (users) {\r\n        this.data = users;\r\n      }\r\n    }, error => {\r\n      this.showErrorFlag = true;\r\n      this.alerts = [];\r\n      this.alerts.push({ type: 'warning', msg: error });\r\n    });\r\n  }\r\n\r\n  public reloadUsers(reload: boolean) {\r\n    this.showCreateUser = false;\r\n    this.showEditUser = false;\r\n    if (reload) {\r\n      this.loadUsers();\r\n    } else {\r\n      this.selUser = new User();\r\n    }\r\n  }\r\n\r\n  public deleteUser(user: User) {\r\n    if(!isNil(user)){\r\n      this.busyDeleteUser = this._adminService.deleteUserById(user.userId).subscribe(data => {\r\n        if (data) {\r\n          this.reloadUsers(true);\r\n        }\r\n      }, error => {\r\n        this.showErrorFlag = true;\r\n        this.alerts = [];\r\n        this.alerts.push({ type: 'warning', msg: error });\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  public addUser() {\r\n    this.showCreateUser = true;\r\n  }\r\n\r\n  public selectEditUser(user) {\r\n    this.showEditUser = true;\r\n    this.selUser = user;\r\n  }\r\n\r\n  public refreshResourceFilterObject() {\r\n\r\n  }\r\n\r\n  public onClickBackButton(){\r\n\t\tthis.router.navigate([\"/app/tdl/search\"]);\r\n  }\r\n}\r\n","module.exports = \"/*\\r\\n\\r\\n * Typography\\r\\n * ======================================================================== */\\n.h-thin-divider {\\n  width: 100%;\\n  border-bottom: 1px solid #ddd; }\\n.userdashboardController {\\n  width: 98%; }\\n.inactive {\\n  text-decoration: line-through; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vY29tcG9uZW50cy91c2Vycy9DOlxcVXNlcnNcXGFzYXBhXFxEb2N1bWVudHNcXENiYXNzXFxjYmFzcmVwb1xcY2Jhcy11aS9zcmNcXHNjc3NcXF92YXJpYWJsZXMuc2NzcyIsInNyYy9hcHAvYWRtaW4vY29tcG9uZW50cy91c2Vycy9DOlxcVXNlcnNcXGFzYXBhXFxEb2N1bWVudHNcXENiYXNzXFxjYmFzcmVwb1xcY2Jhcy11aS9zcmNcXGFwcFxcYWRtaW5cXGNvbXBvbmVudHNcXHVzZXJzXFx1c2VyLWRhc2hib2FyZC5zdHlsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFhQTs7OzhFQUc4RTtBQ2Q5RTtFQUNJLFlBQVU7RUFDViw4QkFBNEIsRUFDL0I7QUFFRDtFQUNFLFdBQVMsRUFDVjtBQUVEO0VBQ0UsOEJBQTZCLEVBQzlCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vY29tcG9uZW50cy91c2Vycy91c2VyLWRhc2hib2FyZC5zdHlsZXMuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNpbmcgdmFyaWFibGVzXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuJGVuYWJsZS1zaGFkb3dzOiB0cnVlICFkZWZhdWx0O1xyXG5cclxuJGdseXBoaWNvbnMtaGFsZmxpbmdzLWluY2x1ZGUtYm9udXM6IGZhbHNlICFkZWZhdWx0O1xyXG4kZ2x5cGhpY29ucy1oYWxmbGluZ3MtY2xhc3MtcHJlZml4OiBnbHlwaGljb24gIWRlZmF1bHQ7XHJcbiRnbHlwaGljb25zLWhhbGZsaW5ncy1mb250LWJhc2Utc2l6ZTogMTRweCAhZGVmYXVsdDtcclxuXHJcbiRnbHlwaGljb25zLWhhbGZsaW5ncy1mb250LXBhdGg6ICd+L2ZvbnRzL2dseXBoaWNvbnMnICFkZWZhdWx0O1xyXG4kZmEtZm9udC1wYXRoOiAnfi9mb250LWF3ZXNvbWUvZm9udHMnICFkZWZhdWx0O1xyXG5cclxuLypcclxuXHJcbiAqIFR5cG9ncmFwaHlcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbiRmb250LXNpemUtaW5pdGlhbDogMTRweDsgLy8gcmVzZXQgZGVmYXVsdCBicm93c2VyIHZhbHVlIGZyb20gMTZweCB0byAxM3B4XHJcbiRmb250LXNpemUtYmFzZTogMXJlbSAhZGVmYXVsdDtcclxuJGZvbnQtc2l6ZS1sZzogMS4yNXJlbSAhZGVmYXVsdDtcclxuJGZvbnQtc2l6ZS1zbTogMC44NzVyZW0gIWRlZmF1bHQ7XHJcbiRmb250LXNpemUtbGFyZ2VyOiAxLjFyZW07XHJcbiRmb250LXNpemUtbWluaTogMC45cmVtO1xyXG4kZm9udC1zaXplLWluZGV4OiAwLjdyZW07XHJcblxyXG4kc21hbGwtZm9udC1zaXplOiA4NSUgIWRlZmF1bHQ7XHJcblxyXG4kZm9udC1mYW1pbHktYmFzZTogJ29wZW4nLFxyXG5zYW5zLXNlcmlmO1xyXG4kZm9udC1mYW1pbHktc2Fucy1zZXJpZjogJ29wZW4nLFxyXG5zYW5zLXNlcmlmO1xyXG5cclxuLy8gQ29sb3Igc3lzdGVtXHJcbi8vXHJcblxyXG4kd2hpdGU6ICNmZmYgIWRlZmF1bHQ7XHJcbiRncmF5LTEwMDogI2Y1ZjVmNSAhZGVmYXVsdDtcclxuJGdyYXktMjAwOiAjZWVlZWVlICFkZWZhdWx0O1xyXG4kZ3JheS0zMDA6ICNkZWUyZTYgIWRlZmF1bHQ7XHJcbiRncmF5LTQwMDogI2NlZDRkYSAhZGVmYXVsdDtcclxuJGdyYXktNTAwOiAjYWRiNWJkICFkZWZhdWx0O1xyXG4kZ3JheS02MDA6ICM4NjhlOTYgIWRlZmF1bHQ7XHJcbiRncmF5LTcwMDogIzU1NSAhZGVmYXVsdDtcclxuJGdyYXktODAwOiAjMzQzNDM0ICFkZWZhdWx0O1xyXG4kZ3JheS05MDA6ICMyNDI0MjQgIWRlZmF1bHQ7XHJcbiRibGFjazogIzAwMCAhZGVmYXVsdDtcclxuJGdyYXktbGlnaHQ6ICNkZGQgIWRlZmF1bHQ7XHJcblxyXG5cclxuJGJsdWU6ICM1ZDhmYzIgIWRlZmF1bHQ7XHJcbiRyZWQ6ICNkZDU4MjYgIWRlZmF1bHQ7XHJcbiR5ZWxsb3c6ICNmMGI1MTggIWRlZmF1bHQ7XHJcbiRncmVlbjogIzY0YmQ2MyAhZGVmYXVsdDtcclxuJGN5YW46ICM1ZGM0YmYgIWRlZmF1bHQ7XHJcblxyXG4kdGhlbWUtY29sb3JzOiAocHJpbWFyeTogJGJsdWUsXHJcbnNlY29uZGFyeTogJGdyYXktNjAwLFxyXG5zdWNjZXNzOiAkZ3JlZW4sXHJcbnByaW1hcnktbGlnaHQ6ICNkZWU0ZWUsXHJcbnN1Y2Nlc3MtbGlnaHQ6ICNlY2ZhZWMsXHJcbmluZm8tbGlnaHQ6ICNmMmZhZmEsXHJcbndhcm5pbmctbGlnaHQ6ICNmZGY3ZTYsXHJcbmRhbmdlci1saWdodDogI2ZmZjJlZixcclxuaW5mbzogJGN5YW4sXHJcbndhcm5pbmc6ICR5ZWxsb3csXHJcbmRhbmdlcjogJHJlZCxcclxuZGFyazogJGdyYXktODAwLFxyXG5pbnZlcnNlOiAkZ3JheS03MDAsXHJcbmdyYXk6ICRncmF5LTMwMCxcclxuZGVmYXVsdDogI2Y4ZjhmOCk7XHJcblxyXG4kbGluay1jb2xvcjogIzIxOGJjMztcclxuXHJcbiR0ZXh0LWNvbG9yOiAkZ3JheS03MDAgIWRlZmF1bHQ7XHJcblxyXG4kZm9udC13ZWlnaHQtYm9sZDogNzAwICFkZWZhdWx0O1xyXG4kZm9udC13ZWlnaHQtc2VtaS1ib2xkOiA2MDAgIWRlZmF1bHQ7XHJcbiRmb250LXdlaWdodC1ub3JtYWw6IDUwMCAhZGVmYXVsdDtcclxuJGZvbnQtd2VpZ2h0LXRoaW46IDMwMCAhZGVmYXVsdDtcclxuJGZvbnQtd2VpZ2h0LWJhc2U6ICRmb250LXdlaWdodC1ub3JtYWwgIWRlZmF1bHQ7XHJcblxyXG4kZm9udC1zaXplLXNtYWxsZXI6IDg1JSAhZGVmYXVsdDtcclxuJGhlYWRpbmdzLWZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtbm9ybWFsICFkZWZhdWx0O1xyXG5cclxuJGFkZGl0aW9uLWJnOiAjZjhmOGY4ICFkZWZhdWx0O1xyXG5cclxuJGJvZHktYmc6IGxpZ2h0Z3JheSAhZGVmYXVsdDsgLy8gI2Y1ZjVmNSAhZGVmYXVsdDtcclxuJGJvZHktYmctbGlnaHQ6IGxpZ2h0ZW4oJGJvZHktYmcsIDMlKTtcclxuXHJcbi8vPT0gQ29tcG9uZW50c1xyXG4vL1xyXG5cclxuJHBhZGRpbmctYmFzZS12ZXJ0aWNhbDogMC41cmVtICFkZWZhdWx0O1xyXG4kcGFkZGluZy1iYXNlLWhvcml6b250YWw6IDFyZW0gIWRlZmF1bHQ7XHJcblxyXG4kcGFkZGluZy1sYXJnZS12ZXJ0aWNhbDogMC43NXJlbSAhZGVmYXVsdDtcclxuJHBhZGRpbmctbGFyZ2UtaG9yaXpvbnRhbDogMS4yNXJlbSAhZGVmYXVsdDtcclxuXHJcbiRwYWRkaW5nLXNtYWxsLXZlcnRpY2FsOiAwLjI1cmVtICFkZWZhdWx0O1xyXG4kcGFkZGluZy1zbWFsbC1ob3Jpem9udGFsOiAwLjc1cmVtICFkZWZhdWx0O1xyXG5cclxuJG1hcmdpbi1iYXNlLXZlcnRpY2FsOiAwLjVyZW0gIWRlZmF1bHQ7XHJcbiRtYXJnaW4tYmFzZS1ob3Jpem9udGFsOiAxcmVtICFkZWZhdWx0O1xyXG5cclxuJG1hcmdpbi1sYXJnZS12ZXJ0aWNhbDogMC43NXJlbSAhZGVmYXVsdDtcclxuJG1hcmdpbi1sYXJnZS1ob3Jpem9udGFsOiAxLjI1cmVtICFkZWZhdWx0O1xyXG5cclxuJG1hcmdpbi1zbWFsbC12ZXJ0aWNhbDogMC4yNXJlbSAhZGVmYXVsdDtcclxuJG1hcmdpbi1zbWFsbC1ob3Jpem9udGFsOiAwLjc1cmVtICFkZWZhdWx0O1xyXG5cclxuJGJvcmRlci1yYWRpdXM6IC4zcmVtICFkZWZhdWx0O1xyXG4kYm9yZGVyLXJhZGl1cy1sZzogLjM1cmVtICFkZWZhdWx0O1xyXG4kYm9yZGVyLXJhZGl1cy1zbTogLjI1cmVtICFkZWZhdWx0O1xyXG5cclxuJG5hdi1saW5rLXBhZGRpbmc6IDE0cHg7XHJcblxyXG4vLz09IFNpZGViYXJcclxuLy9cclxuJHNpZGViYXItcGFkZGluZy1ob3Jpem9udGFsOiAxMXB4O1xyXG4kc2lkZWJhci13aWR0aC1vcGVuOiAyMjBweDtcclxuJHNpZGViYXItd2lkdGgtY2xvc2VkOiA1MHB4O1xyXG4kc2lkZWJhci10cmFuc2l0aW9uLXRpbWU6IDAuM3MgIWRlZmF1bHQ7XHJcbiRzaWRlYmFyLXNsaW0tc2Nyb2xsLXdpZHRoOiA0cHg7XHJcbiRzaWRlYmFyLXdpZHRoOiAkc2lkZWJhci13aWR0aC1vcGVuKyRzaWRlYmFyLXNsaW0tc2Nyb2xsLXdpZHRoICFkZWZhdWx0O1xyXG5cclxuJHNpZGViYXItYmctY29sb3I6ICMxNzUyOUY7XHJcbiRzaWRlYmFyLWNvbG9yOiAkd2hpdGU7XHJcblxyXG4kc2lkZWJhci1pdGVtLWJvcmRlci1jb2xvcjogIzJkMmQyZDtcclxuJHNpZGViYXItaXRlbS1hY3RpdmUtY29sb3I6ICNmMmJlMzU7XHJcbiRzaWRlYmFyLWl0ZW0taG92ZXItYmctY29sb3I6ICMxMTE7XHJcblxyXG4kY2hhdC1zaWRlYmFyLWJnLWNvbG9yOiAkZ3JheS05MDAgIWRlZmF1bHQ7XHJcbiRjaGF0LXNpZGViYXItd2lkdGg6IDI1MHB4KyRzaWRlYmFyLXNsaW0tc2Nyb2xsLXdpZHRoICFkZWZhdWx0O1xyXG5cclxuJGJyZWFkY3J1bWItZGl2aWRlcjogJyc7XHJcbiRicmVhZGNydW1iLXBhZGRpbmcteTogMDtcclxuJGJyZWFkY3J1bWItYmc6IHRyYW5zcGFyZW50O1xyXG5cclxuJGJhZGdlLWZvbnQtd2VpZ2h0OiA2MDA7XHJcblxyXG4kd2lkZ2V0LWJnOiAjZmZmO1xyXG4kd2lkZ2V0LXRpdGxlLWNvbG9yOiAjNDQ0O1xyXG4kd2lkZ2V0LXNoYWRvdzogMCAwIDEwcHggZGFya2VuKCRib2R5LWJnLCA1JSk7XHJcblxyXG5cclxuJGlucHV0LWJ0bi1saW5lLWhlaWdodDogMS41O1xyXG5cclxuJGlucHV0LWJ0bi1wYWRkaW5nLXktc206IDAuNHJlbTtcclxuJGlucHV0LWJ0bi1wYWRkaW5nLXgtc206IDAuOHJlbTtcclxuXHJcbiRpbnB1dC1oZWlnaHQtc21hbGw6IDMwcHg7XHJcblxyXG4vLz09IE5hdmJhclxyXG4vL1xyXG5cclxuJG5hdmJhci1oZWlnaHQ6IDUwcHggIWRlZmF1bHQ7XHJcbiRuYXZiYXItcGFkZGluZy15OiAwICFkZWZhdWx0O1xyXG4kbmF2YmFyLXBhZGRpbmcteDogMCAhZGVmYXVsdDtcclxuXHJcbiRuYXZiYXItZGFzaGJvYXJkLWJnOiAkd2hpdGUgIWRlZmF1bHQ7XHJcbiRuYXZiYXItZGFzaGJvYXJkLWNvbG9yOiAjNzc3ICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhc2hib2FyZC1ib3JkZXI6IGRhcmtlbigkbmF2YmFyLWRhc2hib2FyZC1iZywgNi41JSkgIWRlZmF1bHQ7XHJcblxyXG4vLyBOYXZiYXIgbGlua3NcclxuJG5hdmJhci1kYXNoYm9hcmQtbGluay1jb2xvcjogIzY2NiAhZGVmYXVsdDtcclxuXHJcbi8vIE5hdmJhciBsaW5rc1xyXG4kbmF2YmFyLWRhc2hib2FyZC1saW5rLWhvdmVyLWNvbG9yOiAjMzMzICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhc2hib2FyZC1saW5rLWhvdmVyLWJnOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXNoYm9hcmQtbGluay1hY3RpdmUtY29sb3I6ICM1NTUgIWRlZmF1bHQ7XHJcbiRuYXZiYXItZGFzaGJvYXJkLWxpbmstYWN0aXZlLWJnOiBkYXJrZW4oJG5hdmJhci1kYXNoYm9hcmQtYmcsIDYuNSUpICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhc2hib2FyZC1saW5rLWRpc2FibGVkLWNvbG9yOiAjY2NjICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhc2hib2FyZC1saW5rLWRpc2FibGVkLWJnOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuXHJcbi8vIE5hdmJhciBicmFuZCBsYWJlbFxyXG4kbmF2YmFyLWRhc2hib2FyZC1icmFuZC1jb2xvcjogJG5hdmJhci1kYXNoYm9hcmQtbGluay1jb2xvciAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXNoYm9hcmQtYnJhbmQtaG92ZXItY29sb3I6IGRhcmtlbigkbmF2YmFyLWRhc2hib2FyZC1icmFuZC1jb2xvciwgMTAlKSAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXNoYm9hcmQtYnJhbmQtaG92ZXItYmc6IHRyYW5zcGFyZW50ICFkZWZhdWx0O1xyXG5cclxuLy8gTmF2YmFyIHRvZ2dsZVxyXG4kbmF2YmFyLWRhc2hib2FyZC10b2dnbGUtaG92ZXItYmc6ICNkZGQgIWRlZmF1bHQ7XHJcbiRuYXZiYXItZGFzaGJvYXJkLXRvZ2dsZS1pY29uLWJhci1iZzogIzg4OCAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXNoYm9hcmQtdG9nZ2xlLWJvcmRlci1jb2xvcjogI2RkZCAhZGVmYXVsdDtcclxuXHJcblxyXG4vLyBDb250ZW50XHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiRjb250ZW50LXBhZGRpbmc6IDQwcHg7XHJcbiRjb250ZW50LXBhZGRpbmctdG9wOiAkY29udGVudC1wYWRkaW5nKyRuYXZiYXItaGVpZ2h0ICFkZWZhdWx0O1xyXG5cclxuLy8gU2NyZWVuc1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4kc2NyZWVuLWxnLWhlaWdodDogNjcwcHggIWRlZmF1bHQ7XHJcblxyXG5cclxuLy89PSBCdXR0b25zXHJcbi8vXHJcbiRidG4tZGVmYXVsdC1iZzogJGFkZGl0aW9uLWJnICFkZWZhdWx0O1xyXG4kYnRuLWRlZmF1bHQtYm9yZGVyOiByZ2JhKDAsIDAsIDAsIDAuMTUpICFkZWZhdWx0O1xyXG5cclxuLy8gRHJvcGRvd25zXHJcbiRkcm9wZG93bi1saW5rLWNvbG9yOiAkdGV4dC1jb2xvcjtcclxuXHJcbi8vIFdpZGdldHNcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4kd2lkZ2V0LXBhZGRpbmctdmVydGljYWw6IDE1cHggIWRlZmF1bHQ7XHJcbiR3aWRnZXQtcGFkZGluZy1ob3Jpem9udGFsOiAyMHB4ICFkZWZhdWx0O1xyXG4kd2lkZ2V0LWJnLWNvbG9yOiAkd2hpdGU7XHJcblxyXG4vLz09IE5hdnNcclxuLy9cclxuJG5hdi10YWJzLWFjdGl2ZS1saW5rLWhvdmVyLWJnOiAkd2hpdGUgIWRlZmF1bHQ7XHJcbiRuYXYtdGFicy1hY3RpdmUtbGluay1ob3Zlci1jb2xvcjogJGdyYXktNzAwICFkZWZhdWx0O1xyXG5cclxuLy89PSBGb3Jtc1xyXG4vL1xyXG4kaW5wdXQtYm9yZGVyLWZvY3VzOiAjNGQ5MGZlICFkZWZhdWx0OyAvL3dlYmtpdCBmb2N1cyBjb2xvclxyXG4kbGVnZW5kLWNvbG9yOiBsaWdodGVuKCR0ZXh0LWNvbG9yLCAxNSUpICFkZWZhdWx0O1xyXG5cclxuJHByZS1iZzogI2Y1ZjVmNSAhZGVmYXVsdDtcclxuXHJcbiRjdXJzb3ItZGlzYWJsZWQ6IG5vdC1hbGxvd2VkICFkZWZhdWx0O1xyXG5cclxuLy8gRm9ybSBzdGF0ZXMgYW5kIGFsZXJ0c1xyXG4vL1xyXG4vLyBEZWZpbmUgY29sb3JzIGZvciBmb3JtIGZlZWRiYWNrIHN0YXRlcyBhbmQsIGJ5IGRlZmF1bHQsIGFsZXJ0cy5cclxuXHJcbiRzdGF0ZS1zdWNjZXNzLXRleHQ6ICMzYzc2M2QgIWRlZmF1bHQ7XHJcbiRzdGF0ZS1zdWNjZXNzLWJnOiAjZGZmMGQ4ICFkZWZhdWx0O1xyXG4kc3RhdGUtc3VjY2Vzcy1ib3JkZXI6IGRhcmtlbigkc3RhdGUtc3VjY2Vzcy1iZywgNSUpICFkZWZhdWx0O1xyXG5cclxuJHN0YXRlLWluZm8tdGV4dDogIzMxNzA4ZiAhZGVmYXVsdDtcclxuJHN0YXRlLWluZm8tYmc6ICNkOWVkZjcgIWRlZmF1bHQ7XHJcbiRzdGF0ZS1pbmZvLWJvcmRlcjogZGFya2VuKCRzdGF0ZS1pbmZvLWJnLCA3JSkgIWRlZmF1bHQ7XHJcblxyXG4kc3RhdGUtd2FybmluZy10ZXh0OiAjOGE2ZDNiICFkZWZhdWx0O1xyXG4kc3RhdGUtd2FybmluZy1iZzogI2ZjZjhlMyAhZGVmYXVsdDtcclxuJG1hcmstYmc6ICRzdGF0ZS13YXJuaW5nLWJnICFkZWZhdWx0O1xyXG4kc3RhdGUtd2FybmluZy1ib3JkZXI6IGRhcmtlbigkc3RhdGUtd2FybmluZy1iZywgNSUpICFkZWZhdWx0O1xyXG5cclxuJHN0YXRlLWRhbmdlci10ZXh0OiAjYTk0NDQyICFkZWZhdWx0O1xyXG4kc3RhdGUtZGFuZ2VyLWJnOiAjZjJkZWRlICFkZWZhdWx0O1xyXG4kc3RhdGUtZGFuZ2VyLWJvcmRlcjogZGFya2VuKCRzdGF0ZS1kYW5nZXItYmcsIDUlKSAhZGVmYXVsdDtcclxuXHJcbi8vKiAgUG9wb3ZlciAgKi9cclxuJHBvcG92ZXItYmc6ICNlYmVmZjEgIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWFycm93LW91dGVyLWNvbG9yOiAkcG9wb3Zlci1iZyAhZGVmYXVsdDtcclxuJHBvcG92ZXItYXJyb3ctY29sb3I6ICRwb3BvdmVyLWJnICFkZWZhdWx0O1xyXG5cclxuJGJyYW5kLXByaW1hcnk6IGRhcmtlbigjNDI4YmNhLCA2LjUlKSAhZGVmYXVsdDsgLy8gIzMzN2FiN1xyXG4kcGFnaW5hdGlvbi1hY3RpdmUtYm9yZGVyOiAkYnJhbmQtcHJpbWFyeSAhZGVmYXVsdDtcclxuJHBhbmVsLWJnOiAjZmZmICFkZWZhdWx0O1xyXG4kcGFuZWwtZGVmYXVsdC1oZWFkaW5nLWJnOiAjZjVmNWY1ICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1ib3JkZXI6ICNkZGQgIWRlZmF1bHQ7XHJcbiRpbnB1dC1iZy1kaXNhYmxlZDogJGdyYXktMzAwICFkZWZhdWx0O1xyXG4kZ3JheS1iYXNlOiAjMDAwICFkZWZhdWx0O1xyXG4kZ3JheS1kYXJrZXI6IGxpZ2h0ZW4oJGdyYXktYmFzZSwgMTMuNSUpICFkZWZhdWx0OyAvLyAjMjIyXHJcbiRncmF5LWRhcms6IGxpZ2h0ZW4oJGdyYXktYmFzZSwgMjAlKSAhZGVmYXVsdDsgLy8gIzMzM1xyXG4kZ3JheTogbGlnaHRlbigkZ3JheS1iYXNlLCAzMy41JSkgIWRlZmF1bHQ7IC8vICM1NTVcclxuJGdyYXktbGlnaHQ6IGxpZ2h0ZW4oJGdyYXktYmFzZSwgNDYuNyUpICFkZWZhdWx0OyAvLyAjNzc3XHJcbiRncmF5LWxpZ2h0ZXI6IGxpZ2h0ZW4oJGdyYXktYmFzZSwgOTMuNSUpICFkZWZhdWx0OyAvLyAjZWVlXHJcbiRncmF5LXNlbWktbGlnaHRlcjogJGdyYXktMzAwICFkZWZhdWx0O1xyXG5cclxuLy8qKiBVbml0LWxlc3MgYGxpbmUtaGVpZ2h0YCBmb3IgdXNlIGluIGNvbXBvbmVudHMgbGlrZSBidXR0b25zLlxyXG4kbGluZS1oZWlnaHQtYmFzZTogMS40Mjg1NzE0MjkgIWRlZmF1bHQ7IC8vIDIwLzE0XHJcbi8vKiogQ29tcHV0ZWQgXCJsaW5lLWhlaWdodFwiIChgZm9udC1zaXplYCAqIGBsaW5lLWhlaWdodGApIGZvciB1c2Ugd2l0aCBgbWFyZ2luYCwgYHBhZGRpbmdgLCBldGMuXHJcbiRsaW5lLWhlaWdodC1jb21wdXRlZDogZmxvb3IoKCRmb250LXNpemUtYmFzZSAqICRsaW5lLWhlaWdodC1iYXNlKSkgIWRlZmF1bHQ7IC8vIH4yMHB4XHJcblxyXG4kYnJhbmQtcHJpbWFyeTogZGFya2VuKCM0MjhiY2EsIDYuNSUpICFkZWZhdWx0OyAvLyAjMzM3YWI3XHJcbiRicmFuZC1zdWNjZXNzOiAjNWNiODVjICFkZWZhdWx0O1xyXG4kYnJhbmQtaW5mbzogIzViYzBkZSAhZGVmYXVsdDtcclxuJGJyYW5kLXdhcm5pbmc6ICNmMGFkNGUgIWRlZmF1bHQ7XHJcbiRicmFuZC1kYW5nZXI6ICNkOTUzNGYgIWRlZmF1bHQ7XHJcblxyXG4kcGFnaW5hdGlvbi1ib3JkZXI6ICNkZGQgIWRlZmF1bHQ7XHJcbiRwYWdpbmF0aW9uLWhvdmVyLWJvcmRlcjogI2RkZCAhZGVmYXVsdDtcclxuXHJcbiRzcGFjZXIteTogMSBlbSAhZGVmYXVsdDsiLCJAaW1wb3J0IFwiaGVscGVyc1wiO1xyXG5cclxuLmgtdGhpbi1kaXZpZGVye1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICAgIGJvcmRlci1ib3R0b206MXB4IHNvbGlkICNkZGQ7XHJcbn1cclxuXHJcbi51c2VyZGFzaGJvYXJkQ29udHJvbGxlcntcclxuICB3aWR0aDo5OCU7XHJcbn1cclxuXHJcbi5pbmFjdGl2ZXtcclxuICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h1 class=\\\"card-title\\\">Users\\r\\n            <div class=\\\"pull-right\\\">\\r\\n                <button id=\\\"btn-cr-user\\\" type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" data-toggle=\\\"modal\\\"\\r\\n                    data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\" data-target=\\\"#create-user\\\" title=\\\"Add User\\\"\\r\\n                    (click)=\\\"addUser()\\\">\\r\\n                    <i class=\\\"fa fa-plus\\\"></i>\\r\\n                    Add User\\r\\n                </button>\\r\\n            </div>\\r\\n        </h1>\\r\\n        <div aria-live=\\\"assertive\\\">\\r\\n            <div role=\\\"alert\\\" *ngIf=\\\"showErrorFlag\\\" class=\\\"row\\\">\\r\\n                <div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n                            <alert *ngFor=\\\"let alert of alerts; let i = index\\\" [type]=\\\"alert.type + ' alert-sm'\\\">\\r\\n                                <div [innerHTML]=\\\"alert.msg\\\"></div>\\r\\n                            </alert>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-12\\\">\\r\\n                <div class=\\\"grid-wrapper\\\">\\r\\n                    <ag-grid-angular #agGrid style=\\\"width: 100%; height: 650px;\\\" class=\\\"ag-theme-balham\\\"\\r\\n                        [rowData]=\\\"data\\\" [columnDefs]=\\\"columnDefs\\\" [defaultColDef]=\\\"defaultColDef\\\"\\r\\n                        [gridOptions]=\\\"gridOptions\\\" [floatingFilter]=\\\"true\\\" [pagination]=\\\"true\\\"\\r\\n                        (gridReady)=\\\"onGridReady($event)\\\" [paginationAutoPageSize]=\\\"true\\\">\\r\\n                    </ag-grid-angular>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n                <button id=\\\"btn-go-back\\\" type=\\\"button\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"onClickBackButton()\\\">\\r\\n                    <span class=\\\"fa fa-chevron-left txt-gap\\\" aria-hidden=\\\"true\\\"></span>Back</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"showCreateUser\\\" create-user-popup (reloadUsers)=\\\"reloadUsers($event)\\\"></div>\\r\\n        <div *ngIf=\\\"showEditUser\\\" edit-user-popup [model]=\\\"selUser\\\" (reloadUsers)=\\\"reloadUsers($event)\\\"></div>\\r\\n    </div>\\r\\n</div>\"","export class Account{\r\n    accountId: number;\r\n    name: string;\r\n    industryId: number;\r\n    sectorId: number;\r\n    enabled: string;\r\n\r\n    constructor(){\r\n        this.enabled = 'Y';\r\n    }\r\n}\r\n\r\n","export class Client{\r\n    clientId: number;\r\n    name: string;\r\n    accountId: number;\r\n    enabled: string;\r\n\r\n    constructor(){\r\n        this.enabled = 'Y';\r\n    }\r\n}","export class LaborCategory{\r\n    id: number;\r\n    code: string;\r\n    description: string;\r\n    baseRate: number;\r\n    op1Rate: number;\r\n    op2Rate: number;\r\n    op3Rate: number;\r\n    op4Rate: number;\r\n    op5Rate: number;\r\n    enabled: boolean;\r\n    groupId: number;\r\n    skillCode: string;\r\n\r\n    constructor(){\r\n        this.enabled = true;\r\n    }\r\n}","export class LaborCategoryGroup{\r\n    groupId: number;\r\n    name: string;\r\n    enabled: boolean;\r\n}","\r\nexport class Lookup {\r\n    lookupId: number;\r\n    refTypeId: number;\r\n    refCode: string;\r\n    refValue: string;\r\n}\r\n","\r\nexport class User {\r\n    userId: number;\r\n    email: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    role: string;\r\n    employeeId: string;\r\n    lastLoginDt: string;\r\n    endDt: string;\r\n    enabled: string;\r\n}\r\n","/*\r\n@author : Deloitte\r\nService class to perform account related operations.\r\n*/\r\n\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from \"rxjs\";\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { Account } from '../models/account.model';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nconst httpOptions = {\r\n\theaders: new HttpHeaders({ \"Content-Type\": \"application/json\" })\r\n};\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class AccountService\r\n */\r\n@Injectable()\r\nexport class AccountService {\r\n\r\n    private getAccountUrl = environment.apiurl + '/api/v1/accounts';\r\n    private getTDLUrl = environment.apiurl + '/api/v1/tdl';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n\r\n    public saveAccount(newAccount: Account): Observable<Account> {\r\n        return this.http.post(this.getAccountUrl, newAccount, httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"saveAccount\")),\r\n\t\t\tcatchError(this.handleError<any>(\"saveAccount\"))\r\n\t\t);\r\n    }\r\n\r\n\r\n    public getAccount(id: number) {\r\n        return this.http.get(this.getAccountUrl + '/' + id, httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"getAccount\")),\r\n\t\t\tcatchError(this.handleError<any>(\"getAccount\"))\r\n\t\t);\r\n    }\r\n\r\n    public deleteAccountById(id: number){\r\n        return this.http.delete(this.getAccountUrl + '/' + id, httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"deleteAccountById\")),\r\n\t\t\tcatchError(this.handleError<any>(\"deleteAccountById\"))\r\n\t\t);\r\n    }\r\n\r\n    public getAll(){\r\n        return this.http.get(this.getTDLUrl + '/account/list', httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"getAll\")),\r\n\t\t\tcatchError(this.handleError<any>(\"getAll\"))\r\n\t\t);\r\n\t}\r\n\tpublic loadIndustries(){\r\n        return this.http.get(this.getTDLUrl + '/industry/list', httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"loadIndustries\")),\r\n\t\t\tcatchError(this.handleError<any>(\"loadIndustries\"))\r\n\t\t);\r\n    }\r\n\r\n    public loadSectorsForIndustry(industryId: number){\r\n        return this.http.get(this.getTDLUrl + '/sector/list/' + industryId, httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"loadSectorsForIndustry\")),\r\n\t\t\tcatchError(this.handleError<any>(\"loadSectorsForIndustry\"))\r\n\t\t);\r\n    }\r\n\r\n  \t/**\r\n\t * Handle Http operation that failed.\r\n\t * Let the app continue.\r\n\t * @param operation - name of the operation that failed\r\n\t * @param result - optional value to return as the observable result\r\n\t */\r\n\tprivate handleError<T>(operation = \"operation\", result?: T) {\r\n\t\treturn (error: any): Observable<T> => {\r\n\t\t\t// TODO: send the error to remote logging infrastructure\r\n\t\t\tconsole.error(error); // log to console instead\r\n\r\n\t\t\t// TODO: better job of transforming error for user consumption\r\n\t\t\tthis.log(\"${operation} failed: ${error.message}\");\r\n\r\n\t\t\t// Let the app keep running by returning an empty result.\r\n\t\t\treturn of(result as T);\r\n\t\t};\r\n\t}\r\n\r\n\t/** Log a Attribute Service message with the MessageService */\r\n\tprivate log(message: string) {\r\n\t\t//this.messageService.add(\"Profile Service: ${message}\");\r\n\t}\r\n\r\n}","/*\r\n@author : Deloitte\r\nService class to perform client related operations.\r\n*/\r\n\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from \"rxjs\";\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { Client } from '../models/client.model';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nconst httpOptions = {\r\n\theaders: new HttpHeaders({ \"Content-Type\": \"application/json\" })\r\n};\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class ClientService\r\n */\r\n@Injectable()\r\nexport class ClientService {\r\n\r\n    private getClientUrl = environment.apiurl + '/api/v1/clients';\r\n    private getTDLUrl = environment.apiurl + '/api/v1/tdl';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n\r\n    public saveClient(newClient: Client): Observable<Client> {\r\n        return this.http.post(this.getClientUrl, newClient, httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"saveClient\")),\r\n\t\t\tcatchError(this.handleError<any>(\"saveClient\"))\r\n\t\t);\r\n    }\r\n\r\n\r\n    public getClient(id: number) {\r\n        return this.http.get(this.getClientUrl + '/' + id, httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"getClient\")),\r\n\t\t\tcatchError(this.handleError<any>(\"getClient\"))\r\n\t\t);\r\n    }\r\n\r\n    public deleteClientById(id: number){\r\n        return this.http.delete(this.getClientUrl + '/' + id, httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"deleteClientById\")),\r\n\t\t\tcatchError(this.handleError<any>(\"deleteClientById\"))\r\n\t\t);\r\n    }\r\n\r\n\r\n    public getAll(){\r\n        return this.http.get(this.getTDLUrl + '/client/list', httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"getAll\")),\r\n\t\t\tcatchError(this.handleError<any>(\"getAll\"))\r\n\t\t);\r\n    }\r\n\r\n\r\n\r\n  \t/**\r\n\t * Handle Http operation that failed.\r\n\t * Let the app continue.\r\n\t * @param operation - name of the operation that failed\r\n\t * @param result - optional value to return as the observable result\r\n\t */\r\n\tprivate handleError<T>(operation = \"operation\", result?: T) {\r\n\t\treturn (error: any): Observable<T> => {\r\n\t\t\t// TODO: send the error to remote logging infrastructure\r\n\t\t\tconsole.error(error); // log to console instead\r\n\r\n\t\t\t// TODO: better job of transforming error for user consumption\r\n\t\t\tthis.log(\"${operation} failed: ${error.message}\");\r\n\r\n\t\t\t// Let the app keep running by returning an empty result.\r\n\t\t\treturn of(result as T);\r\n\t\t};\r\n\t}\r\n\r\n\t/** Log a Attribute Service message with the MessageService */\r\n\tprivate log(message: string) {\r\n\t\t//this.messageService.add(\"Profile Service: ${message}\");\r\n\t}\r\n\r\n}","/*\r\n@author : Deloitte\r\nService class to perform resource related operations.\r\n*/\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from \"rxjs\";\r\nimport { LaborCategoryGroup } from '../models/lcatgroup.model';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nconst httpOptions = {\r\n\theaders: new HttpHeaders({ \"Content-Type\": \"application/json\" })\r\n};\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class LaborCategoryGroupService\r\n */\r\n@Injectable()\r\nexport class LaborCategoryGroupService {\r\n\r\n    private getLCATGroupUrl = environment.apiurl + '/api/v1/lcatgroups';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public saveLaborCategoryGroup(lcatGroup: LaborCategoryGroup): Observable<LaborCategoryGroup> {\r\n        return this.http.post(this.getLCATGroupUrl, lcatGroup, httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"saveLaborCategory\")),\r\n\t\t\tcatchError(this.handleError<any>(\"saveLaborCategory\"))\r\n\t\t);\r\n    }\r\n\r\n\r\n    public getLaborCategoryGroup(id) {\r\n        return this.http.get(this.getLCATGroupUrl + '/' + id, httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"getLaborCategoryGroup\")),\r\n\t\t\tcatchError(this.handleError<any>(\"getLaborCategoryGroup\"))\r\n\t\t);\r\n    }\r\n\r\n    public deleteLCATGroupById(id: number){\r\n        return this.http.delete(this.getLCATGroupUrl + '/' + id, httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"deleteLCATGroupById\")),\r\n\t\t\tcatchError(this.handleError<any>(\"deleteLCATGroupById\"))\r\n\t\t);\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {laborCategoryId} laborCategoryId\r\n     * @returns\r\n     *\r\n     * @memberOf LaborCategoryGroupService\r\n     */\r\n    public getAll(){\r\n        return this.http.get(this.getLCATGroupUrl, httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"getAll\")),\r\n\t\t\tcatchError(this.handleError<any>(\"getAll\"))\r\n\t\t);\r\n    }\r\n\r\n\r\n        /**\r\n     *\r\n     *\r\n     * @param {laborCategoryId} laborCategoryId\r\n     * @returns\r\n     *\r\n     * @memberOf LaborCategoryGroupService\r\n     */\r\n    public getAllActive(){\r\n        return this.http.get(this.getLCATGroupUrl + \"/active\", httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"getAllActive\")),\r\n\t\t\tcatchError(this.handleError<any>(\"getAllActive\"))\r\n\t\t);\r\n    }\r\n\r\n\r\n  \t/**\r\n\t * Handle Http operation that failed.\r\n\t * Let the app continue.\r\n\t * @param operation - name of the operation that failed\r\n\t * @param result - optional value to return as the observable result\r\n\t */\r\n\tprivate handleError<T>(operation = \"operation\", result?: T) {\r\n\t\treturn (error: any): Observable<T> => {\r\n\t\t\t// TODO: send the error to remote logging infrastructure\r\n\t\t\tconsole.error(error); // log to console instead\r\n\r\n\t\t\t// TODO: better job of transforming error for user consumption\r\n\t\t\tthis.log(\"${operation} failed: ${error.message}\");\r\n\r\n\t\t\t// Let the app keep running by returning an empty result.\r\n\t\t\treturn of(result as T);\r\n\t\t};\r\n\t}\r\n\r\n\t/** Log a Attribute Service message with the MessageService */\r\n\tprivate log(message: string) {\r\n\t\t//this.messageService.add(\"Profile Service: ${message}\");\r\n\t}\r\n\r\n}","/*\r\n@author : Deloitte\r\nService class to perform resource related operations.\r\n*/\r\n\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from \"rxjs\";\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { Lookup } from '../models/lookup.model';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nconst httpOptions = {\r\n\theaders: new HttpHeaders({ \"Content-Type\": \"application/json\" })\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class LaborCategoryService\r\n */\r\n@Injectable()\r\nexport class LookupService {\r\n\r\n    private getLookupurl = environment.apiurl + '/api/v1/lookup';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getAll(){\r\n        return this.http.get(this.getLookupurl, httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"getAll\")),\r\n\t\t\tcatchError(this.handleError<any>(\"getAll\"))\r\n\t\t);\r\n    }\r\n\r\n    public getAllByRefTypeId(refTypeId: number){\r\n        return this.http.get(this.getLookupurl+ '/reftype/' + refTypeId, httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"getAllByRefTypeId\")),\r\n\t\t\tcatchError(this.handleError<any>(\"getAllByRefTypeId\"))\r\n\t\t);\r\n    }\r\n\r\n    public getAllRefTypes(){\r\n        return this.http.get(this.getLookupurl+ '/reftype', httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"getAllRefTypes\")),\r\n\t\t\tcatchError(this.handleError<any>(\"getAllRefTypes\"))\r\n\t\t);\r\n    }\r\n\r\n    public createLookup(lookup: Lookup): Observable<Lookup> {\r\n        return this.http.post(this.getLookupurl, lookup, httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"createLookup\")),\r\n\t\t\tcatchError(this.handleError<any>(\"createLookup\"))\r\n\t\t);\r\n    }\r\n\r\n    public updateLookup(lookup: Lookup): Observable<Lookup> {\r\n        return this.http.put(this.getLookupurl, lookup, httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"updateLookup\")),\r\n\t\t\tcatchError(this.handleError<any>(\"updateLookup\"))\r\n\t\t);\r\n    }\r\n\r\n\r\n    public deleteLookupById(id: number){\r\n        return this.http.delete(this.getLookupurl + '/' + id, httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"deleteLookupById\")),\r\n\t\t\tcatchError(this.handleError<any>(\"deleteLookupById\"))\r\n\t\t);\r\n    }\r\n\r\n  \t/**\r\n\t * Handle Http operation that failed.\r\n\t * Let the app continue.\r\n\t * @param operation - name of the operation that failed\r\n\t * @param result - optional value to return as the observable result\r\n\t */\r\n\tprivate handleError<T>(operation = \"operation\", result?: T) {\r\n\t\treturn (error: any): Observable<T> => {\r\n\t\t\t// TODO: send the error to remote logging infrastructure\r\n\t\t\tconsole.error(error); // log to console instead\r\n\r\n\t\t\t// TODO: better job of transforming error for user consumption\r\n\t\t\tthis.log(\"${operation} failed: ${error.message}\");\r\n\r\n\t\t\t// Let the app keep running by returning an empty result.\r\n\t\t\treturn of(result as T);\r\n\t\t};\r\n\t}\r\n\r\n\t/** Log a Attribute Service message with the MessageService */\r\n\tprivate log(message: string) {\r\n\t\t//this.messageService.add(\"Profile Service: ${message}\");\r\n\t}\r\n\r\n}","/*\r\n@author : Deloitte\r\nService class to perform Role related operations.\r\n*/\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from \"rxjs\";\r\nimport { Role } from '../models/role.model';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nconst httpOptions = {\r\n\theaders: new HttpHeaders({ \"Content-Type\": \"application/json\" })\r\n}\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class RoleService\r\n */\r\n@Injectable()\r\nexport class RoleService {\r\n\r\n    private getrolesurl = environment.apiurl + '/api/useradmin/roles';\r\n\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    getRoles(): Observable<Role[]> {\r\n        return this.http.get(this.getrolesurl, httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(\"getRoles\")),\r\n\t\t\tcatchError(this.handleError<any>(\"getRoles\"))\r\n\t\t);\r\n    }\r\n\r\n  \t/**\r\n\t * Handle Http operation that failed.\r\n\t * Let the app continue.\r\n\t * @param operation - name of the operation that failed\r\n\t * @param result - optional value to return as the observable result\r\n\t */\r\n\tprivate handleError<T>(operation = \"operation\", result?: T) {\r\n\t\treturn (error: any): Observable<T> => {\r\n\t\t\t// TODO: send the error to remote logging infrastructure\r\n\t\t\tconsole.error(error); // log to console instead\r\n\r\n\t\t\t// TODO: better job of transforming error for user consumption\r\n\t\t\tthis.log(\"${operation} failed: ${error.message}\");\r\n\r\n\t\t\t// Let the app keep running by returning an empty result.\r\n\t\t\treturn of(result as T);\r\n\t\t};\r\n\t}\r\n\r\n\t/** Log a Attribute Service message with the MessageService */\r\n\tprivate log(message: string) {\r\n\t\t//this.messageService.add(\"Profile Service: ${message}\");\r\n\t}\r\n\r\n}\r\n","\r\nimport * as _ from 'lodash';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { ClientFilterData } from '../models/client-filter.model';\r\n\r\n@Pipe({\r\n    name: \"clientfilterpipe\"\r\n})\r\nexport class ClientFilterPipe implements PipeTransform {\r\n    transform(data: any[], filter: ClientFilterData): any {\r\n        let results = data;\r\n\r\n        if (data) {\r\n            if (filter) {\r\n                // filter by tdl name\r\n                if (typeof filter.codeFilter !== 'undefined' && filter.codeFilter.length > 0) {\r\n                    results =  _.filter(results, function(item) {\r\n                        let val1:string = item.name;\r\n                        let val2:string = filter.codeFilter;\r\n                        return val1.toUpperCase().indexOf(val2.toUpperCase()) > -1;\r\n                    });\r\n                                                        \r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n}","\r\nimport * as _ from 'lodash';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { LaborCatFilterData } from '../models/laborcat-filter.model';\r\n\r\n@Pipe({\r\n    name: \"laborcatfilterpipe\"\r\n})\r\nexport class LaborCatFilterPipe implements PipeTransform {\r\n    transform(data: any[], filter: LaborCatFilterData): any {\r\n        let results = data;\r\n\r\n        if (data) {\r\n            if (filter) {\r\n                // filter by tdl name\r\n                if (typeof filter.codeFilter !== 'undefined' && filter.codeFilter.length > 0) {\r\n                    results =  _.filter(results, function(item) {\r\n                        let val1:string = item.name;\r\n                        let val2:string = filter.codeFilter;\r\n                        return val1.toUpperCase().indexOf(val2.toUpperCase()) > -1;\r\n                    });\r\n                                                        \r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n}","\r\nimport * as _ from 'lodash';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { LookupFilterData } from '../models/lookup-filter.model';\r\n\r\n@Pipe({\r\n    name: \"lookupfilterpipe\"\r\n})\r\nexport class LookupFilterPipe implements PipeTransform {\r\n    transform(data: any[], filter: LookupFilterData): any {\r\n        let results = data;\r\n\r\n        if (data) {\r\n            if (filter) {\r\n                let handler = this;\r\n                // filter by refType\r\n                if (typeof filter.refCodeFilter !== 'undefined' && filter.refCodeFilter.length > 0) {\r\n                    results =  _.filter(results, function(item) {\r\n                        let val1:string = item.refCode;\r\n                        let val2:string = filter.refCodeFilter;\r\n                        return val1.toUpperCase().indexOf(val2.toUpperCase()) > -1;\r\n                    });\r\n\r\n                }\r\n                if (typeof filter.refValueFilter !== 'undefined' && filter.refValueFilter.length > 0) {\r\n                    results =  _.filter(results, function(item) {\r\n                        let val1:string = item.refValue;\r\n                        let val2:string = filter.refValueFilter;\r\n                        return val1.toUpperCase().indexOf(val2.toUpperCase()) > -1;\r\n                    });\r\n\r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n// tslint:disable-next-line:eofline\r\n}","\r\nimport * as _ from 'lodash';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { ResourceFilterData } from '../models/res-filter.model';\r\nimport { isNil } from 'ramda';\r\n\r\n@Pipe({\r\n    name: \"resfilterpipe\"\r\n})\r\nexport class ResourceFilterPipe implements PipeTransform {\r\n    transform(data: any[], filter: ResourceFilterData): any {\r\n        let results = data;\r\n\r\n        if (data) {\r\n            if (filter) {\r\n                let handler = this;\r\n                // filter by tdl name\r\n                if (typeof filter.nameFilter !== 'undefined' && filter.nameFilter.length > 0) {\r\n                    results =  _.filter(results, function(item) {\r\n                        let val1:string = item.name;\r\n                        let val2:string = filter.nameFilter;\r\n                        return val1.toUpperCase().indexOf(val2.toUpperCase()) > -1;\r\n                    });\r\n                }\r\n                // filter by placeholder\r\n                if (typeof filter.placeholderFilter !== 'undefined' && filter.placeholderFilter.length > 0) {\r\n                    results =  _.filter(results, function(item) {\r\n                         let val1:string = isNil(item.placeholder) ? \"\" : item.placeholder; \r\n                         let val2:string = isNil(filter.placeholderFilter) ? \"\" : filter.placeholderFilter;\r\n                         return val1.toUpperCase().indexOf(val2.toUpperCase()) > -1;\r\n                     });\r\n                 }                  \r\n            }\r\n        }\r\n        return results;\r\n    }\r\n// tslint:disable-next-line:eofline\r\n}","\r\nimport * as _ from 'lodash';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { UserFilterData } from '../models/user-filter.model';\r\n\r\n@Pipe({\r\n    name: \"userfilterpipe\"\r\n})\r\nexport class UserFilterPipe implements PipeTransform {\r\n    transform(data: any[], filter: UserFilterData): any {\r\n        let results = data;\r\n\r\n        if (data) {\r\n            if (filter) {\r\n                let handler = this;\r\n                // filter by tdl name\r\n                if (typeof filter.firstNameFilter !== 'undefined' && filter.firstNameFilter.length > 0) {\r\n                    results =  _.filter(results, function(item) {\r\n                        let val1:string = item.firstName;\r\n                        let val2:string = filter.firstNameFilter;\r\n                        return val1.toUpperCase().indexOf(val2.toUpperCase()) > -1;\r\n                    });\r\n                                                        \r\n                }\r\n                if (typeof filter.lastNameFilter !== 'undefined' && filter.lastNameFilter.length > 0) {\r\n                    results =  _.filter(results, function(item) {\r\n                        let val1:string = item.lastName;\r\n                        let val2:string = filter.lastNameFilter;\r\n                        return val1.toUpperCase().indexOf(val2.toUpperCase()) > -1;\r\n                    });\r\n                                                        \r\n                }                \r\n            }\r\n        }\r\n        return results;\r\n    }\r\n// tslint:disable-next-line:eofline\r\n}","export class Resource {\r\n    resourceID: number;\r\n    name: string;\r\n    lookupName: string;\r\n    displayName: string;\r\n    employeeID: string;\r\n    email: string;\r\n    phone: string;\r\n    startDt: string;\r\n    roleID: number;\r\n    lcatCode: string;\r\n    typeCode: string;\r\n    teamCode: string;\r\n    active: string;\r\n    maxHours: number;\r\n    leadID: number;\r\n    placeholder: string;\r\n    positionCode: string;\r\n    cdm: string;\r\n}"],"sourceRoot":""}