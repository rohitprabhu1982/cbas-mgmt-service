{"version":3,"sources":["webpack:///./node_modules/ag-grid-enterprise/chartsModule.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/builder/chartBuilder.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/chartController.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/chartDatasource.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/chartModel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/chartProxies/cartesian/areaChartProxy.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/chartProxies/cartesian/barChartProxy.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/chartProxies/cartesian/cartesianChartProxy.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/chartProxies/cartesian/lineChartProxy.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/chartProxies/cartesian/scatterChartProxy.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/chartProxies/chartProxy.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/chartProxies/polar/doughnutChartProxy.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/chartProxies/polar/pieChartProxy.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/chartProxies/polar/polarChartProxy.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/chartTranslator.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/gridChartComp.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/chartMenu.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/data/chartDataPanel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/format/axis/axisPanel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/format/axis/axisTicksPanel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/format/chart/chartPanel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/format/chart/paddingPanel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/format/chartFormatingPanel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/format/label/labelPanel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/format/legend/legendPanel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/format/series/areaSeriesPanel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/format/series/barSeriesPanel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/format/series/calloutPanel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/format/series/lineSeriesPanel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/format/series/markersPanel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/format/series/pieSeriesPanel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/format/series/scatterSeriesPanel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/format/series/shadowPanel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/settings/chartSettingsPanel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/settings/miniChartsContainer.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartComp/menu/tabbedChartMenu.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/chartAdaptor/chartService.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/axis.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/canvas/hdpiCanvas.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/caption.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/chart/axis/categoryAxis.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/chart/axis/groupedCategoryAxis.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/chart/axis/numberAxis.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/chart/cartesianChart.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/chart/chart.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/chart/groupedCategoryChart.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/chart/legend.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/chart/markerLabel.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/chart/palettes.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/chart/polarChart.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/chart/series/areaSeries.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/chart/series/barSeries.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/chart/series/lineSeries.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/chart/series/pieSeries.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/chart/series/scatterSeries.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/chart/series/series.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/layout/tree.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scale/bandScale.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scale/continuousScale.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scale/linearScale.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/bbox.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/clipRect.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/dropShadow.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/group.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/intersection.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/matrix.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/node.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/path2D.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/polyRoots.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/scene.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/selection.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/shape/arc.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/shape/line.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/shape/path.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/shape/rect.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/shape/sector.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/shape/shape.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/scene/shape/text.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/util/angle.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/util/array.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/util/compare.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/util/number.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/util/object.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/util/padding.js","webpack:///./node_modules/ag-grid-enterprise/dist/lib/charts/util/ticks.js"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,qBAAqB,mBAAO,CAAC,qHAAsC;AACnE,wBAAwB,mBAAO,CAAC,+IAAmD;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;AACa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,oHAAmC;AAClE,mBAAmB,mBAAO,CAAC,4GAA+B;AAC1D,mBAAmB,mBAAO,CAAC,0HAAsC;AACjE,sBAAsB,mBAAO,CAAC,gIAAyC;AACvE,kBAAkB,mBAAO,CAAC,wHAAqC;AAC/D,mBAAmB,mBAAO,CAAC,0HAAsC;AACjE,kBAAkB,mBAAO,CAAC,wHAAqC;AAC/D,mBAAmB,mBAAO,CAAC,4GAA+B;AAC1D,qBAAqB,mBAAO,CAAC,0HAAsC;AACnE,mBAAmB,mBAAO,CAAC,sHAAoC;AAC/D,gBAAgB,mBAAO,CAAC,oGAA2B;AACnD,gBAAgB,mBAAO,CAAC,0FAAsB;AAC9C,4BAA4B,mBAAO,CAAC,wIAA6C;AACjF,6BAA6B,mBAAO,CAAC,gIAAyqDAAqiCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AClqBA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,wBAAwB,mBAAO,CAAC,4FAAuB;AACvD,mBAAmB,mBAAO,CAAC,qGAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC3JA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,yBAAyB,mBAAO,CAAC,kHAAkC;AACnE,mBAAmB,mBAAO,CAAC,qGAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0CAA0C,oBAAoB,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA,yFAAyF,4BAA4B,EAAE;AACvH;AACA,4EAA4E,kDAAkD,EAAE;AAChI;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACnNA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,wBAAwB,mBAAO,CAAC,+GAAmB;AACnD,wBAAwB,mBAAO,CAAC,4FAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,yEAAyE,kCAAkC,EAAE;AAC7G;AACA;AACA;AACA,0DAA0D,yDAAyD,EAAE;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sCAAsC;AAC5E;AACA;AACA;AACA;AACA,0DAA0D,mCAAmC,EAAE;AAC/F;AACA;AACA;AACA,sDAAsD,uEAAuE,EAAE;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,4CAA4C,EAAE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,oBAAoB,EAAE;AACvG;AACA;AACA;AACA;AACA,gEAAgE,4CAA4C,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,4CAA4C,EAAE;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB,uBAAuB,EAAE;AACzE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,uBAAuB,EAAE;AAC1D,iCAAiC,qBAAqB,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,oBAAoB,EAAE;AACnF;AACA;AACA,wDAAwD,oBAAoB,EAAE,qBAAqB,kBAAkB,EAAE;AACvH;AACA;AACA,4DAA4D,oBAAoB,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,sBAAsB,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,+CAA+C,oCAAoC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,iBAAiB,EAAE;AACrF,+DAA+D,uBAAuB,EAAE;AACxF,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC3ZA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,qBAAqB,mBAAO,CAAC,sHAA+B;AAC5D,qBAAqB,mBAAO,CAAC,gIAA4C;AACzE,4BAA4B,mBAAO,CAAC,8IAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,gBAAgB,EAAE;AACnF,qEAAqE,sBAAsB,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,eAAe,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qCAAqC,4BAA4B,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACjNA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,qBAAqB,mBAAO,CAAC,sHAA+B;AAC5D,4BAA4B,mBAAO,CAAC,8IAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,gBAAgB,EAAE;AAC9E,gEAAgE,sBAAsB,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC7KA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,mHAAe;AAC1C,mBAAmB,mBAAO,CAAC,yGAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC9DA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,qBAAqB,mBAAO,CAAC,sHAA+B;AAC5D,4BAA4B,mBAAO,CAAC,8IAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,eAAe,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACzKA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,qBAAqB,mBAAO,CAAC,sHAA+B;AAC5D,mBAAmB,mBAAO,CAAC,yGAAkB;AAC7C,4BAA4B,mBAAO,CAAC,8IAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,eAAe,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC5MA;AACa;AACb,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,mBAAmB,mBAAO,CAAC,+GAAkC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,4EAA4E;AACpI;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACpJA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,sHAA+B;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,wBAAwB,mBAAO,CAAC,kIAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AChKA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,sHAA+B;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,wBAAwB,mBAAO,CAAC,kIAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC/HA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,mHAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC1CA;AACa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC1GA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,kBAAkB,mBAAO,CAAC,6GAAkB;AAC5C,wBAAwB,mBAAO,CAAC,+GAAmB;AACnD,mBAAmB,mBAAO,CAAC,qGAAc;AACzC,sBAAsB,mBAAO,CAAC,yJAAwC;AACtE,uBAAuB,mBAAO,CAAC,2JAAyC;AACxE,uBAAuB,mBAAO,CAAC,2JAAyC;AACxE,sBAAsB,mBAAO,CAAC,iJAAoC;AAClE,2BAA2B,mBAAO,CAAC,2JAAyC;AAC5E,0BAA0B,mBAAO,CAAC,iKAA4C;AAC9E,iBAAiB,mBAAO,CAAC,wGAA6B;AACtD,wBAAwB,mBAAO,CAAC,+GAAmB;AACnD,qBAAqB,mBAAO,CAAC,0HAAsC;AACnE,mBAAmB,mBAAO,CAAC,sHAAoqGAAqG,wBAAwB,EAAE;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbnVA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,wBAAwB,mBAAO,CAAC,oHAAmB;AACnD;AACA;AACA;AACA;AACA;AACA,iDAAiD,wCAAwC,EAAE;AAC3F,6CAA6C,oCAAoC,EAAE;AACnF,+CAA+C,sCAAsC,EAAE;AACvF,kDAAkD,gCAAgC,EAAE;AACpF,iDAAiD,0BAA0B,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,8DAA8D,+BAA+B,EAAE;AAC/F;AACA;AACA,yDAAyD,6CAA6C,EAAE;AACxG,mDAAmD,8FAA8F,EAAE;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AClLA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,wBAAwB,mBAAO,CAAC,mHAAuB;AACvD,wBAAwB,mBAAO,CAAC,mHAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,+BAA+B,EAAE;AACjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC3GA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,uBAAuB,mBAAO,CAAC,8HAAkB;AACjD,mBAAmB,mBAAO,CAAC,8HAAqB;AAChD,wBAAwB,mBAAO,CAAC,sHAA0B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,sEAAsE,EAAE;AACxH;AACA;AACA;AACA;AACA;AACA,gDAAgD,sEAAsE,EAAE;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,gDAAgD;AAC/F;AACA;AACA,+CAA+C,gDAAgD;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AChKA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,wBAAwB,mBAAO,CAAC,sHAA0B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,sEAAsE,EAAE;AACxH;AACA;AACA;AACA;AACA;AACA,oDAAoD,mEAAmE,EAAE;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC9FA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,qBAAqB,mBAAO,CAAC,2HAAgB;AAC7C,mBAAmB,mBAAO,CAAC,8HAAqB;AAChD,gBAAgB,mBAAO,CAAC,mGAA+B;AACvD,wBAAwB,mBAAO,CAAC,sHAA0B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,cAAc;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC/IA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,wBAAwB,mBAAO,CAAC,sHAA0B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,qEAAqE,EAAE;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC5FA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,wBAAwB,mBAAO,CAAC,mHAAuB;AACvD,oBAAoB,mBAAO,CAAC,iIAAsB;AAClD,uBAAuB,mBAAO,CAAC,uIAAyB;AACxD,kBAAkB,mBAAO,CAAC,yHAAkB;AAC5C,wBAAwB,mBAAO,CAAC,yIAA0B;AAC1D,uBAAuB,mBAAO,CAAC,uIAAyB;AACxD,mBAAmB,mBAAO,CAAC,6HAAoB;AAC/C,wBAAwB,mBAAO,CAAC,yIAA0B;AAC1D,2BAA2B,mBAAO,CAAC,+IAA6B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AClHA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,wBAAwB,mBAAO,CAAC,sHAA0B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,4BAA4B,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;AACb;AACA;AACA;AACA;AACA,oDAAoD;AACpD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,8BAA8B,kBAAkB,EAAE,EAAE;AACpG;AACA;AACA;AACA,wCAAwC,6CAA6C,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACpLA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,mBAAmB,mBAAO,CAAC,8HAAqB;AAChD,wBAAwB,mBAAO,CAAC,sHAA0B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,SAAS,EAAE,EAAE;AACb;AACA,gDAAgD,+CAA+C,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oDAAoD,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+DAA+D,EAAE;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC1LA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,qBAAqB,mBAAO,CAAC,4HAAgB;AAC7C,wBAAwB,mBAAO,CAAC,sHAA0B;AAC1D,oBAAoB,mBAAO,CAAC,0HAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,uEAAuE,EAAE;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oEAAoE,EAAE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,sEAAsE,EAAE;AACxH;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oEAAoE,EAAE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AChJA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,oBAAoB,mBAAO,CAAC,0HAAe;AAC3C,mBAAmB,mBAAO,CAAC,8HAAqB;AAChD,wBAAwB,mBAAO,CAAC,sHAA0B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,uEAAuE,EAAE;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oEAAoE,EAAE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,sEAAsE,EAAE;AACxH;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oEAAoE,EAAE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oEAAoE,EAAE;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC3KA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,wBAAwB,mBAAO,CAAC,sHAA0B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+DAA+D,EAAE;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACzFA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,qBAAqB,mBAAO,CAAC,4HAAgB;AAC7C,wBAAwB,mBAAO,CAAC,sHAA0B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,uEAAuE,EAAE;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oEAAoE,EAAE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC7GA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,wBAAwB,mBAAO,CAAC,sHAA0B;AAC1D,0BAA0B,mBAAO,CAAC,wKAAmD;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,+DAA+D,EAAE;AAClH;AACA;AACA;AACA;AACA;AACA,oDAAoD,+DAA+D,EAAE;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACpFA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,oBAAoB,mBAAO,CAAC,0HAAe;AAC3C,mBAAmB,mBAAO,CAAC,8HAAqB;AAChD,qBAAqB,mBAAO,CAAC,4HAAgB;AAC7C,wBAAwB,mBAAO,CAAC,sHAA0B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,uEAAuE,EAAE;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oEAAoE,EAAE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,sEAAsE,EAAE;AACxH;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oEAAoE,EAAE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oEAAoE,EAAE;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACnLA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,qBAAqB,mBAAO,CAAC,4HAAgB;AAC7C,wBAAwB,mBAAO,CAAC,sHAA0B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,uEAAuE,EAAE;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACnGA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,wBAAwB,mBAAO,CAAC,sHAA0B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gEAAgE,EAAE;AACnH;AACA;AACA;AACA;AACA;AACA,gDAAgD,8DAA8D,EAAE;AAChH;AACA;AACA;AACA;AACA,oDAAoD,+DAA+D,EAAE;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AClGA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,4BAA4B,mBAAO,CAAC,qIAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACjKA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,wBAAwB,mBAAO,CAAC,mHAAuB;AACvD,cAAc,mBAAO,CAAC,wGAAgC;AACtD,cAAc,mBAAO,CAAC,wGAAgC;AACtD,cAAc,mBAAO,CAAC,sGAA+B;AACrD,eAAe,mBAAO,CAAC,sHAAuC;AAC9D,aAAa,mBAAO,CAAC,kHAAqC;AAC1D,oBAAoB,mBAAO,CAAC,oHAAsC;AAClE,aAAa,mBAAO,CAAC,kHAAqC;AAC1D,iBAAiB,mBAAO,CAAC,8GAAmC;AAC5D,aAAa,mBAAO,CAAC,kHAAqC;AAC1D,kBAAkB,mBAAO,CAAC,gHAAoC;AAC9D,YAAY,mBAAO,CAAC,gHAAoC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8BAA8B,6BAA6B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8BAA8B,gCAAgC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,cAAc,EAAE;AAChE,uCAAuC,qBAAqB,EAAE;AAC9D,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACzhCD;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,uBAAuB,mBAAO,CAAC,4HAAuB;AACtD,4BAA4B,mBAAO,CAAC,0IAA8B;AAClE,2BAA2B,mBAAO,CAAC,4IAA+B;AAClE,wBAAwB,mBAAO,CAAC,gHAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,uBAAuB,EAAE;AACvE,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AClHA;AACa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,wBAAwB,mBAAO,CAAC,yFAAoB;AACpD,sBAAsB,mBAAO,CAAC,qHAA2B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,yDAAyD;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,yDAAyD;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,uBAAuB,EAAE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD,6CAA6C,6BAA6B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,6BAA6B,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACxJA;AACa;AACb,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,uFAAe;AACrC,kBAAkB,mBAAO,CAAC,+FAAmB;AAC7C,aAAa,mBAAO,CAAC,iGAAoB;AACzC,cAAc,mBAAO,CAAC,qFAAc;AACpC,cAAc,mBAAO,CAAC,qFAAc;AACpC,aAAa,mBAAO,CAAC,iGAAoB;AACzC,YAAY,mBAAO,CAAC,+FAAmB;AACvC,aAAa,mBAAO,CAAC,qFAAc;AACnC,eAAe,mBAAO,CAAC,yFAAgB;AACvC,WAAW,OAAO,2BAA2B;AAC7C;AACA;AACA;AACA;AACA,CAAC,oBAAoB;AACrB;AACA;AACA;AACA,iDAAiD,yBAAyB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD,8BAA8B,gBAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,8CAA8C,iBAAiB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,6BAA6B,EAAE;AACvF;AACA;AACA,8DAA8D,iCAAiC,EAAE;AACjG;AACA;AACA,gEAAgE,iCAAiC,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS,GAAG,2CAA2C,GAAG,kBAAkB;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACncA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qDAAqD,8BAA8B;AACnF;AACA,8CAA8C,OAAO;AACrD;AACA;AACA,0DAA0D,aAAa;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACpTA;AACa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yFAAgB;AACxC,aAAa,mBAAO,CAAC,iGAAoB;AACzC,aAAa,mBAAO,CAAC,qFAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC3IA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,mGAAuB;AACjD,aAAa,mBAAO,CAAC,6EAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC9BA;AACa;AACb,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,2FAAmB;AACzC,kBAAkB,mBAAO,CAAC,mGAAuB;AACjD,aAAa,mBAAO,CAAC,qGAAwB;AAC7C,cAAc,mBAAO,CAAC,yFAAkB;AACxC,aAAa,mBAAO,CAAC,qGAAwB;AAC7C,aAAa,mBAAO,CAAC,yFAAkB;AACvC,eAAe,mBAAO,CAAC,6FAAoB;AAC3C,kBAAkB,mBAAO,CAAC,mGAAuB;AACjD,aAAa,mBAAO,CAAC,2FAAmB;AACxC;AACA;AACA;AACA;AACA,CAAC,oBAAoB;AACrB;AACA;AACA;AACA,iDAAiD,yBAAyB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD,8BAA8B,gBAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,sBAAsB;AACzE,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sBAAsB;AACrE,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA,4CAA4C,oCAAoC,EAAE;AAClF;AACA;AACA;AACA;AACA,mCAAmC,qCAAqC;AACxE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC/dA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,6EAAY;AACjC,oBAAoB,mBAAO,CAAC,uGAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;;;;;;;;;;;;;ACxDA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,iFAAS;AAC/B,cAAc,mBAAO,CAAC,sFAAe;AACrC,gBAAgB,mBAAO,CAAC,0FAAiB;AACzC,cAAc,mBAAO,CAAC,wFAAgB;AACtC;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC7MA;AACa;AACb,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,wFAAgB;AACtC,cAAc,mBAAO,CAAC,wFAAgB;AACtC,gBAAgB,mBAAO,CAAC,0FAAiB;AACzC,cAAc,mBAAO,CAAC,oGAAsB;AAC5C,aAAa,mBAAO,CAAC,kGAAqB;AAC1C,eAAe,mBAAO,CAAC,mFAAU;AACjC,cAAc,mBAAO,CAAC,sFAAe;AACrC;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,2BAA2B,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qBAAqB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mDAAmD,2BAA2B,EAAE;AAChF,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC7iBA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,iFAAS;AAC/B,uBAAuB,mBAAO,CAAC,mGAAkB;AACjD,cAAc,mBAAO,CAAC,sFAAe;AACrC,gBAAgB,mBAAO,CAAC,0FAAiB;AACzC,cAAc,mBAAO,CAAC,wFAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC3MA;AACa;AACb,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,wFAAgB;AACtC,kBAAkB,mBAAO,CAAC,gGAAoB;AAC9C,oBAAoB,mBAAO,CAAC,6FAAe;AAC3C;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC9XA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,wFAAgB;AACtC,aAAa,mBAAO,CAAC,kGAAqB;AAC1C,aAAa,mBAAO,CAAC,kGAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;;;;;;;;;;;;;AC7LA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpIA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,iFAAS;AAC/B,gBAAgB,mBAAO,CAAC,0FAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AChHA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,2FAAmB;AACzC,kBAAkB,mBAAO,CAAC,mGAAuB;AACjD,eAAe,mBAAO,CAAC,0FAAU;AACjC,wBAAwB,mBAAO,CAAC,+GAA6B;AAC7D,aAAa,mBAAO,CAAC,yFAAkB;AACvC,eAAe,mBAAO,CAAC,2FAAmB;AAC1C,aAAa,mBAAO,CAAC,qGAAwB;AAC7C,YAAY,mBAAO,CAAC,mGAAuB;AAC3C,iBAAiB,mBAAO,CAAC,wFAAa;AACtC,cAAc,mBAAO,CAAC,yFAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,6CAA6C,iCAAiC,EAAE;AAChF;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,4DAA4D,sBAAsB,EAAE;AACpF,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,2CAA2C,EAAE;AAC5F,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kCAAkC,uCAAuC,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACzkBA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,2FAAmB;AACzC,kBAAkB,mBAAO,CAAC,mGAAuB;AACjD,aAAa,mBAAO,CAAC,qGAAwB;AAC7C,aAAa,mBAAO,CAAC,qGAAwB;AAC7C,kBAAkB,mBAAO,CAAC,mGAAuB;AACjD,iBAAiB,mBAAO,CAAC,wFAAa;AACtC,eAAe,mBAAO,CAAC,0FAAU;AACjC,aAAa,mBAAO,CAAC,yFAAkB;AACvC,eAAe,mBAAO,CAAC,2FAAmB;AAC1C,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,mBAAmB,mBAAO,CAAC,sGAAoB;AAC/C;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wDAAwD,2EAA2E,EAAE;AACrI;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,6CAA6C,iCAAiC,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,4DAA4D,sBAAsB,EAAE;AACpF,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,sDAAsD,EAAE;AAClI,0EAA0E,0CAA0C,EAAE;AACtH;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,yDAAyD,iDAAiD,EAAE;AAC5G,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACpqBA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,qGAAwB;AAC7C,wBAAwB,mBAAO,CAAC,+GAA6B;AAC7D,kBAAkB,mBAAO,CAAC,mGAAuB;AACjD,cAAc,mBAAO,CAAC,2FAAmB;AACzC,YAAY,mBAAO,CAAC,mGAAuB;AAC3C,cAAc,mBAAO,CAAC,yFAAkB;AACxC,iBAAiB,mBAAO,CAAC,wFAAa;AACtC,eAAe,mBAAO,CAAC,0FAAU;AACjC,eAAe,mBAAO,CAAC,2FAAmB;AAC1C,aAAa,mBAAO,CAAC,yFAAkB;AACvC,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,sBAAsB,EAAE;AACxE,gDAAgD,sBAAsB,EAAE;AACxuBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,uCAAuC,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC5WA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,2FAAmB;AACzC,aAAa,mBAAO,CAAC,qGAAwB;AAC7C,aAAa,mBAAO,CAAC,qGAAwB;AAC7C,kBAAkB,mBAAO,CAAC,mGAAuB;AACjD,oBAAoB,mBAAO,CAAC,uGAAyB;AACrD,cAAc,mBAAO,CAAC,yFAAkB;AACxC,iBAAiB,mBAAO,CAAC,wFAAa;AACtC,eAAe,mBAAO,CAAC,yGAA0B;AACjD,eAAe,mBAAO,CAAC,0FAAU;AACjC,aAAa,mBAAO,CAAC,yFAAkB;AACvC,eAAe,mBAAO,CAAC,2FAAmB;AAC1C,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,4BAA4B,EAAE;AAClG;AACA,SAAS;AACT;AACA;AACA,4DAA4D,kBAAkB;AAC9E;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,+BAA+B;AACvF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wDAAwD,2EAA2E,EAAE;AACrI;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,wDAAwD,EAAE;AACpH,+DAA+D,cAAc,EAAE;AAC/E;AACA;AACA;AACA;AACA,mDAAmD,sCAAsC,EAAE;AAC3F,SAAS;AACT;AACA;AACA;AACA,mDAAmD,kCAAkC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA,oDAAoD,qCAAqC,EAAE;AAC3F;AACA,+DAA+D,0CAA0C,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkaAAa;AACb;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC9sBA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,+GAA6B;AAC7D,kBAAkB,mBAAO,CAAC,mGAAuB;AACjD,cAAc,mBAAO,CAAC,2FAAmB;AACzC,YAAY,mBAAO,CAAC,mGAAuB;AAC3C,cAAc,mBAAO,CAAC,yFAAkB;AACxC,iBAAiB,mBAAO,CAAC,wFAAa;AACtC,eAAe,mBAAO,CAAC,0FAAU;AACjC,eAAe,mBAAO,CAAC,2FAAmB;AAC1C,0BAA0B,mBAAO,CAAC,mEAAmB;AACrD,oBAAoB,mBAAO,CAAC,uGAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,2DAA2D,uCAAuC,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,MAAM,uBAAuB,OAAO,IAAI,QAAQ,MAAM,OAAO,IAAI,QAAQ;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACxaA;AACa;AACb,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,2FAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC9EA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA,+BAA+B,YAAY;AAC3C,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,2BAA2B,EAAE;AACvG;AACA;AACA,CAAC;AACD;AACA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA,uCAAuC,oDAAoD,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA,2DAA2D,iCAAiC,EAAE;AAC9F;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjqCAAqC,yCAAyC,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,UAAU,uBAAuB,EAAE,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,YAAY;AAC5C,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,UAAU,mCAAmC,EAAE,EAAE;AAC5G,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA,4CAA4C,kCAAkC,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzTA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,aAAa;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,iEAAiE;AACjE;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,iEAAiE;AACjE;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,0DAA0D;AAC1D;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACzLA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kBAAkB;AAC/C;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC/IA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,qGAAmB;AACnD,gBAAgB,mBAAO,CAAC,0FAAiB;AACzC,cAAc,mBAAO,CAAC,sFAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,UAAU;AAC1C;AACA;AACA,iCAAiC,oBAAoB;AACrD;AACA;AACA;AACA;AACA,6BAA6B,kBAAkB;AAC/C;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,yBAAyB,kBAAkB;AAC3C;AACA;AACA;AACA;AACA;AACA,4BAA4B,UAAU;AACtC;AACA;AACA,6BAA6B,oBAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjHA;AACa;AACb;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA,4BAA4B;AAC5B;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wBAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC/CA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,+EAAQ;AAC7B,eAAe,mBAAO,CAAC,mFAAU;AACjuBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACtJA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACpFA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,+EAAQ;AAC7B,aAAa,mBAAO,CAAC,+EAAQ;AAC7B,eAAe,mBAAO,CAAC,mFAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACvGA;AACa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yFAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC,sCAAsC;AACtC;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjFA;AACa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,+EAAQ;AAC7B;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AChSA;AACa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,mFAAU;AACjC;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2BAA2B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,+BAA+B,+BAA+B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAurD;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,0CAA0C,QAAQ;AAClgDAAgD;AAChD;AACA,CAAC;AACD;;;;;;;;;;;;;ACxiBA;AACa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,+FAAgqCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,4DAA4D,uCAAuC,EAAE;AACrgCAAgC,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+MAA+M,YAAY,iBAAiB;AAC5O;AACA;AACA;AACA,mMAAmM,YAAY,iBAAiB;AAChO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACrpBA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,sDAAsD;AACtD,qCAAqC;AACrC;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1GA;AACa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,oGAAsB;AACjD;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACtLA;AACa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,+EAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB,aAAa;AACjC,QAAQ,mBAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa,sBAAsB,aAAa;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,eAAe,EAAE;AACpD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,yBAAyB,EAAE;AACtE;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,yBAAyB,YAAY,MAAM,WAAW;AACtD;AACA;AACA;AACA,sEAAsE,iBAAiB;AACvF;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,CAAC;AACD;;;;;;;;;;;;;ACjeA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,uFAAS;AAC/B,eAAe,mBAAO,CAAC,oFAAW;AAClC,aAAa,mBAAO,CAAC,gFAAS;AAC9B,cAAc,mBAAO,CAAC,yFAAkB;AACxC,eAAe,mBAAO,CAAC,2FAAmB;AAC1C,eAAe,mBAAO,CAAC,2FAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mBAAmB;AACjC,cAAc,oBAAoB;AAClC,cAAc,oBAAoB;AAClC;AACA,sBAAsB,mBAAmB;AACzC,YAAY,sBAAsB;AAClC;AACA,qFAAqF;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD,oCAAoC,gBAAgB;AACpD,kCAAkC,wBAAwB;AAC1D,0CAA0C,0BAA0B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;;;;;;;;;;;;;ACrQA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,uFAAS;AAC/B,eAAe,mBAAO,CAAC,2FAAmB;AAC1C,aAAa,mBAAO,CAAC,gFAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;;;;;;;;;;;;;AClJA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,uFAAS;AAC/B,eAAe,mBAAO,CAAC,oFAAW;AAClC;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AClEA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,uFAAS;AAC/B,eAAe,mBAAO,CAAC,oFAAW;AAClC,aAAa,mBAAO,CAAC,gFAAS;AAC9B;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AClSA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,uFAAS;AAC/B,eAAe,mBAAO,CAAC,oFAAW;AAClC,cAAc,mBAAO,CAAC,yFAAkB;AACxC,eAAe,mBAAO,CAAC,2FAAmB;AAC1C,aAAa,mBAAO,CAAC,gFAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD,kCAAkC,wBAAwB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AChQA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,gFAAS;AAC9B,eAAe,mBAAO,CAAC,2FAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,2BAA2B;AAC7E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,2BAA2B;AAC7E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;;;;;;;;;;;;;AClVA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,uFAAS;AAC/B,eAAe,mBAAO,CAAC,2FAAmB;AAC1C,aAAa,mBAAO,CAAC,gFAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;;;;;;;;;;;;;AC5UA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9CA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjDA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,iCAAiC;AAClF;AACA;AACA,0DAA0D;AAC1D;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;;;;;;;;;;;;;ACtCA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA,6BAA6B,SAAS;AACtC,+BAA+B,aAAa;AAC5C,gCAAgC,cAAc;AAC9C,8BAA8B,cAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACtBA;AACa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA","file":"default~admin-components-admin-module~resource-resource-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar chartService_1 = require(\"./dist/lib/chartAdaptor/chartService\");\nvar chartTranslator_1 = require(\"./dist/lib/chartAdaptor/chartComp/chartTranslator\");\nexports.ChartsModule = {\n    moduleName: \"chartsModule\" /* ChartsModule */,\n    enterpriseBeans: [\n        chartService_1.ChartService, chartTranslator_1.ChartTranslator\n    ],\n    enterpriseComponents: []\n};\nag_grid_community_1.Grid.addModule([exports.ChartsModule]);\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cartesianChart_1 = require(\"../../charts/chart/cartesianChart\");\nvar polarChart_1 = require(\"../../charts/chart/polarChart\");\nvar lineSeries_1 = require(\"../../charts/chart/series/lineSeries\");\nvar scatterSeries_1 = require(\"../../charts/chart/series/scatterSeries\");\nvar barSeries_1 = require(\"../../charts/chart/series/barSeries\");\nvar areaSeries_1 = require(\"../../charts/chart/series/areaSeries\");\nvar pieSeries_1 = require(\"../../charts/chart/series/pieSeries\");\nvar dropShadow_1 = require(\"../../charts/scene/dropShadow\");\nvar categoryAxis_1 = require(\"../../charts/chart/axis/categoryAxis\");\nvar numberAxis_1 = require(\"../../charts/chart/axis/numberAxis\");\nvar padding_1 = require(\"../../charts/util/padding\");\nvar caption_1 = require(\"../../charts/caption\");\nvar groupedCategoryAxis_1 = require(\"../../charts/chart/axis/groupedCategoryAxis\");\nvar groupedCategoryChart_1 = require(\"../../charts/chart/groupedCategoryChart\");\nvar ChartBuilder = /** @class */ (function () {\n    function ChartBuilder() {\n    }\n    ChartBuilder.createCartesianChart = function (options) {\n        var chart = new cartesianChart_1.CartesianChart({\n            document: options.document,\n            xAxis: ChartBuilder.createAxis(options.xAxis),\n            yAxis: ChartBuilder.createAxis(options.yAxis)\n        });\n        return ChartBuilder.initCartesianChart(chart, options);\n    };\n    ChartBuilder.createGroupedColumnChart = function (options) {\n        var chart = new groupedCategoryChart_1.GroupedCategoryChart({\n            document: options.document,\n            xAxis: ChartBuilder.createGroupedAxis(options.xAxis),\n            yAxis: ChartBuilder.createAxis(options.yAxis)\n        });\n        return ChartBuilder.initGroupedCategoryChart(chart, options, 'bar');\n    };\n    ChartBuilder.createGroupedBarChart = function (options) {\n        var chart = new groupedCategoryChart_1.GroupedCategoryChart({\n            document: options.document,\n            xAxis: ChartBuilder.createAxis(options.yAxis),\n            yAxis: ChartBuilder.createGroupedAxis(options.xAxis)\n        });\n        chart.layout = cartesianChart_1.CartesianChartLayout.Horizontal;\n        return ChartBuilder.initGroupedCategoryChart(chart, options, 'bar');\n    };\n    ChartBuilder.createGroupedLineChart = function (options) {\n        var chart = new groupedCategoryChart_1.GroupedCategoryChart({\n            document: options.document,\n            xAxis: ChartBuilder.createGroupedAxis(options.xAxis),\n            yAxis: ChartBuilder.createAxis(options.yAxis)\n        });\n        return ChartBuilder.initGroupedCategoryChart(chart, options, 'line');\n    };\n    ChartBuilder.createGroupedAreaChart = function (options) {\n        var chart = new groupedCategoryChart_1.GroupedCategoryChart({\n            document: options.document,\n            xAxis: ChartBuilder.createGroupedAxis(options.xAxis),\n            yAxis: ChartBuilder.createAxis(options.yAxis)\n        });\n        return ChartBuilder.initGroupedCategoryChart(chart, options, 'area');\n    };\n    ChartBuilder.createBarChart = function (options) {\n        var chart = new cartesianChart_1.CartesianChart({\n            document: options.document,\n            xAxis: ChartBuilder.createAxis(options.yAxis),\n            yAxis: ChartBuilder.createAxis(options.xAxis)\n        });\n        chart.layout = cartesianChart_1.CartesianChartLayout.Horizontal;\n        return ChartBuilder.initCartesianChart(chart, options, 'bar');\n    };\n    ChartBuilder.createColumnChart = function (options) {\n        var chart = new cartesianChart_1.CartesianChart({\n            document: options.document,\n            xAxis: ChartBuilder.createAxis(options.xAxis),\n            yAxis: ChartBuilder.createAxis(options.yAxis)\n        });\n        return ChartBuilder.initCartesianChart(chart, options, 'bar');\n    };\n    ChartBuilder.createLineChart = function (options) {\n        var chart = new cartesianChart_1.CartesianChart({\n            document: options.document,\n            xAxis: ChartBuilder.createAxis(options.xAxis),\n            yAxis: ChartBuilder.createAxis(options.yAxis)\n        });\n        return ChartBuilder.initCartesianChart(chart, options, 'line');\n    };\n    ChartBuilder.createScatterChart = function (options) {\n        var chart = new cartesianChart_1.CartesianChart({\n            document: options.document,\n            xAxis: ChartBuilder.createAxis(options.xAxis),\n            yAxis: ChartBuilder.createAxis(options.yAxis)\n        });\n        return ChartBuilder.initCartesianChart(chart, options, 'scatter');\n    };\n    ChartBuilder.createAreaChart = function (options) {\n        var chart = new cartesianChart_1.CartesianChart({\n            document: options.document,\n            xAxis: ChartBuilder.createAxis(options.xAxis),\n            yAxis: ChartBuilder.createAxis(options.yAxis)\n        });\n        return ChartBuilder.initCartesianChart(chart, options, 'area');\n    };\n    ChartBuilder.createPolarChart = function (options) {\n        var chart = new polarChart_1.PolarChart();\n        return ChartBuilder.initPolarChart(chart, options);\n    };\n    ChartBuilder.createDoughnutChart = function (options) {\n        var chart = new polarChart_1.PolarChart();\n        return ChartBuilder.initPolarChart(chart, options);\n    };\n    ChartBuilder.createPieChart = function (options) {\n        var chart = new polarChart_1.PolarChart();\n        return ChartBuilder.initPolarChart(chart, options, 'pie');\n    };\n    ChartBuilder.createLineSeries = function (options) {\n        return new lineSeries_1.LineSeries();\n    };\n    ChartBuilder.createScatterSeries = function (options) {\n        return new scatterSeries_1.ScatterSeries();\n    };\n    ChartBuilder.createSeries = function (options, type) {\n        switch (type || options && options.type) {\n            case 'line':\n                return ChartBuilder.initLineSeries(new lineSeries_1.LineSeries(), options);\n            case 'scatter':\n                return ChartBuilder.initScatterSeries(new scatterSeries_1.ScatterSeries(), options);\n            case 'bar':\n                return ChartBuilder.initBarSeries(new barSeries_1.BarSeries(), options);\n            case 'area':\n                return ChartBuilder.initAreaSeries(new areaSeries_1.AreaSeries(), options);\n            case 'pie':\n                return ChartBuilder.initPieSeries(new pieSeries_1.PieSeries(), options);\n            default:\n                return null;\n        }\n    };\n    ChartBuilder.initChart = function (chart, options, seriesType) {\n        if (options.parent !== undefined) {\n            chart.parent = options.parent;\n        }\n        if (options.width !== undefined) {\n            chart.width = options.width;\n        }\n        if (options.height !== undefined) {\n            chart.height = options.height;\n        }\n        if (options.title) {\n            chart.title = ChartBuilder.createChartTitle(options.title);\n        }\n        if (options.subtitle) {\n            chart.subtitle = ChartBuilder.createChartSubtitle(options.subtitle);\n        }\n        if (options.series !== undefined) {\n            var seriesConfigs = options.series;\n            var seriesInstances = [];\n            for (var i = 0, n = seriesConfigs.length; i < n; i++) {\n                var seriesInstance = ChartBuilder.createSeries(seriesConfigs[i], seriesType);\n                if (seriesInstance) {\n                    seriesInstances.push(seriesInstance);\n                }\n            }\n            chart.series = seriesInstances;\n        }\n        if (options.padding !== undefined) {\n            chart.padding = new padding_1.Padding(options.padding.top, options.padding.right, options.padding.bottom, options.padding.left);\n        }\n        if (options.background !== undefined) {\n            if (options.background.fill !== undefined) {\n                chart.background.fill = options.background.fill;\n            }\n            if (options.background.visible !== undefined) {\n                chart.background.visible = options.background.visible;\n            }\n        }\n        if (options.legendPosition !== undefined) {\n            chart.legendPosition = options.legendPosition;\n        }\n        if (options.legendPadding !== undefined) {\n            chart.legendPadding = options.legendPadding;\n        }\n        if (options.legend !== undefined) {\n            ChartBuilder.initLegend(chart.legend, options.legend);\n        }\n        if (options.data !== undefined) {\n            chart.data = options.data;\n        }\n        if (options.tooltipClass !== undefined) {\n            chart.tooltipClass = options.tooltipClass;\n        }\n        return chart;\n    };\n    ChartBuilder.initCartesianChart = function (chart, options, seriesType) {\n        ChartBuilder.initChart(chart, options, seriesType);\n        return chart;\n    };\n    ChartBuilder.initGroupedCategoryChart = function (chart, options, seriesType) {\n        ChartBuilder.initChart(chart, options, seriesType);\n        return chart;\n    };\n    ChartBuilder.initPolarChart = function (chart, options, seriesType) {\n        ChartBuilder.initChart(chart, options, seriesType);\n        return chart;\n    };\n    ChartBuilder.initSeries = function (series, options) {\n        if (options.visible !== undefined) {\n            series.visible = options.visible;\n        }\n        if (options.showInLegend !== undefined) {\n            series.showInLegend = options.showInLegend;\n        }\n        if (options.tooltipEnabled !== undefined) {\n            series.tooltipEnabled = options.tooltipEnabled;\n        }\n        if (options.data !== undefined) {\n            series.data = options.data;\n        }\n        return series;\n    };\n    ChartBuilder.initLineSeries = function (series, options) {\n        ChartBuilder.initSeries(series, options);\n        if (options.title !== undefined) {\n            series.title = options.title;\n        }\n        if (options.xField !== undefined) {\n            series.xField = options.xField;\n        }\n        if (options.yField !== undefined) {\n            series.yField = options.yField;\n        }\n        if (options.fill !== undefined) {\n            series.fill = options.fill;\n        }\n        if (options.stroke !== undefined) {\n            series.stroke = options.stroke;\n        }\n        if (options.strokeWidth !== undefined) {\n            series.strokeWidth = options.strokeWidth;\n        }\n        if (options.highlightStyle !== undefined) {\n            series.highlightStyle = options.highlightStyle;\n        }\n        if (options.marker !== undefined) {\n            series.marker = options.marker;\n        }\n        if (options.markerSize !== undefined) {\n            series.markerSize = options.markerSize;\n        }\n        if (options.markerStrokeWidth !== undefined) {\n            series.markerStrokeWidth = options.markerStrokeWidth;\n        }\n        if (options.tooltipRenderer !== undefined) {\n            series.tooltipRenderer = options.tooltipRenderer;\n        }\n        return series;\n    };\n    ChartBuilder.initScatterSeries = function (series, options) {\n        ChartBuilder.initSeries(series, options);\n        if (options.title !== undefined) {\n            series.title = options.title;\n        }\n        if (options.xField !== undefined) {\n            series.xField = options.xField;\n        }\n        if (options.yField !== undefined) {\n            series.yField = options.yField;\n        }\n        if (options.radiusField !== undefined) {\n            series.radiusField = options.radiusField;\n        }\n        if (options.xFieldName !== undefined) {\n            series.xFieldName = options.xFieldName;\n        }\n        if (options.yFieldName !== undefined) {\n            series.yFieldName = options.yFieldName;\n        }\n        if (options.radiusFieldName !== undefined) {\n            series.radiusFieldName = options.radiusFieldName;\n        }\n        if (options.fill !== undefined) {\n            series.fill = options.fill;\n        }\n        if (options.stroke !== undefined) {\n            series.stroke = options.stroke;\n        }\n        if (options.fillOpacity !== undefined) {\n            series.fillOpacity = options.fillOpacity;\n        }\n        if (options.strokeOpacity !== undefined) {\n            series.strokeOpacity = options.strokeOpacity;\n        }\n        if (options.highlightStyle !== undefined) {\n            series.highlightStyle = options.highlightStyle;\n        }\n        if (options.markerSize !== undefined) {\n            series.markerSize = options.markerSize;\n        }\n        if (options.minMarkerSize !== undefined) {\n            series.minMarkerSize = options.minMarkerSize;\n        }\n        if (options.markerStrokeWidth !== undefined) {\n            series.markerStrokeWidth = options.markerStrokeWidth;\n        }\n        if (options.tooltipRenderer !== undefined) {\n            series.tooltipRenderer = options.tooltipRenderer;\n        }\n        return series;\n    };\n    ChartBuilder.initBarSeries = function (series, options) {\n        ChartBuilder.initSeries(series, options);\n        if (options.xField !== undefined) {\n            series.xField = options.xField;\n        }\n        if (options.yFields !== undefined) {\n            series.yFields = options.yFields;\n        }\n        if (options.yFieldNames !== undefined) {\n            series.yFieldNames = options.yFieldNames;\n        }\n        if (options.grouped !== undefined) {\n            series.grouped = options.grouped;\n        }\n        if (options.normalizedTo !== undefined) {\n            series.normalizedTo = options.normalizedTo;\n        }\n        if (options.fills !== undefined) {\n            series.fills = options.fills;\n        }\n        if (options.strokes !== undefined) {\n            series.strokes = options.strokes;\n        }\n        if (options.fillOpacity !== undefined) {\n            series.fillOpacity = options.fillOpacity;\n        }\n        if (options.strokeOpacity !== undefined) {\n            series.strokeOpacity = options.strokeOpacity;\n        }\n        if (options.strokeWidth !== undefined) {\n            series.strokeWidth = options.strokeWidth;\n        }\n        if (options.highlightStyle !== undefined) {\n            series.highlightStyle = options.highlightStyle;\n        }\n        if (options.labelEnabled !== undefined) {\n            series.labelEnabled = options.labelEnabled;\n        }\n        if (options.labelFontStyle !== undefined) {\n            series.labelFontStyle = options.labelFontStyle;\n        }\n        if (options.labelFontWeight !== undefined) {\n            series.labelFontWeight = options.labelFontWeight;\n        }\n        if (options.labelFontSize !== undefined) {\n            series.labelFontSize = options.labelFontSize;\n        }\n        if (options.labelFontFamily !== undefined) {\n            series.labelFontFamily = options.labelFontFamily;\n        }\n        if (options.labelFormatter !== undefined) {\n            series.labelFormatter = options.labelFormatter;\n        }\n        if (options.tooltipRenderer !== undefined) {\n            series.tooltipRenderer = options.tooltipRenderer;\n        }\n        if (options.shadow !== undefined) {\n            series.shadow = ChartBuilder.createDropShadow(options.shadow);\n        }\n        return series;\n    };\n    ChartBuilder.initAreaSeries = function (series, options) {\n        ChartBuilder.initSeries(series, options);\n        if (options.xField !== undefined) {\n            series.xField = options.xField;\n        }\n        if (options.yFields !== undefined) {\n            series.yFields = options.yFields;\n        }\n        if (options.yFieldNames !== undefined) {\n            series.yFieldNames = options.yFieldNames;\n        }\n        if (options.normalizedTo !== undefined) {\n            series.normalizedTo = options.normalizedTo;\n        }\n        if (options.fills !== undefined) {\n            series.fills = options.fills;\n        }\n        if (options.strokes !== undefined) {\n            series.strokes = options.strokes;\n        }\n        if (options.fillOpacity !== undefined) {\n            series.fillOpacity = options.fillOpacity;\n        }\n        if (options.strokeOpacity !== undefined) {\n            series.strokeOpacity = options.strokeOpacity;\n        }\n        if (options.strokeWidth !== undefined) {\n            series.strokeWidth = options.strokeWidth;\n        }\n        if (options.highlightStyle !== undefined) {\n            series.highlightStyle = options.highlightStyle;\n        }\n        if (options.marker !== undefined) {\n            series.marker = options.marker;\n        }\n        if (options.markerSize !== undefined) {\n            series.markerSize = options.markerSize;\n        }\n        if (options.markerStrokeWidth !== undefined) {\n            series.markerStrokeWidth = options.markerStrokeWidth;\n        }\n        if (options.tooltipRenderer !== undefined) {\n            series.tooltipRenderer = options.tooltipRenderer;\n        }\n        if (options.shadow !== undefined) {\n            series.shadow = ChartBuilder.createDropShadow(options.shadow);\n        }\n        return series;\n    };\n    ChartBuilder.initPieSeries = function (series, options) {\n        ChartBuilder.initSeries(series, options);\n        if (options.title !== undefined) {\n            series.title = ChartBuilder.createPieTitle(options.title);\n        }\n        if (options.calloutColors !== undefined) {\n            series.calloutColors = options.calloutColors;\n        }\n        if (options.calloutStrokeWidth !== undefined) {\n            series.calloutStrokeWidth = options.calloutStrokeWidth;\n        }\n        if (options.calloutLength !== undefined) {\n            series.calloutLength = options.calloutLength;\n        }\n        if (options.calloutLength !== undefined) {\n            series.calloutLength = options.calloutLength;\n        }\n        if (options.labelFontStyle !== undefined) {\n            series.labelFontStyle = options.labelFontStyle;\n        }\n        if (options.labelFontWeight !== undefined) {\n            series.labelFontWeight = options.labelFontWeight;\n        }\n        if (options.labelFontSize !== undefined) {\n            series.labelFontSize = options.labelFontSize;\n        }\n        if (options.labelFontFamily !== undefined) {\n            series.labelFontFamily = options.labelFontFamily;\n        }\n        if (options.labelColor !== undefined) {\n            series.labelColor = options.labelColor;\n        }\n        if (options.labelMinAngle !== undefined) {\n            series.labelMinAngle = options.labelMinAngle;\n        }\n        if (options.angleField !== undefined) {\n            series.angleField = options.angleField;\n        }\n        if (options.radiusField !== undefined) {\n            series.radiusField = options.radiusField;\n        }\n        if (options.labelField !== undefined) {\n            series.labelField = options.labelField;\n        }\n        if (options.labelEnabled !== undefined) {\n            series.labelEnabled = options.labelEnabled;\n        }\n        if (options.fills !== undefined) {\n            series.fills = options.fills;\n        }\n        if (options.strokes !== undefined) {\n            series.strokes = options.strokes;\n        }\n        if (options.fillOpacity !== undefined) {\n            series.fillOpacity = options.fillOpacity;\n        }\n        if (options.strokeOpacity !== undefined) {\n            series.strokeOpacity = options.strokeOpacity;\n        }\n        if (options.highlightStyle !== undefined) {\n            series.highlightStyle = options.highlightStyle;\n        }\n        if (options.rotation !== undefined) {\n            series.rotation = options.rotation;\n        }\n        if (options.outerRadiusOffset !== undefined) {\n            series.outerRadiusOffset = options.outerRadiusOffset;\n        }\n        if (options.innerRadiusOffset !== undefined) {\n            series.innerRadiusOffset = options.innerRadiusOffset;\n        }\n        if (options.strokeWidth !== undefined) {\n            series.strokeWidth = options.strokeWidth;\n        }\n        if (options.shadow !== undefined) {\n            series.shadow = ChartBuilder.createDropShadow(options.shadow);\n        }\n        if (options.tooltipRenderer !== undefined) {\n            series.tooltipRenderer = options.tooltipRenderer;\n        }\n        return series;\n    };\n    ChartBuilder.initLegend = function (legend, options) {\n        if (options.enabled !== undefined) {\n            legend.enabled = options.enabled;\n        }\n        if (options.markerStrokeWidth !== undefined) {\n            legend.markerStrokeWidth = options.markerStrokeWidth;\n        }\n        if (options.markerSize !== undefined) {\n            legend.markerSize = options.markerSize;\n        }\n        if (options.markerPadding !== undefined) {\n            legend.markerPadding = options.markerPadding;\n        }\n        if (options.itemPaddingX !== undefined) {\n            legend.itemPaddingX = options.itemPaddingX;\n        }\n        if (options.itemPaddingY !== undefined) {\n            legend.itemPaddingY = options.itemPaddingY;\n        }\n        if (options.labelFontStyle !== undefined) {\n            legend.labelFontStyle = options.labelFontStyle;\n        }\n        if (options.labelFontWeight !== undefined) {\n            legend.labelFontWeight = options.labelFontWeight;\n        }\n        if (options.labelFontSize !== undefined) {\n            legend.labelFontSize = options.labelFontSize;\n        }\n        if (options.labelFontFamily !== undefined) {\n            legend.labelFontFamily = options.labelFontFamily;\n        }\n        if (options.labelColor !== undefined) {\n            legend.labelColor = options.labelColor;\n        }\n    };\n    ChartBuilder.createAxisTitle = function (options) {\n        options = Object.create(options);\n        if (options.text === undefined) {\n            options.text = 'Title';\n        }\n        if (options.fontWeight === undefined) {\n            options.fontWeight = 'bold';\n        }\n        if (options.fontSize === undefined) {\n            options.fontSize = 16;\n        }\n        if (options.fontFamily === undefined) {\n            options.fontFamily = 'Verdana, sans-serif';\n        }\n        return ChartBuilder.createCaption(options);\n    };\n    ChartBuilder.createChartTitle = function (options) {\n        options = Object.create(options);\n        if (options.text === undefined) {\n            options.text = 'Title';\n        }\n        if (options.fontWeight === undefined) {\n            options.fontWeight = 'bold';\n        }\n        if (options.fontSize === undefined) {\n            options.fontSize = 16;\n        }\n        if (options.fontFamily === undefined) {\n            options.fontFamily = 'Verdana, sans-serif';\n        }\n        return ChartBuilder.createCaption(options);\n    };\n    ChartBuilder.createChartSubtitle = function (options) {\n        options = Object.create(options);\n        if (options.text === undefined) {\n            options.text = 'Subtitle';\n        }\n        if (options.fontWeight === undefined) {\n            options.fontWeight = 'bold';\n        }\n        if (options.fontSize === undefined) {\n            options.fontSize = 12;\n        }\n        if (options.fontFamily === undefined) {\n            options.fontFamily = 'Verdana, sans-serif';\n        }\n        return ChartBuilder.createCaption(options);\n    };\n    ChartBuilder.createPieTitle = function (options) {\n        options = Object.create(options);\n        if (options.fontWeight === undefined) {\n            options.fontWeight = 'bold';\n        }\n        if (options.fontSize === undefined) {\n            options.fontSize = 12;\n        }\n        if (options.fontFamily === undefined) {\n            options.fontFamily = 'Verdana, sans-serif';\n        }\n        return ChartBuilder.createCaption(options);\n    };\n    ChartBuilder.createCaption = function (options) {\n        var caption = new caption_1.Caption();\n        if (options.text !== undefined) {\n            caption.text = options.text;\n        }\n        if (options.fontStyle !== undefined) {\n            caption.fontStyle = options.fontStyle;\n        }\n        if (options.fontWeight !== undefined) {\n            caption.fontWeight = options.fontWeight;\n        }\n        if (options.fontSize !== undefined) {\n            caption.fontSize = options.fontSize;\n        }\n        if (options.fontFamily !== undefined) {\n            caption.fontFamily = options.fontFamily;\n        }\n        if (options.color !== undefined) {\n            caption.color = options.color;\n        }\n        if (options.enabled !== undefined) {\n            caption.enabled = options.enabled;\n        }\n        return caption;\n    };\n    ChartBuilder.createDropShadow = function (options) {\n        if (options === void 0) { options = {}; }\n        return new dropShadow_1.DropShadow(options);\n    };\n    ChartBuilder.createAxis = function (options) {\n        var axis = undefined;\n        switch (options.type) {\n            case 'category':\n                axis = new categoryAxis_1.CategoryAxis();\n                break;\n            case 'number':\n                axis = new numberAxis_1.NumberAxis();\n                break;\n        }\n        if (!axis) {\n            throw new Error('Unknown axis type.');\n        }\n        for (var name_1 in options) {\n            if (name_1 === 'type') {\n                continue;\n            }\n            if (name_1 === 'title' && options.title) {\n                axis.title = ChartBuilder.createAxisTitle(options.title);\n                continue;\n            }\n            var value = options[name_1];\n            if (value !== undefined) {\n                axis[name_1] = value;\n            }\n        }\n        return axis;\n    };\n    ChartBuilder.createGroupedAxis = function (options) {\n        var axis = new groupedCategoryAxis_1.GroupedCategoryAxis();\n        if (!axis) {\n            throw new Error('Unknown axis type.');\n        }\n        for (var name_2 in options) {\n            if (name_2 === 'type') {\n                continue;\n            }\n            if (name_2 === 'title' && options.title) {\n                axis.title = ChartBuilder.createAxisTitle(options.title);\n                continue;\n            }\n            var value = options[name_2];\n            if (value !== undefined) {\n                axis[name_2] = value;\n            }\n        }\n        return axis;\n    };\n    return ChartBuilder;\n}());\nexports.ChartBuilder = ChartBuilder;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar rangeController_1 = require(\"../../rangeController\");\nvar chartModel_1 = require(\"./chartModel\");\nvar ChartController = /** @class */ (function (_super) {\n    __extends(ChartController, _super);\n    function ChartController(chartModel) {\n        var _this = _super.call(this) || this;\n        _this.model = chartModel;\n        return _this;\n    }\n    ChartController.prototype.init = function () {\n        var _this = this;\n        this.updateForGridChange();\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_CHART_RANGE_SELECTION_CHANGED, function (event) {\n            if (event.id && event.id === _this.model.getChartId()) {\n                _this.updateForGridChange();\n            }\n        });\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_COLUMN_MOVED, this.updateForGridChange.bind(this));\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_COLUMN_PINNED, this.updateForGridChange.bind(this));\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_MODEL_UPDATED, this.updateForGridChange.bind(this));\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_CELL_VALUE_CHANGED, this.updateForGridChange.bind(this));\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_COLUMN_VISIBLE, this.updateForGridChange.bind(this));\n    };\n    ChartController.prototype.updateForGridChange = function () {\n        // don't update chart if chart is detached from grid data\n        if (this.model.isDetached()) {\n            return;\n        }\n        // update the model with changes to the cell ranges from the grid before updating the column state\n        this.model.updateCellRanges();\n        this.model.resetColumnState();\n        this.model.updateData();\n        // updates ranges with raising a new EVENT_CHART_RANGE_SELECTION_CHANGED\n        this.setChartRange();\n        this.raiseChartUpdatedEvent();\n    };\n    ChartController.prototype.updateForMenuChange = function (updatedCol) {\n        // update the column state before updating the cell ranges to be sent to the grid\n        this.model.updateColumnState(updatedCol);\n        this.model.updateCellRanges(updatedCol);\n        this.model.updateData();\n        // updates ranges with raising a new EVENT_CHART_RANGE_SELECTION_CHANGED\n        this.setChartRange();\n        this.raiseChartUpdatedEvent();\n    };\n    ChartController.prototype.getChartType = function () {\n        return this.model.getChartType();\n    };\n    ChartController.prototype.isPivotChart = function () {\n        return this.model.isPivotChart();\n    };\n    ChartController.prototype.getActivePalette = function () {\n        return this.model.getActivePalette();\n    };\n    ChartController.prototype.getPalettes = function () {\n        return this.model.getPalettes();\n    };\n    ChartController.prototype.setChartType = function (chartType) {\n        this.model.setChartType(chartType);\n        this.raiseChartUpdatedEvent();\n    };\n    ChartController.prototype.setChartWithPalette = function (chartType, palette) {\n        this.model.setChartType(chartType);\n        this.model.setActivePalette(palette);\n        this.raiseChartUpdatedEvent();\n    };\n    ChartController.prototype.getColStateForMenu = function () {\n        return { dimensionCols: this.model.getDimensionColState(), valueCols: this.model.getValueColState() };\n    };\n    ChartController.prototype.isDefaultCategorySelected = function () {\n        var selectedDimension = this.model.getSelectedDimension().colId;\n        return selectedDimension && selectedDimension === chartModel_1.ChartModel.DEFAULT_CATEGORY;\n    };\n    ChartController.prototype.setChartRange = function () {\n        if (!this.model.isSuppressChartRanges() && !this.model.isDetached()) {\n            this.rangeController.setCellRanges(this.model.getCellRanges());\n        }\n    };\n    ChartController.prototype.detachChartRange = function () {\n        // when chart is detached it won't listen to changes from the grid\n        this.model.toggleDetached();\n        if (this.model.isDetached()) {\n            // remove range from grid\n            this.rangeController.setCellRanges([]);\n        }\n        else {\n            // update grid with chart range\n            this.setChartRange();\n            // update chart data may have changed\n            this.updateForGridChange();\n        }\n    };\n    ChartController.prototype.getChartProxy = function () {\n        return this.model.getChartProxy();\n    };\n    ChartController.prototype.isActiveXYChart = function () {\n        var xyChartSelected = [ag_grid_community_1.ChartType.Scatter, ag_grid_community_1.ChartType.Bubble].indexOf(this.getChartType()) > -1;\n        // x y charts behave like regular cartesian charts if the default category is not selected, i.e. (None)\n        return xyChartSelected && this.isDefaultCategorySelected();\n    };\n    ChartController.prototype.raiseChartUpdatedEvent = function () {\n        var event = {\n            type: ChartController.EVENT_CHART_MODEL_UPDATED\n        };\n        this.dispatchEvent(event);\n    };\n    ChartController.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.rangeController) {\n            this.rangeController.setCellRanges([]);\n        }\n    };\n    ChartController.EVENT_CHART_MODEL_UPDATED = 'chartModelUpdated';\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], ChartController.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rangeController'),\n        __metadata(\"design:type\", rangeController_1.RangeController)\n    ], ChartController.prototype, \"rangeController\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ChartController.prototype, \"init\", null);\n    return ChartController;\n}(ag_grid_community_1.BeanStub));\nexports.ChartController = ChartController;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar aggregationStage_1 = require(\"../../rowStages/aggregationStage\");\nvar chartModel_1 = require(\"./chartModel\");\nvar ChartDatasource = /** @class */ (function (_super) {\n    __extends(ChartDatasource, _super);\n    function ChartDatasource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ChartDatasource.prototype.getData = function (params) {\n        var result = this.extractRowsFromGridRowModel(params);\n        result.data = this.aggregateRowsByDimension(params, result.data);\n        return result;\n    };\n    ChartDatasource.prototype.extractRowsFromGridRowModel = function (params) {\n        var _this = this;\n        var extractedRowData = [];\n        var columnNames = {};\n        // maps used to keep track of expanded groups that need to be removed\n        var groupNodeIndexes = {};\n        var groupsToRemove = {};\n        // make sure enough rows in range to chart. if user filters and less rows, then end row will be\n        // the last displayed row, not where the range ends.\n        var modelLastRow = this.gridRowModel.getRowCount() - 1;\n        var rangeLastRow = params.endRow > 0 ? Math.min(params.endRow, modelLastRow) : modelLastRow;\n        var numRows = rangeLastRow - params.startRow + 1;\n        var _loop_1 = function (i) {\n            var data = {};\n            // lookup row node from row model using row index\n            var rowNode = this_1.gridRowModel.getRow(i + params.startRow);\n            // first get data for dimensions columns\n            params.dimensionCols.forEach(function (col) {\n                var colId = col.colId;\n                var column = _this.columnController.getGridColumn(colId);\n                if (column) {\n                    var valueObject = _this.valueService.getValue(column, rowNode);\n                    // force return type to be string or empty string (as value can be an object)\n                    var value = (valueObject && valueObject.toString) ? valueObject.toString() : '';\n                    // when grouping we also need to build up multi category labels for charts\n                    if (params.grouping) {\n                        // traverse parents to extract group label path\n                        var labels_1 = _this.getGroupLabels(rowNode, [String(value)]);\n                        if (params.multiCategories) {\n                            // add group labels to group column for multi category charts\n                            data[colId] = { labels: labels_1, toString: function () { return labels_1[0]; } };\n                        }\n                        else {\n                            // concat group keys from the top group key down (used when grouping Pie charts)\n                            data[colId] = labels_1.slice().reverse().join(' - ');\n                        }\n                        // keep track of group node indexes so they can be padded when other groups are expanded\n                        if (rowNode.group) {\n                            groupNodeIndexes[labels_1.toString()] = i;\n                        }\n                        // if node (group or leaf) has parents then it is expanded and should be removed\n                        var groupKey = labels_1.slice(1, labels_1.length).toString();\n                        if (groupKey) {\n                            groupsToRemove[groupKey] = groupNodeIndexes[groupKey];\n                        }\n                    }\n                    else {\n                        // leaf nodes can be directly added to dimension columns\n                        data[colId] = value;\n                    }\n                }\n                else {\n                    // introduce a default category when no dimensions exist with a value based off row index (+1)\n                    data[chartModel_1.ChartModel.DEFAULT_CATEGORY] = (i + 1).toString();\n                }\n            });\n            // then get data for value columns\n            params.valueCols.forEach(function (col) {\n                var columnNamesArr = [];\n                // pivot keys should be added first\n                var pivotKeys = col.getColDef().pivotKeys;\n                if (pivotKeys) {\n                    columnNamesArr = pivotKeys.slice();\n                }\n                // then add column header name to results\n                var headerName = col.getColDef().headerName;\n                if (headerName) {\n                    columnNamesArr.push(headerName);\n                }\n                // add array of column names to results\n                if (columnNamesArr.length > 0) {\n                    columnNames[col.getId()] = columnNamesArr;\n                }\n                // add data value to value column\n                data[col.getId()] = _this.valueService.getValue(col, rowNode);\n            });\n            // add data to results\n            extractedRowData.push(data);\n        };\n        var this_1 = this;\n        for (var i = 0; i < numRows; i++) {\n            _loop_1(i);\n        }\n        if (params.grouping) {\n            // determine indexes of expanded group nodes to be removed\n            var groupIndexesToRemove_1 = Object.keys(groupsToRemove).map(function (key) { return groupsToRemove[key]; });\n            // remove expanded groups from results\n            extractedRowData = extractedRowData.filter(function (_, index) { return groupIndexesToRemove_1.indexOf(index) < 0; });\n        }\n        return { data: extractedRowData, columnNames: columnNames };\n    };\n    ChartDatasource.prototype.aggregateRowsByDimension = function (params, dataFromGrid) {\n        var _this = this;\n        var dimensionCols = params.dimensionCols;\n        var skipAggregation = !params.aggFunc || dimensionCols.length === 0;\n        if (skipAggregation) {\n            return dataFromGrid;\n        }\n        var lastCol = ag_grid_community_1._.last(dimensionCols);\n        var lastColId = lastCol && lastCol.colId;\n        var map = {};\n        var dataAggregated = [];\n        dataFromGrid.forEach(function (data) {\n            var currentMap = map;\n            dimensionCols.forEach(function (col) {\n                var colId = col.colId;\n                var key = data[colId];\n                if (colId === lastColId) {\n                    var groupItem_1 = currentMap[key];\n                    if (!groupItem_1) {\n                        groupItem_1 = { __children: [] };\n                        dimensionCols.forEach(function (col) {\n                            var colId = col.colId;\n                            groupItem_1[colId] = data[colId];\n                        });\n                        currentMap[key] = groupItem_1;\n                        dataAggregated.push(groupItem_1);\n                    }\n                    groupItem_1.__children.push(data);\n                }\n                else {\n                    // map of maps\n                    if (!currentMap[key]) {\n                        currentMap[key] = {};\n                    }\n                    currentMap = currentMap[key];\n                }\n            });\n        });\n        dataAggregated.forEach(function (groupItem) {\n            params.valueCols.forEach(function (col) {\n                var dataToAgg = [];\n                groupItem.__children.forEach(function (child) {\n                    dataToAgg.push(child[col.getId()]);\n                });\n                var aggResult = _this.aggregationStage.aggregateValues(dataToAgg, params.aggFunc);\n                if (typeof (aggResult.value) !== 'undefined') {\n                    groupItem[col.getId()] = aggResult.value;\n                }\n                else {\n                    groupItem[col.getId()] = aggResult;\n                }\n            });\n        });\n        return dataAggregated;\n    };\n    ChartDatasource.prototype.getGroupLabels = function (rowNode, result) {\n        // add parent group keys by walking up the tree\n        if (rowNode.level === 0) {\n            return result;\n        }\n        var parentNode = rowNode.parent;\n        result.push(parentNode.key);\n        return this.getGroupLabels(parentNode, result);\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], ChartDatasource.prototype, \"gridRowModel\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('valueService'),\n        __metadata(\"design:type\", ag_grid_community_1.ValueService)\n    ], ChartDatasource.prototype, \"valueService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('aggregationStage'),\n        __metadata(\"design:type\", aggregationStage_1.AggregationStage)\n    ], ChartDatasource.prototype, \"aggregationStage\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], ChartDatasource.prototype, \"columnController\", void 0);\n    return ChartDatasource;\n}(ag_grid_community_1.BeanStub));\nexports.ChartDatasource = ChartDatasource;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar chartDatasource_1 = require(\"./chartDatasource\");\nvar rangeController_1 = require(\"../../rangeController\");\nvar ChartModel = /** @class */ (function (_super) {\n    __extends(ChartModel, _super);\n    function ChartModel(params) {\n        var _this = _super.call(this) || this;\n        _this.dimensionColState = [];\n        _this.valueColState = [];\n        _this.initialising = true;\n        _this.detached = false;\n        _this.columnNames = {};\n        _this.pivotChart = params.pivotChart;\n        _this.chartType = params.chartType;\n        _this.aggFunc = params.aggFunc;\n        _this.cellRanges = params.cellRanges;\n        _this.palettes = params.palettes;\n        _this.activePalette = params.activePalette;\n        _this.suppressChartRanges = params.suppressChartRanges;\n        // this is used to associate chart ranges with charts\n        _this.chartId = _this.generateId();\n        return _this;\n    }\n    ChartModel.prototype.init = function () {\n        this.datasource = new chartDatasource_1.ChartDatasource();\n        this.getContext().wireBean(this.datasource);\n        // use first range as a reference range to be used after removing all cols (via menu) so we can re-add later\n        this.referenceCellRange = this.cellRanges[0];\n    };\n    ChartModel.prototype.updateData = function () {\n        var _a = this.getRowIndexes(), startRow = _a.startRow, endRow = _a.endRow;\n        var selectedDimension = this.getSelectedDimension();\n        var selectedValueCols = this.getSelectedValueCols();\n        this.grouping = this.isGrouping();\n        var params = {\n            aggFunc: this.aggFunc,\n            dimensionCols: [selectedDimension],\n            grouping: this.grouping,\n            pivoting: this.isPivotActive(),\n            multiCategories: this.isMultiCategoryChart(),\n            valueCols: selectedValueCols,\n            startRow: startRow,\n            endRow: endRow\n        };\n        var result = this.datasource.getData(params);\n        this.chartData = result.data;\n        this.columnNames = result.columnNames;\n    };\n    ChartModel.prototype.resetColumnState = function () {\n        var _this = this;\n        var _a = this.getAllChartColumns(), dimensionCols = _a.dimensionCols, valueCols = _a.valueCols;\n        var allCols = this.pivotChart ? this.columnController.getAllDisplayedColumns() : this.getAllColumnsFromRanges();\n        this.valueColState = valueCols.map(function (column) {\n            return {\n                column: column,\n                colId: column.getColId(),\n                displayName: _this.getColDisplayName(column),\n                selected: allCols.indexOf(column) > -1\n            };\n        });\n        this.dimensionColState = dimensionCols.map(function (column) {\n            return {\n                column: column,\n                colId: column.getColId(),\n                displayName: _this.getColDisplayName(column),\n                selected: false\n            };\n        });\n        var dimensionsInCellRange = dimensionCols.filter(function (col) { return allCols.indexOf(col) > -1; });\n        if (dimensionsInCellRange.length > 0) {\n            // select the first dimension from the range\n            var selectedDimensionId_1 = dimensionsInCellRange[0].getColId();\n            this.dimensionColState.forEach(function (cs) { return cs.selected = cs.colId === selectedDimensionId_1; });\n        }\n        // if no dimensions in range select the default\n        var defaultCategory = {\n            colId: ChartModel.DEFAULT_CATEGORY,\n            displayName: '(None)',\n            selected: dimensionsInCellRange.length === 0\n        };\n        this.dimensionColState.unshift(defaultCategory);\n    };\n    ChartModel.prototype.updateColumnState = function (updatedCol) {\n        var idsMatch = function (cs) { return cs.colId === updatedCol.colId; };\n        var isDimensionCol = this.dimensionColState.filter(idsMatch).length > 0;\n        var isValueCol = this.valueColState.filter(idsMatch).length > 0;\n        if (isDimensionCol) {\n            // only one dimension should be selected\n            this.dimensionColState.forEach(function (cs) { return cs.selected = idsMatch(cs); });\n        }\n        else if (isValueCol) {\n            // just update the selected value on the supplied value column\n            this.valueColState.forEach(function (cs) { return cs.selected = idsMatch(cs) ? updatedCol.selected : cs.selected; });\n        }\n    };\n    ChartModel.prototype.updateCellRanges = function (updatedCol) {\n        var _a = this.getAllChartColumns(), dimensionCols = _a.dimensionCols, valueCols = _a.valueCols;\n        var lastRange = ag_grid_community_1._.last(this.cellRanges);\n        if (lastRange) {\n            // update the reference range\n            this.referenceCellRange = lastRange;\n            if (updatedCol) {\n                var updatingStartCol = lastRange.columns[0] === updatedCol.column;\n                this.referenceCellRange.startColumn = updatingStartCol ? lastRange.columns[1] : lastRange.columns[0];\n            }\n        }\n        var allColsFromRanges = this.getAllColumnsFromRanges();\n        // clear ranges\n        this.cellRanges = [];\n        var dimensionColsInRange = dimensionCols.filter(function (col) { return allColsFromRanges.indexOf(col) > -1; });\n        if (this.initialising) {\n            // first time in just take the first dimension from the range as the column state hasn't been updated yet\n            if (dimensionColsInRange.length > 0) {\n                this.addRange(ag_grid_community_1.CellRangeType.DIMENSION, [dimensionColsInRange[0]]);\n            }\n            this.initialising = false;\n        }\n        if (updatedCol && dimensionCols.indexOf(updatedCol.column) > -1) {\n            // if updated col is dimension col and is not the default category\n            if (updatedCol.colId !== ChartModel.DEFAULT_CATEGORY) {\n                this.addRange(ag_grid_community_1.CellRangeType.DIMENSION, [updatedCol.column]);\n            }\n        }\n        else {\n            // otherwise use current selected dimension\n            var selectedDimension = this.dimensionColState.filter(function (cs) { return cs.selected; })[0];\n            if (selectedDimension && selectedDimension.colId !== ChartModel.DEFAULT_CATEGORY) {\n                this.addRange(ag_grid_community_1.CellRangeType.DIMENSION, [selectedDimension.column]);\n            }\n        }\n        var valueColsInRange = valueCols.filter(function (col) { return allColsFromRanges.indexOf(col) > -1; });\n        if (updatedCol && valueCols.indexOf(updatedCol.column) > -1) {\n            if (updatedCol.selected) {\n                valueColsInRange.push(updatedCol.column);\n                valueColsInRange = this.getColumnInDisplayOrder(valueCols, valueColsInRange);\n            }\n            else {\n                valueColsInRange = valueColsInRange.filter(function (col) { return col.getColId() !== updatedCol.colId; });\n            }\n        }\n        if (valueColsInRange.length > 0) {\n            this.addRange(ag_grid_community_1.CellRangeType.VALUE, valueColsInRange);\n        }\n    };\n    ChartModel.prototype.getData = function () {\n        // grouped data contains label fields rather than objects with toString\n        if (this.grouping && this.isMultiCategoryChart()) {\n            return this.chartData;\n        }\n        var colId = this.getSelectedDimension().colId;\n        // replacing the selected dimension with a complex object to facilitate duplicated categories\n        return this.chartData.map(function (d, index) {\n            var dimensionValue = d[colId] ? d[colId].toString() : '';\n            d[colId] = { toString: function () { return dimensionValue; }, id: index };\n            return d;\n        });\n    };\n    ChartModel.prototype.setChartType = function (chartType) {\n        var isCurrentMultiCategory = this.isMultiCategoryChart();\n        this.chartType = chartType;\n        // switching between single and multi-category charts requires data to be reformatted\n        if (isCurrentMultiCategory !== this.isMultiCategoryChart()) {\n            this.updateData();\n        }\n    };\n    ChartModel.prototype.isGrouping = function () {\n        var usingTreeData = this.gridOptionsWrapper.isTreeData();\n        var groupedCols = usingTreeData ? null : this.columnController.getRowGroupColumns();\n        var groupActive = usingTreeData || (groupedCols && groupedCols.length > 0);\n        // charts only group when the selected category is a group column\n        var groupCols = this.columnController.getGroupDisplayColumns();\n        var colId = this.getSelectedDimension().colId;\n        var groupDimensionSelected = groupCols\n            .map(function (col) { return col.getColId(); })\n            .some(function (id) { return id === colId; });\n        return groupActive && groupDimensionSelected;\n    };\n    ChartModel.prototype.isPivotActive = function () {\n        return this.columnController.isPivotActive();\n    };\n    ChartModel.prototype.isPivotMode = function () {\n        return this.columnController.isPivotMode();\n    };\n    ChartModel.prototype.isPivotChart = function () {\n        return this.pivotChart;\n    };\n    ChartModel.prototype.setChartProxy = function (chartProxy) {\n        this.chartProxy = chartProxy;\n    };\n    ChartModel.prototype.getChartProxy = function () {\n        return this.chartProxy;\n    };\n    ChartModel.prototype.getChartId = function () {\n        return this.chartId;\n    };\n    ChartModel.prototype.getValueColState = function () {\n        return this.valueColState.map(this.displayNameMapper.bind(this));\n    };\n    ChartModel.prototype.getDimensionColState = function () {\n        return this.dimensionColState;\n    };\n    ChartModel.prototype.getCellRanges = function () {\n        return this.cellRanges;\n    };\n    ChartModel.prototype.getChartType = function () {\n        return this.chartType;\n    };\n    ChartModel.prototype.setActivePalette = function (palette) {\n        this.activePalette = palette;\n    };\n    ChartModel.prototype.getActivePalette = function () {\n        return this.activePalette;\n    };\n    ChartModel.prototype.getPalettes = function () {\n        return this.palettes;\n    };\n    ChartModel.prototype.isSuppressChartRanges = function () {\n        return this.suppressChartRanges;\n    };\n    ChartModel.prototype.isDetached = function () {\n        return this.detached;\n    };\n    ChartModel.prototype.toggleDetached = function () {\n        this.detached = !this.detached;\n    };\n    ChartModel.prototype.getSelectedValueColState = function () {\n        return this.getValueColState().filter(function (cs) { return cs.selected; });\n    };\n    ChartModel.prototype.getSelectedValueCols = function () {\n        return this.valueColState.filter(function (cs) { return cs.selected; }).map(function (cs) { return cs.column; });\n    };\n    ChartModel.prototype.getSelectedDimension = function () {\n        return this.dimensionColState.filter(function (cs) { return cs.selected; })[0];\n    };\n    ChartModel.prototype.getColumnInDisplayOrder = function (allDisplayedColumns, listToSort) {\n        var sortedList = [];\n        allDisplayedColumns.forEach(function (col) {\n            if (listToSort.indexOf(col) > -1) {\n                sortedList.push(col);\n            }\n        });\n        return sortedList;\n    };\n    ChartModel.prototype.addRange = function (cellRangeType, columns) {\n        var newRange = {\n            id: this.chartId,\n            startRow: this.referenceCellRange.startRow,\n            endRow: this.referenceCellRange.endRow,\n            columns: columns,\n            startColumn: this.referenceCellRange.startColumn,\n            type: cellRangeType\n        };\n        cellRangeType === ag_grid_community_1.CellRangeType.DIMENSION ? this.cellRanges.unshift(newRange) : this.cellRanges.push(newRange);\n    };\n    ChartModel.prototype.getAllColumnsFromRanges = function () {\n        return ag_grid_community_1._.flatten(this.cellRanges.map(function (range) { return range.columns; }));\n    };\n    ChartModel.prototype.getColDisplayName = function (col) {\n        return this.columnController.getDisplayNameForColumn(col, 'chart');\n    };\n    ChartModel.prototype.getRowIndexes = function () {\n        var startRow = 0, endRow = 0;\n        var range = ag_grid_community_1._.last(this.cellRanges);\n        if (range) {\n            startRow = this.rangeController.getRangeStartRow(range).rowIndex;\n            endRow = this.rangeController.getRangeEndRow(range).rowIndex;\n        }\n        return { startRow: startRow, endRow: endRow };\n    };\n    ChartModel.prototype.getAllChartColumns = function () {\n        var _this = this;\n        var displayedCols = this.columnController.getAllDisplayedColumns();\n        var dimensionCols = [];\n        var valueCols = [];\n        displayedCols.forEach(function (col) {\n            var colDef = col.getColDef();\n            // first check column for 'chartDataType'\n            var chartDataType = colDef.chartDataType;\n            if (chartDataType) {\n                var validChartType = true;\n                if (chartDataType === 'category') {\n                    dimensionCols.push(col);\n                }\n                else if (chartDataType === 'series') {\n                    valueCols.push(col);\n                }\n                else if (chartDataType === 'excluded') {\n                    // ignore\n                }\n                else {\n                    console.warn(\"ag-Grid: unexpected chartDataType value '\" + chartDataType + \"' supplied, instead use 'category', 'series' or 'excluded'\");\n                    validChartType = false;\n                }\n                if (validChartType) {\n                    return;\n                }\n            }\n            if (colDef.colId === 'ag-Grid-AutoColumn') {\n                dimensionCols.push(col);\n                return;\n            }\n            if (!col.isPrimary()) {\n                valueCols.push(col);\n                return;\n            }\n            // if 'chartDataType' is not provided then infer type based data contained in first row\n            _this.isNumberCol(col.getColId()) ? valueCols.push(col) : dimensionCols.push(col);\n        });\n        return { dimensionCols: dimensionCols, valueCols: valueCols };\n    };\n    ChartModel.prototype.isNumberCol = function (colId) {\n        if (colId === 'ag-Grid-AutoColumn') {\n            return false;\n        }\n        var row = this.rowRenderer.getRowNode({ rowIndex: 0, rowPinned: undefined });\n        var rowData = row ? row.data : null;\n        var cellData;\n        if (row && row.group) {\n            cellData = this.extractLeafData(row, colId);\n        }\n        else {\n            cellData = rowData ? rowData[colId] : null;\n        }\n        return typeof cellData === 'number';\n    };\n    ChartModel.prototype.extractLeafData = function (row, colId) {\n        var leafRowData = row.allLeafChildren.map(function (row) { return row.data; });\n        var leafCellData = leafRowData.map(function (rowData) { return rowData[colId]; });\n        for (var i = 0; i < leafCellData.length; i++) {\n            if (leafCellData[i] !== null) {\n                return leafCellData[i];\n            }\n        }\n        return null;\n    };\n    ChartModel.prototype.displayNameMapper = function (col) {\n        if (this.columnNames[col.colId]) {\n            col.displayName = this.columnNames[col.colId].join(' - ');\n        }\n        else {\n            col.displayName = this.getColDisplayName(col.column);\n        }\n        return col;\n    };\n    ChartModel.prototype.isMultiCategoryChart = function () {\n        return [\n            ag_grid_community_1.ChartType.Pie,\n            ag_grid_community_1.ChartType.Doughnut,\n            ag_grid_community_1.ChartType.Scatter,\n            ag_grid_community_1.ChartType.Bubble\n        ].indexOf(this.chartType) < 0;\n    };\n    ChartModel.prototype.generateId = function () {\n        return 'id-' + Math.random().toString(36).substr(2, 16);\n    };\n    ChartModel.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.datasource) {\n            this.datasource.destroy();\n        }\n    };\n    ChartModel.DEFAULT_CATEGORY = 'AG-GRID-DEFAULT-CATEGORY';\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], ChartModel.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], ChartModel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rangeController'),\n        __metadata(\"design:type\", rangeController_1.RangeController)\n    ], ChartModel.prototype, \"rangeController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rowRenderer'),\n        __metadata(\"design:type\", ag_grid_community_1.RowRenderer)\n    ], ChartModel.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ChartModel.prototype, \"init\", null);\n    return ChartModel;\n}(ag_grid_community_1.BeanStub));\nexports.ChartModel = ChartModel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar chartBuilder_1 = require(\"../../../builder/chartBuilder\");\nvar categoryAxis_1 = require(\"../../../../charts/chart/axis/categoryAxis\");\nvar cartesianChartProxy_1 = require(\"./cartesianChartProxy\");\nvar AreaChartProxy = /** @class */ (function (_super) {\n    __extends(AreaChartProxy, _super);\n    function AreaChartProxy(params) {\n        var _this = _super.call(this, params) || this;\n        _this.chartType = params.chartType;\n        _this.initChartOptions(params.chartType, _this.defaultOptions());\n        if (params.grouping) {\n            _this.chart = chartBuilder_1.ChartBuilder.createGroupedAreaChart(_this.chartOptions);\n        }\n        else {\n            _this.chart = chartBuilder_1.ChartBuilder.createAreaChart(_this.chartOptions);\n        }\n        _this.setAxisPadding(_this.chart);\n        var areaSeries = chartBuilder_1.ChartBuilder.createSeries(_this.chartOptions.seriesDefaults);\n        if (areaSeries) {\n            _this.chart.addSeries(areaSeries);\n        }\n        return _this;\n    }\n    AreaChartProxy.prototype.setAxisPadding = function (chart) {\n        var xAxis = chart.xAxis;\n        if (xAxis instanceof categoryAxis_1.CategoryAxis) {\n            xAxis.scale.paddingInner = 1;\n            xAxis.scale.paddingOuter = 0;\n        }\n    };\n    AreaChartProxy.prototype.update = function (params) {\n        var chart = this.chart;\n        if (this.chartType === ag_grid_community_1.ChartType.Area) {\n            // area charts have multiple series\n            this.updateAreaChart(params);\n        }\n        else {\n            // stacked and normalized has a single series\n            var areaSeries = this.chart.series[0];\n            areaSeries.data = params.data;\n            areaSeries.xField = params.category.id;\n            areaSeries.yFields = params.fields.map(function (f) { return f.colId; });\n            areaSeries.yFieldNames = params.fields.map(function (f) { return f.displayName; });\n            var palette = this.overriddenPalette ? this.overriddenPalette : this.chartProxyParams.getSelectedPalette();\n            areaSeries.fills = palette.fills;\n            areaSeries.strokes = palette.strokes;\n        }\n        chart.xAxis.labelRotation = this.overrideLabelRotation(params.category.id) ? 0 : this.chartOptions.xAxis.labelRotation;\n    };\n    AreaChartProxy.prototype.updateAreaChart = function (params) {\n        var _this = this;\n        if (params.fields.length === 0) {\n            this.chart.removeAllSeries();\n            return;\n        }\n        var lineChart = this.chart;\n        var fieldIds = params.fields.map(function (f) { return f.colId; });\n        var existingSeriesMap = {};\n        var updateSeries = function (areaSeries) {\n            var id = areaSeries.yFields[0];\n            var seriesExists = fieldIds.indexOf(id) > -1;\n            seriesExists ? existingSeriesMap[id] = areaSeries : lineChart.removeSeries(areaSeries);\n        };\n        lineChart.series.map(function (series) { return series; }).forEach(updateSeries);\n        params.fields.forEach(function (f, index) {\n            var seriesOptions = _this.chartOptions.seriesDefaults;\n            var existingSeries = existingSeriesMap[f.colId];\n            var areaSeries = existingSeries ? existingSeries : chartBuilder_1.ChartBuilder.createSeries(seriesOptions);\n            if (areaSeries) {\n                areaSeries.yFieldNames = [f.displayName];\n                areaSeries.data = params.data;\n                areaSeries.xField = params.category.id;\n                areaSeries.yFields = [f.colId];\n                var palette = _this.overriddenPalette ? _this.overriddenPalette : _this.chartProxyParams.getSelectedPalette();\n                var fills = palette.fills;\n                areaSeries.fills = [fills[index % fills.length]];\n                var strokes = palette.strokes;\n                areaSeries.strokes = [strokes[index % strokes.length]];\n                if (!existingSeries) {\n                    lineChart.addSeries(areaSeries);\n                }\n            }\n        });\n    };\n    AreaChartProxy.prototype.setSeriesProperty = function (property, value) {\n        var series = this.getChart().series;\n        series.forEach(function (s) { return s[property] = value; });\n        if (!this.chartOptions.seriesDefaults) {\n            this.chartOptions.seriesDefaults = {};\n        }\n        this.chartOptions.seriesDefaults[property] = value;\n        this.raiseChartOptionsChangedEvent();\n    };\n    AreaChartProxy.prototype.getSeriesProperty = function (property) {\n        return this.chartOptions.seriesDefaults ? \"\" + this.chartOptions.seriesDefaults[property] : '';\n    };\n    AreaChartProxy.prototype.getTooltipsEnabled = function () {\n        return this.chartOptions.seriesDefaults ? !!this.chartOptions.seriesDefaults.tooltipEnabled : false;\n    };\n    AreaChartProxy.prototype.getMarkersEnabled = function () {\n        return this.chartOptions.seriesDefaults ? !!this.chartOptions.seriesDefaults.marker : false;\n    };\n    AreaChartProxy.prototype.defaultOptions = function () {\n        var palette = this.chartProxyParams.getSelectedPalette();\n        return {\n            background: {\n                fill: this.getBackgroundColor()\n            },\n            padding: {\n                top: 20,\n                right: 20,\n                bottom: 20,\n                left: 20\n            },\n            legendPosition: 'right',\n            legendPadding: 20,\n            legend: {\n                enabled: true,\n                labelFontStyle: undefined,\n                labelFontWeight: 'normal',\n                labelFontSize: 12,\n                labelFontFamily: 'Verdana, sans-serif',\n                labelColor: this.getLabelColor(),\n                itemPaddingX: 16,\n                itemPaddingY: 8,\n                markerPadding: 4,\n                markerSize: 14,\n                markerStrokeWidth: 1\n            },\n            xAxis: {\n                type: 'category',\n                labelFontStyle: undefined,\n                labelFontWeight: 'normal',\n                labelFontSize: 12,\n                labelFontFamily: 'Verdana, sans-serif',\n                labelColor: this.getLabelColor(),\n                labelRotation: 335,\n                tickColor: 'rgba(195, 195, 195, 1)',\n                tickSize: 6,\n                tickWidth: 1,\n                tickPadding: 5,\n                lineColor: 'rgba(195, 195, 195, 1)',\n                lineWidth: 1,\n                gridStyle: [{\n                        stroke: this.getAxisGridColor(),\n                        lineDash: [4, 2]\n                    }]\n            },\n            yAxis: {\n                type: 'number',\n                labelFontStyle: undefined,\n                labelFontWeight: 'normal',\n                labelFontSize: 12,\n                labelFontFamily: 'Verdana, sans-serif',\n                labelColor: this.getLabelColor(),\n                labelRotation: 0,\n                tickColor: 'rgba(195, 195, 195, 1)',\n                tickSize: 6,\n                tickWidth: 1,\n                tickPadding: 5,\n                lineColor: 'rgba(195, 195, 195, 1)',\n                lineWidth: 1,\n                gridStyle: [{\n                        stroke: this.getAxisGridColor(),\n                        lineDash: [4, 2]\n                    }]\n            },\n            seriesDefaults: {\n                type: 'area',\n                fills: palette.fills,\n                strokes: palette.strokes,\n                strokeWidth: 3,\n                strokeOpacity: 1,\n                fillOpacity: this.chartProxyParams.chartType === ag_grid_community_1.ChartType.Area ? 0.7 : 1,\n                normalizedTo: this.chartProxyParams.chartType === ag_grid_community_1.ChartType.NormalizedArea ? 100 : undefined,\n                marker: true,\n                markerSize: 6,\n                markerStrokeWidth: 1,\n                tooltipEnabled: true,\n                tooltipRenderer: undefined,\n                showInLegend: true,\n                shadow: {\n                    enabled: false,\n                    blur: 5,\n                    xOffset: 3,\n                    yOffset: 3,\n                    color: 'rgba(0,0,0,0.5)'\n                }\n            }\n        };\n    };\n    return AreaChartProxy;\n}(cartesianChartProxy_1.CartesianChartProxy));\nexports.AreaChartProxy = AreaChartProxy;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar chartBuilder_1 = require(\"../../../builder/chartBuilder\");\nvar cartesianChartProxy_1 = require(\"./cartesianChartProxy\");\nvar BarChartProxy = /** @class */ (function (_super) {\n    __extends(BarChartProxy, _super);\n    function BarChartProxy(params) {\n        var _this = _super.call(this, params) || this;\n        _this.initChartOptions(params.chartType, _this.defaultOptions());\n        if (params.grouping) {\n            _this.chart = BarChartProxy.isBarChart(params.chartType) ?\n                chartBuilder_1.ChartBuilder.createGroupedBarChart(_this.chartOptions) : chartBuilder_1.ChartBuilder.createGroupedColumnChart(_this.chartOptions);\n        }\n        else {\n            _this.chart = BarChartProxy.isBarChart(params.chartType) ?\n                chartBuilder_1.ChartBuilder.createBarChart(_this.chartOptions) : chartBuilder_1.ChartBuilder.createColumnChart(_this.chartOptions);\n        }\n        var barSeries = chartBuilder_1.ChartBuilder.createSeries(_this.chartOptions.seriesDefaults);\n        if (barSeries) {\n            _this.chart.addSeries(barSeries);\n        }\n        return _this;\n    }\n    BarChartProxy.prototype.update = function (params) {\n        var chart = this.chart;\n        var barSeries = chart.series[0];\n        barSeries.data = params.data;\n        barSeries.xField = params.category.id;\n        barSeries.yFields = params.fields.map(function (f) { return f.colId; });\n        barSeries.yFieldNames = params.fields.map(function (f) { return f.displayName; });\n        if (BarChartProxy.isBarChart(this.chartProxyParams.chartType)) {\n            chart.yAxis.labelRotation = this.overrideLabelRotation(params.category.id) ? 0 : this.chartOptions.yAxis.labelRotation;\n        }\n        else {\n            chart.xAxis.labelRotation = this.overrideLabelRotation(params.category.id) ? 0 : this.chartOptions.xAxis.labelRotation;\n        }\n        var palette = this.overriddenPalette ? this.overriddenPalette : this.chartProxyParams.getSelectedPalette();\n        barSeries.fills = palette.fills;\n        barSeries.strokes = palette.strokes;\n    };\n    BarChartProxy.prototype.setSeriesProperty = function (property, value) {\n        var series = this.getChart().series;\n        series.forEach(function (s) { return s[property] = value; });\n        if (!this.chartOptions.seriesDefaults) {\n            this.chartOptions.seriesDefaults = {};\n        }\n        this.chartOptions.seriesDefaults[property] = value;\n        this.raiseChartOptionsChangedEvent();\n    };\n    BarChartProxy.prototype.getSeriesProperty = function (property) {\n        return this.chartOptions.seriesDefaults ? \"\" + this.chartOptions.seriesDefaults[property] : '';\n    };\n    BarChartProxy.prototype.getTooltipsEnabled = function () {\n        return this.chartOptions.seriesDefaults ? !!this.chartOptions.seriesDefaults.tooltipEnabled : false;\n    };\n    BarChartProxy.prototype.getLabelEnabled = function () {\n        return this.chartOptions.seriesDefaults ? !!this.chartOptions.seriesDefaults.labelEnabled : false;\n    };\n    BarChartProxy.isBarChart = function (type) {\n        return type === ag_grid_community_1.ChartType.GroupedBar || type === ag_grid_community_1.ChartType.StackedBar || type === ag_grid_community_1.ChartType.NormalizedBar;\n    };\n    BarChartProxy.prototype.defaultOptions = function () {\n        var palette = this.chartProxyParams.getSelectedPalette();\n        var chartType = this.chartProxyParams.chartType;\n        return {\n            parent: this.chartProxyParams.parentElement,\n            background: {\n                fill: this.getBackgroundColor()\n            },\n            padding: {\n                top: 20,\n                right: 20,\n                bottom: 20,\n                left: 20\n            },\n            legendPosition: 'right',\n            legendPadding: 20,\n            legend: {\n                enabled: true,\n                labelFontStyle: undefined,\n                labelFontWeight: 'normal',\n                labelFontSize: 12,\n                labelFontFamily: 'Verdana, sans-serif',\n                labelColor: this.getLabelColor(),\n                itemPaddingX: 16,\n                itemPaddingY: 8,\n                markerPadding: 4,\n                markerSize: 14,\n                markerStrokeWidth: 1\n            },\n            xAxis: {\n                type: 'category',\n                labelFontStyle: undefined,\n                labelFontWeight: 'normal',\n                labelFontSize: 12,\n                labelFontFamily: 'Verdana, sans-serif',\n                labelColor: this.getLabelColor(),\n                labelRotation: 335,\n                tickColor: 'rgba(195, 195, 195, 1)',\n                tickSize: 6,\n                tickWidth: 1,\n                tickPadding: 5,\n                lineColor: 'rgba(195, 195, 195, 1)',\n                lineWidth: 1,\n                gridStyle: [{\n                        stroke: this.getAxisGridColor(),\n                        lineDash: [4, 2]\n                    }]\n            },\n            yAxis: {\n                type: 'number',\n                labelFontStyle: undefined,\n                labelFontWeight: 'normal',\n                labelFontSize: 12,\n                labelFontFamily: 'Verdana, sans-serif',\n                labelColor: this.getLabelColor(),\n                labelRotation: 0,\n                tickColor: 'rgba(195, 195, 195, 1)',\n                tickSize: 6,\n                tickWidth: 1,\n                tickPadding: 5,\n                lineColor: 'rgba(195, 195, 195, 1)',\n                lineWidth: 1,\n                gridStyle: [{\n                        stroke: this.getAxisGridColor(),\n                        lineDash: [4, 2]\n                    }]\n            },\n            seriesDefaults: {\n                type: 'bar',\n                fills: palette.fills,\n                strokes: palette.strokes,\n                grouped: chartType === ag_grid_community_1.ChartType.GroupedColumn || chartType === ag_grid_community_1.ChartType.GroupedBar,\n                normalizedTo: (chartType === ag_grid_community_1.ChartType.NormalizedColumn || chartType === ag_grid_community_1.ChartType.NormalizedBar) ? 100 : undefined,\n                strokeWidth: 1,\n                tooltipEnabled: true,\n                labelEnabled: false,\n                labelFontStyle: undefined,\n                labelFontWeight: 'normal',\n                labelFontSize: 12,\n                labelFontFamily: 'Verdana, sans-serif',\n                labelColor: this.getLabelColor(),\n                tooltipRenderer: undefined,\n                showInLegend: true,\n                shadow: {\n                    enabled: false,\n                    blur: 5,\n                    xOffset: 3,\n                    yOffset: 3,\n                    color: 'rgba(0,0,0,0.5)'\n                },\n                strokeOpacity: 1,\n                fillOpacity: 1\n            }\n        };\n    };\n    return BarChartProxy;\n}(cartesianChartProxy_1.CartesianChartProxy));\nexports.BarChartProxy = BarChartProxy;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chartProxy_1 = require(\"../chartProxy\");\nvar chartModel_1 = require(\"../../chartModel\");\nvar CartesianChartProxy = /** @class */ (function (_super) {\n    __extends(CartesianChartProxy, _super);\n    function CartesianChartProxy(params) {\n        return _super.call(this, params) || this;\n    }\n    CartesianChartProxy.prototype.overrideLabelRotation = function (categoryId) {\n        return categoryId === chartModel_1.ChartModel.DEFAULT_CATEGORY || this.chartProxyParams.grouping;\n    };\n    CartesianChartProxy.prototype.setCommonAxisProperty = function (property, value) {\n        var cartesianChart = this.chart;\n        cartesianChart.xAxis[property] = value;\n        cartesianChart.yAxis[property] = value;\n        cartesianChart.performLayout();\n        this.chartOptions.xAxis[property] = value;\n        this.chartOptions.yAxis[property] = value;\n        this.raiseChartOptionsChangedEvent();\n    };\n    CartesianChartProxy.prototype.getCommonAxisProperty = function (property) {\n        return this.chartOptions.xAxis ? \"\" + this.chartOptions.xAxis[property] : '';\n    };\n    CartesianChartProxy.prototype.getXRotation = function () {\n        var cartesianChart = this.chart;\n        return cartesianChart.xAxis.labelRotation;\n    };\n    CartesianChartProxy.prototype.setXRotation = function (rotation) {\n        var cartesianChart = this.chart;\n        cartesianChart.xAxis.labelRotation = rotation;\n        this.chartOptions.xAxis.labelRotation = rotation;\n        this.chart.performLayout();\n        this.raiseChartOptionsChangedEvent();\n    };\n    CartesianChartProxy.prototype.getYRotation = function () {\n        var cartesianChart = this.chart;\n        return cartesianChart.yAxis.labelRotation;\n    };\n    CartesianChartProxy.prototype.setYRotation = function (rotation) {\n        var cartesianChart = this.chart;\n        cartesianChart.yAxis.labelRotation = rotation;\n        this.chartOptions.yAxis.labelRotation = rotation;\n        this.chart.performLayout();\n        this.raiseChartOptionsChangedEvent();\n    };\n    return CartesianChartProxy;\n}(chartProxy_1.ChartProxy));\nexports.CartesianChartProxy = CartesianChartProxy;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar chartBuilder_1 = require(\"../../../builder/chartBuilder\");\nvar cartesianChartProxy_1 = require(\"./cartesianChartProxy\");\nvar LineChartProxy = /** @class */ (function (_super) {\n    __extends(LineChartProxy, _super);\n    function LineChartProxy(params) {\n        var _this = _super.call(this, params) || this;\n        _this.initChartOptions(ag_grid_community_1.ChartType.Line, _this.defaultOptions());\n        if (params.grouping) {\n            _this.chart = chartBuilder_1.ChartBuilder.createGroupedLineChart(_this.chartOptions);\n        }\n        else {\n            _this.chart = chartBuilder_1.ChartBuilder.createLineChart(_this.chartOptions);\n        }\n        return _this;\n    }\n    LineChartProxy.prototype.update = function (params) {\n        var _this = this;\n        var chart = this.chart;\n        if (params.fields.length === 0) {\n            this.chart.removeAllSeries();\n            return;\n        }\n        var lineChart = this.chart;\n        var fieldIds = params.fields.map(function (f) { return f.colId; });\n        var existingSeriesMap = {};\n        var updateSeries = function (lineSeries) {\n            var id = lineSeries.yField;\n            var seriesExists = fieldIds.indexOf(id) > -1;\n            seriesExists ? existingSeriesMap[id] = lineSeries : lineChart.removeSeries(lineSeries);\n        };\n        lineChart.series.map(function (series) { return series; }).forEach(updateSeries);\n        params.fields.forEach(function (f, index) {\n            var seriesOptions = _this.chartOptions.seriesDefaults;\n            var existingSeries = existingSeriesMap[f.colId];\n            var lineSeries = existingSeries ? existingSeries : chartBuilder_1.ChartBuilder.createSeries(seriesOptions);\n            if (lineSeries) {\n                lineSeries.title = f.displayName;\n                lineSeries.data = params.data;\n                lineSeries.xField = params.category.id;\n                lineSeries.yField = f.colId;\n                var palette = _this.overriddenPalette ? _this.overriddenPalette : _this.chartProxyParams.getSelectedPalette();\n                var fills = palette.fills;\n                lineSeries.fill = fills[index % fills.length];\n                var strokes = palette.strokes;\n                lineSeries.stroke = strokes[index % strokes.length];\n                if (!existingSeries) {\n                    lineChart.addSeries(lineSeries);\n                }\n            }\n        });\n        chart.xAxis.labelRotation = this.overrideLabelRotation(params.category.id) ? 0 : this.chartOptions.xAxis.labelRotation;\n    };\n    LineChartProxy.prototype.setSeriesProperty = function (property, value) {\n        var series = this.getChart().series;\n        series.forEach(function (s) { return s[property] = value; });\n        if (!this.chartOptions.seriesDefaults) {\n            this.chartOptions.seriesDefaults = {};\n        }\n        this.chartOptions.seriesDefaults[property] = value;\n        this.raiseChartOptionsChangedEvent();\n    };\n    LineChartProxy.prototype.getSeriesProperty = function (property) {\n        return this.chartOptions.seriesDefaults ? \"\" + this.chartOptions.seriesDefaults[property] : '';\n    };\n    LineChartProxy.prototype.getTooltipsEnabled = function () {\n        return this.chartOptions.seriesDefaults ? !!this.chartOptions.seriesDefaults.tooltipEnabled : false;\n    };\n    LineChartProxy.prototype.getMarkersEnabled = function () {\n        return this.chartOptions.seriesDefaults ? !!this.chartOptions.seriesDefaults.marker : false;\n    };\n    LineChartProxy.prototype.defaultOptions = function () {\n        var palette = this.chartProxyParams.getSelectedPalette();\n        return {\n            background: {\n                fill: this.getBackgroundColor()\n            },\n            padding: {\n                top: 20,\n                right: 20,\n                bottom: 20,\n                left: 20\n            },\n            legendPosition: 'right',\n            legendPadding: 20,\n            legend: {\n                enabled: true,\n                labelFontStyle: undefined,\n                labelFontWeight: 'normal',\n                labelFontSize: 12,\n                labelFontFamily: 'Verdana, sans-serif',\n                labelColor: this.getLabelColor(),\n                itemPaddingX: 16,\n                itemPaddingY: 8,\n                markerPadding: 4,\n                markerSize: 14,\n                markerStrokeWidth: 1\n            },\n            xAxis: {\n                type: 'category',\n                labelFontStyle: undefined,\n                labelFontWeight: 'normal',\n                labelFontSize: 12,\n                labelFontFamily: 'Verdana, sans-serif',\n                labelColor: this.getLabelColor(),\n                labelRotation: 335,\n                tickColor: 'rgba(195, 195, 195, 1)',\n                tickSize: 6,\n                tickWidth: 1,\n                tickPadding: 5,\n                lineColor: 'rgba(195, 195, 195, 1)',\n                lineWidth: 1,\n                gridStyle: [{\n                        stroke: this.getAxisGridColor(),\n                        lineDash: [4, 2]\n                    }]\n            },\n            yAxis: {\n                type: 'number',\n                labelFontStyle: undefined,\n                labelFontWeight: 'normal',\n                labelFontSize: 12,\n                labelFontFamily: 'Verdana, sans-serif',\n                labelColor: this.getLabelColor(),\n                labelRotation: 0,\n                tickColor: 'rgba(195, 195, 195, 1)',\n                tickSize: 6,\n                tickWidth: 1,\n                tickPadding: 5,\n                lineColor: 'rgba(195, 195, 195, 1)',\n                lineWidth: 1,\n                gridStyle: [{\n                        stroke: this.getAxisGridColor(),\n                        lineDash: [4, 2]\n                    }]\n            },\n            seriesDefaults: {\n                type: 'line',\n                fills: palette.fills,\n                strokes: palette.strokes,\n                strokeWidth: 3,\n                marker: true,\n                markerSize: 6,\n                markerStrokeWidth: 1,\n                tooltipEnabled: true,\n                tooltipRenderer: undefined,\n                showInLegend: true,\n                title: ''\n            }\n        };\n    };\n    return LineChartProxy;\n}(cartesianChartProxy_1.CartesianChartProxy));\nexports.LineChartProxy = LineChartProxy;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar chartBuilder_1 = require(\"../../../builder/chartBuilder\");\nvar chartModel_1 = require(\"../../chartModel\");\nvar cartesianChartProxy_1 = require(\"./cartesianChartProxy\");\nvar ScatterChartProxy = /** @class */ (function (_super) {\n    __extends(ScatterChartProxy, _super);\n    function ScatterChartProxy(params) {\n        var _this = _super.call(this, params) || this;\n        _this.initChartOptions(params.chartType, _this.defaultOptions());\n        _this.chart = chartBuilder_1.ChartBuilder.createScatterChart(_this.chartOptions);\n        return _this;\n    }\n    ScatterChartProxy.prototype.update = function (params) {\n        var _this = this;\n        if (params.fields.length === 0) {\n            this.chart.removeAllSeries();\n            return;\n        }\n        var chart = this.chart;\n        var chartType = this.chartProxyParams.chartType;\n        var fieldIds = params.fields.map(function (f) { return f.colId; });\n        var existingSeriesMap = {};\n        var defaultCategorySelected = params.category.id === chartModel_1.ChartModel.DEFAULT_CATEGORY;\n        var updateSeries = function (scatterSeries) {\n            var id = scatterSeries.yField;\n            var seriesExists = fieldIds.indexOf(id) > -1;\n            seriesExists ? existingSeriesMap[id] = scatterSeries : chart.removeSeries(scatterSeries);\n        };\n        chart.series\n            .map(function (series) { return series; })\n            .forEach(updateSeries);\n        var updateFunc = function (f, index) {\n            var seriesOptions = _this.chartOptions.seriesDefaults;\n            var existingSeries = existingSeriesMap[f.colId];\n            var scatterSeries = existingSeries ? existingSeries : chartBuilder_1.ChartBuilder.createSeries(seriesOptions);\n            if (scatterSeries) {\n                if (defaultCategorySelected) {\n                    scatterSeries.title = params.fields[0].displayName + \" vs \" + f.displayName;\n                    scatterSeries.xField = params.fields[0].colId;\n                    scatterSeries.xFieldName = params.fields[0].displayName;\n                    if (chartType === ag_grid_community_1.ChartType.Bubble) {\n                        var f_1 = params.fields[index * 2 + 2];\n                        scatterSeries.radiusField = f_1.colId;\n                        scatterSeries.radiusFieldName = f_1.displayName;\n                    }\n                }\n                else {\n                    scatterSeries.title = f.displayName;\n                    scatterSeries.xField = params.category.id;\n                    scatterSeries.xFieldName = params.category.name;\n                }\n                scatterSeries.data = params.data;\n                scatterSeries.yField = f.colId;\n                scatterSeries.yFieldName = f.displayName;\n                var palette = _this.overriddenPalette ? _this.overriddenPalette : _this.chartProxyParams.getSelectedPalette();\n                var fills = palette.fills;\n                scatterSeries.fill = fills[index % fills.length];\n                var strokes = palette.strokes;\n                scatterSeries.stroke = strokes[index % strokes.length];\n                if (!existingSeries) {\n                    chart.addSeries(scatterSeries);\n                }\n            }\n        };\n        if (defaultCategorySelected) {\n            if (chartType === ag_grid_community_1.ChartType.Bubble) {\n                // only update bubble chart if the correct number of fields are present\n                var len = params.fields.length;\n                var offset = len % 2 === 0 ? 1 : 0;\n                var fields = [];\n                for (var i = 1; i < len - offset; i += 2) {\n                    fields.push(params.fields[i]);\n                }\n                fields.forEach(updateFunc);\n            }\n            else {\n                params.fields.slice(1, params.fields.length).forEach(updateFunc);\n            }\n        }\n        else {\n            params.fields.forEach(updateFunc);\n        }\n        chart.xAxis.labelRotation = this.overrideLabelRotation(params.category.id) ? 0 : this.chartOptions.xAxis.labelRotation;\n    };\n    ScatterChartProxy.prototype.setSeriesProperty = function (property, value) {\n        var series = this.getChart().series;\n        series.forEach(function (s) { return s[property] = value; });\n        if (!this.chartOptions.seriesDefaults) {\n            this.chartOptions.seriesDefaults = {};\n        }\n        this.chartOptions.seriesDefaults[property] = value;\n        this.raiseChartOptionsChangedEvent();\n    };\n    ScatterChartProxy.prototype.getSeriesProperty = function (property) {\n        return this.chartOptions.seriesDefaults ? \"\" + this.chartOptions.seriesDefaults[property] : '';\n    };\n    ScatterChartProxy.prototype.getTooltipsEnabled = function () {\n        return this.chartOptions.seriesDefaults ? !!this.chartOptions.seriesDefaults.tooltipEnabled : false;\n    };\n    ScatterChartProxy.prototype.getMarkersEnabled = function () {\n        // markers are always enabled on scatter charts\n        return true;\n    };\n    ScatterChartProxy.prototype.defaultOptions = function () {\n        var xAxisType = this.chartProxyParams.categorySelected ? 'category' : 'number';\n        var palette = this.chartProxyParams.getSelectedPalette();\n        var isBubble = this.chartProxyParams.chartType === ag_grid_community_1.ChartType.Bubble;\n        return {\n            background: {\n                fill: this.getBackgroundColor()\n            },\n            padding: {\n                top: 20,\n                right: 20,\n                bottom: 20,\n                left: 20\n            },\n            legendPosition: 'right',\n            legendPadding: 20,\n            legend: {\n                enabled: true,\n                labelFontStyle: undefined,\n                labelFontWeight: 'normal',\n                labelFontSize: 12,\n                labelFontFamily: 'Verdana, sans-serif',\n                labelColor: this.getLabelColor(),\n                itemPaddingX: 16,\n                itemPaddingY: 8,\n                markerPadding: 4,\n                markerSize: 14,\n                markerStrokeWidth: 1\n            },\n            xAxis: {\n                type: xAxisType,\n                labelFontStyle: undefined,\n                labelFontWeight: 'normal',\n                labelFontSize: 12,\n                labelFontFamily: 'Verdana, sans-serif',\n                labelColor: this.getLabelColor(),\n                labelRotation: 335,\n                tickColor: 'rgba(195, 195, 195, 1)',\n                tickSize: 6,\n                tickWidth: 1,\n                tickPadding: 5,\n                lineColor: 'rgba(195, 195, 195, 1)',\n                lineWidth: 1,\n                gridStyle: [{\n                        stroke: this.getAxisGridColor(),\n                        lineDash: [4, 2]\n                    }]\n            },\n            yAxis: {\n                type: 'number',\n                labelFontStyle: undefined,\n                labelFontWeight: 'normal',\n                labelFontSize: 12,\n                labelFontFamily: 'Verdana, sans-serif',\n                labelColor: this.getLabelColor(),\n                labelRotation: 0,\n                tickColor: 'rgba(195, 195, 195, 1)',\n                tickSize: 6,\n                tickWidth: 1,\n                tickPadding: 5,\n                lineColor: 'rgba(195, 195, 195, 1)',\n                lineWidth: 1,\n                gridStyle: [{\n                        stroke: this.getAxisGridColor(),\n                        lineDash: [4, 2]\n                    }]\n            },\n            seriesDefaults: {\n                type: 'scatter',\n                fills: palette.fills,\n                fillOpacity: isBubble ? 0.7 : 1,\n                strokes: palette.strokes,\n                marker: true,\n                markerSize: isBubble ? 30 : 6,\n                minMarkerSize: 3,\n                markerStrokeWidth: 1,\n                tooltipEnabled: true,\n                tooltipRenderer: undefined,\n                showInLegend: true,\n                title: ''\n            }\n        };\n    };\n    return ScatterChartProxy;\n}(cartesianChartProxy_1.CartesianChartProxy));\nexports.ScatterChartProxy = ScatterChartProxy;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar dropShadow_1 = require(\"../../../charts/scene/dropShadow\");\nvar ChartProxy = /** @class */ (function () {\n    function ChartProxy(chartProxyParams) {\n        this.chartProxyParams = chartProxyParams;\n    }\n    ChartProxy.prototype.getChart = function () {\n        return this.chart;\n    };\n    ChartProxy.prototype.getLabelColor = function () {\n        return this.chartProxyParams.isDarkTheme() ? ChartProxy.darkLabelColour : ChartProxy.lightLabelColour;\n    };\n    ChartProxy.prototype.getAxisGridColor = function () {\n        return this.chartProxyParams.isDarkTheme() ? ChartProxy.darkAxisColour : ChartProxy.lightAxisColour;\n    };\n    ChartProxy.prototype.getBackgroundColor = function () {\n        return this.chartProxyParams.isDarkTheme() ? '#2d3436' : 'white';\n    };\n    ChartProxy.prototype.initChartOptions = function (type, options) {\n        // allow users to override options before they are applied\n        if (this.chartProxyParams.processChartOptions) {\n            var params = { type: type, options: options };\n            var overriddenOptions = this.chartProxyParams.processChartOptions(params);\n            this.overridePalette(overriddenOptions);\n            this.chartOptions = overriddenOptions;\n        }\n        else {\n            this.chartOptions = options;\n        }\n        // these chart options are not overridable via the processChartOptions callback\n        this.chartOptions.parent = this.chartProxyParams.parentElement;\n        this.chartOptions.width = this.chartProxyParams.width;\n        this.chartOptions.height = this.chartProxyParams.height;\n    };\n    ChartProxy.prototype.overridePalette = function (chartOptions) {\n        var seriesDefaults = chartOptions.seriesDefaults;\n        var palette = this.chartProxyParams.getSelectedPalette();\n        var defaultFills = palette.fills;\n        var defaultStrokes = palette.strokes;\n        var fillsOverridden = seriesDefaults.fills !== defaultFills;\n        var strokesOverridden = seriesDefaults.strokes !== defaultStrokes;\n        if (fillsOverridden || strokesOverridden) {\n            this.overriddenPalette = {\n                fills: fillsOverridden && seriesDefaults.fills ? seriesDefaults.fills : defaultFills,\n                strokes: strokesOverridden && seriesDefaults.strokes ? seriesDefaults.strokes : defaultStrokes\n            };\n        }\n    };\n    ChartProxy.prototype.setChartPaddingProperty = function (property, value) {\n        var padding = this.chart.padding;\n        padding[property] = value;\n        this.chart.padding = padding;\n        this.chartOptions.padding = padding;\n        this.raiseChartOptionsChangedEvent();\n    };\n    ChartProxy.prototype.getChartPadding = function (property) {\n        return this.chartOptions.padding ? \"\" + this.chartOptions.padding[property] : '';\n    };\n    ChartProxy.prototype.setLegendProperty = function (property, value) {\n        this.chart.legend[property] = value;\n        if (!this.chartOptions.legend) {\n            this.chartOptions.legend = {};\n        }\n        this.chartOptions.legend[property] = value;\n        this.raiseChartOptionsChangedEvent();\n    };\n    ChartProxy.prototype.getLegendProperty = function (property) {\n        return this.chartOptions.legend ? \"\" + this.chartOptions.legend[property] : '';\n    };\n    ChartProxy.prototype.getLegendEnabled = function () {\n        return this.chartOptions.legend ? !!this.chartOptions.legend.enabled : false;\n    };\n    ChartProxy.prototype.setLegendPadding = function (padding) {\n        this.chart.legendPadding = padding;\n        this.chartOptions.legendPadding = padding;\n        this.raiseChartOptionsChangedEvent();\n    };\n    ChartProxy.prototype.getLegendPadding = function () {\n        return \"\" + this.chartOptions.legendPadding;\n    };\n    ChartProxy.prototype.setLegendPosition = function (position) {\n        this.chart.legendPosition = position;\n        this.chartOptions.legendPosition = position;\n        this.raiseChartOptionsChangedEvent();\n    };\n    ChartProxy.prototype.getLegendPosition = function () {\n        return \"\" + this.chartOptions.legendPosition;\n    };\n    ChartProxy.prototype.setTitleProperty = function (property, value) {\n        if (!this.chart.title) {\n            this.chart.title = {};\n        }\n        this.chart.title[property] = value;\n        if (!this.chartOptions.title) {\n            this.chartOptions.title = {};\n        }\n        this.chartOptions.title[property] = value;\n        this.raiseChartOptionsChangedEvent();\n    };\n    ChartProxy.prototype.getTitleProperty = function (property) {\n        return this.chart.title ? \"\" + this.chart.title[property] : '';\n    };\n    ChartProxy.prototype.getShadowEnabled = function () {\n        var chartOptions = this.chartOptions;\n        return chartOptions.seriesDefaults && chartOptions.seriesDefaults.shadow ? !!chartOptions.seriesDefaults.shadow.enabled : false;\n    };\n    ChartProxy.prototype.getShadowProperty = function (property) {\n        var chartOptions = this.chartOptions;\n        return chartOptions.seriesDefaults && chartOptions.seriesDefaults.shadow ? chartOptions.seriesDefaults.shadow[property] : '';\n    };\n    ChartProxy.prototype.setShadowProperty = function (property, value) {\n        var series = this.getChart().series;\n        series.forEach(function (s) {\n            if (!s.shadow) {\n                s.shadow = new dropShadow_1.DropShadow({ enabled: false, blur: 0, xOffset: 0, yOffset: 0, color: 'rgba(0,0,0,0.5)' });\n            }\n            s.shadow[property] = value;\n        });\n        var chartOptions = this.chartOptions;\n        if (!chartOptions.seriesDefaults) {\n            chartOptions.seriesDefaults = {};\n        }\n        if (!chartOptions.seriesDefaults.shadow) {\n            chartOptions.seriesDefaults.shadow = {};\n        }\n        chartOptions.seriesDefaults.shadow[property] = value;\n        this.raiseChartOptionsChangedEvent();\n    };\n    ChartProxy.prototype.raiseChartOptionsChangedEvent = function () {\n        var event = {\n            type: ag_grid_community_1.Events.EVENT_CHART_OPTIONS_CHANGED,\n            chartType: this.chartProxyParams.chartType,\n            chartOptions: this.chartOptions\n        };\n        this.chartProxyParams.eventService.dispatchEvent(event);\n    };\n    ChartProxy.prototype.destroy = function () {\n        this.chart.destroy();\n    };\n    ChartProxy.darkLabelColour = 'rgb(221, 221, 221)';\n    ChartProxy.lightLabelColour = 'rgb(87, 87, 87)';\n    ChartProxy.darkAxisColour = 'rgb(100, 100, 100)';\n    ChartProxy.lightAxisColour = 'rgb(219, 219, 219)';\n    return ChartProxy;\n}());\nexports.ChartProxy = ChartProxy;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chartBuilder_1 = require(\"../../../builder/chartBuilder\");\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar polarChartProxy_1 = require(\"./polarChartProxy\");\nvar DoughnutChartProxy = /** @class */ (function (_super) {\n    __extends(DoughnutChartProxy, _super);\n    function DoughnutChartProxy(params) {\n        var _this = _super.call(this, params) || this;\n        _this.initChartOptions(ag_grid_community_1.ChartType.Doughnut, _this.defaultOptions());\n        _this.chart = chartBuilder_1.ChartBuilder.createDoughnutChart(_this.chartOptions);\n        return _this;\n    }\n    DoughnutChartProxy.prototype.update = function (params) {\n        var _this = this;\n        if (params.fields.length === 0) {\n            this.chart.removeAllSeries();\n            return;\n        }\n        var doughnutChart = this.chart;\n        var fieldIds = params.fields.map(function (f) { return f.colId; });\n        var seriesMap = {};\n        doughnutChart.series.forEach(function (series) {\n            var pieSeries = series;\n            var id = pieSeries.angleField;\n            if (fieldIds.indexOf(id) >= 0) {\n                seriesMap[id] = pieSeries;\n            }\n        });\n        var seriesOptions = this.chartOptions.seriesDefaults;\n        // Use `Object.create` to prevent mutating the original user config that is possibly reused.\n        var title = (seriesOptions.title ? Object.create(seriesOptions.title) : {});\n        seriesOptions.title = title;\n        var offset = 0;\n        params.fields.forEach(function (f, index) {\n            var existingSeries = seriesMap[f.colId];\n            title.text = f.displayName;\n            seriesOptions.angleField = f.colId;\n            seriesOptions.showInLegend = index === 0; // show legend items for the first series only\n            var calloutColors = seriesOptions.calloutColors;\n            var pieSeries = existingSeries ? existingSeries : chartBuilder_1.ChartBuilder.createSeries(seriesOptions);\n            pieSeries.labelField = params.category.id;\n            pieSeries.data = params.data;\n            // Normally all series provide legend items for every slice.\n            // For our use case, where all series have the same number of slices in the same order with the same labels\n            // (all of which can be different in other use cases) we don't want to show repeating labels in the legend,\n            // so we only show legend items for the first series, and then when the user toggles the slices of the\n            // first series in the legend, we programmatically toggle the corresponding slices of other series.\n            if (index === 0) {\n                pieSeries.toggleSeriesItem = function (itemId, enabled) {\n                    var chart = pieSeries.chart;\n                    if (chart) {\n                        chart.series.forEach(function (series) {\n                            series.enabled[itemId] = enabled;\n                        });\n                    }\n                    pieSeries.scheduleData();\n                };\n            }\n            pieSeries.outerRadiusOffset = offset;\n            offset -= 20;\n            pieSeries.innerRadiusOffset = offset;\n            offset -= 20;\n            var palette = _this.overriddenPalette ? _this.overriddenPalette : _this.chartProxyParams.getSelectedPalette();\n            pieSeries.fills = palette.fills;\n            pieSeries.strokes = palette.strokes;\n            if (calloutColors) {\n                pieSeries.calloutColors = calloutColors;\n            }\n            if (!existingSeries) {\n                seriesMap[f.colId] = pieSeries;\n            }\n        });\n        // Because repaints are automatic, it's important to remove/add/update series at once,\n        // so that we don't get painted twice.\n        var existingSeries = [];\n        for (var id in seriesMap) {\n            existingSeries.push(seriesMap[id]);\n        }\n        doughnutChart.series = existingSeries;\n    };\n    DoughnutChartProxy.prototype.defaultOptions = function () {\n        var palette = this.chartProxyParams.getSelectedPalette();\n        return {\n            background: {\n                fill: this.getBackgroundColor()\n            },\n            padding: {\n                top: 50,\n                right: 50,\n                bottom: 50,\n                left: 50\n            },\n            legendPosition: 'right',\n            legendPadding: 20,\n            legend: {\n                enabled: true,\n                labelFontStyle: undefined,\n                labelFontWeight: 'normal',\n                labelFontSize: 12,\n                labelFontFamily: 'Verdana, sans-serif',\n                labelColor: this.getLabelColor(),\n                itemPaddingX: 16,\n                itemPaddingY: 8,\n                markerPadding: 4,\n                markerSize: 14,\n                markerStrokeWidth: 1\n            },\n            seriesDefaults: {\n                type: 'pie',\n                fills: palette.fills,\n                strokes: palette.strokes,\n                strokeWidth: 1,\n                strokeOpacity: 1,\n                fillOpacity: 1,\n                calloutColors: palette.strokes,\n                calloutLength: 10,\n                calloutStrokeWidth: 1,\n                labelOffset: 3,\n                labelEnabled: false,\n                labelFontStyle: undefined,\n                labelFontWeight: 'normal',\n                labelFontSize: 12,\n                labelFontFamily: 'Verdana, sans-serif',\n                labelColor: this.getLabelColor(),\n                labelMinAngle: 0,\n                tooltipEnabled: true,\n                tooltipRenderer: undefined,\n                showInLegend: true,\n                shadow: {\n                    enabled: false,\n                    blur: 5,\n                    xOffset: 3,\n                    yOffset: 3,\n                    color: 'rgba(0,0,0,0.5)'\n                },\n                title: {\n                    enabled: false,\n                    font: 'bold 12px Verdana, sans-serif',\n                    color: 'black'\n                }\n            }\n        };\n    };\n    return DoughnutChartProxy;\n}(polarChartProxy_1.PolarChartProxy));\nexports.DoughnutChartProxy = DoughnutChartProxy;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chartBuilder_1 = require(\"../../../builder/chartBuilder\");\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar polarChartProxy_1 = require(\"./polarChartProxy\");\nvar PieChartProxy = /** @class */ (function (_super) {\n    __extends(PieChartProxy, _super);\n    function PieChartProxy(params) {\n        var _this = _super.call(this, params) || this;\n        _this.initChartOptions(ag_grid_community_1.ChartType.Pie, _this.defaultOptions());\n        _this.chart = chartBuilder_1.ChartBuilder.createPolarChart(_this.chartOptions);\n        return _this;\n    }\n    PieChartProxy.prototype.update = function (params) {\n        if (params.fields.length === 0) {\n            this.chart.removeAllSeries();\n            return;\n        }\n        var pieChart = this.chart;\n        var existingSeries = pieChart.series[0];\n        var existingSeriesId = existingSeries && existingSeries.angleField;\n        var pieSeriesId = params.fields[0].colId;\n        var pieSeriesName = params.fields[0].displayName;\n        var pieSeries = existingSeries;\n        var calloutColors = undefined;\n        if (existingSeriesId !== pieSeriesId) {\n            pieChart.removeSeries(existingSeries);\n            var seriesOptions = this.chartOptions.seriesDefaults;\n            // Use `Object.create` to prevent mutating the original user config that is possibly reused.\n            var title = (seriesOptions.title ? Object.create(seriesOptions.title) : {});\n            title.text = pieSeriesName;\n            seriesOptions.title = title;\n            seriesOptions.angleField = pieSeriesId;\n            calloutColors = seriesOptions.calloutColors;\n            pieSeries = chartBuilder_1.ChartBuilder.createSeries(seriesOptions);\n        }\n        pieSeries.labelField = params.category.id;\n        pieSeries.data = params.data;\n        var palette = this.overriddenPalette ? this.overriddenPalette : this.chartProxyParams.getSelectedPalette();\n        pieSeries.fills = palette.fills;\n        pieSeries.strokes = palette.strokes;\n        if (calloutColors) {\n            pieSeries.calloutColors = calloutColors;\n        }\n        if (!existingSeries) {\n            pieChart.addSeries(pieSeries);\n        }\n    };\n    PieChartProxy.prototype.defaultOptions = function () {\n        var palette = this.chartProxyParams.getSelectedPalette();\n        return {\n            background: {\n                fill: this.getBackgroundColor()\n            },\n            padding: {\n                top: 50,\n                right: 50,\n                bottom: 50,\n                left: 50\n            },\n            legendPosition: 'right',\n            legendPadding: 20,\n            legend: {\n                enabled: true,\n                labelFontStyle: undefined,\n                labelFontWeight: 'normal',\n                labelFontSize: 12,\n                labelFontFamily: 'Verdana, sans-serif',\n                labelColor: this.getLabelColor(),\n                itemPaddingX: 16,\n                itemPaddingY: 8,\n                markerPadding: 4,\n                markerSize: 14,\n                markerStrokeWidth: 1\n            },\n            seriesDefaults: {\n                type: 'pie',\n                fills: palette.fills,\n                strokes: palette.strokes,\n                strokeWidth: 1,\n                strokeOpacity: 1,\n                fillOpacity: 1,\n                calloutColors: palette.strokes,\n                calloutLength: 10,\n                calloutStrokeWidth: 1,\n                labelOffset: 3,\n                labelEnabled: false,\n                labelFontStyle: undefined,\n                labelFontWeight: 'normal',\n                labelFontSize: 12,\n                labelFontFamily: 'Verdana, sans-serif',\n                labelColor: this.getLabelColor(),\n                labelMinAngle: 0,\n                tooltipEnabled: true,\n                tooltipRenderer: undefined,\n                showInLegend: true,\n                shadow: {\n                    enabled: false,\n                    blur: 5,\n                    xOffset: 3,\n                    yOffset: 3,\n                    color: 'rgba(0,0,0,0.5)'\n                },\n                title: {\n                    enabled: false,\n                    font: 'bold 12px Verdana, sans-serif',\n                    color: 'black'\n                }\n            }\n        };\n    };\n    return PieChartProxy;\n}(polarChartProxy_1.PolarChartProxy));\nexports.PieChartProxy = PieChartProxy;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chartProxy_1 = require(\"../chartProxy\");\nvar PolarChartProxy = /** @class */ (function (_super) {\n    __extends(PolarChartProxy, _super);\n    function PolarChartProxy(params) {\n        return _super.call(this, params) || this;\n    }\n    PolarChartProxy.prototype.setSeriesProperty = function (property, value) {\n        var series = this.getChart().series;\n        series.forEach(function (s) { return s[property] = value; });\n        if (!this.chartOptions.seriesDefaults) {\n            this.chartOptions.seriesDefaults = {};\n        }\n        this.chartOptions.seriesDefaults[property] = value;\n        this.raiseChartOptionsChangedEvent();\n    };\n    PolarChartProxy.prototype.getSeriesProperty = function (property) {\n        return this.chartOptions.seriesDefaults ? \"\" + this.chartOptions.seriesDefaults[property] : '';\n    };\n    PolarChartProxy.prototype.getTooltipsEnabled = function () {\n        return this.chartOptions.seriesDefaults ? !!this.chartOptions.seriesDefaults.tooltipEnabled : false;\n    };\n    PolarChartProxy.prototype.getLabelEnabled = function () {\n        return this.chartOptions.seriesDefaults ? !!this.chartOptions.seriesDefaults.labelEnabled : false;\n    };\n    return PolarChartProxy;\n}(chartProxy_1.ChartProxy));\nexports.PolarChartProxy = PolarChartProxy;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar ChartTranslator = /** @class */ (function () {\n    function ChartTranslator() {\n    }\n    ChartTranslator_1 = ChartTranslator;\n    ChartTranslator.prototype.translate = function (toTranslate) {\n        var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n        var defaultTranslation = ChartTranslator_1.DEFAULT_TRANSLATIONS[toTranslate];\n        return translate(toTranslate, defaultTranslation);\n    };\n    var ChartTranslator_1;\n    ChartTranslator.DEFAULT_TRANSLATIONS = {\n        pivotChartTitle: 'Pivot Chart',\n        rangeChartTitle: 'Range Chart',\n        settings: 'Settings',\n        data: 'Data',\n        format: 'Format',\n        categories: 'Categories',\n        series: 'Series',\n        xyValues: 'X Y Values',\n        axis: 'Axis',\n        color: 'Color',\n        thickness: 'Thickness',\n        xRotation: 'X Rotation',\n        yRotation: 'Y Rotation',\n        ticks: 'Ticks',\n        width: 'Width',\n        length: 'Length',\n        padding: 'Padding',\n        chart: 'Chart',\n        title: 'Title',\n        font: 'Font',\n        top: 'Top',\n        right: 'Right',\n        bottom: 'Bottom',\n        left: 'Left',\n        labels: 'Labels',\n        size: 'Size',\n        legend: 'Legend',\n        position: 'Position',\n        markerSize: 'Marker Size',\n        markerStroke: 'Marker Stroke',\n        markerPadding: 'Marker Padding',\n        itemPaddingX: 'Item Padding X',\n        itemPaddingY: 'Item Padding Y',\n        strokeWidth: 'Stroke Width',\n        offset: 'Offset',\n        tooltips: 'Tooltips',\n        offsets: 'Offsets',\n        callout: 'Callout',\n        markers: 'Markers',\n        shadow: 'Shadow',\n        blur: 'Blur',\n        xOffset: 'X Offset',\n        yOffset: 'Y Offset',\n        lineWidth: 'Line Width',\n        normal: 'Normal',\n        bold: 'Bold',\n        italic: 'Italic',\n        boldItalic: 'Bold Italic',\n        fillOpacity: 'Fill Opacity',\n        strokeOpacity: 'Line Opacity',\n        groupedColumnTooltip: 'Grouped',\n        stackedColumnTooltip: 'Stacked',\n        normalizedColumnTooltip: '100% Stacked',\n        groupedBarTooltip: 'Grouped',\n        stackedBarTooltip: 'Stacked',\n        normalizedBarTooltip: '100% Stacked',\n        pieTooltip: 'Pie',\n        doughnutTooltip: 'Doughnut',\n        lineTooltip: 'Line',\n        groupedAreaTooltip: 'Grouped',\n        stackedAreaTooltip: 'Stacked',\n        normalizedAreaTooltip: '100% Stacked',\n        scatterTooltip: 'Scatter',\n        bubbleTooltip: 'Bubble',\n        columnGroup: 'Column',\n        barGroup: 'Bar',\n        pieGroup: 'Pie',\n        lineGroup: 'Line',\n        scatterGroup: 'X Y (Scatter)',\n        areaGroup: 'Area',\n        pivotChartRequiresPivotMode: 'Pivot Chart requires Pivot Mode enabled.',\n        noDataToChart: 'No data available to be charted.',\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], ChartTranslator.prototype, \"gridOptionsWrapper\", void 0);\n    ChartTranslator = ChartTranslator_1 = __decorate([\n        ag_grid_community_1.Bean(\"chartTranslator\")\n    ], ChartTranslator);\n    return ChartTranslator;\n}());\nexports.ChartTranslator = ChartTranslator;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar chartMenu_1 = require(\"./menu/chartMenu\");\nvar chartController_1 = require(\"./chartController\");\nvar chartModel_1 = require(\"./chartModel\");\nvar barChartProxy_1 = require(\"./chartProxies/cartesian/barChartProxy\");\nvar areaChartProxy_1 = require(\"./chartProxies/cartesian/areaChartProxy\");\nvar lineChartProxy_1 = require(\"./chartProxies/cartesian/lineChartProxy\");\nvar pieChartProxy_1 = require(\"./chartProxies/polar/pieChartProxy\");\nvar doughnutChartProxy_1 = require(\"./chartProxies/polar/doughnutChartProxy\");\nvar scatterChartProxy_1 = require(\"./chartProxies/cartesian/scatterChartProxy\");\nvar palettes_1 = require(\"../../charts/chart/palettes\");\nvar chartTranslator_1 = require(\"./chartTranslator\");\nvar categoryAxis_1 = require(\"../../charts/chart/axis/categoryAxis\");\nvar numberAxis_1 = require(\"../../charts/chart/axis/numberAxis\");\nvar GridChartComp = /** @class */ (function (_super) {\n    __extends(GridChartComp, _super);\n    function GridChartComp(params) {\n        var _this = _super.call(this, GridChartComp.TEMPLATE) || this;\n        _this.params = params;\n        return _this;\n    }\n    GridChartComp.prototype.init = function () {\n        var modelParams = {\n            pivotChart: this.params.pivotChart,\n            chartType: this.params.chartType,\n            aggFunc: this.params.aggFunc,\n            cellRanges: [this.params.cellRange],\n            suppressChartRanges: this.params.suppressChartRanges,\n            palettes: palettes_1.palettes,\n            activePalette: 0\n        };\n        this.model = new chartModel_1.ChartModel(modelParams);\n        this.getContext().wireBean(this.model);\n        this.chartController = new chartController_1.ChartController(this.model);\n        this.getContext().wireBean(this.chartController);\n        this.createChart();\n        if (this.params.insideDialog) {\n            this.addDialog();\n        }\n        this.addResizeListener();\n        this.addMenu();\n        this.addDestroyableEventListener(this.getGui(), 'focusin', this.setActiveChartCellRange.bind(this));\n        this.addDestroyableEventListener(this.chartController, chartController_1.ChartController.EVENT_CHART_MODEL_UPDATED, this.refresh.bind(this));\n        this.addDestroyableEventListener(this.chartMenu, chartMenu_1.ChartMenu.EVENT_DOWNLOAD_CHART, this.downloadChart.bind(this));\n        this.refresh();\n    };\n    GridChartComp.prototype.createChart = function () {\n        var _a = this.params, width = _a.width, height = _a.height;\n        // destroy chart and remove it from DOM\n        if (this.chartProxy) {\n            var chart = this.chartProxy.getChart();\n            height = chart.height;\n            width = chart.width;\n            this.chartProxy.destroy();\n            var canvas = this.eChart.querySelector('canvas');\n            if (canvas) {\n                this.eChart.removeChild(canvas);\n            }\n        }\n        var processChartOptionsFunc = this.params.processChartOptions ?\n            this.params.processChartOptions : this.gridOptionsWrapper.getProcessChartOptionsFunc();\n        var categorySelected = this.model.getSelectedDimension().colId !== chartModel_1.ChartModel.DEFAULT_CATEGORY;\n        var chartProxyParams = {\n            chartType: this.model.getChartType(),\n            processChartOptions: processChartOptionsFunc,\n            getSelectedPalette: this.getSelectedPalette.bind(this),\n            isDarkTheme: this.environment.isThemeDark.bind(this.environment),\n            parentElement: this.eChart,\n            width: width,\n            height: height,\n            eventService: this.eventService,\n            categorySelected: categorySelected,\n            grouping: this.model.isGrouping(),\n            document: this.gridOptionsWrapper.getDocument()\n        };\n        // local state used to detect when chart type changes\n        this.currentChartType = this.model.getChartType();\n        this.currentChartGroupingActive = this.model.isGrouping();\n        this.chartProxy = this.createChartProxy(chartProxyParams);\n        // update chart proxy ref (used by format panel)\n        this.model.setChartProxy(this.chartProxy);\n    };\n    GridChartComp.prototype.getSelectedPalette = function () {\n        return this.model.getPalettes()[this.model.getActivePalette()];\n    };\n    GridChartComp.prototype.createChartProxy = function (chartOptions) {\n        switch (chartOptions.chartType) {\n            case ag_grid_community_1.ChartType.GroupedColumn:\n            case ag_grid_community_1.ChartType.StackedColumn:\n            case ag_grid_community_1.ChartType.NormalizedColumn:\n            case ag_grid_community_1.ChartType.GroupedBar:\n            case ag_grid_community_1.ChartType.StackedBar:\n            case ag_grid_community_1.ChartType.NormalizedBar:\n                return new barChartProxy_1.BarChartProxy(chartOptions);\n            case ag_grid_community_1.ChartType.Pie:\n                return new pieChartProxy_1.PieChartProxy(chartOptions);\n            case ag_grid_community_1.ChartType.Doughnut:\n                return new doughnutChartProxy_1.DoughnutChartProxy(chartOptions);\n            case ag_grid_community_1.ChartType.Area:\n            case ag_grid_community_1.ChartType.StackedArea:\n            case ag_grid_community_1.ChartType.NormalizedArea:\n                return new areaChartProxy_1.AreaChartProxy(chartOptions);\n            case ag_grid_community_1.ChartType.Line:\n                return new lineChartProxy_1.LineChartProxy(chartOptions);\n            case ag_grid_community_1.ChartType.Scatter:\n            case ag_grid_community_1.ChartType.Bubble:\n                return new scatterChartProxy_1.ScatterChartProxy(chartOptions);\n        }\n    };\n    GridChartComp.prototype.addDialog = function () {\n        var _this = this;\n        var title = this.chartTranslator.translate(this.params.pivotChart ? 'pivotChartTitle' : 'rangeChartTitle');\n        this.chartDialog = new ag_grid_community_1.AgDialog({\n            resizable: true,\n            movable: true,\n            maximizable: true,\n            title: title,\n            component: this,\n            centered: true,\n            closable: true\n        });\n        this.getContext().wireBean(this.chartDialog);\n        this.chartDialog.addEventListener(ag_grid_community_1.AgDialog.EVENT_DESTROYED, function () { return _this.destroy(); });\n    };\n    GridChartComp.prototype.addMenu = function () {\n        this.chartMenu = new chartMenu_1.ChartMenu(this.chartController);\n        this.chartMenu.setParentComponent(this);\n        this.getContext().wireBean(this.chartMenu);\n        this.eChartComponentsWrapper.appendChild(this.chartMenu.getGui());\n    };\n    GridChartComp.prototype.refresh = function () {\n        if (this.shouldRecreateChart()) {\n            this.createChart();\n        }\n        this.updateChart();\n    };\n    GridChartComp.prototype.shouldRecreateChart = function () {\n        var chartTypeChanged = this.model.getChartType() !== this.currentChartType;\n        var groupingChanged = this.currentChartGroupingActive !== this.model.isGrouping();\n        if (chartTypeChanged || groupingChanged) {\n            return true;\n        }\n        // we also need to recreate XY charts when xAxis changes\n        if (this.isXYChart()) {\n            var categorySelected = !this.chartController.isDefaultCategorySelected();\n            var chart = this.chartProxy.getChart();\n            var switchingToCategoryAxis = categorySelected && chart.xAxis instanceof numberAxis_1.NumberAxis;\n            var switchingToNumberAxis = !categorySelected && chart.xAxis instanceof categoryAxis_1.CategoryAxis;\n            return switchingToCategoryAxis || switchingToNumberAxis;\n        }\n        return false;\n    };\n    GridChartComp.prototype.getChartComponentsWrapper = function () {\n        return this.eChartComponentsWrapper;\n    };\n    GridChartComp.prototype.getDockedContainer = function () {\n        return this.eDockedContainer;\n    };\n    GridChartComp.prototype.slideDockedOut = function (width) {\n        this.eDockedContainer.style.minWidth = width + 'px';\n    };\n    GridChartComp.prototype.slideDockedIn = function () {\n        this.eDockedContainer.style.minWidth = '0';\n    };\n    GridChartComp.prototype.getCurrentChartType = function () {\n        return this.currentChartType;\n    };\n    GridChartComp.prototype.updateChart = function () {\n        var _a = this, model = _a.model, chartProxy = _a.chartProxy;\n        var selectedCols = model.getSelectedValueColState();\n        var fields = selectedCols.map(function (c) {\n            return { colId: c.colId, displayName: c.displayName };\n        });\n        var data = model.getData();\n        var chartEmpty = this.handleEmptyChart(data, fields);\n        if (chartEmpty) {\n            return;\n        }\n        var selectedDimension = model.getSelectedDimension();\n        var chartUpdateParams = {\n            data: data,\n            category: {\n                id: selectedDimension.colId,\n                name: selectedDimension.displayName\n            },\n            fields: fields\n        };\n        chartProxy.update(chartUpdateParams);\n    };\n    GridChartComp.prototype.handleEmptyChart = function (data, fields) {\n        var parent = this.chartProxy.getChart().parent;\n        var pivotModeDisabled = this.model.isPivotChart() && !this.model.isPivotMode();\n        var minFieldsRequired = 1;\n        if (this.chartController.isActiveXYChart()) {\n            if (this.model.getChartType() === ag_grid_community_1.ChartType.Bubble) {\n                minFieldsRequired = 3;\n            }\n            else {\n                minFieldsRequired = 2;\n            }\n        }\n        var isEmptyChart = fields.length < minFieldsRequired || data.length === 0;\n        if (parent) {\n            ag_grid_community_1._.addOrRemoveCssClass(parent, 'ag-chart-empty', pivotModeDisabled || isEmptyChart);\n        }\n        if (pivotModeDisabled) {\n            this.eEmpty.innerText = this.chartTranslator.translate('pivotChartRequiresPivotMode');\n            return true;\n        }\n        if (isEmptyChart) {\n            this.eEmpty.innerText = this.chartTranslator.translate('noDataToChart');\n            return true;\n        }\n        return false;\n    };\n    GridChartComp.prototype.downloadChart = function () {\n        var chart = this.chartProxy.getChart();\n        var fileName = chart.title ? chart.title.text : 'chart';\n        chart.scene.download(fileName);\n    };\n    GridChartComp.prototype.refreshCanvasSize = function () {\n        var eChartWrapper = this.eChart;\n        var chart = this.chartProxy.getChart();\n        chart.height = ag_grid_community_1._.getInnerHeight(eChartWrapper);\n        chart.width = ag_grid_community_1._.getInnerWidth(eChartWrapper);\n    };\n    GridChartComp.prototype.addResizeListener = function () {\n        var _this = this;\n        var eGui = this.getGui();\n        var resizeFunc = function () {\n            if (!eGui || !eGui.offsetParent) {\n                observeResizeFunc();\n                return;\n            }\n            _this.refreshCanvasSize();\n        };\n        var observeResizeFunc = this.resizeObserverService.observeResize(this.eChart, resizeFunc, 5);\n    };\n    GridChartComp.prototype.setActiveChartCellRange = function (focusEvent) {\n        if (this.getGui().contains(focusEvent.relatedTarget)) {\n            return;\n        }\n        this.chartController.setChartRange();\n    };\n    GridChartComp.prototype.isXYChart = function () {\n        return [ag_grid_community_1.ChartType.Scatter, ag_grid_community_1.ChartType.Bubble].indexOf(this.model.getChartType()) > -1;\n    };\n    GridChartComp.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.chartController) {\n            this.chartController.destroy();\n        }\n        if (this.chartProxy) {\n            this.chartProxy.destroy();\n        }\n        if (this.chartMenu) {\n            this.chartMenu.destroy();\n        }\n        // don't want to invoke destroy() on the Dialog / MessageBox (prevents destroy loop)\n        if (this.chartDialog && this.chartDialog.isAlive()) {\n            this.chartDialog.destroy();\n        }\n        // if the user is providing containers for the charts, we need to clean up, otherwise the old chart\n        // data will still be visible although the chart is no longer bound to the grid\n        var eGui = this.getGui();\n        ag_grid_community_1._.clearElement(eGui);\n        // remove from parent, so if user provided container, we detach from the provided dom element\n        ag_grid_community_1._.removeFromParent(eGui);\n    };\n    GridChartComp.TEMPLATE = \"<div class=\\\"ag-chart\\\" tabindex=\\\"-1\\\">\\n            <div ref=\\\"eChartComponentsWrapper\\\" tabindex=\\\"-1\\\" class=\\\"ag-chart-components-wrapper\\\">\\n                <div ref=\\\"eChart\\\" class=\\\"ag-chart-canvas-wrapper\\\">\\n                    <div ref=\\\"eEmpty\\\" class=\\\"ag-chart-empty-text ag-unselectable\\\"></div>\\n                </div>\\n            </div>\\n            <div ref=\\\"eDockedContainer\\\" class=\\\"ag-chart-docked-container\\\"></div>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.RefSelector('eChart'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridChartComp.prototype, \"eChart\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eChartComponentsWrapper'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridChartComp.prototype, \"eChartComponentsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eDockedContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridChartComp.prototype, \"eDockedContainer\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eEmpty'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridChartComp.prototype, \"eEmpty\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('resizeObserverService'),\n        __metadata(\"design:type\", ag_grid_community_1.ResizeObserverService)\n    ], GridChartComp.prototype, \"resizeObserverService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], GridChartComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('environment'),\n        __metadata(\"design:type\", ag_grid_community_1.Environment)\n    ], GridChartComp.prototype, \"environment\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], GridChartComp.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], GridChartComp.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], GridChartComp.prototype, \"init\", null);\n    return GridChartComp;\n}(ag_grid_community_1.Component));\nexports.GridChartComp = GridChartComp;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar tabbedChartMenu_1 = require(\"./tabbedChartMenu\");\nvar ChartMenu = /** @class */ (function (_super) {\n    __extends(ChartMenu, _super);\n    function ChartMenu(chartController) {\n        var _this = _super.call(this, ChartMenu.TEMPLATE) || this;\n        _this.buttons = {\n            chartSettings: ['menu', function () { return _this.showMenu('chartSettings'); }],\n            chartData: ['menu', function () { return _this.showMenu('chartData'); }],\n            chartFormat: ['menu', function () { return _this.showMenu('chartFormat'); }],\n            chartUnlink: ['linked', function (e) { return _this.toggleDetached(e); }],\n            chartDownload: ['save', function () { return _this.saveChart(); }]\n        };\n        _this.tabs = [];\n        _this.chartController = chartController;\n        return _this;\n    }\n    ChartMenu.prototype.postConstruct = function () {\n        this.createButtons();\n    };\n    ChartMenu.prototype.getToolbarOptions = function () {\n        var _this = this;\n        var tabOptions = ['chartSettings', 'chartData', 'chartFormat', 'chartUnlink', 'chartDownload'];\n        var toolbarItemsFunc = this.gridOptionsWrapper.getChartToolbarItemsFunc();\n        if (toolbarItemsFunc) {\n            var params = {\n                api: this.gridOptionsWrapper.getApi(),\n                columnApi: this.gridOptionsWrapper.getColumnApi(),\n                defaultItems: tabOptions\n            };\n            tabOptions = toolbarItemsFunc(params).filter(function (option) {\n                if (!_this.buttons[option]) {\n                    console.warn(\"ag-Grid: '\" + option + \" is not a valid Chart Toolbar Option\");\n                    return false;\n                }\n                return true;\n            });\n        }\n        // pivot charts use the column tool panel instead of the data panel\n        if (this.chartController.isPivotChart()) {\n            tabOptions = tabOptions.filter(function (option) { return option !== 'chartData'; });\n        }\n        var ignoreOptions = ['chartUnlink', 'chartDownload'];\n        this.tabs = tabOptions.filter(function (option) { return ignoreOptions.indexOf(option) === -1; });\n        return tabOptions.filter(function (value) { return ignoreOptions.indexOf(value) !== -1 || (_this.tabs.length && value === _this.tabs[0]); });\n    };\n    ChartMenu.prototype.toggleDetached = function (e) {\n        var target = e.target;\n        var active = ag_grid_community_1._.containsClass(target, 'ag-icon-linked');\n        ag_grid_community_1._.addOrRemoveCssClass(target, 'ag-icon-linked', !active);\n        ag_grid_community_1._.addOrRemoveCssClass(target, 'ag-icon-unlinked', active);\n        this.chartController.detachChartRange();\n    };\n    ChartMenu.prototype.createButtons = function () {\n        var _this = this;\n        var chartToolbarOptions = this.getToolbarOptions();\n        chartToolbarOptions.forEach(function (button) {\n            var buttonConfig = _this.buttons[button];\n            var iconName = buttonConfig[0], callback = buttonConfig[1];\n            var buttonEl = ag_grid_community_1._.createIconNoSpan(iconName, _this.gridOptionsWrapper, undefined, true);\n            _this.addDestroyableEventListener(buttonEl, 'click', callback);\n            _this.getGui().appendChild(buttonEl);\n        });\n    };\n    ChartMenu.prototype.saveChart = function () {\n        var event = {\n            type: ChartMenu.EVENT_DOWNLOAD_CHART\n        };\n        this.dispatchEvent(event);\n    };\n    ChartMenu.prototype.createMenu = function (defaultTab) {\n        var _this = this;\n        var chartComp = this.getParentComponent();\n        var dockedContainer = chartComp.getDockedContainer();\n        var context = this.getContext();\n        var menuPanel = this.menuPanel = new ag_grid_community_1.AgPanel({\n            minWidth: 220,\n            width: 220,\n            height: '100%',\n            closable: true,\n            hideTitleBar: true\n        });\n        context.wireBean(this.menuPanel);\n        menuPanel.setParentComponent(this);\n        dockedContainer.appendChild(menuPanel.getGui());\n        this.tabbedMenu = new tabbedChartMenu_1.TabbedChartMenu({\n            controller: this.chartController,\n            type: chartComp.getCurrentChartType(),\n            panels: this.tabs\n        });\n        context.wireBean(this.tabbedMenu);\n        this.addDestroyableEventListener(this.menuPanel, ag_grid_community_1.Component.EVENT_DESTROYED, function () {\n            _this.tabbedMenu.destroy();\n        });\n        return new ag_grid_community_1.Promise(function (res) {\n            window.setTimeout(function () {\n                menuPanel.setBodyComponent(_this.tabbedMenu);\n                _this.tabbedMenu.showTab(defaultTab);\n                _this.addDestroyableEventListener(chartComp.getChartComponentsWrapper(), 'click', function () {\n                    if (ag_grid_community_1._.containsClass(chartComp.getGui(), 'ag-has-menu')) {\n                        _this.hideMenu();\n                    }\n                });\n                res(menuPanel);\n            }, 100);\n        });\n    };\n    ChartMenu.prototype.slideDockedContainer = function () {\n        var _this = this;\n        var chartComp = this.getParentComponent();\n        chartComp.slideDockedOut(this.menuPanel.getWidth());\n        window.setTimeout(function () {\n            ag_grid_community_1._.addCssClass(_this.getParentComponent().getGui(), 'ag-has-menu');\n        }, 500);\n    };\n    ChartMenu.prototype.showMenu = function (tabName) {\n        var _this = this;\n        var tab = this.tabs.indexOf(tabName);\n        if (!this.menuPanel) {\n            this.createMenu(tab)\n                .then(function () {\n                _this.slideDockedContainer();\n            });\n        }\n        else {\n            this.slideDockedContainer();\n        }\n    };\n    ChartMenu.prototype.hideMenu = function () {\n        var chartComp = this.getParentComponent();\n        chartComp.slideDockedIn();\n        ag_grid_community_1._.removeCssClass(this.getParentComponent().getGui(), 'ag-has-menu');\n    };\n    ChartMenu.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.menuPanel && this.menuPanel.isAlive()) {\n            this.menuPanel.destroy();\n        }\n    };\n    ChartMenu.EVENT_DOWNLOAD_CHART = 'downloadChart';\n    ChartMenu.TEMPLATE = \"<div class=\\\"ag-chart-menu\\\"></div>\";\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], ChartMenu.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ChartMenu.prototype, \"postConstruct\", null);\n    return ChartMenu;\n}(ag_grid_community_1.Component));\nexports.ChartMenu = ChartMenu;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar chartController_1 = require(\"../../chartController\");\nvar chartTranslator_1 = require(\"../../chartTranslator\");\nvar ChartDataPanel = /** @class */ (function (_super) {\n    __extends(ChartDataPanel, _super);\n    function ChartDataPanel(chartController) {\n        var _this = _super.call(this, ChartDataPanel.TEMPLATE) || this;\n        _this.columnComps = {};\n        _this.dimensionComps = [];\n        _this.chartController = chartController;\n        return _this;\n    }\n    ChartDataPanel.prototype.init = function () {\n        this.createDataGroupElements();\n        this.addDestroyableEventListener(this.chartController, chartController_1.ChartController.EVENT_CHART_MODEL_UPDATED, this.createDataGroupElements.bind(this));\n    };\n    ChartDataPanel.prototype.createDataGroupElements = function () {\n        var _this = this;\n        this.destroyColumnComps();\n        var eGui = this.getGui();\n        var _a = this.chartController.getColStateForMenu(), dimensionCols = _a.dimensionCols, valueCols = _a.valueCols;\n        [dimensionCols, valueCols].forEach(function (group, idx) {\n            var isCategory = idx === 0;\n            var dataGroupKey = isCategory ? 'categories' : _this.chartController.isActiveXYChart() ? 'xyValues' : 'series';\n            var groupComp = new ag_grid_community_1.AgGroupComponent({\n                title: _this.chartTranslator.translate(dataGroupKey),\n                enabled: true,\n                suppressEnabledCheckbox: true,\n                suppressOpenCloseIcons: false\n            });\n            _this.getContext().wireBean(groupComp);\n            group.forEach(_this.getColumnStateMapper(isCategory, groupComp));\n            var eDiv = document.createElement('div');\n            eDiv.appendChild(groupComp.getGui());\n            eGui.appendChild(eDiv);\n        });\n    };\n    ChartDataPanel.prototype.getColumnStateMapper = function (dimension, container) {\n        var _this = this;\n        return function (colState) {\n            var comp = dimension\n                ? new ag_grid_community_1.AgRadioButton()\n                : new ag_grid_community_1.AgCheckbox();\n            _this.getContext().wireBean(comp);\n            comp.setLabel(ag_grid_community_1._.escape(colState.displayName));\n            comp.setValue(colState.selected);\n            _this.columnComps[colState.colId] = comp;\n            if (dimension) {\n                comp.setInputName('chartDimension' + _this.getCompId());\n                _this.dimensionComps.push(comp);\n            }\n            _this.addDestroyableEventListener(comp, ag_grid_community_1.AgAbstractField.EVENT_CHANGED, function () {\n                colState.selected = comp.getValue();\n                _this.chartController.updateForMenuChange(colState);\n            });\n            container.addItem(comp);\n        };\n    };\n    ChartDataPanel.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.destroyColumnComps();\n    };\n    ChartDataPanel.prototype.destroyColumnComps = function () {\n        ag_grid_community_1._.clearElement(this.getGui());\n        if (this.columnComps) {\n            ag_grid_community_1._.iterateObject(this.columnComps, function (key, renderedItem) { return renderedItem.destroy(); });\n        }\n        this.columnComps = {};\n    };\n    ChartDataPanel.TEMPLATE = \"<div class=\\\"ag-chart-data-wrapper\\\"></div>\";\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], ChartDataPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ChartDataPanel.prototype, \"init\", null);\n    return ChartDataPanel;\n}(ag_grid_community_1.Component));\nexports.ChartDataPanel = ChartDataPanel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar axisTicksPanel_1 = require(\"./axisTicksPanel\");\nvar labelPanel_1 = require(\"../label/labelPanel\");\nvar chartTranslator_1 = require(\"../../../chartTranslator\");\nvar AxisPanel = /** @class */ (function (_super) {\n    __extends(AxisPanel, _super);\n    function AxisPanel(chartController) {\n        var _this = _super.call(this) || this;\n        _this.activePanels = [];\n        _this.chartController = chartController;\n        _this.chartProxy = chartController.getChartProxy();\n        return _this;\n    }\n    AxisPanel.prototype.init = function () {\n        this.setTemplate(AxisPanel.TEMPLATE);\n        this.initAxis();\n        this.initAxisTicks();\n        this.initAxisLabels();\n    };\n    AxisPanel.prototype.initAxis = function () {\n        var _this = this;\n        this.axisGroup\n            .setTitle(this.chartTranslator.translate('axis'))\n            .toggleGroupExpand(false)\n            .hideEnabledCheckbox(true);\n        this.axisColorInput\n            .setLabel(this.chartTranslator.translate('color'))\n            .setLabelWidth('flex')\n            .setInputWidth(45)\n            .setValue(this.chartProxy.getCommonAxisProperty('lineColor'))\n            .onValueChange(function (newColor) { return _this.chartProxy.setCommonAxisProperty('lineColor', newColor); });\n        this.axisLineWidthSlider\n            .setLabel(this.chartTranslator.translate('thickness'))\n            .setMaxValue(10)\n            .setTextFieldWidth(45)\n            .setValue(this.chartProxy.getCommonAxisProperty('lineWidth'))\n            .onValueChange(function (newValue) { return _this.chartProxy.setCommonAxisProperty('lineWidth', newValue); });\n    };\n    AxisPanel.prototype.initAxisTicks = function () {\n        var axisTicksComp = new axisTicksPanel_1.AxisTicksPanel(this.chartController);\n        this.getContext().wireBean(axisTicksComp);\n        this.axisGroup.addItem(axisTicksComp);\n        this.activePanels.push(axisTicksComp);\n    };\n    AxisPanel.prototype.initAxisLabels = function () {\n        var _this = this;\n        var initialFont = {\n            family: this.chartProxy.getCommonAxisProperty('labelFontFamily'),\n            style: this.chartProxy.getCommonAxisProperty('labelFontStyle'),\n            weight: this.chartProxy.getCommonAxisProperty('labelFontWeight'),\n            size: parseInt(this.chartProxy.getCommonAxisProperty('labelFontSize')),\n            color: this.chartProxy.getCommonAxisProperty('labelColor')\n        };\n        // note we don't set the font style via legend panel\n        var setFont = function (font) {\n            if (font.family) {\n                _this.chartProxy.setCommonAxisProperty('labelFontFamily', font.family);\n            }\n            if (font.weight) {\n                _this.chartProxy.setCommonAxisProperty('labelFontWeight', font.weight);\n            }\n            if (font.size) {\n                _this.chartProxy.setCommonAxisProperty('labelFontSize', font.size);\n            }\n            if (font.color) {\n                _this.chartProxy.setCommonAxisProperty('labelColor', font.color);\n            }\n            _this.chartProxy.getChart().performLayout();\n        };\n        var params = {\n            enabled: true,\n            suppressEnabledCheckbox: true,\n            initialFont: initialFont,\n            setFont: setFont\n        };\n        var labelPanelComp = new labelPanel_1.LabelPanel(params);\n        this.getContext().wireBean(labelPanelComp);\n        this.axisGroup.addItem(labelPanelComp);\n        this.activePanels.push(labelPanelComp);\n        this.addAdditionalLabelComps(labelPanelComp);\n    };\n    AxisPanel.prototype.addAdditionalLabelComps = function (labelPanelComp) {\n        var _this = this;\n        var createAngleComp = function (label, initialValue, updateFunc) {\n            var rotationInput = new ag_grid_community_1.AgAngleSelect()\n                .setLabel(label)\n                .setLabelWidth(\"flex\")\n                .setValue(initialValue)\n                .onValueChange(updateFunc);\n            _this.getContext().wireBean(rotationInput);\n            labelPanelComp.addCompToPanel(rotationInput);\n        };\n        var degreesSymbol = String.fromCharCode(176);\n        var xRotationLabel = this.chartTranslator.translate('xRotation') + \" \" + degreesSymbol;\n        var xUpdateFunc = function (newValue) { return _this.chartProxy.setXRotation(newValue); };\n        createAngleComp(xRotationLabel, this.chartProxy.getXRotation(), xUpdateFunc);\n        var yRotationLabel = this.chartTranslator.translate('yRotation') + \" \" + degreesSymbol;\n        var yUpdateFunc = function (newValue) { return _this.chartProxy.setYRotation(newValue); };\n        createAngleComp(yRotationLabel, this.chartProxy.getYRotation(), yUpdateFunc);\n    };\n    AxisPanel.prototype.destroyActivePanels = function () {\n        this.activePanels.forEach(function (panel) {\n            ag_grid_community_1._.removeFromParent(panel.getGui());\n            panel.destroy();\n        });\n    };\n    AxisPanel.prototype.destroy = function () {\n        this.destroyActivePanels();\n        _super.prototype.destroy.call(this);\n    };\n    AxisPanel.TEMPLATE = \"<div>\\n            <ag-group-component ref=\\\"axisGroup\\\">\\n                <ag-color-picker ref=\\\"axisColorInput\\\"></ag-color-picker>\\n                <ag-slider ref=\\\"axisLineWidthSlider\\\"></ag-slider>\\n            </ag-group-component>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.RefSelector('axisGroup'),\n        __metadata(\"design:type\", ag_grid_community_1.AgGroupComponent)\n    ], AxisPanel.prototype, \"axisGroup\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('axisLineWidthSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], AxisPanel.prototype, \"axisLineWidthSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('axisColorInput'),\n        __metadata(\"design:type\", ag_grid_community_1.AgColorPicker)\n    ], AxisPanel.prototype, \"axisColorInput\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], AxisPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], AxisPanel.prototype, \"init\", null);\n    return AxisPanel;\n}(ag_grid_community_1.Component));\nexports.AxisPanel = AxisPanel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar chartTranslator_1 = require(\"../../../chartTranslator\");\nvar AxisTicksPanel = /** @class */ (function (_super) {\n    __extends(AxisTicksPanel, _super);\n    function AxisTicksPanel(chartController) {\n        var _this = _super.call(this) || this;\n        _this.chartProxy = chartController.getChartProxy();\n        return _this;\n    }\n    AxisTicksPanel.prototype.init = function () {\n        this.setTemplate(AxisTicksPanel.TEMPLATE);\n        this.initAxisTicks();\n    };\n    AxisTicksPanel.prototype.initAxisTicks = function () {\n        var _this = this;\n        this.axisTicksGroup\n            .setTitle(this.chartTranslator.translate('ticks'))\n            .hideOpenCloseIcons(true)\n            .hideEnabledCheckbox(true);\n        this.axisTicksColorPicker\n            .setLabel(this.chartTranslator.translate('color'))\n            .setLabelWidth('flex')\n            .setInputWidth(45)\n            .setValue(this.chartProxy.getCommonAxisProperty('tickColor'))\n            .onValueChange(function (newColor) { return _this.chartProxy.setCommonAxisProperty('tickColor', newColor); });\n        var initInput = function (property, input, label, maxValue) {\n            input.setLabel(label)\n                .setValue(_this.chartProxy.getCommonAxisProperty(property))\n                .setMaxValue(maxValue)\n                .setTextFieldWidth(45)\n                .onValueChange(function (newValue) { return _this.chartProxy.setCommonAxisProperty(property, newValue); });\n        };\n        initInput('tickWidth', this.axisTicksWidthSlider, this.chartTranslator.translate('width'), 10);\n        initInput('tickSize', this.axisTicksSizeSlider, this.chartTranslator.translate('length'), 30);\n        initInput('tickPadding', this.axisTicksPaddingSlider, this.chartTranslator.translate('padding'), 30);\n    };\n    AxisTicksPanel.TEMPLATE = \"<div>         \\n            <ag-group-component ref=\\\"axisTicksGroup\\\">\\n                <ag-color-picker ref=\\\"axisTicksColorPicker\\\"></ag-color-picker>\\n                <ag-slider ref=\\\"axisTicksWidthSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"axisTicksSizeSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"axisTicksPaddingSlider\\\"></ag-slider>\\n            </ag-group-component>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.RefSelector('axisTicksGroup'),\n        __metadata(\"design:type\", ag_grid_community_1.AgGroupComponent)\n    ], AxisTicksPanel.prototype, \"axisTicksGroup\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('axisTicksColorPicker'),\n        __metadata(\"design:type\", ag_grid_community_1.AgColorPicker)\n    ], AxisTicksPanel.prototype, \"axisTicksColorPicker\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('axisTicksWidthSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], AxisTicksPanel.prototype, \"axisTicksWidthSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('axisTicksSizeSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], AxisTicksPanel.prototype, \"axisTicksSizeSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('axisTicksPaddingSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], AxisTicksPanel.prototype, \"axisTicksPaddingSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], AxisTicksPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], AxisTicksPanel.prototype, \"init\", null);\n    return AxisTicksPanel;\n}(ag_grid_community_1.Component));\nexports.AxisTicksPanel = AxisTicksPanel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar paddingPanel_1 = require(\"./paddingPanel\");\nvar labelPanel_1 = require(\"../label/labelPanel\");\nvar caption_1 = require(\"../../../../../charts/caption\");\nvar chartTranslator_1 = require(\"../../../chartTranslator\");\nvar ChartPanel = /** @class */ (function (_super) {\n    __extends(ChartPanel, _super);\n    function ChartPanel(chartController) {\n        var _this = _super.call(this) || this;\n        _this.activePanels = [];\n        _this.chartController = chartController;\n        _this.chartProxy = _this.chartController.getChartProxy();\n        _this.chart = _this.chartProxy.getChart();\n        return _this;\n    }\n    ChartPanel.prototype.init = function () {\n        this.setTemplate(ChartPanel.TEMPLATE);\n        this.initGroup();\n        this.initTitles();\n        this.initPaddingPanel();\n    };\n    ChartPanel.prototype.initGroup = function () {\n        this.chartGroup\n            .setTitle(this.chartTranslator.translate('chart'))\n            .toggleGroupExpand(false)\n            .hideEnabledCheckbox(true);\n    };\n    ChartPanel.prototype.initTitles = function () {\n        var _this = this;\n        var title = this.chart.title ? this.chart.title.text : '';\n        var initialFont = {\n            family: this.chart.title ? this.chartProxy.getTitleProperty('fontFamily') : 'Verdana, sans-serif',\n            style: this.chart.title ? this.chartProxy.getTitleProperty('fontStyle') : '',\n            weight: this.chart.title ? this.chartProxy.getTitleProperty('fontWeight') : 'Normal',\n            size: this.chart.title ? parseInt(this.chartProxy.getTitleProperty('fontSize')) : 22,\n            color: this.chart.title ? this.chartProxy.getTitleProperty('color') : 'black'\n        };\n        // note we don't set the font style via chart title panel\n        var setFont = function (font) {\n            if (font.family) {\n                _this.chartProxy.setTitleProperty('fontFamily', font.family);\n            }\n            if (font.weight) {\n                _this.chartProxy.setTitleProperty('fontWeight', font.weight);\n            }\n            if (font.size) {\n                _this.chartProxy.setTitleProperty('fontSize', font.size);\n            }\n            if (font.color) {\n                _this.chartProxy.setTitleProperty('color', font.color);\n            }\n        };\n        this.titleInput\n            .setLabel(this.chartTranslator.translate('title'))\n            .setLabelAlignment('top')\n            .setLabelWidth('flex')\n            .setValue(title)\n            .onValueChange(function (newValue) {\n            if (!_this.chart.title) {\n                _this.chart.title = caption_1.Caption.create({ text: title });\n                setFont(initialFont);\n            }\n            var currentCaption = _this.chart.title;\n            currentCaption.text = newValue;\n            _this.chart.title = currentCaption;\n            // only show font panel when title exists\n            labelPanelComp.setEnabled(ag_grid_community_1._.exists(_this.chart.title.text));\n        });\n        var params = {\n            name: this.chartTranslator.translate('font'),\n            enabled: true,\n            suppressEnabledCheckbox: true,\n            initialFont: initialFont,\n            setFont: setFont\n        };\n        var labelPanelComp = new labelPanel_1.LabelPanel(params);\n        this.getContext().wireBean(labelPanelComp);\n        this.chartGroup.addItem(labelPanelComp);\n        this.activePanels.push(labelPanelComp);\n        labelPanelComp.setEnabled(ag_grid_community_1._.exists(title));\n    };\n    ChartPanel.prototype.initPaddingPanel = function () {\n        var paddingPanelComp = new paddingPanel_1.PaddingPanel(this.chartController);\n        this.getContext().wireBean(paddingPanelComp);\n        this.chartGroup.addItem(paddingPanelComp);\n        this.activePanels.push(paddingPanelComp);\n    };\n    ChartPanel.prototype.destroyActivePanels = function () {\n        this.activePanels.forEach(function (panel) {\n            ag_grid_community_1._.removeFromParent(panel.getGui());\n            panel.destroy();\n        });\n    };\n    ChartPanel.prototype.destroy = function () {\n        this.destroyActivePanels();\n        _super.prototype.destroy.call(this);\n    };\n    ChartPanel.TEMPLATE = \"<div>\\n            <ag-group-component ref=\\\"chartGroup\\\">\\n                <ag-input-text-area ref=\\\"titleInput\\\"></ag-input-text-area>\\n            </ag-group-component>\\n        <div>\";\n    __decorate([\n        ag_grid_community_1.RefSelector('chartGroup'),\n        __metadata(\"design:type\", ag_grid_community_1.AgGroupComponent)\n    ], ChartPanel.prototype, \"chartGroup\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('titleInput'),\n        __metadata(\"design:type\", ag_grid_community_1.AgInputTextArea)\n    ], ChartPanel.prototype, \"titleInput\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], ChartPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ChartPanel.prototype, \"init\", null);\n    return ChartPanel;\n}(ag_grid_community_1.Component));\nexports.ChartPanel = ChartPanel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar chartTranslator_1 = require(\"../../../chartTranslator\");\nvar PaddingPanel = /** @class */ (function (_super) {\n    __extends(PaddingPanel, _super);\n    function PaddingPanel(chartController) {\n        var _this = _super.call(this) || this;\n        _this.chartProxy = chartController.getChartProxy();\n        return _this;\n    }\n    PaddingPanel.prototype.init = function () {\n        this.setTemplate(PaddingPanel.TEMPLATE);\n        this.initGroup();\n        this.initChartPaddingItems();\n    };\n    PaddingPanel.prototype.initGroup = function () {\n        this.chartPaddingGroup\n            .setTitle(this.chartTranslator.translate('padding'))\n            .hideOpenCloseIcons(true)\n            .hideEnabledCheckbox(true);\n    };\n    PaddingPanel.prototype.initChartPaddingItems = function () {\n        var _this = this;\n        var initInput = function (property, input, labelKey) {\n            input.setLabel(_this.chartTranslator.translate(labelKey))\n                .setValue(_this.chartProxy.getChartPadding(property))\n                .setMaxValue(200)\n                .setTextFieldWidth(45)\n                .onValueChange(function (newValue) { return _this.chartProxy.setChartPaddingProperty(property, newValue); });\n        };\n        initInput('top', this.paddingTopSlider, 'top');\n        initInput('right', this.paddingRightSlider, 'right');\n        initInput('bottom', this.paddingBottomSlider, 'bottom');\n        initInput('left', this.paddingLeftSlider, 'left');\n    };\n    PaddingPanel.TEMPLATE = \"<div>\\n            <ag-group-component ref=\\\"chartPaddingGroup\\\">\\n                <ag-slider ref=\\\"paddingTopSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"paddingRightSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"paddingBottomSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"paddingLeftSlider\\\"></ag-slider>\\n            </ag-group-component>\\n        <div>\";\n    __decorate([\n        ag_grid_community_1.RefSelector('chartPaddingGroup'),\n        __metadata(\"design:type\", ag_grid_community_1.AgGroupComponent)\n    ], PaddingPanel.prototype, \"chartPaddingGroup\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('paddingTopSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], PaddingPanel.prototype, \"paddingTopSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('paddingRightSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], PaddingPanel.prototype, \"paddingRightSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('paddingBottomSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], PaddingPanel.prototype, \"paddingBottomSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('paddingLeftSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], PaddingPanel.prototype, \"paddingLeftSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], PaddingPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], PaddingPanel.prototype, \"init\", null);\n    return PaddingPanel;\n}(ag_grid_community_1.Component));\nexports.PaddingPanel = PaddingPanel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar chartController_1 = require(\"../../chartController\");\nvar legendPanel_1 = require(\"./legend/legendPanel\");\nvar barSeriesPanel_1 = require(\"./series/barSeriesPanel\");\nvar axisPanel_1 = require(\"./axis/axisPanel\");\nvar lineSeriesPanel_1 = require(\"./series/lineSeriesPanel\");\nvar pieSeriesPanel_1 = require(\"./series/pieSeriesPanel\");\nvar chartPanel_1 = require(\"./chart/chartPanel\");\nvar areaSeriesPanel_1 = require(\"./series/areaSeriesPanel\");\nvar scatterSeriesPanel_1 = require(\"./series/scatterSeriesPanel\");\nvar ChartFormattingPanel = /** @class */ (function (_super) {\n    __extends(ChartFormattingPanel, _super);\n    function ChartFormattingPanel(chartController) {\n        var _this = _super.call(this) || this;\n        _this.activePanels = [];\n        _this.chartController = chartController;\n        return _this;\n    }\n    ChartFormattingPanel.prototype.init = function () {\n        this.setTemplate(ChartFormattingPanel.TEMPLATE);\n        this.createFormatPanel();\n        this.addDestroyableEventListener(this.chartController, chartController_1.ChartController.EVENT_CHART_MODEL_UPDATED, this.createFormatPanel.bind(this));\n    };\n    ChartFormattingPanel.prototype.createFormatPanel = function () {\n        this.destroyActivePanels();\n        this.addComponent(new chartPanel_1.ChartPanel(this.chartController));\n        this.addComponent(new legendPanel_1.LegendPanel(this.chartController));\n        var chartType = this.chartController.getChartType();\n        if (this.isBarChart(chartType)) {\n            this.addComponent(new axisPanel_1.AxisPanel(this.chartController));\n            this.addComponent(new barSeriesPanel_1.BarSeriesPanel(this.chartController));\n        }\n        else if (chartType === ag_grid_community_1.ChartType.Pie || chartType === ag_grid_community_1.ChartType.Doughnut) {\n            this.addComponent(new pieSeriesPanel_1.PieSeriesPanel(this.chartController));\n        }\n        else if (chartType === ag_grid_community_1.ChartType.Line) {\n            this.addComponent(new axisPanel_1.AxisPanel(this.chartController));\n            this.addComponent(new lineSeriesPanel_1.LineSeriesPanel(this.chartController));\n        }\n        else if (chartType === ag_grid_community_1.ChartType.Scatter || chartType === ag_grid_community_1.ChartType.Bubble) {\n            this.addComponent(new axisPanel_1.AxisPanel(this.chartController));\n            this.addComponent(new scatterSeriesPanel_1.ScatterSeriesPanel(this.chartController));\n        }\n        else if (chartType === ag_grid_community_1.ChartType.Area || chartType === ag_grid_community_1.ChartType.StackedArea || chartType === ag_grid_community_1.ChartType.NormalizedArea) {\n            this.addComponent(new axisPanel_1.AxisPanel(this.chartController));\n            this.addComponent(new areaSeriesPanel_1.AreaSeriesPanel(this.chartController));\n        }\n        else {\n            console.warn(\"ag-Grid: ChartFormattingPanel - unexpected chart type index: \" + chartType + \" supplied\");\n        }\n    };\n    ChartFormattingPanel.prototype.isBarChart = function (chartType) {\n        return [\n            ag_grid_community_1.ChartType.GroupedColumn,\n            ag_grid_community_1.ChartType.StackedColumn,\n            ag_grid_community_1.ChartType.NormalizedColumn,\n            ag_grid_community_1.ChartType.GroupedBar,\n            ag_grid_community_1.ChartType.StackedBar,\n            ag_grid_community_1.ChartType.NormalizedBar\n        ].indexOf(chartType) > -1;\n    };\n    ChartFormattingPanel.prototype.addComponent = function (component) {\n        this.getContext().wireBean(component);\n        this.getGui().appendChild(component.getGui());\n        this.activePanels.push(component);\n    };\n    ChartFormattingPanel.prototype.destroyActivePanels = function () {\n        this.activePanels.forEach(function (panel) {\n            ag_grid_community_1._.removeFromParent(panel.getGui());\n            panel.destroy();\n        });\n    };\n    ChartFormattingPanel.prototype.destroy = function () {\n        this.destroyActivePanels();\n        _super.prototype.destroy.call(this);\n    };\n    ChartFormattingPanel.TEMPLATE = \"<div class=\\\"ag-chart-format-wrapper\\\"></div>\";\n    __decorate([\n        ag_grid_community_1.RefSelector('formatPanelWrapper'),\n        __metadata(\"design:type\", HTMLElement)\n    ], ChartFormattingPanel.prototype, \"formatPanelWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ChartFormattingPanel.prototype, \"init\", null);\n    return ChartFormattingPanel;\n}(ag_grid_community_1.Component));\nexports.ChartFormattingPanel = ChartFormattingPanel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar chartTranslator_1 = require(\"../../../chartTranslator\");\nvar LabelPanel = /** @class */ (function (_super) {\n    __extends(LabelPanel, _super);\n    function LabelPanel(params) {\n        var _this = _super.call(this) || this;\n        _this.activeComps = [];\n        _this.params = params;\n        return _this;\n    }\n    LabelPanel.prototype.init = function () {\n        this.setTemplate(LabelPanel.TEMPLATE);\n        this.initGroup();\n        this.initFontSelects();\n        this.initFontColorPicker();\n    };\n    LabelPanel.prototype.addCompToPanel = function (comp) {\n        this.labelsGroup.addItem(comp);\n        this.activeComps.push(comp);\n    };\n    LabelPanel.prototype.setEnabled = function (enabled) {\n        this.labelsGroup.setEnabled(enabled);\n    };\n    LabelPanel.prototype.initGroup = function () {\n        var _this = this;\n        this.labelsGroup\n            .setTitle(this.params.name ? this.params.name : this.chartTranslator.translate('labels'))\n            .setEnabled(this.params.enabled)\n            .hideEnabledCheckbox(!!this.params.suppressEnabledCheckbox)\n            .hideOpenCloseIcons(true)\n            .onEnableChange(function (enabled) {\n            if (_this.params.setEnabled) {\n                _this.params.setEnabled(enabled);\n            }\n        });\n    };\n    LabelPanel.prototype.initFontSelects = function () {\n        var _this = this;\n        var initSelect = function (property, input, values, sortedValues) {\n            var fontValue = _this.params.initialFont[property];\n            var initialValue = values[0];\n            if (fontValue) {\n                var fontValueAsStr = \"\" + fontValue;\n                var lowerCaseFontValue = ag_grid_community_1._.exists(fontValueAsStr) ? fontValueAsStr.toLowerCase() : '';\n                var lowerCaseValues = values.map(function (value) { return value.toLowerCase(); });\n                // check for known font values using lowercase\n                var valueIndex = lowerCaseValues.indexOf(lowerCaseFontValue);\n                var unknownUserProvidedFont = valueIndex < 0;\n                if (unknownUserProvidedFont) {\n                    var capitalisedFontValue = ag_grid_community_1._.capitalise(fontValueAsStr);\n                    // add user provided font to list\n                    values.push(capitalisedFontValue);\n                    if (sortedValues) {\n                        values.sort();\n                    }\n                    initialValue = capitalisedFontValue;\n                }\n                else {\n                    initialValue = values[valueIndex];\n                }\n            }\n            var options = values.map(function (value) {\n                return { value: value, text: value };\n            });\n            input.addOptions(options)\n                .setValue(\"\" + initialValue)\n                .onValueChange(function (newValue) {\n                var _a;\n                return _this.params.setFont((_a = {}, _a[property] = newValue, _a));\n            });\n        };\n        var fonts = [\n            'Arial, sans-serif',\n            'Aria Black, sans-serif',\n            'Book Antiqua,  serif',\n            'Charcoal, sans-serif',\n            'Comic Sans MS, cursive',\n            'Courier, monospace',\n            'Courier New, monospace',\n            'Gadget, sans-serif',\n            'Geneva, sans-serif',\n            'Helvetica, sans-serif',\n            'Impact, sans-serif',\n            'Lucida Console, monospace',\n            'Lucida Grande, sans-serif',\n            'Lucida Sans Unicode,  sans-serif',\n            'Monaco, monospace',\n            'Palatino Linotype, serif',\n            'Palatino, serif',\n            'Times New Roman, serif',\n            'Times, serif',\n            'Verdana, sans-serif',\n        ];\n        initSelect('family', this.labelFontFamilySelect, fonts, true);\n        var weightKeys = ['normal', 'bold', 'italic', 'boldItalic'];\n        initSelect('weight', this.labelFontWeightSelect, this.getWeigthNames(weightKeys), false);\n        var sizes = ['8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36'];\n        this.labelFontSizeSelect.setLabel(this.chartTranslator.translate('size'));\n        initSelect('size', this.labelFontSizeSelect, sizes, true);\n    };\n    LabelPanel.prototype.initFontColorPicker = function () {\n        var _this = this;\n        this.labelColorPicker\n            .setLabel(this.chartTranslator.translate('color'))\n            .setInputWidth(45)\n            .setValue(\"\" + this.params.initialFont.color)\n            .onValueChange(function (newColor) { return _this.params.setFont({ color: newColor }); });\n    };\n    LabelPanel.prototype.getWeigthNames = function (keys) {\n        var _this = this;\n        return keys.map(function (key) { return _this.chartTranslator.translate(key); });\n    };\n    LabelPanel.prototype.destroyActiveComps = function () {\n        this.activeComps.forEach(function (comp) {\n            ag_grid_community_1._.removeFromParent(comp.getGui());\n            comp.destroy();\n        });\n    };\n    LabelPanel.prototype.destroy = function () {\n        this.destroyActiveComps();\n        _super.prototype.destroy.call(this);\n    };\n    LabelPanel.TEMPLATE = \"<div>\\n            <ag-group-component ref=\\\"labelsGroup\\\">\\n                <ag-select ref=\\\"labelFontFamilySelect\\\"></ag-select>\\n                <ag-select ref=\\\"labelFontWeightSelect\\\"></ag-select>\\n                <div class=\\\"ag-group-subgroup\\\">\\n                    <ag-select ref=\\\"labelFontSizeSelect\\\"></ag-select>\\n                    <ag-color-picker ref=\\\"labelColorPicker\\\"></ag-color-picker>\\n                </div>\\n            </ag-group-component>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.RefSelector('labelsGroup'),\n        __metadata(\"design:type\", ag_grid_community_1.AgGroupComponent)\n    ], LabelPanel.prototype, \"labelsGroup\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('labelFontFamilySelect'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSelect)\n    ], LabelPanel.prototype, \"labelFontFamilySelect\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('labelFontWeightSelect'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSelect)\n    ], LabelPanel.prototype, \"labelFontWeightSelect\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('labelFontSizeSelect'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSelect)\n    ], LabelPanel.prototype, \"labelFontSizeSelect\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('labelColorPicker'),\n        __metadata(\"design:type\", ag_grid_community_1.AgColorPicker)\n    ], LabelPanel.prototype, \"labelColorPicker\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], LabelPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], LabelPanel.prototype, \"init\", null);\n    return LabelPanel;\n}(ag_grid_community_1.Component));\nexports.LabelPanel = LabelPanel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar labelPanel_1 = require(\"../label/labelPanel\");\nvar chartTranslator_1 = require(\"../../../chartTranslator\");\nvar LegendPanel = /** @class */ (function (_super) {\n    __extends(LegendPanel, _super);\n    function LegendPanel(chartController) {\n        var _this = _super.call(this) || this;\n        _this.activePanels = [];\n        _this.chartController = chartController;\n        _this.chartProxy = _this.chartController.getChartProxy();\n        return _this;\n    }\n    LegendPanel.prototype.init = function () {\n        this.setTemplate(LegendPanel.TEMPLATE);\n        this.initLegendGroup();\n        this.initLegendPosition();\n        this.initLegendPadding();\n        this.initLegendItems();\n        this.initLabelPanel();\n    };\n    LegendPanel.prototype.initLegendGroup = function () {\n        var _this = this;\n        this.legendGroup\n            .setTitle(this.chartTranslator.translate('legend'))\n            .hideEnabledCheckbox(false)\n            .setEnabled(this.chartProxy.getLegendEnabled())\n            .toggleGroupExpand(false)\n            .onEnableChange(function (enabled) {\n            _this.chartProxy.setLegendProperty('enabled', enabled);\n            _this.legendGroup.toggleGroupExpand(true);\n        });\n    };\n    LegendPanel.prototype.initLegendPosition = function () {\n        var _this = this;\n        var chartProxy = this.chartController.getChartProxy();\n        var positions = ['top', 'right', 'bottom', 'left'];\n        this.legendPositionSelect\n            .setLabel(this.chartTranslator.translate('position'))\n            .setLabelWidth('flex')\n            .setInputWidth(80)\n            .addOptions(positions.map(function (position) { return ({\n            value: position,\n            text: _this.chartTranslator.translate(position)\n        }); }))\n            .setValue(chartProxy.getLegendPosition())\n            .onValueChange(function (newValue) { return chartProxy.setLegendPosition(newValue); });\n    };\n    LegendPanel.prototype.initLegendPadding = function () {\n        var _this = this;\n        this.legendPaddingSlider\n            .setLabel(this.chartTranslator.translate('padding'))\n            .setValue(this.chartProxy.getLegendPadding())\n            .setTextFieldWidth(45)\n            .setMaxValue(200)\n            .onValueChange(function (newValue) { return _this.chartProxy.setLegendPadding(newValue); });\n    };\n    LegendPanel.prototype.initLegendItems = function () {\n        var _this = this;\n        var initSlider = function (property, labelKey, input, maxValue) {\n            input.setLabel(_this.chartTranslator.translate(labelKey))\n                .setValue(_this.chartProxy.getLegendProperty(property))\n                .setMaxValue(maxValue)\n                .setTextFieldWidth(45)\n                .onValueChange(function (newValue) { return _this.chartProxy.setLegendProperty(property, newValue); });\n        };\n        initSlider('markerSize', 'markerSize', this.markerSizeSlider, 40);\n        initSlider('markerStrokeWidth', 'markerStroke', this.markerStrokeSlider, 10);\n        initSlider('markerPadding', 'markerPadding', this.markerPaddingSlider, 200);\n        initSlider('itemPaddingX', 'itemPaddingX', this.itemPaddingXSlider, 50);\n        initSlider('itemPaddingY', 'itemPaddingY', this.itemPaddingYSlider, 50);\n    };\n    LegendPanel.prototype.initLabelPanel = function () {\n        var _this = this;\n        var initialFont = {\n            family: this.chartProxy.getLegendProperty('labelFontFamily'),\n            style: this.chartProxy.getLegendProperty('labelFontStyle'),\n            weight: this.chartProxy.getLegendProperty('labelFontWeight'),\n            size: parseInt(this.chartProxy.getLegendProperty('labelFontSize')),\n            color: this.chartProxy.getLegendProperty('labelColor')\n        };\n        // note we don't set the font style via legend panel\n        var setFont = function (font) {\n            if (font.family) {\n                _this.chartProxy.setLegendProperty('labelFontFamily', font.family);\n            }\n            if (font.weight) {\n                _this.chartProxy.setLegendProperty('labelFontWeight', font.weight);\n            }\n            if (font.size) {\n                _this.chartProxy.setLegendProperty('labelFontSize', font.size);\n            }\n            if (font.color) {\n                _this.chartProxy.setLegendProperty('labelColor', font.color);\n            }\n        };\n        var params = {\n            enabled: true,\n            suppressEnabledCheckbox: true,\n            initialFont: initialFont,\n            setFont: setFont\n        };\n        var labelPanelComp = new labelPanel_1.LabelPanel(params);\n        this.getContext().wireBean(labelPanelComp);\n        this.legendGroup.addItem(labelPanelComp);\n        this.activePanels.push(labelPanelComp);\n    };\n    LegendPanel.prototype.destroyActivePanels = function () {\n        this.activePanels.forEach(function (panel) {\n            ag_grid_community_1._.removeFromParent(panel.getGui());\n            panel.destroy();\n        });\n    };\n    LegendPanel.prototype.destroy = function () {\n        this.destroyActivePanels();\n        _super.prototype.destroy.call(this);\n    };\n    LegendPanel.TEMPLATE = \"<div>  \\n            <ag-group-component ref=\\\"legendGroup\\\">\\n                <ag-select ref=\\\"legendPositionSelect\\\"></ag-select>\\n                <ag-slider ref=\\\"legendPaddingSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"markerSizeSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"markerStrokeSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"markerPaddingSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"itemPaddingXSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"itemPaddingYSlider\\\"></ag-slider>\\n            </ag-group-component>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.RefSelector('legendGroup'),\n        __metadata(\"design:type\", ag_grid_community_1.AgGroupComponent)\n    ], LegendPanel.prototype, \"legendGroup\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('legendPositionSelect'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSelect)\n    ], LegendPanel.prototype, \"legendPositionSelect\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('legendPaddingSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], LegendPanel.prototype, \"legendPaddingSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('markerSizeSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], LegendPanel.prototype, \"markerSizeSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('markerStrokeSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], LegendPanel.prototype, \"markerStrokeSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('markerPaddingSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], LegendPanel.prototype, \"markerPaddingSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('itemPaddingXSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], LegendPanel.prototype, \"itemPaddingXSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('itemPaddingYSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], LegendPanel.prototype, \"itemPaddingYSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], LegendPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], LegendPanel.prototype, \"init\", null);\n    return LegendPanel;\n}(ag_grid_community_1.Component));\nexports.LegendPanel = LegendPanel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar markersPanel_1 = require(\"./markersPanel\");\nvar chartTranslator_1 = require(\"../../../chartTranslator\");\nvar shadowPanel_1 = require(\"./shadowPanel\");\nvar AreaSeriesPanel = /** @class */ (function (_super) {\n    __extends(AreaSeriesPanel, _super);\n    function AreaSeriesPanel(chartController) {\n        var _this = _super.call(this) || this;\n        _this.activePanels = [];\n        _this.chartController = chartController;\n        _this.chartProxy = chartController.getChartProxy();\n        return _this;\n    }\n    AreaSeriesPanel.prototype.init = function () {\n        this.setTemplate(AreaSeriesPanel.TEMPLATE);\n        this.initSeriesGroup();\n        this.initSeriesTooltips();\n        this.initSeriesLineWidth();\n        this.initOpacity();\n        this.initMarkersPanel();\n        this.initShadowPanel();\n    };\n    AreaSeriesPanel.prototype.initSeriesGroup = function () {\n        this.seriesGroup\n            .setTitle(this.chartTranslator.translate('series'))\n            .toggleGroupExpand(false)\n            .hideEnabledCheckbox(true);\n    };\n    AreaSeriesPanel.prototype.initSeriesTooltips = function () {\n        var _this = this;\n        this.seriesTooltipsToggle\n            .setLabel(this.chartTranslator.translate('tooltips'))\n            .setLabelAlignment('left')\n            .setLabelWidth('flex')\n            .setInputWidth(40)\n            .setValue(this.chartProxy.getTooltipsEnabled())\n            .onValueChange(function (newValue) { return _this.chartProxy.setSeriesProperty('tooltipEnabled', newValue); });\n    };\n    AreaSeriesPanel.prototype.initSeriesLineWidth = function () {\n        var _this = this;\n        this.seriesLineWidthSlider\n            .setLabel(this.chartTranslator.translate('lineWidth'))\n            .setMaxValue(10)\n            .setTextFieldWidth(45)\n            .setValue(this.chartProxy.getSeriesProperty('strokeWidth'))\n            .onValueChange(function (newValue) { return _this.chartProxy.setSeriesProperty('strokeWidth', newValue); });\n    };\n    AreaSeriesPanel.prototype.initOpacity = function () {\n        var _this = this;\n        this.seriesLineOpacitySlider\n            .setLabel(this.chartTranslator.translate('strokeOpacity'))\n            .setStep(0.05)\n            .setMaxValue(1)\n            .setTextFieldWidth(45)\n            .setValue(this.chartProxy.getSeriesProperty('strokeOpacity'))\n            .onValueChange(function (newValue) { return _this.chartProxy.setSeriesProperty('strokeOpacity', newValue); });\n        this.seriesFillOpacitySlider\n            .setLabel(this.chartTranslator.translate('fillOpacity'))\n            .setStep(0.05)\n            .setMaxValue(1)\n            .setTextFieldWidth(45)\n            .setValue(this.chartProxy.getSeriesProperty('fillOpacity'))\n            .onValueChange(function (newValue) { return _this.chartProxy.setSeriesProperty('fillOpacity', newValue); });\n    };\n    AreaSeriesPanel.prototype.initMarkersPanel = function () {\n        var markersPanelComp = new markersPanel_1.MarkersPanel(this.chartProxy);\n        this.getContext().wireBean(markersPanelComp);\n        this.seriesGroup.addItem(markersPanelComp);\n        this.activePanels.push(markersPanelComp);\n    };\n    AreaSeriesPanel.prototype.initShadowPanel = function () {\n        var shadowPanelComp = new shadowPanel_1.ShadowPanel(this.chartProxy);\n        this.getContext().wireBean(shadowPanelComp);\n        this.seriesGroup.addItem(shadowPanelComp);\n        this.activePanels.push(shadowPanelComp);\n    };\n    AreaSeriesPanel.prototype.destroyActivePanels = function () {\n        this.activePanels.forEach(function (panel) {\n            ag_grid_community_1._.removeFromParent(panel.getGui());\n            panel.destroy();\n        });\n    };\n    AreaSeriesPanel.prototype.destroy = function () {\n        this.destroyActivePanels();\n        _super.prototype.destroy.call(this);\n    };\n    AreaSeriesPanel.TEMPLATE = \"<div>   \\n            <ag-group-component ref=\\\"seriesGroup\\\">\\n                <ag-toggle-button ref=\\\"seriesTooltipsToggle\\\"></ag-toggle-button>\\n                <ag-slider ref=\\\"seriesLineWidthSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"seriesLineOpacitySlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"seriesFillOpacitySlider\\\"></ag-slider>\\n            </ag-group-component>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesGroup'),\n        __metadata(\"design:type\", ag_grid_community_1.AgGroupComponent)\n    ], AreaSeriesPanel.prototype, \"seriesGroup\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesTooltipsToggle'),\n        __metadata(\"design:type\", ag_grid_community_1.AgToggleButton)\n    ], AreaSeriesPanel.prototype, \"seriesTooltipsToggle\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesLineWidthSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], AreaSeriesPanel.prototype, \"seriesLineWidthSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesLineOpacitySlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], AreaSeriesPanel.prototype, \"seriesLineOpacitySlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesFillOpacitySlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], AreaSeriesPanel.prototype, \"seriesFillOpacitySlider\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], AreaSeriesPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], AreaSeriesPanel.prototype, \"init\", null);\n    return AreaSeriesPanel;\n}(ag_grid_community_1.Component));\nexports.AreaSeriesPanel = AreaSeriesPanel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar shadowPanel_1 = require(\"./shadowPanel\");\nvar labelPanel_1 = require(\"../label/labelPanel\");\nvar chartTranslator_1 = require(\"../../../chartTranslator\");\nvar BarSeriesPanel = /** @class */ (function (_super) {\n    __extends(BarSeriesPanel, _super);\n    function BarSeriesPanel(chartController) {\n        var _this = _super.call(this) || this;\n        _this.activePanels = [];\n        _this.chartController = chartController;\n        _this.chartProxy = _this.chartController.getChartProxy();\n        return _this;\n    }\n    BarSeriesPanel.prototype.init = function () {\n        this.setTemplate(BarSeriesPanel.TEMPLATE);\n        this.seriesGroup\n            .setTitle(this.chartTranslator.translate('series'))\n            .toggleGroupExpand(false)\n            .hideEnabledCheckbox(true);\n        this.initSeriesTooltips();\n        this.initSeriesStrokeWidth();\n        this.initOpacity();\n        this.initLabelPanel();\n        this.initShadowPanel();\n    };\n    BarSeriesPanel.prototype.initSeriesTooltips = function () {\n        var _this = this;\n        this.seriesTooltipsToggle\n            .setLabel(this.chartTranslator.translate('tooltips'))\n            .setLabelAlignment('left')\n            .setLabelWidth('flex')\n            .setInputWidth(40)\n            .setValue(this.chartProxy.getTooltipsEnabled())\n            .onValueChange(function (newValue) { return _this.chartProxy.setSeriesProperty('tooltipEnabled', newValue); });\n    };\n    BarSeriesPanel.prototype.initSeriesStrokeWidth = function () {\n        var _this = this;\n        this.seriesStrokeWidthSlider\n            .setLabel(this.chartTranslator.translate('strokeWidth'))\n            .setMaxValue(10)\n            .setTextFieldWidth(45)\n            .setValue(this.chartProxy.getSeriesProperty('strokeWidth'))\n            .onValueChange(function (newValue) { return _this.chartProxy.setSeriesProperty('strokeWidth', newValue); });\n    };\n    BarSeriesPanel.prototype.initOpacity = function () {\n        var _this = this;\n        this.seriesLineOpacitySlider\n            .setLabel(this.chartTranslator.translate('strokeOpacity'))\n            .setStep(0.05)\n            .setMaxValue(1)\n            .setTextFieldWidth(45)\n            .setValue(this.chartProxy.getSeriesProperty('strokeOpacity'))\n            .onValueChange(function (newValue) { return _this.chartProxy.setSeriesProperty('strokeOpacity', newValue); });\n        this.seriesFillOpacitySlider\n            .setLabel(this.chartTranslator.translate('fillOpacity'))\n            .setStep(0.05)\n            .setMaxValue(1)\n            .setTextFieldWidth(45)\n            .setValue(this.chartProxy.getSeriesProperty('fillOpacity'))\n            .onValueChange(function (newValue) { return _this.chartProxy.setSeriesProperty('fillOpacity', newValue); });\n    };\n    BarSeriesPanel.prototype.initLabelPanel = function () {\n        var _this = this;\n        var initialFont = {\n            family: this.chartProxy.getSeriesProperty('labelFontFamily'),\n            style: this.chartProxy.getSeriesProperty('labelFontStyle'),\n            weight: this.chartProxy.getSeriesProperty('labelFontWeight'),\n            size: parseInt(this.chartProxy.getSeriesProperty('labelFontSize')),\n            color: this.chartProxy.getSeriesProperty('labelColor')\n        };\n        // note we don't set the font style via series panel\n        var setFont = function (font) {\n            if (font.family) {\n                _this.chartProxy.setSeriesProperty('labelFontFamily', font.family);\n            }\n            if (font.weight) {\n                _this.chartProxy.setSeriesProperty('labelFontWeight', font.weight);\n            }\n            if (font.size) {\n                _this.chartProxy.setSeriesProperty('labelFontSize', font.size);\n            }\n            if (font.color) {\n                _this.chartProxy.setSeriesProperty('labelColor', font.color);\n            }\n        };\n        var params = {\n            enabled: this.chartProxy.getLabelEnabled(),\n            setEnabled: function (enabled) { return _this.chartProxy.setSeriesProperty('labelEnabled', enabled); },\n            suppressEnabledCheckbox: false,\n            initialFont: initialFont,\n            setFont: setFont\n        };\n        var labelPanelComp = new labelPanel_1.LabelPanel(params);\n        this.getContext().wireBean(labelPanelComp);\n        this.activePanels.push(labelPanelComp);\n        this.seriesGroup.addItem(labelPanelComp);\n    };\n    BarSeriesPanel.prototype.initShadowPanel = function () {\n        var shadowPanelComp = new shadowPanel_1.ShadowPanel(this.chartProxy);\n        this.getContext().wireBean(shadowPanelComp);\n        this.seriesGroup.addItem(shadowPanelComp);\n        this.activePanels.push(shadowPanelComp);\n    };\n    BarSeriesPanel.prototype.destroyActivePanels = function () {\n        this.activePanels.forEach(function (panel) {\n            ag_grid_community_1._.removeFromParent(panel.getGui());\n            panel.destroy();\n        });\n    };\n    BarSeriesPanel.prototype.destroy = function () {\n        this.destroyActivePanels();\n        _super.prototype.destroy.call(this);\n    };\n    BarSeriesPanel.TEMPLATE = \"<div>   \\n            <ag-group-component ref=\\\"seriesGroup\\\">\\n                <ag-toggle-button ref=\\\"seriesTooltipsToggle\\\"></ag-toggle-button>\\n                <ag-slider ref=\\\"seriesStrokeWidthSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"seriesLineOpacitySlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"seriesFillOpacitySlider\\\"></ag-slider>\\n            </ag-group-component>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesGroup'),\n        __metadata(\"design:type\", ag_grid_community_1.AgGroupComponent)\n    ], BarSeriesPanel.prototype, \"seriesGroup\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesTooltipsToggle'),\n        __metadata(\"design:type\", ag_grid_community_1.AgToggleButton)\n    ], BarSeriesPanel.prototype, \"seriesTooltipsToggle\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesStrokeWidthSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], BarSeriesPanel.prototype, \"seriesStrokeWidthSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesLineOpacitySlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], BarSeriesPanel.prototype, \"seriesLineOpacitySlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesFillOpacitySlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], BarSeriesPanel.prototype, \"seriesFillOpacitySlider\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], BarSeriesPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BarSeriesPanel.prototype, \"init\", null);\n    return BarSeriesPanel;\n}(ag_grid_community_1.Component));\nexports.BarSeriesPanel = BarSeriesPanel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar chartTranslator_1 = require(\"../../../chartTranslator\");\nvar CalloutPanel = /** @class */ (function (_super) {\n    __extends(CalloutPanel, _super);\n    function CalloutPanel(chartProxy) {\n        var _this = _super.call(this) || this;\n        _this.chartProxy = chartProxy;\n        return _this;\n    }\n    CalloutPanel.prototype.init = function () {\n        this.setTemplate(CalloutPanel.TEMPLATE);\n        this.initCalloutOptions();\n    };\n    CalloutPanel.prototype.initCalloutOptions = function () {\n        var _this = this;\n        this.calloutGroup\n            .setTitle(this.chartTranslator.translate('callout'))\n            .setEnabled(true)\n            .hideOpenCloseIcons(true)\n            .hideEnabledCheckbox(true);\n        var initInput = function (property, input, labelKey, maxValue) {\n            input.setLabel(_this.chartTranslator.translate(labelKey))\n                .setValue(_this.chartProxy.getSeriesProperty(property))\n                .setMaxValue(maxValue)\n                .setTextFieldWidth(45)\n                .onValueChange(function (newValue) { return _this.chartProxy.setSeriesProperty(property, newValue); });\n        };\n        initInput('calloutLength', this.calloutLengthSlider, 'length', 40);\n        initInput('calloutStrokeWidth', this.calloutStrokeWidthSlider, 'strokeWidth', 10);\n        initInput('labelOffset', this.labelOffsetSlider, 'offset', 30);\n    };\n    CalloutPanel.TEMPLATE = \"<div>\\n            <ag-group-component ref=\\\"calloutGroup\\\">\\n                <ag-slider ref=\\\"calloutLengthSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"calloutStrokeWidthSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"labelOffsetSlider\\\"></ag-slider>\\n            </ag-group-component>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesGroup'),\n        __metadata(\"design:type\", ag_grid_community_1.AgGroupComponent)\n    ], CalloutPanel.prototype, \"seriesGroup\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('calloutGroup'),\n        __metadata(\"design:type\", ag_grid_community_1.AgGroupComponent)\n    ], CalloutPanel.prototype, \"calloutGroup\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('calloutLengthSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], CalloutPanel.prototype, \"calloutLengthSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('calloutStrokeWidthSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], CalloutPanel.prototype, \"calloutStrokeWidthSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('labelOffsetSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], CalloutPanel.prototype, \"labelOffsetSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], CalloutPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], CalloutPanel.prototype, \"init\", null);\n    return CalloutPanel;\n}(ag_grid_community_1.Component));\nexports.CalloutPanel = CalloutPanel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar markersPanel_1 = require(\"./markersPanel\");\nvar chartTranslator_1 = require(\"../../../chartTranslator\");\nvar LineSeriesPanel = /** @class */ (function (_super) {\n    __extends(LineSeriesPanel, _super);\n    function LineSeriesPanel(chartController) {\n        var _this = _super.call(this) || this;\n        _this.activePanels = [];\n        _this.chartProxy = chartController.getChartProxy();\n        return _this;\n    }\n    LineSeriesPanel.prototype.init = function () {\n        this.setTemplate(LineSeriesPanel.TEMPLATE);\n        this.initSeriesGroup();\n        this.initSeriesTooltips();\n        this.initSeriesLineWidth();\n        this.initMarkersPanel();\n    };\n    LineSeriesPanel.prototype.initSeriesGroup = function () {\n        this.seriesGroup\n            .setTitle(this.chartTranslator.translate('series'))\n            .toggleGroupExpand(false)\n            .hideEnabledCheckbox(true);\n    };\n    LineSeriesPanel.prototype.initSeriesTooltips = function () {\n        var _this = this;\n        this.seriesTooltipsToggle\n            .setLabel(this.chartTranslator.translate('tooltips'))\n            .setLabelAlignment('left')\n            .setLabelWidth('flex')\n            .setInputWidth(40)\n            .setValue(this.chartProxy.getTooltipsEnabled())\n            .onValueChange(function (newValue) { return _this.chartProxy.setSeriesProperty('tooltipEnabled', newValue); });\n    };\n    LineSeriesPanel.prototype.initSeriesLineWidth = function () {\n        var _this = this;\n        this.seriesLineWidthSlider\n            .setLabel(this.chartTranslator.translate('lineWidth'))\n            .setMaxValue(10)\n            .setTextFieldWidth(45)\n            .setValue(this.chartProxy.getSeriesProperty('strokeWidth'))\n            .onValueChange(function (newValue) { return _this.chartProxy.setSeriesProperty('strokeWidth', newValue); });\n    };\n    LineSeriesPanel.prototype.initMarkersPanel = function () {\n        var markersPanelComp = new markersPanel_1.MarkersPanel(this.chartProxy);\n        this.getContext().wireBean(markersPanelComp);\n        this.seriesGroup.addItem(markersPanelComp);\n        this.activePanels.push(markersPanelComp);\n    };\n    LineSeriesPanel.prototype.destroyActivePanels = function () {\n        this.activePanels.forEach(function (panel) {\n            ag_grid_community_1._.removeFromParent(panel.getGui());\n            panel.destroy();\n        });\n    };\n    LineSeriesPanel.prototype.destroy = function () {\n        this.destroyActivePanels();\n        _super.prototype.destroy.call(this);\n    };\n    LineSeriesPanel.TEMPLATE = \"<div>   \\n            <ag-group-component ref=\\\"seriesGroup\\\">\\n                <ag-toggle-button ref=\\\"seriesTooltipsToggle\\\"></ag-toggle-button>\\n                <ag-slider ref=\\\"seriesLineWidthSlider\\\"></ag-slider>\\n            </ag-group-component>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesGroup'),\n        __metadata(\"design:type\", ag_grid_community_1.AgGroupComponent)\n    ], LineSeriesPanel.prototype, \"seriesGroup\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesTooltipsToggle'),\n        __metadata(\"design:type\", ag_grid_community_1.AgToggleButton)\n    ], LineSeriesPanel.prototype, \"seriesTooltipsToggle\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesLineWidthSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], LineSeriesPanel.prototype, \"seriesLineWidthSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], LineSeriesPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], LineSeriesPanel.prototype, \"init\", null);\n    return LineSeriesPanel;\n}(ag_grid_community_1.Component));\nexports.LineSeriesPanel = LineSeriesPanel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar chartTranslator_1 = require(\"../../../chartTranslator\");\nvar scatterChartProxy_1 = require(\"../../../chartProxies/cartesian/scatterChartProxy\");\nvar MarkersPanel = /** @class */ (function (_super) {\n    __extends(MarkersPanel, _super);\n    function MarkersPanel(chartProxy) {\n        var _this = _super.call(this) || this;\n        _this.chartProxy = chartProxy;\n        return _this;\n    }\n    MarkersPanel.prototype.init = function () {\n        this.setTemplate(MarkersPanel.TEMPLATE);\n        this.initMarkers();\n    };\n    MarkersPanel.prototype.initMarkers = function () {\n        var _this = this;\n        // scatter charts should always show markers\n        var shouldHideEnabledCheckbox = this.chartProxy instanceof scatterChartProxy_1.ScatterChartProxy;\n        this.seriesMarkersGroup\n            .setTitle(this.chartTranslator.translate('markers'))\n            .hideEnabledCheckbox(shouldHideEnabledCheckbox)\n            .setEnabled(this.chartProxy.getMarkersEnabled())\n            .hideOpenCloseIcons(true)\n            .onEnableChange(function (newValue) { return _this.chartProxy.setSeriesProperty('marker', newValue); });\n        var initInput = function (property, input, labelKey, maxValue) {\n            input.setLabel(_this.chartTranslator.translate(labelKey))\n                .setValue(_this.chartProxy.getSeriesProperty(property))\n                .setMaxValue(maxValue)\n                .setTextFieldWidth(45)\n                .onValueChange(function (newValue) { return _this.chartProxy.setSeriesProperty(property, newValue); });\n        };\n        initInput('markerSize', this.seriesMarkerSizeSlider, 'size', 30);\n        initInput('markerStrokeWidth', this.seriesMarkerStrokeWidthSlider, 'strokeWidth', 10);\n    };\n    MarkersPanel.TEMPLATE = \"<div>\\n            <ag-group-component ref=\\\"seriesMarkersGroup\\\">\\n                <ag-slider ref=\\\"seriesMarkerSizeSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"seriesMarkerStrokeWidthSlider\\\"></ag-slider>\\n            </ag-group-component>  \\n        </div>\";\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesMarkersGroup'),\n        __metadata(\"design:type\", ag_grid_community_1.AgGroupComponent)\n    ], MarkersPanel.prototype, \"seriesMarkersGroup\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesMarkerSizeSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], MarkersPanel.prototype, \"seriesMarkerSizeSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesMarkerStrokeWidthSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], MarkersPanel.prototype, \"seriesMarkerStrokeWidthSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], MarkersPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MarkersPanel.prototype, \"init\", null);\n    return MarkersPanel;\n}(ag_grid_community_1.Component));\nexports.MarkersPanel = MarkersPanel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar shadowPanel_1 = require(\"./shadowPanel\");\nvar labelPanel_1 = require(\"../label/labelPanel\");\nvar calloutPanel_1 = require(\"./calloutPanel\");\nvar chartTranslator_1 = require(\"../../../chartTranslator\");\nvar PieSeriesPanel = /** @class */ (function (_super) {\n    __extends(PieSeriesPanel, _super);\n    function PieSeriesPanel(chartController) {\n        var _this = _super.call(this) || this;\n        _this.activePanels = [];\n        _this.chartController = chartController;\n        _this.chartProxy = chartController.getChartProxy();\n        return _this;\n    }\n    PieSeriesPanel.prototype.init = function () {\n        this.setTemplate(PieSeriesPanel.TEMPLATE);\n        this.initGroup();\n        this.initSeriesTooltips();\n        this.initSeriesStrokeWidth();\n        this.initOpacity();\n        this.initLabelPanel();\n        this.initShadowPanel();\n    };\n    PieSeriesPanel.prototype.initGroup = function () {\n        this.seriesGroup\n            .setTitle(this.chartTranslator.translate('series'))\n            .toggleGroupExpand(false)\n            .hideEnabledCheckbox(true);\n    };\n    PieSeriesPanel.prototype.initSeriesTooltips = function () {\n        var _this = this;\n        this.seriesTooltipsToggle\n            .setLabel(this.chartTranslator.translate('tooltips'))\n            .setLabelAlignment('left')\n            .setLabelWidth('flex')\n            .setInputWidth(40)\n            .setValue(this.chartProxy.getTooltipsEnabled())\n            .onValueChange(function (newValue) { return _this.chartProxy.setSeriesProperty('tooltipEnabled', newValue); });\n    };\n    PieSeriesPanel.prototype.initSeriesStrokeWidth = function () {\n        var _this = this;\n        this.seriesStrokeWidthSlider\n            .setLabel(this.chartTranslator.translate('strokeWidth'))\n            .setMaxValue(10)\n            .setTextFieldWidth(45)\n            .setValue(this.chartProxy.getSeriesProperty('strokeWidth'))\n            .onValueChange(function (newValue) { return _this.chartProxy.setSeriesProperty('strokeWidth', newValue); });\n    };\n    PieSeriesPanel.prototype.initOpacity = function () {\n        var _this = this;\n        this.seriesLineOpacitySlider\n            .setLabel(this.chartTranslator.translate('strokeOpacity'))\n            .setStep(0.05)\n            .setMaxValue(1)\n            .setTextFieldWidth(45)\n            .setValue(this.chartProxy.getSeriesProperty('strokeOpacity'))\n            .onValueChange(function (newValue) { return _this.chartProxy.setSeriesProperty('strokeOpacity', newValue); });\n        this.seriesFillOpacitySlider\n            .setLabel(this.chartTranslator.translate('fillOpacity'))\n            .setStep(0.05)\n            .setMaxValue(1)\n            .setTextFieldWidth(45)\n            .setValue(this.chartProxy.getSeriesProperty('fillOpacity'))\n            .onValueChange(function (newValue) { return _this.chartProxy.setSeriesProperty('fillOpacity', newValue); });\n    };\n    PieSeriesPanel.prototype.initLabelPanel = function () {\n        var _this = this;\n        var initialFont = {\n            family: this.chartProxy.getSeriesProperty('labelFontFamily'),\n            style: this.chartProxy.getSeriesProperty('labelFontStyle'),\n            weight: this.chartProxy.getSeriesProperty('labelFontWeight'),\n            size: parseInt(this.chartProxy.getSeriesProperty('labelFontSize')),\n            color: this.chartProxy.getSeriesProperty('labelColor')\n        };\n        // note we don't set the font style via series panel\n        var setFont = function (font) {\n            if (font.family) {\n                _this.chartProxy.setSeriesProperty('labelFontFamily', font.family);\n            }\n            if (font.weight) {\n                _this.chartProxy.setSeriesProperty('labelFontWeight', font.weight);\n            }\n            if (font.size) {\n                _this.chartProxy.setSeriesProperty('labelFontSize', font.size);\n            }\n            if (font.color) {\n                _this.chartProxy.setSeriesProperty('labelColor', font.color);\n            }\n        };\n        var params = {\n            enabled: this.chartProxy.getLabelEnabled(),\n            setEnabled: function (enabled) { return _this.chartProxy.setSeriesProperty('labelEnabled', enabled); },\n            suppressEnabledCheckbox: false,\n            initialFont: initialFont,\n            setFont: setFont\n        };\n        var labelPanelComp = new labelPanel_1.LabelPanel(params);\n        this.getContext().wireBean(labelPanelComp);\n        this.activePanels.push(labelPanelComp);\n        var calloutPanelComp = new calloutPanel_1.CalloutPanel(this.chartProxy);\n        this.getContext().wireBean(calloutPanelComp);\n        labelPanelComp.addCompToPanel(calloutPanelComp);\n        this.activePanels.push(calloutPanelComp);\n        this.seriesGroup.addItem(labelPanelComp);\n    };\n    PieSeriesPanel.prototype.initShadowPanel = function () {\n        var shadowPanelComp = new shadowPanel_1.ShadowPanel(this.chartProxy);\n        this.getContext().wireBean(shadowPanelComp);\n        this.seriesGroup.getGui().appendChild(shadowPanelComp.getGui());\n        this.seriesGroup.addItem(shadowPanelComp);\n    };\n    PieSeriesPanel.prototype.destroyActivePanels = function () {\n        this.activePanels.forEach(function (panel) {\n            ag_grid_community_1._.removeFromParent(panel.getGui());\n            panel.destroy();\n        });\n    };\n    PieSeriesPanel.prototype.destroy = function () {\n        this.destroyActivePanels();\n        _super.prototype.destroy.call(this);\n    };\n    PieSeriesPanel.TEMPLATE = \"<div>   \\n            <ag-group-component ref=\\\"seriesGroup\\\">\\n               <ag-toggle-button ref=\\\"seriesTooltipsToggle\\\"></ag-toggle-button>\\n                <ag-slider ref=\\\"seriesStrokeWidthSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"seriesLineOpacitySlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"seriesFillOpacitySlider\\\"></ag-slider>\\n            </ag-group-component>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesGroup'),\n        __metadata(\"design:type\", ag_grid_community_1.AgGroupComponent)\n    ], PieSeriesPanel.prototype, \"seriesGroup\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesTooltipsToggle'),\n        __metadata(\"design:type\", ag_grid_community_1.AgToggleButton)\n    ], PieSeriesPanel.prototype, \"seriesTooltipsToggle\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesStrokeWidthSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], PieSeriesPanel.prototype, \"seriesStrokeWidthSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesLineOpacitySlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], PieSeriesPanel.prototype, \"seriesLineOpacitySlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesFillOpacitySlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], PieSeriesPanel.prototype, \"seriesFillOpacitySlider\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], PieSeriesPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], PieSeriesPanel.prototype, \"init\", null);\n    return PieSeriesPanel;\n}(ag_grid_community_1.Component));\nexports.PieSeriesPanel = PieSeriesPanel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar markersPanel_1 = require(\"./markersPanel\");\nvar chartTranslator_1 = require(\"../../../chartTranslator\");\nvar ScatterSeriesPanel = /** @class */ (function (_super) {\n    __extends(ScatterSeriesPanel, _super);\n    function ScatterSeriesPanel(chartController) {\n        var _this = _super.call(this) || this;\n        _this.activePanels = [];\n        _this.chartProxy = chartController.getChartProxy();\n        return _this;\n    }\n    ScatterSeriesPanel.prototype.init = function () {\n        this.setTemplate(ScatterSeriesPanel.TEMPLATE);\n        this.initSeriesGroup();\n        this.initSeriesTooltips();\n        this.initMarkersPanel();\n    };\n    ScatterSeriesPanel.prototype.initSeriesGroup = function () {\n        this.seriesGroup\n            .setTitle(this.chartTranslator.translate('series'))\n            .toggleGroupExpand(false)\n            .hideEnabledCheckbox(true);\n    };\n    ScatterSeriesPanel.prototype.initSeriesTooltips = function () {\n        var _this = this;\n        this.seriesTooltipsToggle\n            .setLabel(this.chartTranslator.translate('tooltips'))\n            .setLabelAlignment('left')\n            .setLabelWidth('flex')\n            .setInputWidth(40)\n            .setValue(this.chartProxy.getTooltipsEnabled())\n            .onValueChange(function (newValue) { return _this.chartProxy.setSeriesProperty('tooltipEnabled', newValue); });\n    };\n    ScatterSeriesPanel.prototype.initMarkersPanel = function () {\n        var markersPanelComp = new markersPanel_1.MarkersPanel(this.chartProxy);\n        this.getContext().wireBean(markersPanelComp);\n        this.seriesGroup.addItem(markersPanelComp);\n        this.activePanels.push(markersPanelComp);\n    };\n    ScatterSeriesPanel.prototype.destroyActivePanels = function () {\n        this.activePanels.forEach(function (panel) {\n            ag_grid_community_1._.removeFromParent(panel.getGui());\n            panel.destroy();\n        });\n    };\n    ScatterSeriesPanel.prototype.destroy = function () {\n        this.destroyActivePanels();\n        _super.prototype.destroy.call(this);\n    };\n    ScatterSeriesPanel.TEMPLATE = \"<div>   \\n            <ag-group-component ref=\\\"seriesGroup\\\">\\n                <ag-toggle-button ref=\\\"seriesTooltipsToggle\\\"></ag-toggle-button>                \\n            </ag-group-component>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesGroup'),\n        __metadata(\"design:type\", ag_grid_community_1.AgGroupComponent)\n    ], ScatterSeriesPanel.prototype, \"seriesGroup\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesTooltipsToggle'),\n        __metadata(\"design:type\", ag_grid_community_1.AgToggleButton)\n    ], ScatterSeriesPanel.prototype, \"seriesTooltipsToggle\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('seriesLineWidthSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], ScatterSeriesPanel.prototype, \"seriesLineWidthSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], ScatterSeriesPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ScatterSeriesPanel.prototype, \"init\", null);\n    return ScatterSeriesPanel;\n}(ag_grid_community_1.Component));\nexports.ScatterSeriesPanel = ScatterSeriesPanel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar chartTranslator_1 = require(\"../../../chartTranslator\");\nvar ShadowPanel = /** @class */ (function (_super) {\n    __extends(ShadowPanel, _super);\n    function ShadowPanel(chartProxy) {\n        var _this = _super.call(this) || this;\n        _this.chartProxy = chartProxy;\n        return _this;\n    }\n    ShadowPanel.prototype.init = function () {\n        this.setTemplate(ShadowPanel.TEMPLATE);\n        this.shadowBlurSlider.setTextFieldWidth(45);\n        this.shadowXOffsetSlider.setTextFieldWidth(45);\n        this.shadowYOffsetSlider.setTextFieldWidth(45);\n        this.initSeriesShadow();\n    };\n    ShadowPanel.prototype.initSeriesShadow = function () {\n        var _this = this;\n        this.shadowGroup\n            .setTitle(this.chartTranslator.translate('shadow'))\n            .setEnabled(this.chartProxy.getShadowEnabled())\n            .hideOpenCloseIcons(true)\n            .hideEnabledCheckbox(false)\n            .onEnableChange(function (newValue) { return _this.chartProxy.setShadowProperty('enabled', newValue); });\n        this.shadowColorPicker\n            .setLabel(this.chartTranslator.translate('color'))\n            .setLabelWidth('flex')\n            .setInputWidth(45)\n            .setValue('rgba(0,0,0,0.5)')\n            .onValueChange(function (newValue) { return _this.chartProxy.setShadowProperty('color', newValue); });\n        var initInput = function (input, property, maxValue) {\n            input.setLabel(_this.chartTranslator.translate(property))\n                .setValue(_this.chartProxy.getShadowProperty(property))\n                .setMaxValue(maxValue)\n                .onValueChange(function (newValue) { return _this.chartProxy.setShadowProperty(property, newValue); });\n        };\n        initInput(this.shadowBlurSlider, 'blur', 20);\n        initInput(this.shadowXOffsetSlider, 'xOffset', 20);\n        initInput(this.shadowYOffsetSlider, 'yOffset', 20);\n    };\n    ShadowPanel.TEMPLATE = \"<div>\\n            <ag-group-component ref=\\\"shadowGroup\\\">\\n                <ag-color-picker ref=\\\"shadowColorPicker\\\"></ag-color-picker>\\n                <ag-slider ref=\\\"shadowBlurSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"shadowXOffsetSlider\\\"></ag-slider>\\n                <ag-slider ref=\\\"shadowYOffsetSlider\\\"></ag-slider>\\n            </ag-group-component>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.RefSelector('shadowGroup'),\n        __metadata(\"design:type\", ag_grid_community_1.AgGroupComponent)\n    ], ShadowPanel.prototype, \"shadowGroup\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('shadowColorPicker'),\n        __metadata(\"design:type\", ag_grid_community_1.AgColorPicker)\n    ], ShadowPanel.prototype, \"shadowColorPicker\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('shadowBlurSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], ShadowPanel.prototype, \"shadowBlurSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('shadowXOffsetSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], ShadowPanel.prototype, \"shadowXOffsetSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('shadowYOffsetSlider'),\n        __metadata(\"design:type\", ag_grid_community_1.AgSlider)\n    ], ShadowPanel.prototype, \"shadowYOffsetSlider\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], ShadowPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ShadowPanel.prototype, \"init\", null);\n    return ShadowPanel;\n}(ag_grid_community_1.Component));\nexports.ShadowPanel = ShadowPanel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar miniChartsContainer_1 = require(\"./miniChartsContainer\");\nvar ChartSettingsPanel = /** @class */ (function (_super) {\n    __extends(ChartSettingsPanel, _super);\n    function ChartSettingsPanel(chartController) {\n        var _this = _super.call(this, ChartSettingsPanel.TEMPLATE) || this;\n        _this.miniCharts = [];\n        _this.cardItems = [];\n        _this.chartController = chartController;\n        _this.activePalette = _this.chartController.getActivePalette();\n        _this.palettes = _this.chartController.getPalettes();\n        return _this;\n    }\n    ChartSettingsPanel.prototype.postConstruct = function () {\n        var _this = this;\n        this.palettes.forEach(function (palette, idx) {\n            var miniChartsContainer = new miniChartsContainer_1.MiniChartsContainer(idx, _this.chartController);\n            _this.getContext().wireBean(miniChartsContainer);\n            _this.miniCharts.push(miniChartsContainer);\n            _this.eMiniChartsContainer.appendChild(miniChartsContainer.getGui());\n            _this.addCardLink(idx);\n        });\n        this.ePrevBtn.insertAdjacentElement('afterbegin', ag_grid_community_1._.createIconNoSpan('smallLeft', this.gridOptionsWrapper));\n        this.eNextBtn.insertAdjacentElement('afterbegin', ag_grid_community_1._.createIconNoSpan('smallRight', this.gridOptionsWrapper));\n        this.addDestroyableEventListener(this.ePrevBtn, 'click', this.prev.bind(this));\n        this.addDestroyableEventListener(this.eNextBtn, 'click', this.next.bind(this));\n        this.setActivePalette(this.activePalette, 0);\n    };\n    ChartSettingsPanel.prototype.addCardLink = function (idx) {\n        var _this = this;\n        var link = document.createElement('div');\n        ag_grid_community_1._.addCssClass(link, 'ag-nav-card-item');\n        link.innerHTML = '\\u25CF';\n        this.addDestroyableEventListener(link, 'click', function () {\n            if (idx === _this.activePalette || _this.isAnimating) {\n                return;\n            }\n            _this.setActivePalette(idx, idx < _this.activePalette ? 1 : 2);\n        });\n        this.eCardSelector.appendChild(link);\n        this.cardItems.push(link);\n    };\n    ChartSettingsPanel.prototype.getPrev = function () {\n        var prev = this.activePalette - 1;\n        if (prev < 0) {\n            prev = this.palettes.length - 1;\n        }\n        return prev;\n    };\n    ChartSettingsPanel.prototype.prev = function () {\n        if (this.isAnimating) {\n            return;\n        }\n        var prev = this.getPrev();\n        this.setActivePalette(prev, 1);\n    };\n    ChartSettingsPanel.prototype.getNext = function () {\n        var next = this.activePalette + 1;\n        if (next === this.palettes.length) {\n            next = 0;\n        }\n        return next;\n    };\n    ChartSettingsPanel.prototype.next = function () {\n        if (this.isAnimating) {\n            return;\n        }\n        var next = this.getNext();\n        this.setActivePalette(next, 2);\n    };\n    ChartSettingsPanel.prototype.setActivePalette = function (palette, animate) {\n        var _this = this;\n        ag_grid_community_1._.radioCssClass(this.cardItems[palette], 'ag-selected');\n        if (!animate) {\n            this.miniCharts.forEach(function (miniChart, idx) {\n                ag_grid_community_1._.addOrRemoveCssClass(miniChart.getGui(), 'ag-hidden', idx !== palette);\n            });\n            this.miniCharts[this.activePalette].refreshSelected();\n            this.activePalette = palette;\n        }\n        else {\n            var currentPalette = this.miniCharts[this.activePalette];\n            var currentGui_1 = currentPalette.getGui();\n            var futurePalette = this.miniCharts[palette];\n            var futureGui_1 = futurePalette.getGui();\n            currentPalette.refreshSelected();\n            futurePalette.refreshSelected();\n            var multiplier = animate === 1 ? -1 : 1;\n            var final_1 = futureGui_1.style.left = (ag_grid_community_1._.getAbsoluteWidth(this.getGui()) * multiplier) + \"px\";\n            ag_grid_community_1._.removeCssClass(futureGui_1, 'ag-hidden');\n            ag_grid_community_1._.addCssClass(currentGui_1, 'ag-animating');\n            ag_grid_community_1._.addCssClass(futureGui_1, 'ag-animating');\n            this.activePalette = palette;\n            this.chartController.setChartWithPalette(this.chartController.getChartType(), this.activePalette);\n            this.isAnimating = true;\n            window.setTimeout(function () {\n                currentGui_1.style.left = parseFloat(final_1) * -1 + \"px\";\n                futureGui_1.style.left = '0px';\n            }, 50);\n            window.setTimeout(function () {\n                _this.isAnimating = false;\n                ag_grid_community_1._.removeCssClass(currentGui_1, 'ag-animating');\n                ag_grid_community_1._.removeCssClass(futureGui_1, 'ag-animating');\n                ag_grid_community_1._.addCssClass(currentGui_1, 'ag-hidden');\n            }, 500);\n        }\n    };\n    ChartSettingsPanel.TEMPLATE = \"<div class=\\\"ag-chart-settings-wrapper\\\">\\n            <div ref=\\\"eMiniChartsContainer\\\" class=\\\"ag-chart-settings-mini-charts-container\\\"></div>\\n            <div class=\\\"ag-chart-settings-nav-bar\\\">\\n                <div ref=\\\"ePrevBtn\\\" class=\\\"ag-chart-settings-prev-btn\\\">\\n                    <button type=\\\"button\\\"></button>\\n                </div>\\n                <div ref=\\\"eCardSelector\\\" class=\\\"ag-nav-card-selector\\\"></div>\\n                <div ref=\\\"eNextBtn\\\" class=\\\"ag-chart-settings-next-btn\\\">\\n                    <button type=\\\"button\\\"></button>\\n                </div>\\n            </div>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], ChartSettingsPanel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eMiniChartsContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], ChartSettingsPanel.prototype, \"eMiniChartsContainer\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector(\"eCardSelector\"),\n        __metadata(\"design:type\", HTMLElement)\n    ], ChartSettingsPanel.prototype, \"eCardSelector\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector(\"ePrevBtn\"),\n        __metadata(\"design:type\", HTMLElement)\n    ], ChartSettingsPanel.prototype, \"ePrevBtn\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector(\"eNextBtn\"),\n        __metadata(\"design:type\", HTMLElement)\n    ], ChartSettingsPanel.prototype, \"eNextBtn\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ChartSettingsPanel.prototype, \"postConstruct\", null);\n    return ChartSettingsPanel;\n}(ag_grid_community_1.Component));\nexports.ChartSettingsPanel = ChartSettingsPanel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar chartTranslator_1 = require(\"../../chartTranslator\");\nvar group_1 = require(\"../../../../charts/scene/group\");\nvar scene_1 = require(\"../../../../charts/scene/scene\");\nvar angle_1 = require(\"../../../../charts/util/angle\");\nvar sector_1 = require(\"../../../../charts/scene/shape/sector\");\nvar path_1 = require(\"../../../../charts/scene/shape/path\");\nvar linearScale_1 = require(\"../../../../charts/scale/linearScale\");\nvar line_1 = require(\"../../../../charts/scene/shape/line\");\nvar clipRect_1 = require(\"../../../../charts/scene/clipRect\");\nvar rect_1 = require(\"../../../../charts/scene/shape/rect\");\nvar bandScale_1 = require(\"../../../../charts/scale/bandScale\");\nvar arc_1 = require(\"../../../../charts/scene/shape/arc\");\nvar MiniChartsContainer = /** @class */ (function (_super) {\n    __extends(MiniChartsContainer, _super);\n    function MiniChartsContainer(activePalette, chartController) {\n        var _this = _super.call(this, MiniChartsContainer.TEMPLATE) || this;\n        _this.wrappers = {};\n        var palettes = chartController.getPalettes();\n        _this.fills = palettes[activePalette].fills;\n        _this.strokes = palettes[activePalette].strokes;\n        _this.chartController = chartController;\n        return _this;\n    }\n    MiniChartsContainer.prototype.init = function () {\n        var _this = this;\n        var chartGroups = {\n            columnGroup: [\n                MiniColumn,\n                MiniStackedColumn,\n                MiniNormalizedColumn\n            ],\n            barGroup: [\n                MiniBar,\n                MiniStackedBar,\n                MiniNormalizedBar\n            ],\n            pieGroup: [\n                MiniPie,\n                MiniDoughnut\n            ],\n            lineGroup: [\n                MiniLine\n            ],\n            scatterGroup: [\n                MiniScatter,\n                MiniBubble\n            ],\n            areaGroup: [\n                MiniArea,\n                MiniStackedArea,\n                MiniNormalizedArea\n            ]\n        };\n        var eGui = this.getGui();\n        Object.keys(chartGroups).forEach(function (group) {\n            var chartGroup = chartGroups[group];\n            var groupComponent = new ag_grid_community_1.AgGroupComponent({\n                title: _this.chartTranslator.translate(group),\n                suppressEnabledCheckbox: true,\n                enabled: true,\n                suppressOpenCloseIcons: true\n            });\n            _this.getContext().wireBean(groupComponent);\n            chartGroup.forEach(function (MiniClass) {\n                var miniWrapper = document.createElement('div');\n                ag_grid_community_1._.addCssClass(miniWrapper, 'ag-chart-mini-thumbnail');\n                _this.addDestroyableEventListener(miniWrapper, 'click', function () {\n                    _this.chartController.setChartType(MiniClass.chartType);\n                    _this.refreshSelected();\n                });\n                _this.wrappers[MiniClass.chartType] = miniWrapper;\n                var miniChart = new MiniClass(miniWrapper, _this.fills, _this.strokes);\n                _this.getContext().wireBean(miniChart);\n                groupComponent.addItem(miniWrapper);\n            });\n            eGui.appendChild(groupComponent.getGui());\n        });\n        this.refreshSelected();\n    };\n    MiniChartsContainer.prototype.refreshSelected = function () {\n        var type = this.chartController.getChartType();\n        for (var wrapper in this.wrappers) {\n            ag_grid_community_1._.addOrRemoveCssClass(this.wrappers[wrapper], 'ag-selected', wrapper === type);\n        }\n    };\n    MiniChartsContainer.TEMPLATE = '<div class=\"ag-chart-settings-mini-wrapper\"></div>';\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], MiniChartsContainer.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MiniChartsContainer.prototype, \"init\", null);\n    return MiniChartsContainer;\n}(ag_grid_community_1.Component));\nexports.MiniChartsContainer = MiniChartsContainer;\nvar MiniChart = /** @class */ (function (_super) {\n    __extends(MiniChart, _super);\n    function MiniChart() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.size = 58;\n        _this.padding = 5;\n        _this.root = new group_1.Group();\n        _this.scene = (function () {\n            var scene = new scene_1.Scene({\n                width: _this.size,\n                height: _this.size\n            });\n            scene.root = _this.root;\n            return scene;\n        })();\n        _this.element = _this.scene.canvas.element;\n        return _this;\n    }\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], MiniChart.prototype, \"chartTranslator\", void 0);\n    return MiniChart;\n}(ag_grid_community_1.Component));\nexports.MiniChart = MiniChart;\nvar MiniPie = /** @class */ (function (_super) {\n    __extends(MiniPie, _super);\n    function MiniPie(parent, fills, strokes) {\n        var _this = _super.call(this) || this;\n        _this.radius = (_this.size - _this.padding * 2) / 2;\n        _this.center = _this.radius + _this.padding;\n        _this.sectors = MiniPie.angles.map(function (pair) {\n            var sector = sector_1.Sector.create(_this.center, _this.center, 0, _this.radius, pair[0], pair[1]);\n            sector.stroke = undefined;\n            return sector;\n        });\n        _this.scene.parent = parent;\n        _this.root.append(_this.sectors);\n        _this.updateColors(fills, strokes);\n        return _this;\n    }\n    MiniPie.prototype.init = function () {\n        this.scene.canvas.element.title = this.chartTranslator.translate('pieTooltip');\n    };\n    MiniPie.prototype.updateColors = function (fills, strokes) {\n        this.sectors.forEach(function (sector, i) {\n            sector.fill = fills[i];\n            sector.stroke = strokes[i];\n        });\n    };\n    MiniPie.chartType = ag_grid_community_1.ChartType.Pie;\n    MiniPie.angles = [\n        [angle_1.toRadians(-90), angle_1.toRadians(30)],\n        [angle_1.toRadians(30), angle_1.toRadians(120)],\n        [angle_1.toRadians(120), angle_1.toRadians(180)],\n        [angle_1.toRadians(180), angle_1.toRadians(210)],\n        [angle_1.toRadians(210), angle_1.toRadians(240)],\n        [angle_1.toRadians(240), angle_1.toRadians(270)]\n    ];\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MiniPie.prototype, \"init\", null);\n    return MiniPie;\n}(MiniChart));\nexports.MiniPie = MiniPie;\nvar MiniDoughnut = /** @class */ (function (_super) {\n    __extends(MiniDoughnut, _super);\n    function MiniDoughnut(parent, fills, strokes) {\n        var _this = _super.call(this) || this;\n        _this.radius = (_this.size - _this.padding * 2) / 2;\n        _this.center = _this.radius + _this.padding;\n        _this.sectors = MiniPie.angles.map(function (pair) {\n            var sector = sector_1.Sector.create(_this.center, _this.center, _this.radius * 0.6, _this.radius, pair[0], pair[1]);\n            sector.stroke = undefined;\n            return sector;\n        });\n        _this.scene.parent = parent;\n        _this.root.append(_this.sectors);\n        _this.updateColors(fills, strokes);\n        return _this;\n    }\n    MiniDoughnut.prototype.init = function () {\n        this.scene.canvas.element.title = this.chartTranslator.translate('doughnutTooltip');\n    };\n    MiniDoughnut.prototype.updateColors = function (fills, strokes) {\n        this.sectors.forEach(function (sector, i) {\n            sector.fill = fills[i];\n            sector.stroke = strokes[i];\n        });\n    };\n    MiniDoughnut.chartType = ag_grid_community_1.ChartType.Doughnut;\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MiniDoughnut.prototype, \"init\", null);\n    return MiniDoughnut;\n}(MiniChart));\nvar MiniLine = /** @class */ (function (_super) {\n    __extends(MiniLine, _super);\n    function MiniLine(parent, fills, strokes) {\n        var _this = _super.call(this) || this;\n        _this.scene.parent = parent;\n        var size = _this.size;\n        var padding = _this.padding;\n        var xScale = linearScale_1.default();\n        xScale.domain = [0, 4];\n        xScale.range = [padding, size - padding];\n        var yScale = linearScale_1.default();\n        yScale.domain = [0, 10];\n        yScale.range = [size - padding, padding];\n        var data = [\n            [9, 7, 8, 5, 6],\n            [5, 6, 3, 4, 1],\n            [1, 3, 4, 8, 7]\n        ];\n        var axisOvershoot = 3;\n        var leftAxis = line_1.Line.create(padding, padding, padding, size - padding + axisOvershoot);\n        leftAxis.stroke = 'gray';\n        leftAxis.strokeWidth = 1;\n        var bottomAxis = line_1.Line.create(padding - axisOvershoot, size - padding, size - padding, size - padding);\n        bottomAxis.stroke = 'gray';\n        bottomAxis.strokeWidth = 1;\n        _this.lines = data.map(function (series) {\n            var line = new path_1.Path();\n            line.strokeWidth = 3;\n            line.lineCap = 'round';\n            line.fill = undefined;\n            series.forEach(function (datum, i) {\n                line.path[i > 0 ? 'lineTo' : 'moveTo'](xScale.convert(i), yScale.convert(datum));\n            });\n            return line;\n        });\n        var clipRect = new clipRect_1.ClipRect();\n        clipRect.x = padding;\n        clipRect.y = padding;\n        clipRect.width = size - padding * 2;\n        clipRect.height = size - padding * 2;\n        clipRect.append(_this.lines);\n        var root = _this.root;\n        root.append(clipRect);\n        root.append(leftAxis);\n        root.append(bottomAxis);\n        _this.updateColors(fills, strokes);\n        return _this;\n    }\n    MiniLine.prototype.init = function () {\n        this.scene.canvas.element.title = this.chartTranslator.translate('lineTooltip');\n    };\n    MiniLine.prototype.updateColors = function (fills, strokes) {\n        this.lines.forEach(function (line, i) {\n            line.stroke = strokes[i];\n        });\n    };\n    MiniLine.chartType = ag_grid_community_1.ChartType.Line;\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MiniLine.prototype, \"init\", null);\n    return MiniLine;\n}(MiniChart));\nvar MiniColumn = /** @class */ (function (_super) {\n    __extends(MiniColumn, _super);\n    function MiniColumn(parent, fills, strokes) {\n        var _this = _super.call(this) || this;\n        _this.scene.parent = parent;\n        var size = _this.size;\n        var padding = _this.padding;\n        var data = [2, 3, 4];\n        var xScale = new bandScale_1.BandScale();\n        xScale.domain = [0, 1, 2];\n        xScale.range = [padding, size - padding];\n        xScale.paddingInner = 0.3;\n        xScale.paddingOuter = 0.3;\n        var yScale = linearScale_1.default();\n        yScale.domain = [0, 4];\n        yScale.range = [size - padding, padding];\n        var axisOvershoot = 3;\n        var leftAxis = line_1.Line.create(padding, padding, padding, size - padding + axisOvershoot);\n        leftAxis.stroke = 'gray';\n        leftAxis.strokeWidth = 1;\n        var bottomAxis = line_1.Line.create(padding - axisOvershoot, size - padding, size - padding, size - padding);\n        bottomAxis.stroke = 'gray';\n        bottomAxis.strokeWidth = 1;\n        _this.axes = [leftAxis, bottomAxis];\n        var rectLineWidth = 1;\n        var alignment = Math.floor(rectLineWidth) % 2 / 2;\n        var bottom = yScale.convert(0);\n        _this.bars = data.map(function (datum, i) {\n            var top = yScale.convert(datum);\n            var rect = new rect_1.Rect();\n            rect.strokeWidth = rectLineWidth;\n            rect.x = Math.floor(xScale.convert(i)) + alignment;\n            rect.y = Math.floor(top) + alignment;\n            var width = xScale.bandwidth;\n            var height = bottom - top;\n            rect.width = Math.floor(width) + Math.floor(rect.x % 1 + width % 1);\n            rect.height = Math.floor(height) + Math.floor(rect.y % 1 + height % 1);\n            return rect;\n        });\n        var root = _this.root;\n        root.append(_this.bars);\n        root.append(leftAxis);\n        root.append(bottomAxis);\n        _this.updateColors(fills, strokes);\n        return _this;\n    }\n    MiniColumn.prototype.init = function () {\n        this.scene.canvas.element.title = this.chartTranslator.translate('groupedColumnTooltip');\n    };\n    MiniColumn.prototype.updateColors = function (fills, strokes) {\n        this.bars.forEach(function (bar, i) {\n            bar.fill = fills[i];\n            bar.stroke = strokes[i];\n        });\n    };\n    MiniColumn.chartType = ag_grid_community_1.ChartType.GroupedColumn;\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MiniColumn.prototype, \"init\", null);\n    return MiniColumn;\n}(MiniChart));\nvar MiniBar = /** @class */ (function (_super) {\n    __extends(MiniBar, _super);\n    function MiniBar(parent, fills, strokes) {\n        var _this = _super.call(this) || this;\n        _this.scene.parent = parent;\n        var size = _this.size;\n        var padding = _this.padding;\n        var data = [2, 3, 4];\n        var yScale = new bandScale_1.BandScale();\n        yScale.domain = [0, 1, 2];\n        yScale.range = [padding, size - padding];\n        yScale.paddingInner = 0.3;\n        yScale.paddingOuter = 0.3;\n        var xScale = linearScale_1.default();\n        xScale.domain = [0, 4];\n        xScale.range = [size - padding, padding];\n        var axisOvershoot = 3;\n        var leftAxis = line_1.Line.create(padding, padding, padding, size - padding + axisOvershoot);\n        leftAxis.stroke = 'gray';\n        leftAxis.strokeWidth = 1;\n        var bottomAxis = line_1.Line.create(padding - axisOvershoot, size - padding, size - padding, size - padding);\n        bottomAxis.stroke = 'gray';\n        bottomAxis.strokeWidth = 1;\n        _this.axes = [leftAxis, bottomAxis];\n        var rectLineWidth = 1;\n        var alignment = Math.floor(rectLineWidth) % 2 / 2;\n        var bottom = xScale.convert(0);\n        _this.bars = data.map(function (datum, i) {\n            var top = xScale.convert(datum);\n            var rect = new rect_1.Rect();\n            rect.strokeWidth = rectLineWidth;\n            rect.x = Math.floor(padding) + alignment;\n            rect.y = Math.floor(yScale.convert(i)) + alignment;\n            var width = yScale.bandwidth;\n            var height = bottom - top;\n            rect.width = Math.floor(height) + Math.floor(rect.y % 1 + height % 1);\n            rect.height = Math.floor(width) + Math.floor(rect.x % 1 + width % 1);\n            return rect;\n        });\n        var root = _this.root;\n        root.append(_this.bars);\n        root.append(leftAxis);\n        root.append(bottomAxis);\n        _this.updateColors(fills, strokes);\n        return _this;\n    }\n    MiniBar.prototype.init = function () {\n        this.scene.canvas.element.title = this.chartTranslator.translate('groupedBarTooltip');\n    };\n    MiniBar.prototype.updateColors = function (fills, strokes) {\n        this.bars.forEach(function (bar, i) {\n            bar.fill = fills[i];\n            bar.stroke = strokes[i];\n        });\n    };\n    MiniBar.chartType = ag_grid_community_1.ChartType.GroupedBar;\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MiniBar.prototype, \"init\", null);\n    return MiniBar;\n}(MiniChart));\nvar MiniStackedColumn = /** @class */ (function (_super) {\n    __extends(MiniStackedColumn, _super);\n    function MiniStackedColumn(parent, fills, strokes) {\n        var _this = _super.call(this) || this;\n        _this.scene.parent = parent;\n        var size = _this.size;\n        var padding = _this.padding;\n        var data = [\n            [8, 12, 16],\n            [6, 9, 12],\n            [2, 3, 4]\n        ];\n        var xScale = new bandScale_1.BandScale();\n        xScale.domain = [0, 1, 2];\n        xScale.range = [padding, size - padding];\n        xScale.paddingInner = 0.3;\n        xScale.paddingOuter = 0.3;\n        var yScale = linearScale_1.default();\n        yScale.domain = [0, 16];\n        yScale.range = [size - padding, padding];\n        var axisOvershoot = 3;\n        var leftAxis = line_1.Line.create(padding, padding, padding, size - padding + axisOvershoot);\n        leftAxis.stroke = 'gray';\n        leftAxis.strokeWidth = 1;\n        var bottomAxis = line_1.Line.create(padding - axisOvershoot, size - padding, size - padding, size - padding);\n        bottomAxis.stroke = 'gray';\n        bottomAxis.strokeWidth = 1;\n        var rectLineWidth = 1;\n        var alignment = Math.floor(rectLineWidth) % 2 / 2;\n        var bottom = yScale.convert(0);\n        _this.bars = data.map(function (series) {\n            return series.map(function (datum, i) {\n                var top = yScale.convert(datum);\n                var rect = new rect_1.Rect();\n                rect.strokeWidth = rectLineWidth;\n                rect.x = Math.floor(xScale.convert(i)) + alignment;\n                rect.y = Math.floor(top) + alignment;\n                var width = xScale.bandwidth;\n                var height = bottom - top;\n                rect.width = Math.floor(width) + Math.floor(rect.x % 1 + width % 1);\n                rect.height = Math.floor(height) + Math.floor(rect.y % 1 + height % 1);\n                return rect;\n            });\n        });\n        var root = _this.root;\n        root.append([].concat.apply([], _this.bars));\n        root.append(leftAxis);\n        root.append(bottomAxis);\n        _this.updateColors(fills, strokes);\n        return _this;\n    }\n    MiniStackedColumn.prototype.init = function () {\n        this.scene.canvas.element.title = this.chartTranslator.translate('stackedColumnTooltip');\n    };\n    MiniStackedColumn.prototype.updateColors = function (fills, strokes) {\n        this.bars.forEach(function (series, i) {\n            series.forEach(function (bar) {\n                bar.fill = fills[i];\n                bar.stroke = strokes[i];\n            });\n        });\n    };\n    MiniStackedColumn.chartType = ag_grid_community_1.ChartType.StackedColumn;\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MiniStackedColumn.prototype, \"init\", null);\n    return MiniStackedColumn;\n}(MiniChart));\nvar MiniStackedBar = /** @class */ (function (_super) {\n    __extends(MiniStackedBar, _super);\n    function MiniStackedBar(parent, fills, strokes) {\n        var _this = _super.call(this) || this;\n        _this.scene.parent = parent;\n        var size = _this.size;\n        var padding = _this.padding;\n        var data = [\n            [8, 12, 16],\n            [6, 9, 12],\n            [2, 3, 4]\n        ];\n        var yScale = new bandScale_1.BandScale();\n        yScale.domain = [0, 1, 2];\n        yScale.range = [padding, size - padding];\n        yScale.paddingInner = 0.3;\n        yScale.paddingOuter = 0.3;\n        var xScale = linearScale_1.default();\n        xScale.domain = [0, 16];\n        xScale.range = [size - padding, padding];\n        var axisOvershoot = 3;\n        var leftAxis = line_1.Line.create(padding, padding, padding, size - padding + axisOvershoot);\n        leftAxis.stroke = 'gray';\n        leftAxis.strokeWidth = 1;\n        var bottomAxis = line_1.Line.create(padding - axisOvershoot, size - padding, size - padding, size - padding);\n        bottomAxis.stroke = 'gray';\n        bottomAxis.strokeWidth = 1;\n        var rectLineWidth = 1;\n        var alignment = Math.floor(rectLineWidth) % 2 / 2;\n        var bottom = xScale.convert(0);\n        _this.bars = data.map(function (series) {\n            return series.map(function (datum, i) {\n                var top = xScale.convert(datum);\n                var rect = new rect_1.Rect();\n                rect.strokeWidth = rectLineWidth;\n                rect.x = Math.floor(padding) + alignment;\n                rect.y = Math.floor(yScale.convert(i)) + alignment;\n                var width = yScale.bandwidth;\n                var height = bottom - top;\n                rect.width = Math.floor(height) + Math.floor(rect.y % 1 + height % 1);\n                rect.height = Math.floor(width) + Math.floor(rect.x % 1 + width % 1);\n                return rect;\n            });\n        });\n        var root = _this.root;\n        root.append([].concat.apply([], _this.bars));\n        root.append(leftAxis);\n        root.append(bottomAxis);\n        _this.updateColors(fills, strokes);\n        return _this;\n    }\n    MiniStackedBar.prototype.init = function () {\n        this.scene.canvas.element.title = this.chartTranslator.translate('stackedBarTooltip');\n    };\n    MiniStackedBar.prototype.updateColors = function (fills, strokes) {\n        this.bars.forEach(function (series, i) {\n            series.forEach(function (bar) {\n                bar.fill = fills[i];\n                bar.stroke = strokes[i];\n            });\n        });\n    };\n    MiniStackedBar.chartType = ag_grid_community_1.ChartType.StackedBar;\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MiniStackedBar.prototype, \"init\", null);\n    return MiniStackedBar;\n}(MiniChart));\nvar MiniNormalizedColumn = /** @class */ (function (_super) {\n    __extends(MiniNormalizedColumn, _super);\n    function MiniNormalizedColumn(parent, fills, strokes) {\n        var _this = _super.call(this) || this;\n        _this.scene.parent = parent;\n        var size = _this.size;\n        var padding = _this.padding;\n        var data = [\n            [10, 10, 10],\n            [6, 7, 8],\n            [2, 4, 6]\n        ];\n        var xScale = new bandScale_1.BandScale();\n        xScale.domain = [0, 1, 2];\n        xScale.range = [padding, size - padding];\n        xScale.paddingInner = 0.3;\n        xScale.paddingOuter = 0.3;\n        var yScale = linearScale_1.default();\n        yScale.domain = [0, 10];\n        yScale.range = [size - padding, padding];\n        var axisOvershoot = 3;\n        var leftAxis = line_1.Line.create(padding, padding, padding, size - padding + axisOvershoot);\n        leftAxis.stroke = 'gray';\n        leftAxis.strokeWidth = 1;\n        var bottomAxis = line_1.Line.create(padding - axisOvershoot, size - padding, size - padding, size - padding);\n        bottomAxis.stroke = 'gray';\n        bottomAxis.strokeWidth = 1;\n        var rectLineWidth = 1;\n        var alignment = Math.floor(rectLineWidth) % 2 / 2;\n        var bottom = yScale.convert(0);\n        _this.bars = data.map(function (series) {\n            return series.map(function (datum, i) {\n                var top = yScale.convert(datum);\n                var rect = new rect_1.Rect();\n                rect.strokeWidth = rectLineWidth;\n                rect.x = Math.floor(xScale.convert(i)) + alignment;\n                rect.y = Math.floor(top) + alignment;\n                var width = xScale.bandwidth;\n                var height = bottom - top;\n                rect.width = Math.floor(width) + Math.floor(rect.x % 1 + width % 1);\n                rect.height = Math.floor(height) + Math.floor(rect.y % 1 + height % 1);\n                return rect;\n            });\n        });\n        var root = _this.root;\n        root.append([].concat.apply([], _this.bars));\n        root.append(leftAxis);\n        root.append(bottomAxis);\n        _this.updateColors(fills, strokes);\n        return _this;\n    }\n    MiniNormalizedColumn.prototype.init = function () {\n        this.scene.canvas.element.title = this.chartTranslator.translate('normalizedColumnTooltip');\n    };\n    MiniNormalizedColumn.prototype.updateColors = function (fills, strokes) {\n        this.bars.forEach(function (series, i) {\n            series.forEach(function (bar) {\n                bar.fill = fills[i];\n                bar.stroke = strokes[i];\n            });\n        });\n    };\n    MiniNormalizedColumn.chartType = ag_grid_community_1.ChartType.NormalizedColumn;\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MiniNormalizedColumn.prototype, \"init\", null);\n    return MiniNormalizedColumn;\n}(MiniChart));\nvar MiniNormalizedBar = /** @class */ (function (_super) {\n    __extends(MiniNormalizedBar, _super);\n    function MiniNormalizedBar(parent, fills, strokes) {\n        var _this = _super.call(this) || this;\n        _this.scene.parent = parent;\n        var size = _this.size;\n        var padding = _this.padding;\n        var data = [\n            [10, 10, 10],\n            [6, 7, 8],\n            [2, 4, 6]\n        ];\n        var yScale = new bandScale_1.BandScale();\n        yScale.domain = [0, 1, 2];\n        yScale.range = [padding, size - padding];\n        yScale.paddingInner = 0.3;\n        yScale.paddingOuter = 0.3;\n        var xScale = linearScale_1.default();\n        xScale.domain = [0, 10];\n        xScale.range = [size - padding, padding];\n        var axisOvershoot = 3;\n        var leftAxis = line_1.Line.create(padding, padding, padding, size - padding + axisOvershoot);\n        leftAxis.stroke = 'gray';\n        leftAxis.strokeWidth = 1;\n        var bottomAxis = line_1.Line.create(padding - axisOvershoot, size - padding, size - padding, size - padding);\n        bottomAxis.stroke = 'gray';\n        bottomAxis.strokeWidth = 1;\n        var rectLineWidth = 1;\n        var alignment = Math.floor(rectLineWidth) % 2 / 2;\n        var bottom = xScale.convert(0);\n        _this.bars = data.map(function (series) {\n            return series.map(function (datum, i) {\n                var top = xScale.convert(datum);\n                var rect = new rect_1.Rect();\n                rect.strokeWidth = rectLineWidth;\n                rect.x = Math.floor(padding) + alignment;\n                rect.y = Math.floor(yScale.convert(i)) + alignment;\n                var width = yScale.bandwidth;\n                var height = bottom - top;\n                rect.width = Math.floor(height) + Math.floor(rect.y % 1 + height % 1);\n                rect.height = Math.floor(width) + Math.floor(rect.x % 1 + width % 1);\n                return rect;\n            });\n        });\n        var root = _this.root;\n        root.append([].concat.apply([], _this.bars));\n        root.append(leftAxis);\n        root.append(bottomAxis);\n        _this.updateColors(fills, strokes);\n        return _this;\n    }\n    MiniNormalizedBar.prototype.init = function () {\n        this.scene.canvas.element.title = this.chartTranslator.translate('normalizedBarTooltip');\n    };\n    MiniNormalizedBar.prototype.updateColors = function (fills, strokes) {\n        this.bars.forEach(function (series, i) {\n            series.forEach(function (bar) {\n                bar.fill = fills[i];\n                bar.stroke = strokes[i];\n            });\n        });\n    };\n    MiniNormalizedBar.chartType = ag_grid_community_1.ChartType.NormalizedBar;\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MiniNormalizedBar.prototype, \"init\", null);\n    return MiniNormalizedBar;\n}(MiniChart));\nvar MiniScatter = /** @class */ (function (_super) {\n    __extends(MiniScatter, _super);\n    function MiniScatter(parent, fills, strokes) {\n        var _this = _super.call(this) || this;\n        _this.scene.parent = parent;\n        var size = _this.size;\n        var padding = _this.padding;\n        // [x, y] pairs\n        var data = [\n            [[0.3, 3], [1.1, 0.9], [2, 0.4], [3.4, 2.4]],\n            [[0, 0.3], [1, 2], [2.4, 1.4], [3, 0]]\n        ];\n        var xScale = linearScale_1.default();\n        xScale.domain = [-0.5, 4];\n        xScale.range = [padding * 2, size - padding];\n        var yScale = linearScale_1.default();\n        yScale.domain = [-0.5, 3.5];\n        yScale.range = [size - padding, padding];\n        var axisOvershoot = 3;\n        var leftAxis = line_1.Line.create(padding, padding, padding, size - padding + axisOvershoot);\n        leftAxis.stroke = 'gray';\n        leftAxis.strokeWidth = 1;\n        var bottomAxis = line_1.Line.create(padding - axisOvershoot, size - padding, size - padding, size - padding);\n        bottomAxis.stroke = 'gray';\n        bottomAxis.strokeWidth = 1;\n        var points = [];\n        data.forEach(function (series, i) {\n            series.forEach(function (datum, j) {\n                var arc = new arc_1.Arc();\n                arc.strokeWidth = 1;\n                arc.centerX = xScale.convert(datum[0]);\n                arc.centerY = yScale.convert(datum[1]);\n                arc.radiusX = 2.5;\n                arc.radiusY = 2.5;\n                points.push(arc);\n            });\n        });\n        _this.points = points;\n        var clipRect = new clipRect_1.ClipRect();\n        clipRect.x = padding;\n        clipRect.y = padding;\n        clipRect.width = size - padding * 2;\n        clipRect.height = size - padding * 2;\n        clipRect.append(_this.points);\n        var root = _this.root;\n        root.append(clipRect);\n        root.append(leftAxis);\n        root.append(bottomAxis);\n        _this.updateColors(fills, strokes);\n        return _this;\n    }\n    MiniScatter.prototype.init = function () {\n        this.scene.canvas.element.title = this.chartTranslator.translate('scatterTooltip');\n    };\n    MiniScatter.prototype.updateColors = function (fills, strokes) {\n        this.points.forEach(function (line, i) {\n            line.stroke = strokes[i % strokes.length];\n            line.fill = fills[i % fills.length];\n        });\n    };\n    MiniScatter.chartType = ag_grid_community_1.ChartType.Scatter;\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MiniScatter.prototype, \"init\", null);\n    return MiniScatter;\n}(MiniChart));\nvar MiniBubble = /** @class */ (function (_super) {\n    __extends(MiniBubble, _super);\n    function MiniBubble(parent, fills, strokes) {\n        var _this = _super.call(this) || this;\n        _this.scene.parent = parent;\n        var size = _this.size;\n        var padding = _this.padding;\n        // [x, y, radius] triples\n        var data = [\n            [[0.1, 0.3, 5], [0.5, 0.4, 7], [0.2, 0.8, 7]], [[0.8, 0.7, 5], [0.7, 0.3, 9]]\n        ];\n        var xScale = linearScale_1.default();\n        xScale.domain = [0, 1];\n        xScale.range = [padding * 2, size - padding];\n        var yScale = linearScale_1.default();\n        yScale.domain = [0, 1];\n        yScale.range = [size - padding, padding];\n        var axisOvershoot = 3;\n        var leftAxis = line_1.Line.create(padding, padding, padding, size - padding + axisOvershoot);\n        leftAxis.stroke = 'gray';\n        leftAxis.strokeWidth = 1;\n        var bottomAxis = line_1.Line.create(padding - axisOvershoot, size - padding, size - padding, size - padding);\n        bottomAxis.stroke = 'gray';\n        bottomAxis.strokeWidth = 1;\n        var points = [];\n        data.forEach(function (series, i) {\n            series.forEach(function (datum, j) {\n                var arc = new arc_1.Arc();\n                arc.strokeWidth = 1;\n                arc.centerX = xScale.convert(datum[0]);\n                arc.centerY = yScale.convert(datum[1]);\n                arc.radiusX = datum[2];\n                arc.radiusY = datum[2];\n                arc.fillOpacity = 0.7;\n                points.push(arc);\n            });\n        });\n        _this.points = points;\n        var clipRect = new clipRect_1.ClipRect();\n        clipRect.x = padding;\n        clipRect.y = padding;\n        clipRect.width = size - padding * 2;\n        clipRect.height = size - padding * 2;\n        clipRect.append(_this.points);\n        var root = _this.root;\n        root.append(clipRect);\n        root.append(leftAxis);\n        root.append(bottomAxis);\n        _this.updateColors(fills, strokes);\n        return _this;\n    }\n    MiniBubble.prototype.init = function () {\n        this.scene.canvas.element.title = this.chartTranslator.translate('bubbleTooltip');\n    };\n    MiniBubble.prototype.updateColors = function (fills, strokes) {\n        this.points.forEach(function (line, i) {\n            line.stroke = strokes[i % strokes.length];\n            line.fill = fills[i % fills.length];\n        });\n    };\n    MiniBubble.chartType = ag_grid_community_1.ChartType.Bubble;\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MiniBubble.prototype, \"init\", null);\n    return MiniBubble;\n}(MiniChart));\nvar MiniArea = /** @class */ (function (_super) {\n    __extends(MiniArea, _super);\n    function MiniArea(parent, fills, strokes, data) {\n        if (data === void 0) { data = MiniArea.data; }\n        var _this = _super.call(this) || this;\n        _this.scene.parent = parent;\n        var size = _this.size;\n        var padding = _this.padding;\n        var xScale = new bandScale_1.BandScale();\n        xScale.paddingInner = 1;\n        xScale.paddingOuter = 0;\n        xScale.domain = [0, 1, 2];\n        xScale.range = [padding + 0.5, size - padding - 0.5];\n        var yScale = linearScale_1.default();\n        yScale.domain = [0, 6];\n        yScale.range = [size - padding + 0.5, padding];\n        var axisOvershoot = 3;\n        var leftAxis = line_1.Line.create(padding, padding, padding, size - padding + axisOvershoot);\n        leftAxis.stroke = 'gray';\n        leftAxis.strokeWidth = 1;\n        var bottomAxis = line_1.Line.create(padding - axisOvershoot, size - padding, size - padding, size - padding);\n        bottomAxis.stroke = 'gray';\n        bottomAxis.strokeWidth = 1;\n        var xCount = data.length;\n        var last = xCount * 2 - 1;\n        var pathData = [];\n        var bottomY = yScale.convert(0);\n        for (var i = 0; i < xCount; i++) {\n            var yDatum = data[i];\n            var yCount = yDatum.length;\n            var x = xScale.convert(i);\n            var curr = void 0;\n            for (var j = 0; j < yCount; j++) {\n                curr = yDatum[j];\n                var y = yScale.convert(curr);\n                var points = pathData[j] || (pathData[j] = []);\n                points[i] = {\n                    x: x,\n                    y: y\n                };\n                points[last - i] = {\n                    x: x,\n                    y: bottomY\n                };\n            }\n        }\n        _this.areas = pathData.reverse().map(function (points) {\n            var area = new path_1.Path();\n            area.strokeWidth = 1;\n            area.fillOpacity = 0.7;\n            var path = area.path;\n            path.clear();\n            points.forEach(function (point, i) {\n                if (!i) {\n                    path.moveTo(point.x, point.y);\n                }\n                else {\n                    path.lineTo(point.x, point.y);\n                }\n            });\n            path.closePath();\n            return area;\n        });\n        var root = _this.root;\n        root.append(_this.areas);\n        root.append(leftAxis);\n        root.append(bottomAxis);\n        _this.updateColors(fills, strokes);\n        return _this;\n    }\n    MiniArea.prototype.init = function () {\n        this.scene.canvas.element.title = this.chartTranslator.translate('groupedAreaTooltip');\n    };\n    MiniArea.prototype.updateColors = function (fills, strokes) {\n        this.areas.forEach(function (area, i) {\n            area.fill = fills[i];\n            area.stroke = strokes[i];\n        });\n    };\n    MiniArea.chartType = ag_grid_community_1.ChartType.Area;\n    MiniArea.data = [\n        [1, 3, 5],\n        [2, 6, 4],\n        [5, 3, 1]\n    ];\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MiniArea.prototype, \"init\", null);\n    return MiniArea;\n}(MiniChart));\nvar MiniStackedArea = /** @class */ (function (_super) {\n    __extends(MiniStackedArea, _super);\n    function MiniStackedArea(parent, fills, strokes, data) {\n        if (data === void 0) { data = MiniStackedArea.data; }\n        var _this = _super.call(this) || this;\n        _this.scene.parent = parent;\n        var size = _this.size;\n        var padding = _this.padding;\n        var xScale = new bandScale_1.BandScale();\n        xScale.paddingInner = 1;\n        xScale.paddingOuter = 0;\n        xScale.domain = [0, 1, 2];\n        xScale.range = [padding + 0.5, size - padding - 0.5];\n        var yScale = linearScale_1.default();\n        yScale.domain = [0, 16];\n        yScale.range = [size - padding + 0.5, padding + 0.5];\n        var axisOvershoot = 3;\n        var leftAxis = line_1.Line.create(padding, padding, padding, size - padding + axisOvershoot);\n        leftAxis.stroke = 'gray';\n        leftAxis.strokeWidth = 1;\n        var bottomAxis = line_1.Line.create(padding - axisOvershoot, size - padding, size - padding, size - padding);\n        bottomAxis.stroke = 'gray';\n        bottomAxis.strokeWidth = 1;\n        var xCount = data.length;\n        var last = xCount * 2 - 1;\n        var pathData = [];\n        for (var i = 0; i < xCount; i++) {\n            var yDatum = data[i];\n            var yCount = yDatum.length;\n            var x = xScale.convert(i);\n            var prev = 0;\n            var curr = void 0;\n            for (var j = 0; j < yCount; j++) {\n                curr = yDatum[j];\n                var y = yScale.convert(prev + curr);\n                var points = pathData[j] || (pathData[j] = []);\n                points[i] = {\n                    x: x,\n                    y: y\n                };\n                points[last - i] = {\n                    x: x,\n                    y: yScale.convert(prev) // bottom y\n                };\n                prev += curr;\n            }\n        }\n        _this.areas = pathData.map(function (points) {\n            var area = new path_1.Path();\n            area.strokeWidth = 1;\n            var path = area.path;\n            path.clear();\n            points.forEach(function (point, i) {\n                if (!i) {\n                    path.moveTo(point.x, point.y);\n                }\n                else {\n                    path.lineTo(point.x, point.y);\n                }\n            });\n            path.closePath();\n            return area;\n        });\n        var root = _this.root;\n        root.append(_this.areas);\n        root.append(leftAxis);\n        root.append(bottomAxis);\n        _this.updateColors(fills, strokes);\n        return _this;\n    }\n    MiniStackedArea.prototype.init = function () {\n        this.scene.canvas.element.title = this.chartTranslator.translate('stackedAreaTooltip');\n    };\n    MiniStackedArea.prototype.updateColors = function (fills, strokes) {\n        this.areas.forEach(function (area, i) {\n            area.fill = fills[i];\n            area.stroke = strokes[i];\n        });\n    };\n    MiniStackedArea.chartType = ag_grid_community_1.ChartType.StackedArea;\n    MiniStackedArea.data = [\n        [2, 3, 2],\n        [3, 6, 5],\n        [6, 2, 2]\n    ];\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MiniStackedArea.prototype, \"init\", null);\n    return MiniStackedArea;\n}(MiniChart));\nvar MiniNormalizedArea = /** @class */ (function (_super) {\n    __extends(MiniNormalizedArea, _super);\n    function MiniNormalizedArea(parent, fills, strokes, data) {\n        if (data === void 0) { data = MiniNormalizedArea.data; }\n        return _super.call(this, parent, fills, strokes, data) || this;\n    }\n    MiniNormalizedArea.prototype.init = function () {\n        this.scene.canvas.element.title = this.chartTranslator.translate('normalizedAreaTooltip');\n    };\n    MiniNormalizedArea.chartType = ag_grid_community_1.ChartType.NormalizedArea;\n    MiniNormalizedArea.data = MiniStackedArea.data.map(function (stack) {\n        var sum = stack.reduce(function (p, c) { return p + c; }, 0);\n        return stack.map(function (v) { return v / sum * 16; });\n    });\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MiniNormalizedArea.prototype, \"init\", null);\n    return MiniNormalizedArea;\n}(MiniStackedArea));\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar chartDataPanel_1 = require(\"./data/chartDataPanel\");\nvar chartFormatingPanel_1 = require(\"./format/chartFormatingPanel\");\nvar chartSettingsPanel_1 = require(\"./settings/chartSettingsPanel\");\nvar chartTranslator_1 = require(\"../chartTranslator\");\nvar TabbedChartMenu = /** @class */ (function (_super) {\n    __extends(TabbedChartMenu, _super);\n    function TabbedChartMenu(params) {\n        var _this = _super.call(this) || this;\n        _this.tabs = [];\n        _this.chartIcons = {};\n        var controller = params.controller, type = params.type, panels = params.panels;\n        _this.chartController = controller;\n        _this.currentChartType = type;\n        _this.panels = panels;\n        return _this;\n    }\n    TabbedChartMenu.prototype.init = function () {\n        var _this = this;\n        this.panels.forEach(function (panel) {\n            var panelType = panel.replace('chart', '').toLowerCase();\n            var _a = _this.createTab(panel, panelType, _this.getPanelClass(panelType)), comp = _a.comp, tab = _a.tab;\n            _this.tabs.push(tab);\n            _this.addDestroyFunc(function () { return comp.destroy(); });\n        });\n        this.tabbedLayout = new ag_grid_community_1.TabbedLayout({\n            items: this.tabs,\n            cssClass: 'ag-chart-tabbed-menu'\n        });\n    };\n    TabbedChartMenu.prototype.createTab = function (name, title, ChildClass) {\n        var eWrapperDiv = document.createElement('div');\n        ag_grid_community_1._.addCssClass(eWrapperDiv, \"ag-chart-\" + title);\n        var comp = new ChildClass(this.chartController);\n        this.getContext().wireBean(comp);\n        eWrapperDiv.appendChild(comp.getGui());\n        var titleEl = document.createElement('div');\n        titleEl.innerText = this.chartTranslator.translate(title);\n        return {\n            comp: comp,\n            tab: {\n                title: titleEl,\n                bodyPromise: ag_grid_community_1.Promise.resolve(eWrapperDiv),\n                name: name\n            }\n        };\n    };\n    TabbedChartMenu.prototype.getMinDimensions = function () {\n        return this.tabbedLayout.getMinDimensions();\n    };\n    TabbedChartMenu.prototype.updateCurrentChartType = function (chartType) {\n        ag_grid_community_1._.removeCssClass(this.chartIcons[this.currentChartType], 'ag-selected');\n        this.currentChartType = chartType;\n        ag_grid_community_1._.addCssClass(this.chartIcons[chartType], 'ag-selected');\n    };\n    TabbedChartMenu.prototype.showTab = function (tab) {\n        var tabItem = this.tabs[tab];\n        this.tabbedLayout.showItem(tabItem);\n    };\n    TabbedChartMenu.prototype.getGui = function () {\n        return this.tabbedLayout && this.tabbedLayout.getGui();\n    };\n    TabbedChartMenu.prototype.destroy = function () {\n        if (this.parentComponent && this.parentComponent.isAlive()) {\n            this.parentComponent.destroy();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    TabbedChartMenu.prototype.getPanelClass = function (panelType) {\n        var isDataPanel = panelType === TabbedChartMenu.TAB_DATA;\n        var isFormatPanel = panelType === TabbedChartMenu.TAB_FORMAT;\n        return isDataPanel ? chartDataPanel_1.ChartDataPanel : (isFormatPanel ? chartFormatingPanel_1.ChartFormattingPanel : chartSettingsPanel_1.ChartSettingsPanel);\n    };\n    TabbedChartMenu.EVENT_TAB_SELECTED = 'tabSelected';\n    TabbedChartMenu.TAB_MAIN = 'settings';\n    TabbedChartMenu.TAB_DATA = 'data';\n    TabbedChartMenu.TAB_FORMAT = 'format';\n    __decorate([\n        ag_grid_community_1.Autowired('chartTranslator'),\n        __metadata(\"design:type\", chartTranslator_1.ChartTranslator)\n    ], TabbedChartMenu.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], TabbedChartMenu.prototype, \"init\", null);\n    return TabbedChartMenu;\n}(ag_grid_community_1.Component));\nexports.TabbedChartMenu = TabbedChartMenu;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar rangeController_1 = require(\"../rangeController\");\nvar gridChartComp_1 = require(\"./chartComp/gridChartComp\");\nvar ChartService = /** @class */ (function () {\n    function ChartService() {\n        // we destroy all charts bound to this grid when grid is destroyed. activeCharts contains all charts, including\n        // those in developer provided containers.\n        this.activeCharts = [];\n    }\n    ChartService.prototype.chartCurrentRange = function (chartType) {\n        if (chartType === void 0) { chartType = ag_grid_community_1.ChartType.GroupedColumn; }\n        var selectedRange = this.getSelectedRange();\n        return this.chartRange(selectedRange, chartType);\n    };\n    ChartService.prototype.chartCellRange = function (params) {\n        var cellRange = this.rangeController.createCellRangeFromCellRangeParams(params.cellRange);\n        if (!cellRange) {\n            console.warn(\"ag-Grid - unable to chart as no range is selected\");\n            return;\n        }\n        if (cellRange) {\n            var pivotChart = false;\n            return this.chartRange(cellRange, params.chartType, pivotChart, params.suppressChartRanges, params.chartContainer, params.aggFunc, params.processChartOptions);\n        }\n    };\n    ChartService.prototype.pivotChart = function (chartType) {\n        if (chartType === void 0) { chartType = ag_grid_community_1.ChartType.GroupedColumn; }\n        // if required enter pivot mode\n        if (!this.columnController.isPivotMode()) {\n            this.columnController.setPivotMode(true, \"pivotChart\");\n        }\n        // pivot chart range contains all visible column without a row range to include all rows\n        var chartAllRangeParams = {\n            columns: this.columnController.getAllDisplayedColumns().map(function (col) { return col.getColId(); })\n        };\n        var cellRange = this.rangeController.createCellRangeFromCellRangeParams(chartAllRangeParams);\n        if (!cellRange) {\n            console.warn(\"ag-Grid - unable to chart as there are no columns in the grid.\");\n            return;\n        }\n        var pivotChart = true, suppressChartRanges = true;\n        return this.chartRange(cellRange, chartType, pivotChart, suppressChartRanges);\n    };\n    ChartService.prototype.chartRange = function (cellRange, chartType, pivotChart, suppressChartRanges, container, aggFunc, processChartOptions) {\n        var _this = this;\n        if (pivotChart === void 0) { pivotChart = false; }\n        if (suppressChartRanges === void 0) { suppressChartRanges = false; }\n        var createChartContainerFunc = this.gridOptionsWrapper.getCreateChartContainerFunc();\n        var params = {\n            pivotChart: pivotChart,\n            cellRange: cellRange,\n            chartType: chartType,\n            insideDialog: !(container || createChartContainerFunc),\n            suppressChartRanges: suppressChartRanges,\n            aggFunc: aggFunc,\n            processChartOptions: processChartOptions,\n            height: 400,\n            width: 800 //TODO\n        };\n        var chartComp = new gridChartComp_1.GridChartComp(params);\n        this.context.wireBean(chartComp);\n        var chartRef = this.createChartRef(chartComp);\n        if (container) {\n            // if container exists, means developer initiated chart create via API, so place in provided container\n            container.appendChild(chartComp.getGui());\n            // if the chart container was placed outside of an element that\n            // has the grid's theme, we manually add the current theme to\n            // make sure all styles for the chartMenu are rendered correctly\n            var theme = this.environment.getTheme();\n            if (theme.el && !theme.el.contains(container)) {\n                ag_grid_community_1._.addCssClass(container, theme.theme);\n            }\n        }\n        else if (createChartContainerFunc) {\n            // otherwise user created chart via grid UI, check if developer provides containers (eg if the application\n            // is using it's own dialog's rather than the grid provided dialogs)\n            createChartContainerFunc(chartRef);\n        }\n        else {\n            // add listener to remove from active charts list when charts are destroyed, e.g. closing chart dialog\n            chartComp.addEventListener(gridChartComp_1.GridChartComp.EVENT_DESTROYED, function () {\n                ag_grid_community_1._.removeFromArray(_this.activeCharts, chartRef);\n            });\n        }\n        return chartRef;\n    };\n    ChartService.prototype.createChartRef = function (chartComp) {\n        var _this = this;\n        var chartRef = {\n            destroyChart: function () {\n                if (_this.activeCharts.indexOf(chartRef) >= 0) {\n                    chartComp.destroy();\n                    ag_grid_community_1._.removeFromArray(_this.activeCharts, chartRef);\n                }\n            },\n            chartElement: chartComp.getGui()\n        };\n        this.activeCharts.push(chartRef);\n        return chartRef;\n    };\n    ChartService.prototype.getSelectedRange = function () {\n        var ranges = this.rangeController.getCellRanges();\n        return ranges.length > 0 ? ranges[0] : {};\n    };\n    ChartService.prototype.destroyAllActiveCharts = function () {\n        // we take copy as the forEach is removing from the array as we process\n        var activeCharts = this.activeCharts.slice();\n        activeCharts.forEach(function (chart) { return chart.destroyChart(); });\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('rangeController'),\n        __metadata(\"design:type\", rangeController_1.RangeController)\n    ], ChartService.prototype, \"rangeController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], ChartService.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('environment'),\n        __metadata(\"design:type\", ag_grid_community_1.Environment)\n    ], ChartService.prototype, \"environment\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('context'),\n        __metadata(\"design:type\", ag_grid_community_1.Context)\n    ], ChartService.prototype, \"context\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], ChartService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.PreDestroy,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ChartService.prototype, \"destroyAllActiveCharts\", null);\n    ChartService = __decorate([\n        ag_grid_community_1.Bean('chartService')\n    ], ChartService);\n    return ChartService;\n}());\nexports.ChartService = ChartService;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar group_1 = require(\"./scene/group\");\nvar selection_1 = require(\"./scene/selection\");\nvar line_1 = require(\"./scene/shape/line\");\nvar ticks_1 = require(\"./util/ticks\");\nvar angle_1 = require(\"./util/angle\");\nvar text_1 = require(\"./scene/shape/text\");\nvar arc_1 = require(\"./scene/shape/arc\");\nvar bbox_1 = require(\"./scene/bbox\");\nvar matrix_1 = require(\"./scene/matrix\");\n// import { Rect } from \"./scene/shape/rect\"; // debug (bbox)\nvar Tags;\n(function (Tags) {\n    Tags[Tags[\"Tick\"] = 0] = \"Tick\";\n    Tags[Tags[\"GridLine\"] = 1] = \"GridLine\";\n})(Tags || (Tags = {}));\n/**\n * A general purpose linear axis with no notion of orientation.\n * The axis is always rendered vertically, with horizontal labels positioned to the left\n * of the axis line by default. The axis can be {@link rotation | rotated} by an arbitrary angle,\n * so that it can be used as a top, right, bottom, left, radial or any other kind\n * of linear axis.\n * The generic `D` parameter is the type of the domain of the axis' scale.\n * The output range of the axis' scale is always numeric (screen coordinates).\n */\nvar Axis = /** @class */ (function () {\n    // onLayoutChange?: () => void;\n    function Axis(scale) {\n        this.group = new group_1.Group();\n        this.line = new line_1.Line();\n        /**\n         * The horizontal translation of the axis group.\n         */\n        this.translationX = 0;\n        /**\n         * The vertical translation of the axis group.\n         */\n        this.translationY = 0;\n        /**\n         * Axis rotation angle in degrees.\n         */\n        this.rotation = 0;\n        /**\n         * The line width to be used by the axis line.\n         */\n        this.lineWidth = 1;\n        /**\n         * The color of the axis line.\n         * Use `null` rather than `rgba(0, 0, 0, 0)` to make the axis line invisible.\n         */\n        this.lineColor = 'rgba(195, 195, 195, 1)';\n        /**\n         * The line width to be used by axis ticks.\n         */\n        this.tickWidth = 1;\n        /**\n         * The line length to be used by axis ticks.\n         */\n        this.tickSize = 6;\n        /**\n         * The padding between the ticks and the labels.\n         */\n        this.tickPadding = 5;\n        /**\n         * The color of the axis ticks.\n         * Use `null` rather than `rgba(0, 0, 0, 0)` to make the ticks invisible.\n         */\n        this.tickColor = 'rgba(195, 195, 195, 1)';\n        this.labelFontStyle = '';\n        this.labelFontWeight = '';\n        this.labelFontSize = 12;\n        this.labelFontFamily = 'Verdana, sans-serif';\n        this._title = undefined;\n        /**\n         * The color of the labels.\n         * Use `null` rather than `rgba(0, 0, 0, 0)` to make labels invisible.\n         */\n        this.labelColor = 'rgba(87, 87, 87, 1)';\n        /**\n         * The length of the grid. The grid is only visible in case of a non-zero value.\n         * In case {@link radialGrid} is `true`, the value is interpreted as an angle\n         * (in degrees).\n         */\n        this._gridLength = 0;\n        /**\n         * The array of styles to cycle through when rendering grid lines.\n         * For example, use two {@link GridStyle} objects for alternating styles.\n         * Contains only one {@link GridStyle} object by default, meaning all grid lines\n         * have the same style.\n         */\n        this._gridStyle = [{\n                stroke: 'rgba(219, 219, 219, 1)',\n                lineDash: [4, 2]\n            }];\n        /**\n         * `false` - render grid as lines of {@link gridLength} that extend the ticks\n         *           on the opposite side of the axis\n         * `true` - render grid as concentric circles that go through the ticks\n         */\n        this._radialGrid = false;\n        /**\n         * Custom label rotation in degrees.\n         * Labels are rendered perpendicular to the axis line by default.\n         * Or parallel to the axis line, if the {@link parallelLabels} is set to `true`.\n         * The value of this config is used as the angular offset/deflection\n         * from the default rotation.\n         */\n        this.labelRotation = 0;\n        /**\n         * By default labels and ticks are positioned to the left of the axis line.\n         * `true` positions the labels to the right of the axis line.\n         * However, if the axis is rotated, its easier to think in terms\n         * of this side or the opposite side, rather than left and right.\n         * We use the term `mirror` for conciseness, although it's not\n         * true mirroring - for example, when a label is rotated, so that\n         * it is inclined at the 45 degree angle, text flowing from north-west\n         * to south-east, ending at the tick to the left of the axis line,\n         * and then we set this config to `true`, the text will still be flowing\n         * from north-west to south-east, _starting_ at the tick to the right\n         * of the axis line.\n         */\n        this.mirrorLabels = false;\n        /**\n         * Labels are rendered perpendicular to the axis line by default.\n         * Setting this config to `true` makes labels render parallel to the axis line\n         * and center aligns labels' text at the ticks.\n         */\n        this.parallelLabels = false;\n        this.scale = scale;\n        this.groupSelection = selection_1.Selection.select(this.group).selectAll();\n        this.group.append(this.line);\n        // this.group.append(this.bboxRect); // debug (bbox)\n    }\n    Object.defineProperty(Axis.prototype, \"range\", {\n        get: function () {\n            return this.scale.range;\n        },\n        set: function (value) {\n            this.scale.range = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Axis.prototype, \"domain\", {\n        get: function () {\n            return this.scale.domain;\n        },\n        set: function (value) {\n            this.scale.domain = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Axis.prototype, \"title\", {\n        get: function () {\n            return this._title;\n        },\n        set: function (value) {\n            var oldTitle = this._title;\n            if (oldTitle !== value) {\n                if (oldTitle) {\n                    // oldTitle.onLayoutChange = undefined;\n                    this.group.removeChild(oldTitle.node);\n                }\n                if (value) {\n                    value.node.rotation = -Math.PI / 2;\n                    // value.onLayoutChange = this.onLayoutChange;\n                    this.group.appendChild(value.node);\n                }\n                this._title = value;\n                // this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Axis.prototype, \"gridLength\", {\n        get: function () {\n            return this._gridLength;\n        },\n        set: function (value) {\n            // Was visible and now invisible, or was invisible and now visible.\n            if (this._gridLength && !value || !this._gridLength && value) {\n                this.groupSelection = this.groupSelection.remove().setData([]);\n            }\n            this._gridLength = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Axis.prototype, \"gridStyle\", {\n        get: function () {\n            return this._gridStyle;\n        },\n        set: function (value) {\n            if (value.length) {\n                this._gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Axis.prototype, \"radialGrid\", {\n        get: function () {\n            return this._radialGrid;\n        },\n        set: function (value) {\n            if (this._radialGrid !== value) {\n                this._radialGrid = value;\n                this.groupSelection = this.groupSelection.remove().setData([]);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates/removes/updates the scene graph nodes that constitute the axis.\n     * Supposed to be called _manually_ after changing _any_ of the axis properties.\n     * This allows to bulk set axis properties before updating the nodes.\n     * The node changes made by this method are rendered on the next animation frame.\n     * We could schedule this method call automatically on the next animation frame\n     * when any of the axis properties change (the way we do when properties of scene graph's\n     * nodes change), but this will mean that we first wait for the next animation\n     * frame to make changes to the nodes of the axis, then wait for another animation\n     * frame to render those changes. It's nice to have everything update automatically,\n     * but this extra level of async indirection will not just introduce an unwanted delay,\n     * it will also make it harder to reason about the program.\n     */\n    Axis.prototype.update = function () {\n        var _this = this;\n        var group = this.group;\n        var scale = this.scale;\n        var rotation = angle_1.toRadians(this.rotation);\n        var labelRotation = angle_1.normalizeAngle360(angle_1.toRadians(this.labelRotation));\n        group.translationX = this.translationX;\n        group.translationY = this.translationY;\n        group.rotation = rotation;\n        // Render ticks and labels.\n        var ticks = scale.ticks(10);\n        var fractionDigits = 0;\n        if (ticks instanceof ticks_1.NumericTicks) {\n            fractionDigits = ticks.fractionDigits;\n        }\n        var bandwidth = (scale.bandwidth || 0) / 2;\n        // The side of the axis line to position the labels on.\n        // -1 = left (default)\n        //  1 = right\n        var sideFlag = this.mirrorLabels ? 1 : -1;\n        // When labels are parallel to the axis line, the `parallelFlipFlag` is used to\n        // flip the labels to avoid upside-down text, when the axis is rotated\n        // such that it is in the right hemisphere, i.e. the angle of rotation\n        // is in the [0, π] interval.\n        // The rotation angle is normalized, so that we have an easier time checking\n        // if it's in the said interval. Since the axis is always rendered vertically\n        // and then rotated, zero rotation means 12 (not 3) o-clock.\n        // -1 = flip\n        //  1 = don't flip (default)\n        var parallelFlipRotation = angle_1.normalizeAngle360(rotation);\n        var parallelFlipFlag = (!labelRotation && parallelFlipRotation >= 0 && parallelFlipRotation <= Math.PI) ? -1 : 1;\n        var regularFlipRotation = angle_1.normalizeAngle360(rotation - Math.PI / 2);\n        // Flip if the axis rotation angle is in the top hemisphere.\n        var regularFlipFlag = (!labelRotation && regularFlipRotation >= 0 && regularFlipRotation <= Math.PI) ? -1 : 1;\n        var alignFlag = (labelRotation >= 0 && labelRotation <= Math.PI) ? -1 : 1;\n        var parallelLabels = this.parallelLabels;\n        var update = this.groupSelection.setData(ticks);\n        update.exit.remove();\n        var enter = update.enter.append(group_1.Group);\n        // Line auto-snaps to pixel grid if vertical or horizontal.\n        enter.append(line_1.Line).each(function (node) { return node.tag = Tags.Tick; });\n        if (this.gridLength) {\n            if (this.radialGrid) {\n                enter.append(arc_1.Arc).each(function (node) { return node.tag = Tags.GridLine; });\n            }\n            else {\n                enter.append(line_1.Line).each(function (node) { return node.tag = Tags.GridLine; });\n            }\n        }\n        enter.append(text_1.Text);\n        var groupSelection = update.merge(enter);\n        groupSelection\n            .attrFn('translationY', function (_, datum) {\n            return Math.round(scale.convert(datum) + bandwidth);\n        });\n        groupSelection.selectByTag(Tags.Tick)\n            .each(function (line) {\n            line.strokeWidth = _this.tickWidth;\n            line.stroke = _this.tickColor;\n        })\n            .attr('x1', sideFlag * this.tickSize)\n            .attr('x2', 0)\n            .attr('y1', 0)\n            .attr('y2', 0);\n        if (this.gridLength) {\n            var styles_1 = this.gridStyle;\n            var styleCount_1 = styles_1.length;\n            var gridLines = void 0;\n            if (this.radialGrid) {\n                var angularGridLength_1 = angle_1.normalizeAngle360Inclusive(angle_1.toRadians(this.gridLength));\n                gridLines = groupSelection.selectByTag(Tags.GridLine)\n                    .each(function (arc, datum) {\n                    var radius = Math.round(scale.convert(datum) + bandwidth);\n                    arc.centerX = 0;\n                    arc.centerY = _this.scale.range[0] - radius;\n                    arc.endAngle = angularGridLength_1;\n                    arc.radiusX = radius;\n                    arc.radiusY = radius;\n                });\n            }\n            else {\n                gridLines = groupSelection.selectByTag(Tags.GridLine)\n                    .each(function (line) {\n                    line.x1 = 0;\n                    line.x2 = -sideFlag * _this.gridLength;\n                    line.y1 = 0;\n                    line.y2 = 0;\n                    line.visible = Math.abs(line.parent.translationY - scale.range[0]) > 1;\n                });\n            }\n            gridLines.each(function (gridLine, datum, index) {\n                var style = styles_1[index % styleCount_1];\n                gridLine.stroke = style.stroke;\n                gridLine.strokeWidth = _this.tickWidth;\n                gridLine.lineDash = style.lineDash;\n                gridLine.fill = undefined;\n            });\n        }\n        var labelFormatter = this.labelFormatter;\n        var labels = groupSelection.selectByClass(text_1.Text)\n            .each(function (label, datum, index) {\n            label.fontStyle = _this.labelFontStyle;\n            label.fontWeight = _this.labelFontWeight;\n            label.fontSize = _this.labelFontSize;\n            label.fontFamily = _this.labelFontFamily;\n            label.fill = _this.labelColor;\n            label.textBaseline = parallelLabels && !labelRotation\n                ? (sideFlag * parallelFlipFlag === -1 ? 'hanging' : 'bottom')\n                : 'middle';\n            label.text = labelFormatter\n                ? labelFormatter({\n                    value: fractionDigits >= 0 ? datum : String(datum),\n                    index: index,\n                    fractionDigits: fractionDigits\n                })\n                : fractionDigits\n                    // the `datum` is a floating point number\n                    ? datum.toFixed(fractionDigits)\n                    // the `datum` is an integer, a string or an object\n                    : String(datum);\n            label.textAlign = parallelLabels\n                ? labelRotation ? (sideFlag * alignFlag === -1 ? 'end' : 'start') : 'center'\n                : sideFlag * regularFlipFlag === -1 ? 'end' : 'start';\n        });\n        var labelX = sideFlag * (this.tickSize + this.tickPadding);\n        var autoRotation = parallelLabels\n            ? parallelFlipFlag * Math.PI / 2\n            : (regularFlipFlag === -1 ? Math.PI : 0);\n        labels.each(function (label) {\n            label.x = labelX;\n            label.rotationCenterX = labelX;\n            label.rotation = autoRotation + labelRotation;\n        });\n        this.groupSelection = groupSelection;\n        // Render axis line.\n        var line = this.line;\n        line.x1 = 0;\n        line.x2 = 0;\n        line.y1 = scale.range[0];\n        line.y2 = scale.range[scale.range.length - 1];\n        line.strokeWidth = this.lineWidth;\n        line.stroke = this.lineColor;\n        line.visible = ticks.length > 0;\n        var title = this.title;\n        if (title) {\n            var padding = title.padding.bottom;\n            var node = title.node;\n            var bbox = this.getBBox(false);\n            var titleRotationFlag = sideFlag === -1 && parallelFlipRotation > Math.PI && parallelFlipRotation < Math.PI * 2 ? -1 : 1;\n            node.rotation = titleRotationFlag * sideFlag * Math.PI / 2;\n            node.x = titleRotationFlag * sideFlag * (line.y1 + line.y2) / 2;\n            if (sideFlag === -1) {\n                node.y = titleRotationFlag * (-padding - bbox.width + Math.max(bbox.x + bbox.width, 0));\n            }\n            else {\n                node.y = -padding - bbox.width - Math.min(bbox.x, 0);\n            }\n            // title.text = `Axis Title: ${sideFlag} ${toDegrees(parallelFlipRotation).toFixed(0)} ${titleRotationFlag}`;\n            node.textBaseline = titleRotationFlag === 1 ? 'bottom' : 'top';\n        }\n        // debug (bbox)\n        // const bbox = this.getBBox();\n        // const bboxRect = this.bboxRect;\n        // bboxRect.x = bbox.x;\n        // bboxRect.y = bbox.y;\n        // bboxRect.width = bbox.width;\n        // bboxRect.height = bbox.height;\n    };\n    Axis.prototype.getBBox = function (includeTitle) {\n        if (includeTitle === void 0) { includeTitle = true; }\n        var line = this.line;\n        var labels = this.groupSelection.selectByClass(text_1.Text);\n        var left = Infinity;\n        var right = -Infinity;\n        var top = Infinity;\n        var bottom = -Infinity;\n        labels.each(function (label) {\n            // The label itself is rotated, but not translated, the group that\n            // contains it is. So to capture the group transform in the label bbox\n            // calculation we combine the transform matrices of the label and the group.\n            // Depending on the timing of the `axis.getBBox()` method call, we may\n            // not have the group's and the label's transform matrices updated yet (because\n            // the transform matrix is not recalculated whenever a node's transform attributes\n            // change, instead it's marked for recalculation on the next frame by setting\n            // the node's `dirtyTransform` flag to `true`), so we force them to update\n            // right here by calling `computeTransformMatrix`.\n            label.computeTransformMatrix();\n            var matrix = matrix_1.Matrix.flyweight(label.matrix);\n            var group = label.parent;\n            group.computeTransformMatrix();\n            matrix.preMultiplySelf(group.matrix);\n            var labelBBox = label.getBBox();\n            if (labelBBox) {\n                var bbox = matrix.transformBBox(labelBBox);\n                left = Math.min(left, bbox.x);\n                right = Math.max(right, bbox.x + bbox.width);\n                top = Math.min(top, bbox.y);\n                bottom = Math.max(bottom, bbox.y + bbox.height);\n            }\n        });\n        if (includeTitle && this.title) {\n            var label = this.title.node;\n            label.computeTransformMatrix();\n            var matrix = matrix_1.Matrix.flyweight(label.matrix);\n            var labelBBox = label.getBBox();\n            if (labelBBox) {\n                var bbox = matrix.transformBBox(labelBBox);\n                left = Math.min(left, bbox.x);\n                right = Math.max(right, bbox.x + bbox.width);\n                top = Math.min(top, bbox.y);\n                bottom = Math.max(bottom, bbox.y + bbox.height);\n            }\n        }\n        left = Math.min(left, 0);\n        right = Math.max(right, 0);\n        top = Math.min(top, line.y1, line.y2);\n        bottom = Math.max(bottom, line.y1, line.y2);\n        return new bbox_1.BBox(left, top, right - left, bottom - top);\n    };\n    return Axis;\n}());\nexports.Axis = Axis;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Wraps the native Canvas element and overrides its CanvasRenderingContext2D to\n * provide resolution independent rendering based on `window.devicePixelRatio`.\n */\nvar HdpiCanvas = /** @class */ (function () {\n    // The width/height attributes of the Canvas element default to\n    // 300/150 according to w3.org.\n    function HdpiCanvas(options) {\n        if (options === void 0) { options = {}; }\n        this._parent = undefined;\n        // `NaN` is deliberate here, so that overrides are always applied\n        // and the `resetTransform` inside the `resize` method works in IE11.\n        this._pixelRatio = NaN;\n        this.document = options.document || window.document;\n        this.tempCanvas = this.document.createElement('canvas');\n        this.element = this.document.createElement('canvas');\n        this.element.style.userSelect = 'none';\n        this.context = this.element.getContext('2d');\n        this.updatePixelRatio(0, false);\n        this.resize(this._width = options.width || 300, this._height = options.height || 150);\n    }\n    Object.defineProperty(HdpiCanvas.prototype, \"parent\", {\n        get: function () {\n            return this._parent;\n        },\n        set: function (value) {\n            if (this._parent !== value) {\n                this.remove();\n                if (value) {\n                    value.appendChild(this.element);\n                }\n                this._parent = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HdpiCanvas.prototype.remove = function () {\n        var parent = this.element.parentNode;\n        if (parent !== null) {\n            parent.removeChild(this.element);\n        }\n    };\n    HdpiCanvas.prototype.destroy = function () {\n        this.element.remove();\n        this._canvas = undefined;\n        Object.freeze(this);\n    };\n    HdpiCanvas.prototype.toImage = function () {\n        var img = this.document.createElement('img');\n        img.src = this.element.toDataURL();\n        return img;\n    };\n    /**\n     * @param options.fileName The `.png` extension is going to be added automatically.\n     * @param [options.background] Defaults to `white`.\n     */\n    HdpiCanvas.prototype.download = function (fileName) {\n        fileName = ((fileName || '').trim() || 'image') + '.png';\n        // Chart images saved as JPEG are a few times larger at 50% quality than PNG images,\n        // so we don't support saving to JPEG.\n        var type = 'image/png';\n        var dataUrl = this.element.toDataURL(type);\n        var document = this.document;\n        if (navigator.msSaveOrOpenBlob) { // IE11\n            var binary = atob(dataUrl.split(',')[1]); // strip the `data:image/png;base64,` part\n            var array = [];\n            for (var i = 0, n = binary.length; i < n; i++) {\n                array.push(binary.charCodeAt(i));\n            }\n            var blob = new Blob([new Uint8Array(array)], { type: type });\n            navigator.msSaveOrOpenBlob(blob, fileName);\n        }\n        else {\n            var a = document.createElement('a');\n            a.href = dataUrl;\n            a.download = fileName;\n            a.style.display = 'none';\n            document.body.appendChild(a); // required for the `click` to work in Firefox\n            a.click();\n            document.body.removeChild(a);\n        }\n    };\n    Object.defineProperty(HdpiCanvas.prototype, \"pixelRatio\", {\n        get: function () {\n            return this._pixelRatio;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates the pixel ratio of the Canvas element with the given value,\n     * or uses the window.devicePixelRatio (default), then resizes the Canvas\n     * element accordingly (default).\n     * @param ratio\n     * @param resize\n     */\n    HdpiCanvas.prototype.updatePixelRatio = function (ratio, resize) {\n        if (ratio === void 0) { ratio = 0; }\n        if (resize === void 0) { resize = true; }\n        var pixelRatio = ratio || window.devicePixelRatio;\n        if (pixelRatio === this.pixelRatio) {\n            return;\n        }\n        var canvas = this.element;\n        var ctx = this.context;\n        var overrides = this.overrides = HdpiCanvas.makeHdpiOverrides(pixelRatio);\n        for (var name_1 in overrides) {\n            if (overrides.hasOwnProperty(name_1)) {\n                // Save native methods under prefixed names,\n                // if this hasn't been done by the previous overrides already.\n                if (!ctx['$' + name_1]) {\n                    ctx['$' + name_1] = ctx[name_1];\n                }\n                // Replace native methods with overrides,\n                // or previous overrides with the new ones.\n                ctx[name_1] = overrides[name_1];\n            }\n        }\n        if (resize) {\n            var logicalWidth = canvas.width / this.pixelRatio;\n            var logicalHeight = canvas.height / this.pixelRatio;\n            canvas.width = Math.round(logicalWidth * pixelRatio);\n            canvas.height = Math.round(logicalHeight * pixelRatio);\n            canvas.style.width = Math.round(logicalWidth) + 'px';\n            canvas.style.height = Math.round(logicalHeight) + 'px';\n            ctx.resetTransform(); // should be called every time Canvas size changes\n        }\n        this._pixelRatio = pixelRatio;\n    };\n    Object.defineProperty(HdpiCanvas.prototype, \"width\", {\n        get: function () {\n            return this._width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HdpiCanvas.prototype, \"height\", {\n        get: function () {\n            return this._height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HdpiCanvas.prototype.resize = function (width, height) {\n        var canvas = this.element;\n        var context = this.context;\n        var tempCanvas = this.tempCanvas;\n        this._width = width;\n        this._height = height;\n        tempCanvas.width = canvas.width;\n        tempCanvas.height = canvas.height;\n        var tempContext = tempCanvas.getContext('2d');\n        tempContext.drawImage(context.canvas, 0, 0);\n        canvas.width = Math.round(width * this.pixelRatio);\n        canvas.height = Math.round(height * this.pixelRatio);\n        canvas.style.width = Math.round(width) + 'px';\n        canvas.style.height = Math.round(height) + 'px';\n        context.drawImage(tempContext.canvas, 0, 0);\n        context.resetTransform();\n    };\n    Object.defineProperty(HdpiCanvas.prototype, \"textMeasuringContext\", {\n        get: function () {\n            if (this._textMeasuringContext) {\n                return this._textMeasuringContext;\n            }\n            var canvas = document.createElement('canvas');\n            return this._textMeasuringContext = canvas.getContext('2d');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HdpiCanvas.prototype, \"svgText\", {\n        get: function () {\n            if (this._svgText) {\n                return this._svgText;\n            }\n            var xmlns = 'http://www.w3.org/2000/svg';\n            var svg = document.createElementNS(xmlns, 'svg');\n            svg.setAttribute('width', '100');\n            svg.setAttribute('height', '100');\n            // Add a descriptive class name in case someone sees this SVG element\n            // in devtools and wonders about its purpose:\n            if (svg.classList) {\n                svg.classList.add('text-measuring-svg');\n            }\n            else {\n                svg.setAttribute('class', 'text-measuring-svg');\n            }\n            svg.style.position = 'absolute';\n            svg.style.top = '-1000px';\n            svg.style.visibility = 'hidden';\n            var svgText = document.createElementNS(xmlns, 'text');\n            svgText.setAttribute('x', '0');\n            svgText.setAttribute('y', '30');\n            svgText.setAttribute('text', 'black');\n            svg.appendChild(svgText);\n            document.body.appendChild(svg);\n            this._svgText = svgText;\n            return svgText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HdpiCanvas.prototype, \"has\", {\n        get: function () {\n            if (this._has) {\n                return this._has;\n            }\n            return this._has = Object.freeze({\n                textMetrics: this.textMeasuringContext.measureText('test')\n                    .actualBoundingBoxDescent !== undefined,\n                getTransform: this.textMeasuringContext.getTransform !== undefined,\n                flicker: !!window.safari\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HdpiCanvas.prototype.measureText = function (text, font, textBaseline, textAlign) {\n        var ctx = this.textMeasuringContext;\n        ctx.font = font;\n        ctx.textBaseline = textBaseline;\n        ctx.textAlign = textAlign;\n        return ctx.measureText(text);\n    };\n    /**\n     * Returns the width and height of the measured text.\n     * @param text The single-line text to measure.\n     * @param font The font shorthand string.\n     */\n    HdpiCanvas.prototype.getTextSize = function (text, font) {\n        if (this.has.textMetrics) {\n            var ctx = this.textMeasuringContext;\n            ctx.font = font;\n            var metrics = ctx.measureText(text);\n            return {\n                width: metrics.width,\n                height: metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent\n            };\n        }\n        else {\n            return this.measureSvgText(text, font);\n        }\n    };\n    HdpiCanvas.prototype.measureSvgText = function (text, font) {\n        var cache = HdpiCanvas.textSizeCache;\n        var fontCache = cache[font];\n        // Note: consider not caching the size of numeric strings.\n        // For example: if (isNaN(+text)) { // skip\n        if (fontCache) {\n            var size_1 = fontCache[text];\n            if (size_1) {\n                return size_1;\n            }\n        }\n        else {\n            cache[font] = {};\n        }\n        var svgText = this.svgText;\n        svgText.style.font = font;\n        svgText.textContent = text;\n        // `getBBox` returns an instance of `SVGRect` with the same `width` and `height`\n        // measurements as `DOMRect` instance returned by the `getBoundingClientRect`.\n        // But the `SVGRect` instance has half the properties of the `DOMRect`,\n        // so we use the `getBBox` method.\n        var bbox = svgText.getBBox();\n        var size = {\n            width: bbox.width,\n            height: bbox.height\n        };\n        cache[font][text] = size;\n        return size;\n    };\n    HdpiCanvas.makeHdpiOverrides = function (pixelRatio) {\n        var depth = 0;\n        return {\n            save: function () {\n                this.$save();\n                depth++;\n            },\n            restore: function () {\n                if (depth > 0) {\n                    this.$restore();\n                    depth--;\n                }\n            },\n            setTransform: function (a, b, c, d, e, f) {\n                this.$setTransform(a * pixelRatio, b * pixelRatio, c * pixelRatio, d * pixelRatio, e * pixelRatio, f * pixelRatio);\n            },\n            resetTransform: function () {\n                // As of Jan 8, 2019, `resetTransform` is still an \"experimental technology\",\n                // and doesn't work in IE11 and Edge 44.\n                this.$setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n                this.save();\n                depth = 0;\n                // The scale above will be impossible to restore,\n                // because we override the `ctx.restore` above and\n                // check `depth` there.\n            }\n        };\n    };\n    HdpiCanvas.textSizeCache = {};\n    return HdpiCanvas;\n}());\nexports.HdpiCanvas = HdpiCanvas;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar padding_1 = require(\"./util/padding\");\nvar text_1 = require(\"./scene/shape/text\");\nvar node_1 = require(\"./scene/node\");\nvar Caption = /** @class */ (function () {\n    function Caption() {\n        this.node = new text_1.Text();\n        this._enabled = true;\n        this._padding = new padding_1.Padding(10);\n        var node = this.node;\n        node.textAlign = 'center';\n        node.textBaseline = 'top';\n        node.pointerEvents = node_1.PointerEvents.None;\n    }\n    Caption.create = function (params) {\n        if (params === void 0) { params = {}; }\n        var caption = new Caption();\n        caption.text = params.text || '';\n        caption.fontStyle = params.fontStyle;\n        caption.fontWeight = params.fontWeight || 'bold';\n        caption.fontSize = params.fontSize || 14;\n        caption.fontFamily = params.fontFamily || 'Verdana, sans-serif';\n        caption.color = params.color || 'black';\n        caption.requestLayout();\n        return caption;\n    };\n    Object.defineProperty(Caption.prototype, \"text\", {\n        get: function () {\n            return this.node.text;\n        },\n        set: function (value) {\n            if (this.node.text !== value) {\n                this.node.text = value;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Caption.prototype, \"fontStyle\", {\n        get: function () {\n            return this.node.fontStyle;\n        },\n        set: function (value) {\n            if (this.node.fontStyle !== value) {\n                this.node.fontStyle = value;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Caption.prototype, \"fontWeight\", {\n        get: function () {\n            return this.node.fontWeight;\n        },\n        set: function (value) {\n            if (this.node.fontWeight !== value) {\n                this.node.fontWeight = value;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Caption.prototype, \"fontSize\", {\n        get: function () {\n            return this.node.fontSize;\n        },\n        set: function (value) {\n            if (this.node.fontSize !== value) {\n                this.node.fontSize = value;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Caption.prototype, \"fontFamily\", {\n        get: function () {\n            return this.node.fontFamily;\n        },\n        set: function (value) {\n            if (this.node.fontFamily !== value) {\n                this.node.fontFamily = value;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Caption.prototype, \"color\", {\n        get: function () {\n            return this.node.fill || '';\n        },\n        set: function (value) {\n            if (this.node.fill !== value) {\n                this.node.fill = value;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Caption.prototype, \"enabled\", {\n        get: function () {\n            return this._enabled;\n        },\n        set: function (value) {\n            if (this._enabled !== value) {\n                this._enabled = value;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Caption.prototype, \"padding\", {\n        get: function () {\n            return this._padding;\n        },\n        set: function (value) {\n            if (this._padding !== value) {\n                this._padding = value;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Caption.prototype.requestLayout = function () {\n        if (this.onLayoutChange) {\n            this.onLayoutChange();\n        }\n    };\n    return Caption;\n}());\nexports.Caption = Caption;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bandScale_1 = require(\"../../scale/bandScale\");\nvar axis_1 = require(\"../../axis\");\nvar CategoryAxis = /** @class */ (function (_super) {\n    __extends(CategoryAxis, _super);\n    function CategoryAxis() {\n        var _this = this;\n        var scale = new bandScale_1.BandScale();\n        scale.paddingInner = 0.2;\n        scale.paddingOuter = 0.3;\n        _this = _super.call(this, scale) || this;\n        return _this;\n    }\n    return CategoryAxis;\n}(axis_1.Axis));\nexports.CategoryAxis = CategoryAxis;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar group_1 = require(\"../../scene/group\");\nvar selection_1 = require(\"../../scene/selection\");\nvar line_1 = require(\"../../scene/shape/line\");\nvar angle_1 = require(\"../../util/angle\");\nvar text_1 = require(\"../../scene/shape/text\");\nvar bbox_1 = require(\"../../scene/bbox\");\nvar matrix_1 = require(\"../../scene/matrix\");\nvar bandScale_1 = require(\"../../scale/bandScale\");\nvar tree_1 = require(\"../../layout/tree\");\nvar Tags;\n(function (Tags) {\n    Tags[Tags[\"Tick\"] = 0] = \"Tick\";\n    Tags[Tags[\"GridLine\"] = 1] = \"GridLine\";\n})(Tags || (Tags = {}));\n/**\n * A general purpose linear axis with no notion of orientation.\n * The axis is always rendered vertically, with horizontal labels positioned to the left\n * of the axis line by default. The axis can be {@link rotation | rotated} by an arbitrary angle,\n * so that it can be used as a top, right, bottom, left, radial or any other kind\n * of linear axis.\n * The generic `D` parameter is the type of the domain of the axis' scale.\n * The output range of the axis' scale is always numeric (screen coordinates).\n */\nvar GroupedCategoryAxis = /** @class */ (function () {\n    // onLayoutChange?: () => void;\n    function GroupedCategoryAxis() {\n        this.id = this.createId();\n        this.scale = new bandScale_1.BandScale();\n        this.tickScale = new bandScale_1.BandScale();\n        this.group = new group_1.Group();\n        /**\n         * The horizontal translation of the axis group.\n         */\n        this.translationX = 0;\n        /**\n         * The vertical translation of the axis group.\n         */\n        this.translationY = 0;\n        /**\n         * Axis rotation angle in degrees.\n         */\n        this.rotation = 0;\n        /**\n         * The line width to be used by the axis line.\n         */\n        this.lineWidth = 1;\n        /**\n         * The color of the axis line.\n         * Use `null` rather than `rgba(0, 0, 0, 0)` to make the axis line invisible.\n         */\n        this.lineColor = 'rgba(195, 195, 195, 1)';\n        /**\n         * The line width to be used by axis ticks.\n         */\n        this.tickWidth = 1;\n        /**\n         * The line length to be used by axis ticks.\n         */\n        this.tickSize = 6;\n        /**\n         * The padding between the labels and the axis line.\n         */\n        this.labelPadding = 5;\n        this.labelGrid = false;\n        /**\n         * The color of the axis ticks.\n         * Use `null` rather than `rgba(0, 0, 0, 0)` to make the ticks invisible.\n         */\n        this.tickColor = 'rgba(195, 195, 195, 1)';\n        this.labelFontStyle = '';\n        this.labelFontWeight = '';\n        this.labelFontSize = 12;\n        this.labelFontFamily = 'Verdana, sans-serif';\n        this.title = undefined;\n        /**\n         * The color of the labels.\n         * Use `null` rather than `rgba(0, 0, 0, 0)` to make labels invisible.\n         */\n        this.labelColor = 'rgba(87, 87, 87, 1)';\n        /**\n         * The length of the grid. The grid is only visible in case of a non-zero value.\n         */\n        this._gridLength = 0;\n        /**\n         * The array of styles to cycle through when rendering grid lines.\n         * For example, use two {@link GridStyle} objects for alternating styles.\n         * Contains only one {@link GridStyle} object by default, meaning all grid lines\n         * have the same style.\n         */\n        this._gridStyle = [{\n                stroke: 'rgba(219, 219, 219, 1)',\n                lineDash: [4, 2]\n            }];\n        /**\n         * Custom label rotation in degrees.\n         * Labels are rendered perpendicular to the axis line by default.\n         * Or parallel to the axis line, if the {@link parallelLabels} is set to `true`.\n         * The value of this config is used as the angular offset/deflection\n         * from the default rotation.\n         */\n        this.labelRotation = 0;\n        /**\n         * By default labels and ticks are positioned to the left of the axis line.\n         * `true` positions the labels to the right of the axis line.\n         * However, if the axis is rotated, its easier to think in terms\n         * of this side or the opposite side, rather than left and right.\n         * We use the term `mirror` for conciseness, although it's not\n         * true mirroring - for example, when a label is rotated, so that\n         * it is inclined at the 45 degree angle, text flowing from north-west\n         * to south-east, ending at the tick to the left of the axis line,\n         * and then we set this config to `true`, the text will still be flowing\n         * from north-west to south-east, _starting_ at the tick to the right\n         * of the axis line.\n         */\n        this.mirrorLabels = false;\n        /**\n         * Labels are rendered perpendicular to the axis line by default.\n         * Setting this config to `true` makes labels render parallel to the axis line\n         * and center aligns labels' text at the ticks.\n         */\n        this.parallelLabels = false;\n        var scale = this.scale;\n        scale.paddingOuter = 0.1;\n        scale.paddingInner = scale.paddingOuter * 2;\n        var tickScale = this.tickScale;\n        tickScale.paddingInner = 1;\n        tickScale.paddingOuter = 0;\n        this.gridLineSelection = selection_1.Selection.select(this.group).selectAll();\n        this.axisLineSelection = selection_1.Selection.select(this.group).selectAll();\n        this.separatorSelection = selection_1.Selection.select(this.group).selectAll();\n        this.labelSelection = selection_1.Selection.select(this.group).selectAll();\n        // this.group.append(this.bboxRect); // debug (bbox)\n    }\n    GroupedCategoryAxis.prototype.createId = function () {\n        var constructor = this.constructor;\n        var className = constructor.className;\n        if (!className) {\n            throw new Error(\"The \" + constructor + \" is missing the 'className' property.\");\n        }\n        return className + '-' + (constructor.id = (constructor.id || 0) + 1);\n    };\n    Object.defineProperty(GroupedCategoryAxis.prototype, \"domain\", {\n        get: function () {\n            return this.scale.domain;\n        },\n        set: function (value) {\n            this.scale.domain = value;\n            var tickTree = tree_1.ticksToTree(value);\n            this.tickTreeLayout = tree_1.treeLayout(tickTree);\n            var domain = value.slice();\n            domain.push('');\n            this.tickScale.domain = domain;\n            this.resizeTickTree();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GroupedCategoryAxis.prototype, \"range\", {\n        get: function () {\n            return this.scale.range;\n        },\n        set: function (value) {\n            this.scale.range = value;\n            this.tickScale.range = value;\n            this.resizeTickTree();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GroupedCategoryAxis.prototype.resizeTickTree = function () {\n        var s = this.scale;\n        var range = s.domain.length ? [s.convert(s.domain[0]), s.convert(s.domain[s.domain.length - 1])] : s.range;\n        var layout = this.tickTreeLayout;\n        var lineHeight = this.lineHeight;\n        if (layout) {\n            layout.resize(Math.abs(range[1] - range[0]), layout.depth * lineHeight, (Math.min(range[0], range[1]) || 0) + (s.bandwidth || 0) / 2, -layout.depth * lineHeight);\n        }\n    };\n    Object.defineProperty(GroupedCategoryAxis.prototype, \"lineHeight\", {\n        get: function () {\n            return this.labelFontSize * 1.5;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GroupedCategoryAxis.prototype, \"gridLength\", {\n        get: function () {\n            return this._gridLength;\n        },\n        set: function (value) {\n            // Was visible and now invisible, or was invisible and now visible.\n            if (this._gridLength && !value || !this._gridLength && value) {\n                this.gridLineSelection = this.gridLineSelection.remove().setData([]);\n                this.labelSelection = this.labelSelection.remove().setData([]);\n            }\n            this._gridLength = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GroupedCategoryAxis.prototype, \"gridStyle\", {\n        get: function () {\n            return this._gridStyle;\n        },\n        set: function (value) {\n            if (value.length) {\n                this._gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates/removes/updates the scene graph nodes that constitute the axis.\n     * Supposed to be called _manually_ after changing _any_ of the axis properties.\n     * This allows to bulk set axis properties before updating the nodes.\n     * The node changes made by this method are rendered on the next animation frame.\n     * We could schedule this method call automatically on the next animation frame\n     * when any of the axis properties change (the way we do when properties of scene graph's\n     * nodes change), but this will mean that we first wait for the next animation\n     * frame to make changes to the nodes of the axis, then wait for another animation\n     * frame to render those changes. It's nice to have everything update automatically,\n     * but this extra level of async indirection will not just introduce an unwanted delay,\n     * it will also make it harder to reason about the program.\n     */\n    GroupedCategoryAxis.prototype.update = function () {\n        var _this = this;\n        var group = this.group;\n        var scale = this.scale;\n        var tickScale = this.tickScale;\n        var bandwidth = Math.abs(scale.range[1] - scale.range[0]) / scale.domain.length || 0;\n        var parallelLabels = this.parallelLabels;\n        var rotation = angle_1.toRadians(this.rotation);\n        var isHorizontal = Math.abs(Math.cos(rotation)) < 1e-8;\n        var labelRotation = angle_1.normalizeAngle360(angle_1.toRadians(this.labelRotation));\n        group.translationX = this.translationX;\n        group.translationY = this.translationY;\n        group.rotation = rotation;\n        var title = this.title;\n        var lineHeight = this.lineHeight;\n        // Render ticks and labels.\n        var tickTreeLayout = this.tickTreeLayout;\n        var labels = scale.ticks();\n        var treeLabels = tickTreeLayout ? tickTreeLayout.nodes : [];\n        var isLabelTree = tickTreeLayout ? tickTreeLayout.depth > 1 : false;\n        var ticks = tickScale.ticks();\n        // The side of the axis line to position the labels on.\n        // -1 = left (default)\n        //  1 = right\n        var sideFlag = this.mirrorLabels ? 1 : -1;\n        // When labels are parallel to the axis line, the `parallelFlipFlag` is used to\n        // flip the labels to avoid upside-down text, when the axis is rotated\n        // such that it is in the right hemisphere, i.e. the angle of rotation\n        // is in the [0, π] interval.\n        // The rotation angle is normalized, so that we have an easier time checking\n        // if it's in the said interval. Since the axis is always rendered vertically\n        // and then rotated, zero rotation means 12 (not 3) o-clock.\n        // -1 = flip\n        //  1 = don't flip (default)\n        var parallelFlipRotation = angle_1.normalizeAngle360(rotation);\n        var parallelFlipFlag = (!labelRotation && parallelFlipRotation >= 0 && parallelFlipRotation <= Math.PI) ? -1 : 1;\n        var regularFlipRotation = angle_1.normalizeAngle360(rotation - Math.PI / 2);\n        // Flip if the axis rotation angle is in the top hemisphere.\n        var regularFlipFlag = (!labelRotation && regularFlipRotation >= 0 && regularFlipRotation <= Math.PI) ? -1 : 1;\n        var updateGridLines = this.gridLineSelection.setData(this.gridLength ? ticks : []);\n        updateGridLines.exit.remove();\n        var enterGridLines = updateGridLines.enter.append(line_1.Line);\n        var gridLineSelection = updateGridLines.merge(enterGridLines);\n        var updateLabels = this.labelSelection.setData(treeLabels);\n        updateLabels.exit.remove();\n        var enterLabels = updateLabels.enter.append(text_1.Text);\n        var labelSelection = updateLabels.merge(enterLabels);\n        var labelFormatter = this.labelFormatter;\n        var maxLeafLabelWidth = 0;\n        labelSelection\n            .each(function (label, datum, index) {\n            label.fontStyle = _this.labelFontStyle;\n            label.fontWeight = _this.labelFontWeight;\n            label.fontSize = _this.labelFontSize;\n            label.fontFamily = _this.labelFontFamily;\n            label.fill = _this.labelColor;\n            label.textBaseline = parallelFlipFlag === -1 ? 'bottom' : 'hanging';\n            // label.textBaseline = parallelLabels && !labelRotation\n            //     ? (sideFlag * parallelFlipFlag === -1 ? 'hanging' : 'bottom')\n            //     : 'middle';\n            if (title && index === 0) { // use the phantom root as the axis title\n                label.text = title.text;\n                label.fontSize = title.fontSize;\n                label.fontStyle = title.fontStyle;\n                label.fontWeight = title.fontWeight;\n                label.fontFamily = title.fontFamily;\n                label.textBaseline = 'hanging';\n            }\n            else {\n                label.text = labelFormatter\n                    ? labelFormatter({\n                        value: String(datum.label),\n                        index: index\n                    })\n                    : String(datum.label);\n            }\n            label.textAlign = 'center';\n            label.translationX = datum.screenY - _this.labelFontSize * 0.25;\n            label.translationY = datum.screenX;\n            var bbox = label.getBBox();\n            if (bbox && bbox.width > maxLeafLabelWidth) {\n                maxLeafLabelWidth = bbox.width;\n            }\n        });\n        var labelX = sideFlag * this.labelPadding; // label padding from the axis line\n        var autoRotation = parallelLabels\n            ? parallelFlipFlag * Math.PI / 2\n            : (regularFlipFlag === -1 ? Math.PI : 0);\n        var labelGrid = this.labelGrid;\n        var separatorData = [];\n        labelSelection.each(function (label, datum, index) {\n            label.x = labelX;\n            label.rotationCenterX = labelX;\n            if (!datum.children.length) {\n                label.rotation = labelRotation;\n                label.textAlign = 'end';\n                label.textBaseline = 'middle';\n            }\n            else {\n                label.translationX -= maxLeafLabelWidth - lineHeight + _this.labelPadding;\n                if (isHorizontal) {\n                    label.rotation = autoRotation;\n                }\n                else {\n                    label.rotation = -Math.PI / 2;\n                }\n            }\n            // Calculate positions of label separators for all nodes except the root.\n            // Each separator is placed to the top of the current label.\n            if (datum.parent && isLabelTree) {\n                var y = !datum.children.length\n                    ? datum.screenX - bandwidth / 2\n                    : datum.screenX - datum.leafCount * bandwidth / 2;\n                if (!datum.children.length) {\n                    if (!datum.number || labelGrid) {\n                        separatorData.push({\n                            y: y,\n                            x1: 0,\n                            x2: -maxLeafLabelWidth - _this.labelPadding * 2,\n                            toString: function () { return String(index); }\n                        });\n                    }\n                }\n                else {\n                    separatorData.push({\n                        y: y,\n                        x1: -maxLeafLabelWidth + datum.screenY + lineHeight / 2,\n                        x2: -maxLeafLabelWidth + datum.screenY - lineHeight / 2,\n                        toString: function () { return String(index); }\n                    });\n                }\n            }\n        });\n        // Calculate the position of the long separator on the far bottom of the axis.\n        var minX = 0;\n        separatorData.forEach(function (d) { return minX = Math.min(minX, d.x2); });\n        separatorData.push({\n            y: Math.max(scale.range[0], scale.range[1]),\n            x1: 0,\n            x2: minX,\n            toString: function () { return String(separatorData.length); }\n        });\n        var updateSeparators = this.separatorSelection.setData(separatorData);\n        updateSeparators.exit.remove();\n        var enterSeparators = updateSeparators.enter.append(line_1.Line);\n        var separatorSelection = updateSeparators.merge(enterSeparators);\n        this.separatorSelection = separatorSelection;\n        separatorSelection.each(function (line, datum, index) {\n            line.x1 = datum.x1;\n            line.x2 = datum.x2;\n            line.y1 = datum.y;\n            line.y2 = datum.y;\n            line.stroke = _this.tickColor;\n            line.fill = undefined;\n            line.strokeWidth = 1;\n        });\n        this.gridLineSelection = gridLineSelection;\n        this.labelSelection = labelSelection;\n        // Render axis lines.\n        var lineCount = tickTreeLayout ? tickTreeLayout.depth + 1 : 1;\n        var lines = [];\n        for (var i = 0; i < lineCount; i++) {\n            lines.push(i);\n        }\n        var updateAxisLines = this.axisLineSelection.setData(lines);\n        updateAxisLines.exit.remove();\n        var enterAxisLines = updateAxisLines.enter.append(line_1.Line);\n        var axisLineSelection = updateAxisLines.merge(enterAxisLines);\n        this.axisLineSelection = axisLineSelection;\n        axisLineSelection.each(function (line, datum, index) {\n            var x = index > 0 ? -maxLeafLabelWidth - _this.labelPadding * 2 - (index - 1) * lineHeight : 0;\n            line.x1 = x;\n            line.x2 = x;\n            line.y1 = scale.range[0];\n            line.y2 = scale.range[1];\n            line.strokeWidth = _this.lineWidth;\n            line.stroke = _this.lineColor;\n            line.visible = labels.length > 0 && (index === 0 || (labelGrid && isLabelTree));\n        });\n        if (this.gridLength) {\n            var styles_1 = this.gridStyle;\n            var styleCount_1 = styles_1.length;\n            gridLineSelection\n                .each(function (line, datum, index) {\n                var y = Math.round(tickScale.convert(datum));\n                line.x1 = 0;\n                line.x2 = -sideFlag * _this.gridLength;\n                line.y1 = y;\n                line.y2 = y;\n                line.visible = Math.abs(line.parent.translationY - scale.range[0]) > 1;\n                var style = styles_1[index % styleCount_1];\n                line.stroke = style.stroke;\n                line.strokeWidth = _this.tickWidth;\n                line.lineDash = style.lineDash;\n                line.fill = undefined;\n            });\n        }\n        // debug (bbox)\n        // const bbox = this.getBBox();\n        // const bboxRect = this.bboxRect;\n        // bboxRect.x = bbox.x;\n        // bboxRect.y = bbox.y;\n        // bboxRect.width = bbox.width;\n        // bboxRect.height = bbox.height;\n    };\n    GroupedCategoryAxis.prototype.getBBox = function (includeTitle) {\n        if (includeTitle === void 0) { includeTitle = true; }\n        var left = Infinity;\n        var right = -Infinity;\n        var top = Infinity;\n        var bottom = -Infinity;\n        this.labelSelection.each(function (label, datum, index) {\n            // The label itself is rotated, but not translated, the group that\n            // contains it is. So to capture the group transform in the label bbox\n            // calculation we combine the transform matrices of the label and the group.\n            // Depending on the timing of the `axis.getBBox()` method call, we may\n            // not have the group's and the label's transform matrices updated yet (because\n            // the transform matrix is not recalculated whenever a node's transform attributes\n            // change, instead it's marked for recalculation on the next frame by setting\n            // the node's `dirtyTransform` flag to `true`), so we force them to update\n            // right here by calling `computeTransformMatrix`.\n            if (index > 0 || includeTitle) { // first node is the root (title)\n                label.computeTransformMatrix();\n                var matrix = matrix_1.Matrix.flyweight(label.matrix);\n                var group = label.parent;\n                group.computeTransformMatrix();\n                matrix.preMultiplySelf(group.matrix);\n                var labelBBox = label.getBBox();\n                if (labelBBox) {\n                    var bbox = matrix.transformBBox(labelBBox);\n                    left = Math.min(left, bbox.x);\n                    right = Math.max(right, bbox.x + bbox.width);\n                    top = Math.min(top, bbox.y);\n                    bottom = Math.max(bottom, bbox.y + bbox.height);\n                }\n            }\n        });\n        return new bbox_1.BBox(left, top, right - left, bottom - top);\n    };\n    // debug (bbox)\n    // private bboxRect = (() => {\n    //     const rect = new Rect();\n    //     rect.fill = undefined;\n    //     rect.stroke = 'red';\n    //     rect.strokeWidth = 1;\n    //     rect.strokeOpacity = 0.7;\n    //     return rect;\n    // })();\n    GroupedCategoryAxis.className = 'GroupedCategoryAxis';\n    return GroupedCategoryAxis;\n}());\nexports.GroupedCategoryAxis = GroupedCategoryAxis;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar axis_1 = require(\"../../axis\");\nvar linearScale_1 = require(\"../../scale/linearScale\");\nvar NumberAxis = /** @class */ (function (_super) {\n    __extends(NumberAxis, _super);\n    function NumberAxis() {\n        var _this = _super.call(this, linearScale_1.default()) || this;\n        _this._nice = true;\n        _this.scale.clamp = true;\n        return _this;\n    }\n    Object.defineProperty(NumberAxis.prototype, \"nice\", {\n        get: function () {\n            return this._nice;\n        },\n        set: function (value) {\n            if (this._nice !== value) {\n                this._nice = value;\n                if (value && this.scale.nice) {\n                    this.scale.nice(10);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NumberAxis.prototype, \"domain\", {\n        get: function () {\n            return this.scale.domain;\n        },\n        set: function (value) {\n            this.scale.domain = value;\n            if (this.nice && this.scale.nice) {\n                this.scale.nice(10);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NumberAxis;\n}(axis_1.Axis));\nexports.NumberAxis = NumberAxis;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chart_1 = require(\"./chart\");\nvar array_1 = require(\"../util/array\");\nvar padding_1 = require(\"../util/padding\");\nvar group_1 = require(\"../scene/group\");\nvar CartesianChartLayout;\n(function (CartesianChartLayout) {\n    CartesianChartLayout[CartesianChartLayout[\"Vertical\"] = 0] = \"Vertical\";\n    CartesianChartLayout[CartesianChartLayout[\"Horizontal\"] = 1] = \"Horizontal\";\n})(CartesianChartLayout = exports.CartesianChartLayout || (exports.CartesianChartLayout = {}));\nvar CartesianChart = /** @class */ (function (_super) {\n    __extends(CartesianChart, _super);\n    function CartesianChart(options) {\n        var _this = _super.call(this, options) || this;\n        _this.axisAutoPadding = new padding_1.Padding();\n        _this.seriesClipRect = new group_1.Group();\n        _this._layout = CartesianChartLayout.Vertical;\n        var xAxis = options.xAxis;\n        var yAxis = options.yAxis;\n        _this._xAxis = xAxis;\n        _this._yAxis = yAxis;\n        _this.scene.root.append([xAxis.group, yAxis.group, _this.seriesClipRect]);\n        _this.scene.root.append(_this.legend.group);\n        return _this;\n    }\n    Object.defineProperty(CartesianChart.prototype, \"seriesRoot\", {\n        get: function () {\n            return this.seriesClipRect;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CartesianChart.prototype, \"xAxis\", {\n        get: function () {\n            return this._xAxis;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CartesianChart.prototype, \"yAxis\", {\n        get: function () {\n            return this._yAxis;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CartesianChart.prototype, \"series\", {\n        get: function () {\n            return this._series;\n        },\n        set: function (values) {\n            var _this = this;\n            this.removeAllSeries();\n            values.forEach(function (series) {\n                _this.addSeries(series);\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CartesianChart.prototype.performLayout = function () {\n        if (this.dataPending || !(this.xAxis && this.yAxis)) {\n            return;\n        }\n        var shrinkRect = {\n            x: 0,\n            y: 0,\n            width: this.width,\n            height: this.height\n        };\n        var captionAutoPadding = this.captionAutoPadding;\n        shrinkRect.y += captionAutoPadding;\n        shrinkRect.height -= captionAutoPadding;\n        if (this.legend.enabled && this.legend.data.length) {\n            var legendAutoPadding = this.legendAutoPadding;\n            shrinkRect.x += legendAutoPadding.left;\n            shrinkRect.y += legendAutoPadding.top;\n            shrinkRect.width -= legendAutoPadding.left + legendAutoPadding.right;\n            shrinkRect.height -= legendAutoPadding.top + legendAutoPadding.bottom;\n            var legendPadding = this.legendPadding;\n            switch (this.legendPosition) {\n                case 'right':\n                    shrinkRect.width -= legendPadding;\n                    break;\n                case 'bottom':\n                    shrinkRect.height -= legendPadding;\n                    break;\n                case 'left':\n                    shrinkRect.x += legendPadding;\n                    shrinkRect.width -= legendPadding;\n                    break;\n                case 'top':\n                    shrinkRect.y += legendPadding;\n                    shrinkRect.height -= legendPadding;\n                    break;\n            }\n        }\n        var padding = this.padding;\n        shrinkRect.x += padding.left;\n        shrinkRect.y += padding.top;\n        shrinkRect.width -= padding.left + padding.right;\n        shrinkRect.height -= padding.top + padding.bottom;\n        var axisAutoPadding = this.axisAutoPadding;\n        shrinkRect.x += axisAutoPadding.left;\n        shrinkRect.y += axisAutoPadding.top;\n        shrinkRect.width -= axisAutoPadding.left + axisAutoPadding.right;\n        shrinkRect.height -= axisAutoPadding.top + axisAutoPadding.bottom;\n        // const seriesClipRect = this.seriesClipRect;\n        // seriesClipRect.x = shrinkRect.x;\n        // seriesClipRect.y = shrinkRect.y;\n        // seriesClipRect.width = shrinkRect.width;\n        // seriesClipRect.height = shrinkRect.height;\n        var xAxis = this.xAxis;\n        var yAxis = this.yAxis;\n        xAxis.scale.range = [0, shrinkRect.width];\n        xAxis.rotation = -90;\n        xAxis.translationX = Math.floor(shrinkRect.x);\n        xAxis.translationY = Math.floor(shrinkRect.y + shrinkRect.height + 1);\n        xAxis.parallelLabels = true;\n        xAxis.gridLength = shrinkRect.height;\n        yAxis.scale.range = [shrinkRect.height, 0];\n        yAxis.translationX = Math.floor(shrinkRect.x);\n        yAxis.translationY = Math.floor(shrinkRect.y);\n        yAxis.gridLength = shrinkRect.width;\n        this.updateAxes();\n        this.series.forEach(function (series) {\n            series.group.translationX = Math.floor(shrinkRect.x);\n            series.group.translationY = Math.floor(shrinkRect.y);\n            series.update(); // this has to happen after the `updateAxis` call\n        });\n        this.positionCaptions();\n        this.positionLegend();\n    };\n    Object.defineProperty(CartesianChart.prototype, \"layout\", {\n        get: function () {\n            return this._layout;\n        },\n        set: function (value) {\n            if (this._layout !== value) {\n                this._layout = value;\n                this.layoutPending = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CartesianChart.prototype.updateAxes = function () {\n        var _a, _b;\n        var isHorizontal = this.layout === CartesianChartLayout.Horizontal;\n        var xAxis = isHorizontal ? this.yAxis : this.xAxis;\n        var yAxis = isHorizontal ? this.xAxis : this.yAxis;\n        if (!(xAxis && yAxis)) {\n            return;\n        }\n        var xDomains = [];\n        var yDomains = [];\n        this.series.forEach(function (series) {\n            if (series.visible) {\n                var xDomain_1 = series.getDomainX();\n                var yDomain_1 = series.getDomainY();\n                xDomains.push(xDomain_1);\n                yDomains.push(yDomain_1);\n            }\n        });\n        var xDomain = (_a = new Array()).concat.apply(_a, xDomains);\n        var yDomain = (_b = new Array()).concat.apply(_b, yDomains);\n        xAxis.domain = array_1.numericExtent(xDomain) || xDomain;\n        yAxis.domain = array_1.numericExtent(yDomain) || yDomain;\n        xAxis.update();\n        yAxis.update();\n        // The `xAxis` and `yAxis` have `.this` prefix on purpose here.\n        var xAxisBBox = this.xAxis.getBBox();\n        var yAxisBBox = this.yAxis.getBBox();\n        {\n            var axisThickness = Math.floor(yAxisBBox.width);\n            if (this.axisAutoPadding.left !== axisThickness) {\n                this.axisAutoPadding.left = axisThickness;\n                this.layoutPending = true;\n            }\n        }\n        {\n            var axisThickness = Math.floor(xAxisBBox.width);\n            if (this.axisAutoPadding.bottom !== axisThickness) {\n                this.axisAutoPadding.bottom = axisThickness;\n                this.layoutPending = true;\n            }\n        }\n    };\n    return CartesianChart;\n}(chart_1.Chart));\nexports.CartesianChart = CartesianChart;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar scene_1 = require(\"../scene/scene\");\nvar group_1 = require(\"../scene/group\");\nvar padding_1 = require(\"../util/padding\");\nvar shape_1 = require(\"../scene/shape/shape\");\nvar rect_1 = require(\"../scene/shape/rect\");\nvar legend_1 = require(\"./legend\");\nvar array_1 = require(\"../util/array\");\nvar Chart = /** @class */ (function () {\n    function Chart(options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this.background = new rect_1.Rect();\n        this.legend = new legend_1.Legend();\n        this.legendAutoPadding = new padding_1.Padding();\n        this.captionAutoPadding = 0; // top padding only\n        this.tooltipOffset = [20, 20];\n        this.defaultTooltipClass = 'ag-chart-tooltip';\n        this.onLayoutChange = function () {\n            _this.layoutPending = true;\n        };\n        this._title = undefined;\n        this._subtitle = undefined;\n        this._series = [];\n        this._legendPosition = 'right';\n        this._legendPadding = 20;\n        this._data = [];\n        this._padding = new padding_1.Padding(20);\n        this.layoutCallbackId = 0;\n        this._performLayout = function () {\n            _this.layoutCallbackId = 0;\n            _this.background.width = _this.width;\n            _this.background.height = _this.height;\n            _this.performLayout();\n            if (_this.onLayoutDone) {\n                _this.onLayoutDone();\n            }\n        };\n        this.dataCallbackId = 0;\n        this._processData = function () {\n            _this.dataCallbackId = 0;\n            _this.processData();\n        };\n        this.onMouseMove = function (event) {\n            var x = event.offsetX;\n            var y = event.offsetY;\n            var pick = _this.pickSeriesNode(x, y);\n            if (pick) {\n                var node = pick.node;\n                if (node instanceof shape_1.Shape) {\n                    if (!_this.lastPick) { // cursor moved from empty space to a node\n                        _this.onSeriesNodePick(event, pick.series, node);\n                    }\n                    else {\n                        if (_this.lastPick.node !== node) { // cursor moved from one node to another\n                            _this.onSeriesNodePick(event, pick.series, node);\n                        }\n                        else { // cursor moved within the same node\n                            if (pick.series.tooltipEnabled) {\n                                _this.showTooltip(event);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (_this.lastPick) { // cursor moved from a node to empty space\n                _this.lastPick.series.dehighlightNode();\n                _this.hideTooltip();\n                _this.lastPick = undefined;\n            }\n        };\n        this.onMouseOut = function (event) {\n            _this.toggleTooltip(false);\n        };\n        this.onClick = function (event) {\n            var x = event.offsetX;\n            var y = event.offsetY;\n            var datum = _this.legend.datumForPoint(x, y);\n            if (datum) {\n                var id_1 = datum.id, itemId = datum.itemId, enabled = datum.enabled;\n                var series = array_1.find(_this.series, function (series) { return series.id === id_1; });\n                if (series) {\n                    series.toggleSeriesItem(itemId, !enabled);\n                }\n            }\n        };\n        this._tooltipClass = this.defaultTooltipClass;\n        var root = new group_1.Group();\n        var background = this.background;\n        var document = options.document || window.document;\n        background.fill = 'white';\n        root.appendChild(background);\n        this.scene = new scene_1.Scene({ document: document });\n        this.scene.root = root;\n        this.legend.onLayoutChange = this.onLayoutChange;\n        this.tooltipElement = document.createElement('div');\n        this.tooltipClass = '';\n        document.body.appendChild(this.tooltipElement);\n        this.setupListeners(this.scene.canvas.element);\n    }\n    Chart.prototype.destroy = function () {\n        var tooltipParent = this.tooltipElement.parentNode;\n        if (tooltipParent) {\n            tooltipParent.removeChild(this.tooltipElement);\n        }\n        this.legend.onLayoutChange = undefined;\n        this.cleanupListeners(this.scene.canvas.element);\n        this.scene.parent = undefined;\n    };\n    Object.defineProperty(Chart.prototype, \"element\", {\n        get: function () {\n            return this.scene.canvas.element;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Chart.prototype, \"parent\", {\n        get: function () {\n            return this.scene.parent;\n        },\n        set: function (value) {\n            this.scene.parent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Chart.prototype, \"title\", {\n        get: function () {\n            return this._title;\n        },\n        set: function (value) {\n            var oldTitle = this._title;\n            if (oldTitle !== value) {\n                if (oldTitle) {\n                    oldTitle.onLayoutChange = undefined;\n                    this.scene.root.removeChild(oldTitle.node);\n                }\n                if (value) {\n                    value.onLayoutChange = this.onLayoutChange;\n                    this.scene.root.appendChild(value.node);\n                }\n                this._title = value;\n                this.layoutPending = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Chart.prototype, \"subtitle\", {\n        get: function () {\n            return this._subtitle;\n        },\n        set: function (value) {\n            var oldSubtitle = this._subtitle;\n            if (oldSubtitle !== value) {\n                if (oldSubtitle) {\n                    oldSubtitle.onLayoutChange = undefined;\n                    this.scene.root.removeChild(oldSubtitle.node);\n                }\n                if (value) {\n                    value.onLayoutChange = this.onLayoutChange;\n                    this.scene.root.appendChild(value.node);\n                }\n                this._subtitle = value;\n                this.layoutPending = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Chart.prototype, \"series\", {\n        get: function () {\n            return this._series;\n        },\n        set: function (values) {\n            this._series = values;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Chart.prototype.addSeries = function (series, before) {\n        if (before === void 0) { before = null; }\n        var canAdd = this.series.indexOf(series) < 0;\n        if (canAdd) {\n            var beforeIndex = before ? this.series.indexOf(before) : -1;\n            if (beforeIndex >= 0) {\n                this.series.splice(beforeIndex, 0, series);\n                this.seriesRoot.insertBefore(series.group, before.group);\n            }\n            else {\n                this.series.push(series);\n                this.seriesRoot.append(series.group);\n            }\n            series.chart = this;\n            this.dataPending = true;\n            return true;\n        }\n        return false;\n    };\n    Chart.prototype.removeSeries = function (series) {\n        var index = this.series.indexOf(series);\n        if (index >= 0) {\n            this.series.splice(index, 1);\n            series.chart = undefined;\n            this.seriesRoot.removeChild(series.group);\n            this.dataPending = true;\n            return true;\n        }\n        return false;\n    };\n    Chart.prototype.removeAllSeries = function () {\n        var _this = this;\n        this.series.forEach(function (series) {\n            series.chart = undefined;\n            _this.seriesRoot.removeChild(series.group);\n        });\n        this._series = []; // using `_series` instead of `series` to prevent infinite recursion\n        this.dataPending = true;\n    };\n    Object.defineProperty(Chart.prototype, \"legendPosition\", {\n        get: function () {\n            return this._legendPosition;\n        },\n        set: function (value) {\n            if (this._legendPosition !== value) {\n                this._legendPosition = value;\n                this.legendAutoPadding.clear();\n                switch (value) {\n                    case 'right':\n                    case 'left':\n                        this.legend.orientation = legend_1.Orientation.Vertical;\n                        break;\n                    case 'bottom':\n                    case 'top':\n                        this.legend.orientation = legend_1.Orientation.Horizontal;\n                        break;\n                }\n                this.layoutPending = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Chart.prototype, \"legendPadding\", {\n        get: function () {\n            return this._legendPadding;\n        },\n        set: function (value) {\n            value = isFinite(value) ? value : 20;\n            if (this._legendPadding !== value) {\n                this._legendPadding = value;\n                this.layoutPending = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Chart.prototype, \"data\", {\n        get: function () {\n            return this._data;\n        },\n        set: function (data) {\n            this._data = data;\n            this.series.forEach(function (series) { return series.data = data; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Chart.prototype, \"padding\", {\n        get: function () {\n            return this._padding;\n        },\n        set: function (value) {\n            this._padding = value;\n            this.layoutPending = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Chart.prototype, \"size\", {\n        get: function () {\n            return this.scene.size;\n        },\n        set: function (value) {\n            this.scene.size = value;\n            this.layoutPending = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Chart.prototype, \"width\", {\n        get: function () {\n            return this.scene.width;\n        },\n        /**\n         * The width of the chart in CSS pixels.\n         */\n        set: function (value) {\n            this.scene.width = value;\n            this.layoutPending = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Chart.prototype, \"height\", {\n        get: function () {\n            return this.scene.height;\n        },\n        /**\n         * The height of the chart in CSS pixels.\n         */\n        set: function (value) {\n            this.scene.height = value;\n            this.layoutPending = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Chart.prototype, \"layoutPending\", {\n        /**\n         * Only `true` while we are waiting for the layout to start.\n         * This will be `false` if the layout has already started and is ongoing.\n         */\n        get: function () {\n            return !!this.layoutCallbackId;\n        },\n        set: function (value) {\n            if (value) {\n                if (!(this.layoutCallbackId || this.dataPending)) {\n                    this.layoutCallbackId = requestAnimationFrame(this._performLayout);\n                }\n            }\n            else if (this.layoutCallbackId) {\n                cancelAnimationFrame(this.layoutCallbackId);\n                this.layoutCallbackId = 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Chart.prototype, \"dataPending\", {\n        get: function () {\n            return !!this.dataCallbackId;\n        },\n        set: function (value) {\n            if (this.dataCallbackId) {\n                clearTimeout(this.dataCallbackId);\n                this.dataCallbackId = 0;\n            }\n            if (value) {\n                // We don't want to render before the data is processed and then again after,\n                // so we cancel the auto-scheduled render, if any.\n                this.scene.cancelRender();\n                this.dataCallbackId = window.setTimeout(this._processData, 0); // run on next tick\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Chart.prototype.processData = function () {\n        this.layoutPending = false;\n        var legendData = [];\n        this.series.forEach(function (series) {\n            if (series.visible) {\n                series.processData();\n            }\n            if (series.showInLegend) {\n                series.listSeriesItems(legendData);\n            }\n        });\n        this.legend.data = legendData;\n        this.layoutPending = true;\n    };\n    Chart.prototype.positionCaptions = function () {\n        var title = this.title;\n        var subtitle = this.subtitle;\n        var titleVisible = false;\n        var subtitleVisible = false;\n        var spacing = 5;\n        var paddingTop = 0;\n        if (title && title.enabled) {\n            paddingTop += 10;\n            var bbox = title.node.getBBox();\n            title.node.x = this.width / 2;\n            title.node.y = paddingTop;\n            titleVisible = true;\n            paddingTop += bbox ? bbox.height : 0;\n            if (subtitle && subtitle.enabled) {\n                var bbox_1 = subtitle.node.getBBox();\n                subtitle.node.x = this.width / 2;\n                subtitle.node.y = paddingTop;\n                subtitleVisible = true;\n                paddingTop += spacing + (bbox_1 ? bbox_1.height : 0);\n            }\n        }\n        if (title) {\n            title.node.visible = titleVisible;\n        }\n        if (subtitle) {\n            subtitle.node.visible = subtitleVisible;\n        }\n        if (this.captionAutoPadding !== paddingTop) {\n            this.captionAutoPadding = paddingTop;\n            this.layoutPending = true;\n        }\n    };\n    Chart.prototype.positionLegend = function () {\n        if (!this.legend.enabled || !this.legend.data.length) {\n            return;\n        }\n        var captionAutoPadding = this.captionAutoPadding;\n        var width = this.width;\n        var height = this.height - captionAutoPadding;\n        var legend = this.legend;\n        var legendGroup = legend.group;\n        var legendPadding = this.legendPadding;\n        var legendAutoPadding = this.legendAutoPadding;\n        legendGroup.translationX = 0;\n        legendGroup.translationY = 0;\n        var legendBBox;\n        switch (this.legendPosition) {\n            case 'bottom':\n                legend.performLayout(width - legendPadding * 2, 0);\n                legendBBox = legendGroup.getBBox();\n                legendGroup.translationX = (width - legendBBox.width) / 2 - legendBBox.x;\n                legendGroup.translationY = captionAutoPadding + height - legendBBox.height - legendBBox.y - legendPadding;\n                if (legendAutoPadding.bottom !== legendBBox.height) {\n                    legendAutoPadding.bottom = legendBBox.height;\n                    this.layoutPending = true;\n                }\n                break;\n            case 'top':\n                legend.performLayout(width - legendPadding * 2, 0);\n                legendBBox = legendGroup.getBBox();\n                legendGroup.translationX = (width - legendBBox.width) / 2 - legendBBox.x;\n                legendGroup.translationY = captionAutoPadding + legendPadding - legendBBox.y;\n                if (legendAutoPadding.top !== legendBBox.height) {\n                    legendAutoPadding.top = legendBBox.height;\n                    this.layoutPending = true;\n                }\n                break;\n            case 'left':\n                legend.performLayout(0, height - legendPadding * 2);\n                legendBBox = legendGroup.getBBox();\n                legendGroup.translationX = legendPadding - legendBBox.x;\n                legendGroup.translationY = captionAutoPadding + (height - legendBBox.height) / 2 - legendBBox.y;\n                if (legendAutoPadding.left !== legendBBox.width) {\n                    legendAutoPadding.left = legendBBox.width;\n                    this.layoutPending = true;\n                }\n                break;\n            default: // case 'right':\n                legend.performLayout(0, height - legendPadding * 2);\n                legendBBox = legendGroup.getBBox();\n                legendGroup.translationX = width - legendBBox.width - legendBBox.x - legendPadding;\n                legendGroup.translationY = captionAutoPadding + (height - legendBBox.height) / 2 - legendBBox.y;\n                if (legendAutoPadding.right !== legendBBox.width) {\n                    legendAutoPadding.right = legendBBox.width;\n                    this.layoutPending = true;\n                }\n                break;\n        }\n        // Round off for pixel grid alignment to work properly.\n        legendGroup.translationX = Math.floor(legendGroup.translationX);\n        legendGroup.translationY = Math.floor(legendGroup.translationY);\n        this.legendBBox = legendBBox;\n    };\n    Chart.prototype.setupListeners = function (chartElement) {\n        chartElement.addEventListener('mousemove', this.onMouseMove);\n        chartElement.addEventListener('mouseout', this.onMouseOut);\n        chartElement.addEventListener('click', this.onClick);\n    };\n    Chart.prototype.cleanupListeners = function (chartElement) {\n        chartElement.removeEventListener('mousemove', this.onMouseMove);\n        chartElement.removeEventListener('mouseout', this.onMouseMove);\n        chartElement.removeEventListener('click', this.onClick);\n    };\n    Chart.prototype.pickSeriesNode = function (x, y) {\n        var allSeries = this.series;\n        var node = undefined;\n        for (var i = allSeries.length - 1; i >= 0; i--) {\n            var series = allSeries[i];\n            node = series.group.pickNode(x, y);\n            if (node) {\n                return {\n                    series: series,\n                    node: node\n                };\n            }\n        }\n    };\n    Chart.prototype.onSeriesNodePick = function (event, series, node) {\n        this.lastPick = {\n            series: series,\n            node: node\n        };\n        series.highlightNode(node);\n        var html = series.tooltipEnabled && series.getTooltipHtml(node.datum);\n        if (html) {\n            this.showTooltip(event, html);\n        }\n    };\n    Object.defineProperty(Chart.prototype, \"tooltipClass\", {\n        get: function () {\n            return this._tooltipClass;\n        },\n        set: function (value) {\n            if (this._tooltipClass !== value) {\n                this._tooltipClass = value;\n                this.toggleTooltip();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Chart.prototype.toggleTooltip = function (visible) {\n        var classList = [this.defaultTooltipClass, this._tooltipClass];\n        if (visible) {\n            classList.push('visible');\n        }\n        this.tooltipElement.setAttribute('class', classList.join(' '));\n    };\n    /**\n     * Shows tooltip at the given event's coordinates.\n     * If the `html` parameter is missing, moves the existing tooltip to the new position.\n     */\n    Chart.prototype.showTooltip = function (event, html) {\n        var el = this.tooltipElement;\n        var offset = this.tooltipOffset;\n        var parent = el.parentElement;\n        if (html !== undefined) {\n            el.innerHTML = html;\n        }\n        else if (!el.innerHTML) {\n            return;\n        }\n        if (html) {\n            this.toggleTooltip(true);\n        }\n        var tooltipRect = this.tooltipRect = el.getBoundingClientRect();\n        var left = event.pageX + offset[0];\n        var top = event.pageY + offset[1];\n        if (tooltipRect && parent && parent.parentElement) {\n            if (left - pageXOffset + tooltipRect.width > parent.parentElement.offsetWidth) {\n                left -= tooltipRect.width + offset[0];\n            }\n        }\n        el.style.left = left + \"px\";\n        el.style.top = top + \"px\";\n    };\n    Chart.prototype.hideTooltip = function () {\n        this.toggleTooltip(false);\n    };\n    return Chart;\n}());\nexports.Chart = Chart;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chart_1 = require(\"./chart\");\nvar cartesianChart_1 = require(\"./cartesianChart\");\nvar array_1 = require(\"../util/array\");\nvar padding_1 = require(\"../util/padding\");\nvar group_1 = require(\"../scene/group\");\nvar GroupedCategoryChart = /** @class */ (function (_super) {\n    __extends(GroupedCategoryChart, _super);\n    function GroupedCategoryChart(options) {\n        var _this = _super.call(this, options) || this;\n        _this.axisAutoPadding = new padding_1.Padding();\n        _this._seriesRoot = new group_1.Group();\n        _this._layout = cartesianChart_1.CartesianChartLayout.Vertical;\n        var xAxis = options.xAxis;\n        var yAxis = options.yAxis;\n        _this._xAxis = xAxis;\n        _this._yAxis = yAxis;\n        _this.scene.root.append([xAxis.group, yAxis.group, _this.seriesRoot]);\n        _this.scene.root.append(_this.legend.group);\n        return _this;\n    }\n    Object.defineProperty(GroupedCategoryChart.prototype, \"seriesRoot\", {\n        get: function () {\n            return this._seriesRoot;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GroupedCategoryChart.prototype, \"xAxis\", {\n        get: function () {\n            return this._xAxis;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GroupedCategoryChart.prototype, \"yAxis\", {\n        get: function () {\n            return this._yAxis;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GroupedCategoryChart.prototype, \"series\", {\n        get: function () {\n            return this._series;\n        },\n        set: function (values) {\n            var _this = this;\n            this.removeAllSeries();\n            values.forEach(function (series) {\n                _this.addSeries(series);\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GroupedCategoryChart.prototype.performLayout = function () {\n        if (this.dataPending || !(this.xAxis && this.yAxis)) {\n            return;\n        }\n        var shrinkRect = {\n            x: 0,\n            y: 0,\n            width: this.width,\n            height: this.height\n        };\n        var captionAutoPadding = this.captionAutoPadding;\n        shrinkRect.y += captionAutoPadding;\n        shrinkRect.height -= captionAutoPadding;\n        if (this.legend.enabled && this.legend.data.length) {\n            var legendAutoPadding = this.legendAutoPadding;\n            shrinkRect.x += legendAutoPadding.left;\n            shrinkRect.y += legendAutoPadding.top;\n            shrinkRect.width -= legendAutoPadding.left + legendAutoPadding.right;\n            shrinkRect.height -= legendAutoPadding.top + legendAutoPadding.bottom;\n            var legendPadding = this.legendPadding;\n            switch (this.legendPosition) {\n                case 'right':\n                    shrinkRect.width -= legendPadding;\n                    break;\n                case 'bottom':\n                    shrinkRect.height -= legendPadding;\n                    break;\n                case 'left':\n                    shrinkRect.x += legendPadding;\n                    shrinkRect.width -= legendPadding;\n                    break;\n                case 'top':\n                    shrinkRect.y += legendPadding;\n                    shrinkRect.height -= legendPadding;\n                    break;\n            }\n        }\n        var padding = this.padding;\n        shrinkRect.x += padding.left;\n        shrinkRect.y += padding.top;\n        shrinkRect.width -= padding.left + padding.right;\n        shrinkRect.height -= padding.top + padding.bottom;\n        var axisAutoPadding = this.axisAutoPadding;\n        shrinkRect.x += axisAutoPadding.left;\n        shrinkRect.y += axisAutoPadding.top;\n        shrinkRect.width -= axisAutoPadding.left + axisAutoPadding.right;\n        shrinkRect.height -= axisAutoPadding.top + axisAutoPadding.bottom;\n        var xAxis = this.xAxis;\n        var yAxis = this.yAxis;\n        xAxis.range = [0, shrinkRect.width];\n        xAxis.rotation = -90;\n        xAxis.translationX = Math.floor(shrinkRect.x);\n        xAxis.translationY = Math.floor(shrinkRect.y + shrinkRect.height + 1);\n        xAxis.parallelLabels = true;\n        xAxis.gridLength = shrinkRect.height;\n        yAxis.range = [shrinkRect.height, 0];\n        yAxis.translationX = Math.floor(shrinkRect.x);\n        yAxis.translationY = Math.floor(shrinkRect.y);\n        yAxis.gridLength = shrinkRect.width;\n        this.updateAxes();\n        this.series.forEach(function (series) {\n            series.group.translationX = Math.floor(shrinkRect.x);\n            series.group.translationY = Math.floor(shrinkRect.y);\n            series.update(); // this has to happen after the `updateAxis` call\n        });\n        this.positionCaptions();\n        this.positionLegend();\n    };\n    Object.defineProperty(GroupedCategoryChart.prototype, \"layout\", {\n        get: function () {\n            return this._layout;\n        },\n        set: function (value) {\n            if (this._layout !== value) {\n                this._layout = value;\n                this.layoutPending = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GroupedCategoryChart.prototype.updateAxes = function () {\n        var _a, _b;\n        var isHorizontal = this.layout === cartesianChart_1.CartesianChartLayout.Horizontal;\n        var xAxis = isHorizontal ? this.yAxis : this.xAxis;\n        var yAxis = isHorizontal ? this.xAxis : this.yAxis;\n        if (!(xAxis && yAxis)) {\n            return;\n        }\n        var xDomains = [];\n        var yDomains = [];\n        var isNumericX = undefined;\n        this.series.forEach(function (series, index) {\n            if (series.visible) {\n                var xDomain_1 = series.getDomainX();\n                var yDomain_1 = series.getDomainY();\n                var isFirstVisibleSeries = isNumericX === undefined;\n                if (isFirstVisibleSeries) {\n                    isNumericX = typeof xDomain_1[0] === 'number';\n                }\n                if (isNumericX || isFirstVisibleSeries) {\n                    xDomains.push(xDomain_1);\n                }\n                yDomains.push(yDomain_1);\n            }\n        });\n        var xDomain = (_a = new Array()).concat.apply(_a, xDomains);\n        var yDomain = (_b = new Array()).concat.apply(_b, yDomains);\n        xAxis.domain = array_1.numericExtent(xDomain) || xDomain;\n        yAxis.domain = array_1.numericExtent(yDomain) || yDomain;\n        xAxis.update();\n        yAxis.update();\n        // The `xAxis` and `yAxis` have `.this` prefix on purpose here.\n        var xAxisBBox = this.xAxis.getBBox();\n        var yAxisBBox = this.yAxis.getBBox();\n        {\n            var axisThickness = Math.floor(yAxisBBox.width);\n            if (this.axisAutoPadding.left !== axisThickness) {\n                this.axisAutoPadding.left = axisThickness;\n                this.layoutPending = true;\n            }\n        }\n        {\n            var axisThickness = Math.floor(isHorizontal ? xAxisBBox.width : xAxisBBox.height);\n            if (this.axisAutoPadding.bottom !== axisThickness) {\n                this.axisAutoPadding.bottom = axisThickness;\n                this.layoutPending = true;\n            }\n        }\n    };\n    return GroupedCategoryChart;\n}(chart_1.Chart));\nexports.GroupedCategoryChart = GroupedCategoryChart;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar group_1 = require(\"../scene/group\");\nvar selection_1 = require(\"../scene/selection\");\nvar markerLabel_1 = require(\"./markerLabel\");\nvar Orientation;\n(function (Orientation) {\n    Orientation[Orientation[\"Vertical\"] = 0] = \"Vertical\";\n    Orientation[Orientation[\"Horizontal\"] = 1] = \"Horizontal\";\n})(Orientation = exports.Orientation || (exports.Orientation = {}));\nvar Legend = /** @class */ (function () {\n    function Legend() {\n        this.group = new group_1.Group();\n        this.itemSelection = selection_1.Selection.select(this.group).selectAll();\n        this.oldSize = [0, 0];\n        this._size = [0, 0];\n        this._data = [];\n        this._orientation = Orientation.Vertical;\n        this._enabled = true;\n        this._itemPaddingX = 16;\n        this._itemPaddingY = 8;\n        this._markerPadding = markerLabel_1.MarkerLabel.defaults.padding;\n        this._labelColor = markerLabel_1.MarkerLabel.defaults.labelColor;\n        this._labelFontStyle = markerLabel_1.MarkerLabel.defaults.labelFontStyle;\n        this._labelFontWeight = markerLabel_1.MarkerLabel.defaults.labelFontWeight;\n        this._labelFontSize = markerLabel_1.MarkerLabel.defaults.labelFontSize;\n        this._labelFontFamily = markerLabel_1.MarkerLabel.defaults.labelFontFamily;\n        this._markerSize = 14;\n        this._markerStrokeWidth = 1;\n    }\n    Object.defineProperty(Legend.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Legend.prototype, \"data\", {\n        get: function () {\n            return this._data;\n        },\n        set: function (data) {\n            this._data = data;\n            this.group.visible = this.enabled && data.length > 0;\n            this.requestLayout();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Legend.prototype, \"orientation\", {\n        get: function () {\n            return this._orientation;\n        },\n        set: function (value) {\n            if (this._orientation !== value) {\n                this._orientation = value;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Legend.prototype, \"enabled\", {\n        get: function () {\n            return this._enabled;\n        },\n        set: function (value) {\n            if (this._enabled !== value) {\n                this._enabled = value;\n                this.group.visible = value && this.data.length > 0;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Legend.prototype, \"itemPaddingX\", {\n        get: function () {\n            return this._itemPaddingX;\n        },\n        set: function (value) {\n            value = isFinite(value) ? value : 16;\n            if (this._itemPaddingX !== value) {\n                this._itemPaddingX = value;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Legend.prototype, \"itemPaddingY\", {\n        get: function () {\n            return this._itemPaddingY;\n        },\n        set: function (value) {\n            value = isFinite(value) ? value : 8;\n            if (this._itemPaddingY !== value) {\n                this._itemPaddingY = value;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Legend.prototype, \"markerPadding\", {\n        get: function () {\n            return this._markerPadding;\n        },\n        set: function (value) {\n            value = isFinite(value) ? value : markerLabel_1.MarkerLabel.defaults.padding;\n            if (this._markerPadding !== value) {\n                this._markerPadding = value;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Legend.prototype, \"labelColor\", {\n        get: function () {\n            return this._labelColor;\n        },\n        set: function (value) {\n            if (this._labelColor !== value) {\n                this._labelColor = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Legend.prototype, \"labelFontStyle\", {\n        get: function () {\n            return this._labelFontStyle;\n        },\n        set: function (value) {\n            if (this._labelFontStyle !== value) {\n                this._labelFontStyle = value;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Legend.prototype, \"labelFontWeight\", {\n        get: function () {\n            return this._labelFontWeight;\n        },\n        set: function (value) {\n            if (this._labelFontWeight !== value) {\n                this._labelFontWeight = value;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Legend.prototype, \"labelFontSize\", {\n        get: function () {\n            return this._labelFontSize;\n        },\n        set: function (value) {\n            if (this._labelFontSize !== value) {\n                this._labelFontSize = value;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Legend.prototype, \"labelFontFamily\", {\n        get: function () {\n            return this._labelFontFamily;\n        },\n        set: function (value) {\n            if (this._labelFontFamily !== value) {\n                this._labelFontFamily = value;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Legend.prototype, \"markerSize\", {\n        get: function () {\n            return this._markerSize;\n        },\n        set: function (value) {\n            value = isFinite(value) ? value : 14;\n            if (this._markerSize !== value) {\n                this._markerSize = value;\n                this.requestLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Legend.prototype, \"markerStrokeWidth\", {\n        get: function () {\n            return this._markerStrokeWidth;\n        },\n        set: function (value) {\n            value = isFinite(value) ? value : 1;\n            if (this._markerStrokeWidth !== value) {\n                this._markerStrokeWidth = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Legend.prototype.requestLayout = function () {\n        if (this.onLayoutChange) {\n            this.onLayoutChange();\n        }\n    };\n    /**\n     * The method is given the desired size of the legend, which only serves as a hint.\n     * The vertically oriented legend will take as much horizontal space as needed, but will\n     * respect the height constraints, and the horizontal legend will take as much vertical\n     * space as needed in an attempt not to exceed the given width.\n     * After the layout is done, the {@link size} will contain the actual size of the legend.\n     * If the actual size is not the same as the previous actual size, the legend will notify\n     * the parent component via the {@link onLayoutChange} callback that another layout is needed,\n     * and the above process should be repeated.\n     * @param width\n     * @param height\n     */\n    Legend.prototype.performLayout = function (width, height) {\n        var _this = this;\n        var updateSelection = this.itemSelection.setData(this.data);\n        updateSelection.exit.remove();\n        var enterSelection = updateSelection.enter.append(markerLabel_1.MarkerLabel);\n        var itemSelection = this.itemSelection = updateSelection.merge(enterSelection);\n        var itemCount = itemSelection.size;\n        var itemPaddingX = this.itemPaddingX;\n        var itemPaddingY = this.itemPaddingY;\n        // Update properties that affect the size of the legend items and measure them.\n        var bboxes = [];\n        itemSelection.each(function (markerLabel, datum) {\n            // TODO: measure only when one of these properties or data change (in a separate routine)\n            markerLabel.markerSize = _this.markerSize;\n            markerLabel.labelFontStyle = _this.labelFontStyle;\n            markerLabel.labelFontWeight = _this.labelFontWeight;\n            markerLabel.labelFontSize = _this.labelFontSize;\n            markerLabel.labelFontFamily = _this.labelFontFamily;\n            markerLabel.labelText = datum.label.text;\n            markerLabel.padding = _this.markerPadding;\n            bboxes.push(markerLabel.getBBox());\n        });\n        var itemHeight = bboxes.length && bboxes[0].height;\n        var rowCount = 0;\n        var columnWidth = 0;\n        var paddedItemsWidth = 0;\n        var paddedItemsHeight = 0;\n        switch (this.orientation) {\n            case Orientation.Horizontal:\n                if (!(isFinite(width) && width > 0)) {\n                    return false;\n                }\n                rowCount = 0;\n                var columnCount = 0;\n                // Split legend items into columns until the width is suitable.\n                do {\n                    var itemsWidth = 0;\n                    columnCount = 0;\n                    columnWidth = 0;\n                    rowCount++;\n                    var i = 0;\n                    while (i < itemCount) {\n                        var bbox = bboxes[i];\n                        if (bbox.width > columnWidth) {\n                            columnWidth = bbox.width;\n                        }\n                        i++;\n                        if (i % rowCount === 0) {\n                            itemsWidth += columnWidth;\n                            columnWidth = 0;\n                            columnCount++;\n                        }\n                    }\n                    if (i % rowCount !== 0) {\n                        itemsWidth += columnWidth;\n                        columnCount++;\n                    }\n                    paddedItemsWidth = itemsWidth + (columnCount - 1) * itemPaddingX;\n                } while (paddedItemsWidth > width && columnCount > 1);\n                paddedItemsHeight = itemHeight * rowCount + (rowCount - 1) * itemPaddingY;\n                break;\n            case Orientation.Vertical:\n                if (!(isFinite(height) && height > 0)) {\n                    return false;\n                }\n                rowCount = itemCount * 2;\n                // Split legend items into columns until the height is suitable.\n                do {\n                    rowCount = (rowCount >> 1) + (rowCount % 2);\n                    columnWidth = 0;\n                    var itemsWidth = 0;\n                    var itemsHeight = 0;\n                    var columnCount_1 = 0;\n                    var i = 0;\n                    while (i < itemCount) {\n                        var bbox = bboxes[i];\n                        if (!columnCount_1) {\n                            itemsHeight += bbox.height;\n                        }\n                        if (bbox.width > columnWidth) {\n                            columnWidth = bbox.width;\n                        }\n                        i++;\n                        if (i % rowCount === 0) {\n                            itemsWidth += columnWidth;\n                            columnWidth = 0;\n                            columnCount_1++;\n                        }\n                    }\n                    if (i % rowCount !== 0) {\n                        itemsWidth += columnWidth;\n                        columnCount_1++;\n                    }\n                    paddedItemsWidth = itemsWidth + (columnCount_1 - 1) * itemPaddingX;\n                    paddedItemsHeight = itemsHeight + (rowCount - 1) * itemPaddingY;\n                } while (paddedItemsHeight > height && rowCount > 1);\n                break;\n        }\n        // Top-left corner of the first legend item.\n        var startX = (width - paddedItemsWidth) / 2;\n        var startY = (height - paddedItemsHeight) / 2;\n        var x = 0;\n        var y = 0;\n        columnWidth = 0;\n        // Position legend items using the layout computed above.\n        itemSelection.each(function (markerLabel, datum, i) {\n            // Round off for pixel grid alignment to work properly.\n            markerLabel.translationX = Math.floor(startX + x);\n            markerLabel.translationY = Math.floor(startY + y);\n            var bbox = bboxes[i];\n            if (bbox.width > columnWidth) {\n                columnWidth = bbox.width;\n            }\n            if ((i + 1) % rowCount === 0) {\n                x += columnWidth + itemPaddingX;\n                y = 0;\n                columnWidth = 0;\n            }\n            else {\n                y += bbox.height + itemPaddingY;\n            }\n        });\n        // Update legend item properties that don't affect the layout.\n        this.update();\n        var size = this._size;\n        var oldSize = this.oldSize;\n        size[0] = paddedItemsWidth;\n        size[1] = paddedItemsHeight;\n        if (size[0] !== oldSize[0] || size[1] !== oldSize[1]) {\n            oldSize[0] = size[0];\n            oldSize[1] = size[1];\n            this.requestLayout();\n        }\n    };\n    Legend.prototype.update = function () {\n        var _this = this;\n        this.itemSelection.each(function (markerLabel, datum) {\n            var marker = datum.marker;\n            markerLabel.markerFill = marker.fill;\n            markerLabel.markerStroke = marker.stroke;\n            markerLabel.markerStrokeWidth = _this.markerStrokeWidth;\n            markerLabel.opacity = datum.enabled ? 1 : 0.5;\n            markerLabel.labelColor = _this.labelColor;\n        });\n    };\n    Legend.prototype.datumForPoint = function (x, y) {\n        var node = this.group.pickNode(x, y);\n        if (node && node.parent) {\n            return node.parent.datum;\n        }\n    };\n    return Legend;\n}());\nexports.Legend = Legend;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar group_1 = require(\"../scene/group\");\nvar rect_1 = require(\"../scene/shape/rect\");\nvar text_1 = require(\"../scene/shape/text\");\nvar MarkerLabel = /** @class */ (function (_super) {\n    __extends(MarkerLabel, _super);\n    function MarkerLabel() {\n        var _this = _super.call(this) || this;\n        _this.marker = new rect_1.Rect();\n        _this.label = new text_1.Text();\n        _this._markerSize = MarkerLabel.defaults.markerSize;\n        _this._padding = MarkerLabel.defaults.padding;\n        _this.marker.crisp = true;\n        var label = _this.label;\n        label.textBaseline = 'middle';\n        label.fontStyle = MarkerLabel.defaults.labelFontStyle;\n        label.fontWeight = MarkerLabel.defaults.labelFontWeight;\n        label.fontSize = MarkerLabel.defaults.labelFontSize;\n        label.fontFamily = MarkerLabel.defaults.labelFontFamily;\n        label.fill = MarkerLabel.defaults.labelColor;\n        label.y = 2; // for better looking vertical alignment of labels to markers\n        _this.append([_this.marker, label]);\n        _this.update();\n        return _this;\n    }\n    Object.defineProperty(MarkerLabel.prototype, \"labelText\", {\n        get: function () {\n            return this.label.text;\n        },\n        set: function (value) {\n            this.label.text = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerLabel.prototype, \"labelFontStyle\", {\n        get: function () {\n            return this.label.fontStyle;\n        },\n        set: function (value) {\n            this.label.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerLabel.prototype, \"labelFontWeight\", {\n        get: function () {\n            return this.label.fontWeight;\n        },\n        set: function (value) {\n            this.label.fontWeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerLabel.prototype, \"labelFontSize\", {\n        get: function () {\n            return this.label.fontSize;\n        },\n        set: function (value) {\n            this.label.fontSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerLabel.prototype, \"labelFontFamily\", {\n        get: function () {\n            return this.label.fontFamily;\n        },\n        set: function (value) {\n            this.label.fontFamily = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerLabel.prototype, \"labelColor\", {\n        get: function () {\n            return this.label.fill;\n        },\n        set: function (value) {\n            this.label.fill = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerLabel.prototype, \"markerSize\", {\n        get: function () {\n            return this._markerSize;\n        },\n        set: function (value) {\n            if (this._markerSize !== value) {\n                this._markerSize = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerLabel.prototype, \"markerFill\", {\n        get: function () {\n            return this.marker.fill;\n        },\n        set: function (value) {\n            this.marker.fill = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerLabel.prototype, \"markerStroke\", {\n        get: function () {\n            return this.marker.stroke;\n        },\n        set: function (value) {\n            this.marker.stroke = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerLabel.prototype, \"markerStrokeWidth\", {\n        get: function () {\n            return this.marker.strokeWidth;\n        },\n        set: function (value) {\n            this.marker.strokeWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerLabel.prototype, \"opacity\", {\n        get: function () {\n            return this.marker.opacity;\n        },\n        set: function (value) {\n            this.marker.opacity = value;\n            this.label.opacity = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerLabel.prototype, \"padding\", {\n        get: function () {\n            return this._padding;\n        },\n        set: function (value) {\n            if (this._padding !== value) {\n                this._padding = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MarkerLabel.prototype.update = function () {\n        var marker = this.marker;\n        var markerSize = this.markerSize;\n        marker.x = -markerSize / 2;\n        marker.y = -markerSize / 2;\n        marker.width = markerSize;\n        marker.height = markerSize;\n        this.label.x = markerSize / 2 + this.padding;\n    };\n    MarkerLabel.className = 'MarkerLabel';\n    MarkerLabel.defaults = Object.freeze({\n        padding: 4,\n        markerSize: 14,\n        labelFont: '12px Verdana, sans-serif',\n        labelFontStyle: undefined,\n        labelFontWeight: undefined,\n        labelFontSize: 12,\n        labelFontFamily: 'Verdana, sans-serif',\n        labelColor: 'black'\n    });\n    return MarkerLabel;\n}(group_1.Group));\nexports.MarkerLabel = MarkerLabel;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.borneo = {\n    fills: [\n        '#f3622d',\n        '#fba71b',\n        '#57b757',\n        '#41a9c9',\n        '#4258c9',\n        '#9a42c8',\n        '#c84164',\n        '#888888'\n    ],\n    strokes: [\n        '#aa4520',\n        '#b07513',\n        '#3d803d',\n        '#2d768d',\n        '#2e3e8d',\n        '#6c2e8c',\n        '#8c2d46',\n        '#5f5f5f'\n    ]\n};\nexports.material = {\n    fills: [\n        '#f44336',\n        '#e91e63',\n        '#9c27b0',\n        '#673ab7',\n        '#3f51b5',\n        '#2196f3',\n        '#03a9f4',\n        '#00bcd4',\n        '#009688',\n        '#4caf50',\n        '#8bc34a',\n        '#cddc39',\n        '#ffeb3b',\n        '#ffc107',\n        '#ff9800',\n        '#ff5722'\n    ],\n    strokes: [\n        '#ab2f26',\n        '#a31545',\n        '#6d1b7b',\n        '#482980',\n        '#2c397f',\n        '#1769aa',\n        '#0276ab',\n        '#008494',\n        '#00695f',\n        '#357a38',\n        '#618834',\n        '#909a28',\n        '#b3a429',\n        '#b38705',\n        '#b36a00',\n        '#b33d18'\n    ]\n};\nexports.pastel = {\n    fills: [\n        '#c16068',\n        '#a2bf8a',\n        '#ebcc87',\n        '#80a0c3',\n        '#b58dae',\n        '#85c0d1'\n    ],\n    strokes: [\n        '#874349',\n        '#718661',\n        '#a48f5f',\n        '#5a7088',\n        '#7f637a',\n        '#5d8692'\n    ]\n};\nexports.bright = {\n    fills: [\n        '#5BC0EB',\n        '#FDE74C',\n        '#9BC53D',\n        '#E55934',\n        '#FA7921',\n        '#fa3081'\n    ],\n    strokes: [\n        '#4086a4',\n        '#b1a235',\n        '#6c8a2b',\n        '#a03e24',\n        '#af5517',\n        '#af225a'\n    ]\n};\nexports.flat = {\n    fills: [\n        '#febe76',\n        '#ff7979',\n        '#badc58',\n        '#f9ca23',\n        '#f0932b',\n        '#eb4c4b',\n        '#6ab04c',\n        '#7ed6df',\n        '#e056fd',\n        '#686de0'\n    ],\n    strokes: [\n        '#b28553',\n        '#b35555',\n        '#829a3e',\n        '#ae8d19',\n        '#a8671e',\n        '#a43535',\n        '#4a7b35',\n        '#58969c',\n        '#9d3cb1',\n        '#494c9d'\n    ]\n};\nexports.default = exports.borneo;\nexports.palettes = [\n    exports.borneo,\n    exports.material,\n    exports.pastel,\n    exports.bright,\n    exports.flat\n];\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chart_1 = require(\"./chart\");\nvar padding_1 = require(\"../util/padding\");\nvar PolarChart = /** @class */ (function (_super) {\n    __extends(PolarChart, _super);\n    function PolarChart() {\n        var _this = _super.call(this) || this;\n        /**\n         * The center of the polar series (for example, the center of a pie).\n         * If the polar chart has multiple series, all of them will have their\n         * center set to the same value as a result of the polar chart layout.\n         * The center coordinates are not supposed to be set by the user.\n         */\n        _this.centerX = 0;\n        _this.centerY = 0;\n        /**\n         * The maximum radius the series can use.\n         * This value is set automatically as a result of the polar chart layout\n         * and is not supposed to be set by the user.\n         */\n        _this.radius = 0;\n        _this._padding = new padding_1.Padding(50);\n        _this._series = [];\n        _this.scene.root.append(_this.legend.group);\n        return _this;\n    }\n    Object.defineProperty(PolarChart.prototype, \"seriesRoot\", {\n        get: function () {\n            return this.scene.root;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PolarChart.prototype, \"series\", {\n        get: function () {\n            return this._series;\n        },\n        set: function (values) {\n            var _this = this;\n            this.removeAllSeries();\n            values.forEach(function (series) {\n                _this.addSeries(series, null);\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PolarChart.prototype.performLayout = function () {\n        var shrinkRect = {\n            x: 0,\n            y: 0,\n            width: this.width,\n            height: this.height\n        };\n        var captionAutoPadding = this.captionAutoPadding;\n        shrinkRect.y += captionAutoPadding;\n        shrinkRect.height -= captionAutoPadding;\n        if (this.legend.enabled && this.legend.data.length) {\n            var legendAutoPadding = this.legendAutoPadding;\n            shrinkRect.x += legendAutoPadding.left;\n            shrinkRect.y += legendAutoPadding.top;\n            shrinkRect.width -= legendAutoPadding.left + legendAutoPadding.right;\n            shrinkRect.height -= legendAutoPadding.top + legendAutoPadding.bottom;\n            var legendPadding = this.legendPadding;\n            switch (this.legendPosition) {\n                case 'right':\n                    shrinkRect.width -= legendPadding;\n                    break;\n                case 'bottom':\n                    shrinkRect.height -= legendPadding;\n                    break;\n                case 'left':\n                    shrinkRect.x += legendPadding;\n                    shrinkRect.width -= legendPadding;\n                    break;\n                case 'top':\n                    shrinkRect.y += legendPadding;\n                    shrinkRect.height -= legendPadding;\n                    break;\n            }\n        }\n        var padding = this.padding;\n        shrinkRect.x += padding.left;\n        shrinkRect.y += padding.top;\n        shrinkRect.width -= padding.left + padding.right;\n        shrinkRect.height -= padding.top + padding.bottom;\n        this.centerX = shrinkRect.x + shrinkRect.width / 2;\n        this.centerY = shrinkRect.y + shrinkRect.height / 2;\n        this.radius = Math.min(shrinkRect.width, shrinkRect.height) / 2;\n        this.series.forEach(function (series) {\n            series.update();\n        });\n        this.positionCaptions();\n        this.positionLegend();\n    };\n    return PolarChart;\n}(chart_1.Chart));\nexports.PolarChart = PolarChart;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar group_1 = require(\"../../scene/group\");\nvar selection_1 = require(\"../../scene/selection\");\nvar series_1 = require(\"./series\");\nvar continuousScale_1 = require(\"../../scale/continuousScale\");\nvar node_1 = require(\"../../scene/node\");\nvar number_1 = require(\"../../util/number\");\nvar path_1 = require(\"../../scene/shape/path\");\nvar arc_1 = require(\"../../scene/shape/arc\");\nvar palettes_1 = require(\"../palettes\");\nvar array_1 = require(\"../../util/array\");\nvar AreaSeries = /** @class */ (function (_super) {\n    __extends(AreaSeries, _super);\n    function AreaSeries() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.areaGroup = _this.group.appendChild(new group_1.Group);\n        _this.strokeGroup = _this.group.appendChild(new group_1.Group);\n        _this.markerGroup = _this.group.appendChild(new group_1.Group);\n        _this.areaSelection = selection_1.Selection.select(_this.areaGroup).selectAll();\n        _this.strokeSelection = selection_1.Selection.select(_this.strokeGroup).selectAll();\n        _this.markerSelection = selection_1.Selection.select(_this.markerGroup).selectAll();\n        /**\n         * The assumption is that the values will be reset (to `true`)\n         * in the {@link yFields} setter.\n         */\n        _this.enabled = new Map();\n        _this._fills = palettes_1.default.fills;\n        _this._strokes = ['white'];\n        _this._fillOpacity = 1;\n        _this._strokeOpacity = 1;\n        _this.xData = [];\n        _this.yData = [];\n        _this.ySums = [];\n        _this.domainX = [];\n        _this.domainY = [];\n        _this._xField = '';\n        _this._yFields = [];\n        _this._yFieldNames = [];\n        _this._normalizedTo = NaN;\n        _this._strokeWidth = 3;\n        _this._marker = false;\n        _this._markerSize = 8;\n        _this._markerStrokeWidth = 2;\n        _this._shadow = undefined;\n        _this.highlightStyle = {\n            fill: 'yellow'\n        };\n        return _this;\n    }\n    Object.defineProperty(AreaSeries.prototype, \"fills\", {\n        get: function () {\n            return this._fills;\n        },\n        set: function (values) {\n            this._fills = values;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AreaSeries.prototype, \"strokes\", {\n        get: function () {\n            return this._strokes;\n        },\n        set: function (values) {\n            this._strokes = values;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AreaSeries.prototype, \"fillOpacity\", {\n        get: function () {\n            return this._fillOpacity;\n        },\n        set: function (value) {\n            if (this._fillOpacity !== value) {\n                this._fillOpacity = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AreaSeries.prototype, \"strokeOpacity\", {\n        get: function () {\n            return this._strokeOpacity;\n        },\n        set: function (value) {\n            if (this._strokeOpacity !== value) {\n                this._strokeOpacity = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AreaSeries.prototype, \"chart\", {\n        get: function () {\n            return this._chart;\n        },\n        set: function (chart) {\n            if (this._chart !== chart) {\n                this._chart = chart;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AreaSeries.prototype, \"xField\", {\n        get: function () {\n            return this._xField;\n        },\n        set: function (value) {\n            if (this._xField !== value) {\n                this._xField = value;\n                this.xData = [];\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AreaSeries.prototype, \"yFields\", {\n        get: function () {\n            return this._yFields;\n        },\n        set: function (values) {\n            this._yFields = values;\n            var enabled = this.enabled;\n            enabled.clear();\n            values.forEach(function (field) { return enabled.set(field, true); });\n            this.yData = [];\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AreaSeries.prototype, \"yFieldNames\", {\n        get: function () {\n            return this._yFieldNames;\n        },\n        set: function (values) {\n            this._yFieldNames = values;\n            this.update();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AreaSeries.prototype, \"normalizedTo\", {\n        get: function () {\n            return this._normalizedTo;\n        },\n        set: function (value) {\n            if (value === 0) {\n                value = NaN;\n            }\n            var absValue = Math.abs(value);\n            if (this._normalizedTo !== absValue) {\n                this._normalizedTo = absValue;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AreaSeries.prototype, \"strokeWidth\", {\n        get: function () {\n            return this._strokeWidth;\n        },\n        set: function (value) {\n            if (this._strokeWidth !== value) {\n                this._strokeWidth = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AreaSeries.prototype, \"marker\", {\n        get: function () {\n            return this._marker;\n        },\n        set: function (value) {\n            if (this._marker !== value) {\n                this._marker = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AreaSeries.prototype, \"markerSize\", {\n        get: function () {\n            return this._markerSize;\n        },\n        set: function (value) {\n            if (this._markerSize !== value) {\n                this._markerSize = Math.abs(value);\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AreaSeries.prototype, \"markerStrokeWidth\", {\n        get: function () {\n            return this._markerStrokeWidth;\n        },\n        set: function (value) {\n            if (this._markerStrokeWidth !== value) {\n                this._markerStrokeWidth = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AreaSeries.prototype, \"shadow\", {\n        get: function () {\n            return this._shadow;\n        },\n        set: function (value) {\n            if (this._shadow !== value) {\n                this._shadow = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AreaSeries.prototype.highlightNode = function (node) {\n        if (!(node instanceof arc_1.Arc)) {\n            return;\n        }\n        this.highlightedNode = node;\n        this.scheduleLayout();\n    };\n    AreaSeries.prototype.dehighlightNode = function () {\n        this.highlightedNode = undefined;\n        this.scheduleLayout();\n    };\n    AreaSeries.prototype.processData = function () {\n        var chart = this.chart;\n        var xField = this.xField;\n        var yFields = this.yFields;\n        var data = this.data;\n        if (!(chart && chart.xAxis && chart.yAxis)) {\n            return false;\n        }\n        if (!(xField && yFields.length)) {\n            this._data = data = [];\n        }\n        // If the data is an array of rows like so:\n        //\n        // [{\n        //   xField: 'Jan',\n        //   yField1: 5,\n        //   yField2: 7,\n        //   yField3: -9,\n        // }, {\n        //   xField: 'Feb',\n        //   yField1: 10,\n        //   yField2: -15,\n        //   yField3: 20\n        // }]\n        //\n        var enabled = this.enabled;\n        var normalizedTo = this.normalizedTo;\n        var continuousX = chart.xAxis.scale instanceof continuousScale_1.default;\n        var xData = this.xData = data.map(function (datum) { return datum[xField]; });\n        var ySums = this.ySums = []; // used for normalization\n        var yData = this.yData = data.map(function (datum, xIndex) {\n            var values = [];\n            var ySum = 0;\n            yFields.forEach(function (field) {\n                var value = datum[field];\n                if (!isFinite(value) || !enabled.get(field)) {\n                    value = 0;\n                }\n                if (value < 0) {\n                    value = Math.abs(value);\n                }\n                if (value > 0) {\n                    ySum += value;\n                }\n                values.push(value);\n            });\n            ySums[xIndex] = ySum;\n            return values;\n        });\n        // xData: ['Jan', 'Feb']\n        //\n        // yData: [\n        //   [5, 7, -9],\n        //   [10, -15, 20]\n        // ]\n        var yMin = Infinity;\n        var yMax = -Infinity;\n        if (isFinite(normalizedTo)) {\n            yMin = 0;\n            yMax = normalizedTo;\n            yData.forEach(function (stack, i) {\n                var ySum = ySums[i];\n                stack.forEach(function (y, j) { return stack[j] = y / ySum * normalizedTo; });\n            });\n        }\n        else {\n            // Find the height of each stack in the positive and negative directions,\n            // then find the tallest stacks in both directions.\n            yMin = Math.min.apply(Math, [0].concat(yData.map(function (stackValues) {\n                var min = 0;\n                stackValues.forEach(function (value) {\n                    if (value < 0) {\n                        min -= value;\n                    }\n                });\n                return min;\n            })));\n            yMax = Math.max.apply(Math, yData.map(function (stackValues) {\n                var max = 0;\n                stackValues.forEach(function (value) {\n                    if (value > 0) {\n                        max += value;\n                    }\n                });\n                return max;\n            }));\n        }\n        if (yMin === yMax || !isFinite(yMin) || !isFinite(yMax)) {\n            yMin = 0;\n            yMax = 1;\n            // console.warn('Zero or infinite y-range.');\n        }\n        var domainX = continuousX ? (array_1.numericExtent(xData) || [0, 1]) : xData;\n        if (continuousX) {\n            var _a = domainX, min = _a[0], max = _a[1];\n            if (min === max) {\n                domainX[0] = min - 1;\n                domainX[1] = max + 1;\n            }\n        }\n        this.domainX = domainX;\n        this.domainY = [yMin, yMax];\n        if (chart) {\n            chart.updateAxes();\n        }\n        return true;\n    };\n    AreaSeries.prototype.getDomainX = function () {\n        return this.xData;\n    };\n    AreaSeries.prototype.getDomainY = function () {\n        return this.domainY;\n    };\n    AreaSeries.prototype.update = function () {\n        var _this = this;\n        var chart = this.chart;\n        var visible = this.group.visible = this.visible;\n        if (!chart || !visible || chart.dataPending || chart.layoutPending || !(chart.xAxis && chart.yAxis)) {\n            return;\n        }\n        var xCount = this.data.length;\n        var xAxis = chart.xAxis;\n        var yAxis = chart.yAxis;\n        var xScale = xAxis.scale;\n        var yScale = yAxis.scale;\n        var xOffset = (xScale.bandwidth || 0) / 2;\n        var yOffset = (yScale.bandwidth || 0) / 2;\n        var yFields = this.yFields;\n        var enabled = this.enabled;\n        var fills = this.fills;\n        var strokes = this.strokes;\n        var fillOpacity = this.fillOpacity;\n        var strokeOpacity = this.strokeOpacity;\n        var strokeWidth = this.strokeWidth;\n        var data = this.data;\n        var xData = this.xData;\n        var yData = this.yData;\n        var marker = this.marker;\n        var markerSize = this.markerSize;\n        var markerStrokeWidth = this.markerStrokeWidth;\n        var areaSelectionData = [];\n        var markerSelectionData = [];\n        var last = xCount * 2 - 1;\n        for (var i = 0; i < xCount; i++) {\n            var xDatum = xData[i];\n            var yDatum = yData[i];\n            var yCount = yDatum.length;\n            var x = xScale.convert(xDatum) + xOffset;\n            var prev = 0;\n            var curr = void 0;\n            for (var j = 0; j < yCount; j++) {\n                curr = yDatum[j];\n                var y = yScale.convert(prev + curr) + yOffset;\n                var yField = yFields[j];\n                var seriesDatum = data[i];\n                var yValue = seriesDatum[yField];\n                if (marker) {\n                    markerSelectionData.push({\n                        seriesDatum: seriesDatum,\n                        yValue: yValue,\n                        yField: yField,\n                        x: x,\n                        y: y,\n                        fill: fills[j % fills.length],\n                        stroke: strokes[j % strokes.length],\n                        radius: markerSize / 2,\n                        text: this.yFieldNames[j]\n                    });\n                }\n                var areaDatum = areaSelectionData[j] || (areaSelectionData[j] = {\n                    yField: yField,\n                    points: []\n                });\n                var areaPoints = areaDatum.points;\n                areaPoints[i] = {\n                    x: x,\n                    y: y\n                };\n                areaPoints[last - i] = {\n                    x: x,\n                    y: yScale.convert(prev) + yOffset // bottom y\n                };\n                prev += curr;\n            }\n        }\n        var updateAreas = this.areaSelection.setData(areaSelectionData);\n        var updateStrokes = this.strokeSelection.setData(areaSelectionData);\n        var updateMarkers = this.markerSelection.setData(markerSelectionData);\n        updateAreas.exit.remove();\n        updateStrokes.exit.remove();\n        updateMarkers.exit.remove();\n        var enterAreas = updateAreas.enter.append(path_1.Path)\n            .each(function (path) {\n            path.stroke = undefined;\n            path.pointerEvents = node_1.PointerEvents.None;\n        });\n        var enterStrokes = updateStrokes.enter.append(path_1.Path)\n            .each(function (path) {\n            path.fill = undefined;\n            path.lineJoin = 'round';\n            path.lineCap = 'round';\n            path.pointerEvents = node_1.PointerEvents.None;\n        });\n        var enterMarkers = updateMarkers.enter.append(arc_1.Arc)\n            .each(function (arc) { return arc.type = arc_1.ArcType.Chord; });\n        var highlightedNode = this.highlightedNode;\n        var areaSelection = updateAreas.merge(enterAreas);\n        var strokeSelection = updateStrokes.merge(enterStrokes);\n        var markerSelection = updateMarkers.merge(enterMarkers);\n        areaSelection.each(function (shape, datum, index) {\n            var path = shape.path;\n            shape.fill = fills[index % fills.length];\n            shape.fillOpacity = fillOpacity;\n            shape.fillShadow = _this.shadow;\n            shape.visible = !!enabled.get(datum.yField);\n            path.clear();\n            var points = datum.points;\n            var n = points.length;\n            for (var i = 0; i < n; i++) {\n                var _a = points[i], x = _a.x, y = _a.y;\n                if (!i) {\n                    path.moveTo(x, y);\n                }\n                else {\n                    path.lineTo(x, y);\n                }\n            }\n            path.closePath();\n        });\n        strokeSelection.each(function (shape, datum, index) {\n            var path = shape.path;\n            shape.stroke = strokes[index % strokes.length];\n            shape.strokeWidth = strokeWidth;\n            shape.visible = !!enabled.get(datum.yField);\n            shape.strokeOpacity = strokeOpacity;\n            path.clear();\n            var points = datum.points;\n            // The stroke doesn't go all the way around the fill, only on top,\n            // that's why we iterate until `xCount` (rather than `points.length`) and stop.\n            for (var i = 0; i < xCount; i++) {\n                var _a = points[i], x = _a.x, y = _a.y;\n                if (!i) {\n                    path.moveTo(x, y);\n                }\n                else {\n                    path.lineTo(x, y);\n                }\n            }\n        });\n        markerSelection.each(function (arc, datum) {\n            arc.centerX = datum.x;\n            arc.centerY = datum.y;\n            arc.radiusX = datum.radius;\n            arc.radiusY = datum.radius;\n            arc.fill = arc === highlightedNode && _this.highlightStyle.fill !== undefined\n                ? _this.highlightStyle.fill\n                : datum.fill;\n            arc.stroke = arc === highlightedNode && _this.highlightStyle.stroke !== undefined\n                ? _this.highlightStyle.stroke\n                : datum.stroke;\n            arc.strokeWidth = markerStrokeWidth;\n            arc.visible = datum.radius > 0 && !!enabled.get(datum.yField);\n        });\n        this.areaSelection = areaSelection;\n        this.strokeSelection = strokeSelection;\n        this.markerSelection = markerSelection;\n    };\n    AreaSeries.prototype.getTooltipHtml = function (nodeDatum) {\n        var html = '';\n        if (this.tooltipEnabled) {\n            var xField = this.xField;\n            var yField = nodeDatum.yField;\n            var yFields = this.yFields;\n            var yFieldIndex = yFields.indexOf(yField);\n            var color = this.fills[yFieldIndex % this.fills.length];\n            var title = nodeDatum.text;\n            if (this.tooltipRenderer && xField) {\n                html = this.tooltipRenderer({\n                    datum: nodeDatum.seriesDatum,\n                    xField: xField,\n                    yField: yField,\n                    title: title,\n                    color: color\n                });\n            }\n            else {\n                var titleStyle = \"style=\\\"color: white; background-color: \" + color + \"\\\"\";\n                title = title ? \"<div class=\\\"title\\\" \" + titleStyle + \">\" + title + \"</div>\" : '';\n                var seriesDatum = nodeDatum.seriesDatum;\n                var xValue = seriesDatum[xField];\n                var yValue = seriesDatum[yField];\n                var xString = typeof (xValue) === 'number' ? number_1.toFixed(xValue) : String(xValue);\n                var yString = typeof (yValue) === 'number' ? number_1.toFixed(yValue) : String(yValue);\n                html = title + \"<div class=\\\"content\\\">\" + xString + \": \" + yString + \"</div>\";\n            }\n        }\n        return html;\n    };\n    AreaSeries.prototype.listSeriesItems = function (data) {\n        var _this = this;\n        if (this.data.length && this.xField && this.yFields.length) {\n            var fills_1 = this.fills;\n            var strokes_1 = this.strokes;\n            var id_1 = this.id;\n            this.yFields.forEach(function (yField, index) {\n                data.push({\n                    id: id_1,\n                    itemId: yField,\n                    enabled: _this.enabled.get(yField) || false,\n                    label: {\n                        text: _this.yFieldNames[index] || _this.yFields[index]\n                    },\n                    marker: {\n                        fill: fills_1[index % fills_1.length],\n                        stroke: strokes_1[index % strokes_1.length]\n                    }\n                });\n            });\n        }\n    };\n    AreaSeries.prototype.toggleSeriesItem = function (itemId, enabled) {\n        this.enabled.set(itemId, enabled);\n        this.scheduleData();\n    };\n    AreaSeries.className = 'AreaSeries';\n    return AreaSeries;\n}(series_1.Series));\nexports.AreaSeries = AreaSeries;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar group_1 = require(\"../../scene/group\");\nvar selection_1 = require(\"../../scene/selection\");\nvar rect_1 = require(\"../../scene/shape/rect\");\nvar text_1 = require(\"../../scene/shape/text\");\nvar bandScale_1 = require(\"../../scale/bandScale\");\nvar palettes_1 = require(\"../palettes\");\nvar series_1 = require(\"./series\");\nvar node_1 = require(\"../../scene/node\");\nvar number_1 = require(\"../../util/number\");\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar numberAxis_1 = require(\"../axis/numberAxis\");\nvar BarSeriesNodeTag;\n(function (BarSeriesNodeTag) {\n    BarSeriesNodeTag[BarSeriesNodeTag[\"Bar\"] = 0] = \"Bar\";\n    BarSeriesNodeTag[BarSeriesNodeTag[\"Label\"] = 1] = \"Label\";\n})(BarSeriesNodeTag || (BarSeriesNodeTag = {}));\nvar BarSeries = /** @class */ (function (_super) {\n    __extends(BarSeries, _super);\n    function BarSeries() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // Need to put bar and label nodes into separate groups, because even though label nodes are\n        // created after the bar nodes, this only guarantees that labels will always be on top of bars\n        // on the first run. If on the next run more bars are added, they might clip the labels\n        // rendered during the previous run.\n        _this.rectGroup = _this.group.appendChild(new group_1.Group);\n        _this.textGroup = _this.group.appendChild(new group_1.Group);\n        _this.rectSelection = selection_1.Selection.select(_this.rectGroup).selectAll();\n        _this.textSelection = selection_1.Selection.select(_this.textGroup).selectAll();\n        /**\n         * The assumption is that the values will be reset (to `true`)\n         * in the {@link yFields} setter.\n         */\n        _this.enabled = new Map();\n        _this._fills = palettes_1.default.fills;\n        _this._strokes = palettes_1.default.strokes;\n        _this._fillOpacity = 1;\n        _this._strokeOpacity = 1;\n        _this.xData = [];\n        _this.yData = [];\n        _this.ySums = [];\n        _this.domainY = [];\n        /**\n         * Used to get the position of bars within each group.\n         */\n        _this.groupScale = new bandScale_1.BandScale();\n        _this._xField = '';\n        /**\n         * With a single value in the `yFields` array we get the regular bar series.\n         * With multiple values, we get the stacked bar series.\n         * If the {@link grouped} set to `true`, we get the grouped bar series.\n         * @param values\n         */\n        _this._yFields = [];\n        _this._yFieldNames = [];\n        _this._grouped = false;\n        /**\n         * The value to normalize the stacks to, when {@link grouped} is `false`.\n         * Should be a finite positive value or `NaN`.\n         * Defaults to `NaN` - stacks are not normalized.\n         */\n        _this._normalizedTo = NaN;\n        _this._strokeWidth = 1;\n        _this._shadow = undefined;\n        _this._labelEnabled = true;\n        _this._labelFontStyle = undefined;\n        _this._labelFontWeight = undefined;\n        _this._labelFontSize = 12;\n        _this._labelFontFamily = 'Verdana, sans-serif';\n        _this._labelColor = 'black';\n        _this._labelFormatter = undefined;\n        _this.highlightStyle = {\n            fill: 'yellow'\n        };\n        return _this;\n    }\n    Object.defineProperty(BarSeries.prototype, \"fills\", {\n        get: function () {\n            return this._fills;\n        },\n        set: function (values) {\n            this._fills = values;\n            this.strokes = values.map(function (color) { return ag_grid_community_1.Color.fromString(color).darker().toHexString(); });\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"strokes\", {\n        get: function () {\n            return this._strokes;\n        },\n        set: function (values) {\n            this._strokes = values;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"fillOpacity\", {\n        get: function () {\n            return this._fillOpacity;\n        },\n        set: function (value) {\n            if (this._fillOpacity !== value) {\n                this._fillOpacity = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"strokeOpacity\", {\n        get: function () {\n            return this._strokeOpacity;\n        },\n        set: function (value) {\n            if (this._strokeOpacity !== value) {\n                this._strokeOpacity = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"chart\", {\n        get: function () {\n            return this._chart;\n        },\n        set: function (chart) {\n            if (this._chart !== chart) {\n                this._chart = chart;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"xField\", {\n        get: function () {\n            return this._xField;\n        },\n        set: function (value) {\n            if (this._xField !== value) {\n                this._xField = value;\n                this.xData = [];\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"yFields\", {\n        get: function () {\n            return this._yFields;\n        },\n        set: function (values) {\n            this._yFields = values;\n            var enabled = this.enabled;\n            enabled.clear();\n            values.forEach(function (field) { return enabled.set(field, true); });\n            var groupScale = this.groupScale;\n            groupScale.domain = values;\n            groupScale.padding = 0.1;\n            groupScale.round = true;\n            this.yData = [];\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"yFieldNames\", {\n        get: function () {\n            return this._yFieldNames;\n        },\n        set: function (values) {\n            this._yFieldNames = values;\n            this.update();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"grouped\", {\n        get: function () {\n            return this._grouped;\n        },\n        set: function (value) {\n            if (this._grouped !== value) {\n                this._grouped = value;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"normalizedTo\", {\n        get: function () {\n            return this._normalizedTo;\n        },\n        set: function (value) {\n            if (value === 0) {\n                value = NaN;\n            }\n            var absValue = Math.abs(value);\n            if (this._normalizedTo !== absValue) {\n                this._normalizedTo = absValue;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"strokeWidth\", {\n        get: function () {\n            return this._strokeWidth;\n        },\n        set: function (value) {\n            if (this._strokeWidth !== value) {\n                this._strokeWidth = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"shadow\", {\n        get: function () {\n            return this._shadow;\n        },\n        set: function (value) {\n            if (this._shadow !== value) {\n                this._shadow = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"labelEnabled\", {\n        get: function () {\n            return this._labelEnabled;\n        },\n        set: function (value) {\n            if (this._labelEnabled !== value) {\n                this._labelEnabled = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"labelFontStyle\", {\n        get: function () {\n            return this._labelFontStyle;\n        },\n        set: function (value) {\n            if (this._labelFontStyle !== value) {\n                this._labelFontStyle = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"labelFontWeight\", {\n        get: function () {\n            return this._labelFontWeight;\n        },\n        set: function (value) {\n            if (this._labelFontWeight !== value) {\n                this._labelFontWeight = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"labelFontSize\", {\n        get: function () {\n            return this._labelFontSize;\n        },\n        set: function (value) {\n            if (this._labelFontSize !== value) {\n                this._labelFontSize = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"labelFontFamily\", {\n        get: function () {\n            return this._labelFontFamily;\n        },\n        set: function (value) {\n            if (this._labelFontFamily !== value) {\n                this._labelFontFamily = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"labelColor\", {\n        get: function () {\n            return this._labelColor;\n        },\n        set: function (value) {\n            if (this._labelColor !== value) {\n                this._labelColor = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"labelFormatter\", {\n        get: function () {\n            return this._labelFormatter;\n        },\n        set: function (value) {\n            if (this._labelFormatter !== value) {\n                this._labelFormatter = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BarSeries.prototype.highlightNode = function (node) {\n        if (!(node instanceof rect_1.Rect)) {\n            return;\n        }\n        this.highlightedNode = node;\n        this.scheduleLayout();\n    };\n    BarSeries.prototype.dehighlightNode = function () {\n        this.highlightedNode = undefined;\n        this.scheduleLayout();\n    };\n    BarSeries.prototype.processData = function () {\n        var data = this.data;\n        var xField = this.xField;\n        var yFields = this.yFields;\n        if (!(xField && yFields.length)) {\n            this._data = data = [];\n        }\n        // If the data is an array of rows like so:\n        //\n        // [{\n        //   xField: 'Jan',\n        //   yField1: 5,\n        //   yField2: 7,\n        //   yField3: -9,\n        // }, {\n        //   xField: 'Feb',\n        //   yField1: 10,\n        //   yField2: -15,\n        //   yField3: 20\n        // }]\n        //\n        var enabled = this.enabled;\n        var normalizedTo = this.normalizedTo;\n        var xData = this.xData = data.map(function (datum) { return datum[xField]; });\n        var ySums = this.ySums = []; // used for normalization of stacked bars\n        var yData = this.yData = data.map(function (datum, xIndex) {\n            var values = [];\n            var ySum = 0;\n            yFields.forEach(function (field) {\n                var value = datum[field];\n                if (!isFinite(value) || !enabled.get(field)) {\n                    value = 0;\n                }\n                if (value > 0) {\n                    ySum += value;\n                }\n                values.push(value);\n            });\n            ySums[xIndex] = ySum;\n            return values;\n        });\n        // xData: ['Jan', 'Feb']\n        //\n        // yData: [\n        //   [5, 7, -9],\n        //   [10, -15, 20]\n        // ]\n        var yMin = Infinity;\n        var yMax = -Infinity;\n        if (this.grouped) {\n            // Find the tallest positive/negative bar in each group,\n            // then find the tallest positive/negative bar overall.\n            // The `yMin` should always be <= 0,\n            // otherwise with the `yData` like [300, 200, 100] the last bar\n            // will have zero height, because the y-axis range is [100, 300].\n            yMin = Math.min.apply(Math, yData.map(function (groupValues) { return Math.min.apply(Math, [0].concat(groupValues)); }));\n            yMax = Math.max.apply(Math, yData.map(function (groupValues) { return Math.max.apply(Math, groupValues); }));\n        }\n        else { // stacked or regular\n            if (isFinite(normalizedTo)) {\n                yMin = 0;\n                yMax = normalizedTo;\n                yData.forEach(function (stackValues, i) {\n                    var ySum = ySums[i];\n                    stackValues.forEach(function (y, j) { return stackValues[j] = y / ySum * normalizedTo; });\n                });\n            }\n            else {\n                // Find the height of each stack in the positive and negative directions,\n                // then find the tallest stacks in both directions.\n                yMin = Math.min.apply(Math, [0].concat(yData.map(function (stackValues) {\n                    var min = 0;\n                    stackValues.forEach(function (y) {\n                        if (y < 0) {\n                            min -= y;\n                        }\n                    });\n                    return min;\n                })));\n                yMax = Math.max.apply(Math, yData.map(function (stackValues) {\n                    var max = 0;\n                    stackValues.forEach(function (y) {\n                        if (y > 0) {\n                            max += y;\n                        }\n                    });\n                    return max;\n                }));\n            }\n        }\n        if (yMin === yMax || !isFinite(yMin) || !isFinite(yMax)) {\n            yMin = 0;\n            yMax = 1;\n            // console.warn('Zero or infinite y-range.');\n        }\n        this.domainY = [yMin, yMax];\n        var chart = this.chart;\n        if (chart) {\n            chart.updateAxes();\n        }\n        return true;\n    };\n    BarSeries.prototype.getDomainX = function () {\n        return this.xData;\n    };\n    BarSeries.prototype.getDomainY = function () {\n        return this.domainY;\n    };\n    BarSeries.prototype.update = function () {\n        var _this = this;\n        var chart = this.chart;\n        var visible = this.group.visible = this.visible;\n        if (!chart || !visible || chart.dataPending || chart.layoutPending || !(chart.xAxis && chart.yAxis)) {\n            return;\n        }\n        var categoryCount = this.data.length;\n        var flipXY = !(chart.yAxis instanceof numberAxis_1.NumberAxis);\n        var xAxis = flipXY ? chart.yAxis : chart.xAxis;\n        var yAxis = flipXY ? chart.xAxis : chart.yAxis;\n        var xScale = xAxis.scale;\n        var yScale = yAxis.scale;\n        var groupScale = this.groupScale;\n        var yFields = this.yFields;\n        var fills = this.fills;\n        var strokes = this.strokes;\n        var fillOpacity = this.fillOpacity;\n        var strokeOpacity = this.strokeOpacity;\n        var grouped = this.grouped;\n        var strokeWidth = this.strokeWidth;\n        var enabled = this.enabled;\n        var labelEnabled = this.labelEnabled;\n        var labelFontStyle = this.labelFontStyle;\n        var labelFontWeight = this.labelFontWeight;\n        var labelFontSize = this.labelFontSize;\n        var labelFontFamily = this.labelFontFamily;\n        var labelColor = this.labelColor;\n        var labelFormatter = this.labelFormatter;\n        var data = this.data;\n        var xData = this.xData;\n        var yData = this.yData;\n        groupScale.range = [0, xScale.bandwidth];\n        var barWidth = grouped ? groupScale.bandwidth : xScale.bandwidth;\n        var selectionData = [];\n        for (var i = 0; i < categoryCount; i++) {\n            var category = xData[i];\n            var values = yData[i];\n            var valueCount = values.length;\n            var x = xScale.convert(category);\n            var prev = 0;\n            var curr = void 0;\n            for (var j = 0; j < valueCount; j++) {\n                curr = values[j];\n                var yField = yFields[j];\n                var yFieldEnabled = enabled.get(yField);\n                var barX = grouped ? x + groupScale.convert(yField) : x;\n                var y = yScale.convert((grouped ? curr : prev + curr));\n                var bottomY = yScale.convert((grouped ? 0 : prev));\n                var seriesDatum = data[i];\n                var yValue = seriesDatum[yField]; // unprocessed y-value\n                var yValueIsNumber = typeof yValue === 'number';\n                var labelText = void 0;\n                if (labelFormatter) {\n                    labelText = labelFormatter({\n                        value: yValueIsNumber ? yValue : NaN\n                    });\n                }\n                else {\n                    labelText = yValueIsNumber && isFinite(yValue) ? yValue.toFixed(2) : '';\n                }\n                selectionData.push({\n                    seriesDatum: seriesDatum,\n                    yValue: yValue,\n                    yField: yField,\n                    x: flipXY ? Math.min(y, bottomY) : barX,\n                    y: flipXY ? barX : Math.min(y, bottomY),\n                    width: flipXY ? Math.abs(bottomY - y) : barWidth,\n                    height: flipXY ? barWidth : Math.abs(bottomY - y),\n                    fill: fills[j % fills.length],\n                    stroke: strokes[j % strokes.length],\n                    strokeWidth: strokeWidth,\n                    label: yFieldEnabled && labelText ? {\n                        text: labelText,\n                        fontStyle: labelFontStyle,\n                        fontWeight: labelFontWeight,\n                        fontSize: labelFontSize,\n                        fontFamily: labelFontFamily,\n                        fill: labelColor,\n                        x: flipXY ? y + (yValue >= 0 ? -1 : 1) * Math.abs(bottomY - y) / 2 : barX + barWidth / 2,\n                        y: flipXY ? barX + barWidth / 2 : y + (yValue >= 0 ? 1 : -1) * Math.abs(bottomY - y) / 2\n                    } : undefined\n                });\n                if (grouped) {\n                    prev = curr;\n                }\n                else {\n                    prev += curr;\n                }\n            }\n        }\n        var updateRects = this.rectSelection.setData(selectionData);\n        var updateTexts = this.textSelection.setData(selectionData);\n        updateRects.exit.remove();\n        updateTexts.exit.remove();\n        var enterRects = updateRects.enter.append(rect_1.Rect).each(function (rect) {\n            rect.tag = BarSeriesNodeTag.Bar;\n            // rect.sizing = RectSizing.Border;\n            rect.crisp = true;\n        });\n        var enterTexts = updateTexts.enter.append(text_1.Text).each(function (text) {\n            text.tag = BarSeriesNodeTag.Label;\n            text.pointerEvents = node_1.PointerEvents.None;\n            text.textAlign = 'center';\n            text.textBaseline = 'middle';\n        });\n        var highlightedNode = this.highlightedNode;\n        var rectSelection = updateRects.merge(enterRects);\n        var textSelection = updateTexts.merge(enterTexts);\n        rectSelection.each(function (rect, datum) {\n            rect.x = datum.x;\n            rect.y = datum.y;\n            rect.width = datum.width;\n            rect.height = datum.height;\n            rect.fill = rect === highlightedNode && _this.highlightStyle.fill !== undefined\n                ? _this.highlightStyle.fill\n                : datum.fill;\n            rect.stroke = rect === highlightedNode && _this.highlightStyle.stroke !== undefined\n                ? _this.highlightStyle.stroke\n                : datum.stroke;\n            rect.fillOpacity = fillOpacity;\n            rect.strokeOpacity = strokeOpacity;\n            rect.strokeWidth = datum.strokeWidth;\n            rect.fillShadow = _this.shadow;\n            rect.visible = datum.height > 0; // prevent stroke from rendering for zero height columns\n        });\n        textSelection.each(function (text, datum) {\n            var label = datum.label;\n            if (label && labelEnabled) {\n                text.fontStyle = label.fontStyle;\n                text.fontWeight = label.fontWeight;\n                text.fontSize = label.fontSize;\n                text.fontFamily = label.fontFamily;\n                text.text = label.text;\n                text.x = label.x;\n                text.y = label.y;\n                text.fill = label.fill;\n                text.visible = true;\n            }\n            else {\n                text.visible = false;\n            }\n        });\n        this.rectSelection = rectSelection;\n        this.textSelection = textSelection;\n    };\n    BarSeries.prototype.getTooltipHtml = function (nodeDatum) {\n        var html = '';\n        if (this.tooltipEnabled) {\n            var xField = this.xField;\n            var yField = nodeDatum.yField;\n            var yFields = this.yFields;\n            var yFieldIndex = yFields.indexOf(yField);\n            var datum = nodeDatum.seriesDatum;\n            var color = this.fills[yFieldIndex % this.fills.length];\n            var title = this.yFieldNames[yFieldIndex] || undefined;\n            if (this.tooltipRenderer && xField) {\n                html = this.tooltipRenderer({\n                    datum: datum,\n                    xField: xField,\n                    yField: yField,\n                    title: title,\n                    color: color\n                });\n            }\n            else {\n                var titleStyle = \"style=\\\"color: white; background-color: \" + color + \"\\\"\";\n                title = title ? \"<div class=\\\"title\\\" \" + titleStyle + \">\" + title + \"</div>\" : '';\n                var xValue = datum[xField];\n                var yValue = datum[yField];\n                var xString = typeof (xValue) === 'number' ? number_1.toFixed(xValue) : String(xValue);\n                var yString = typeof (yValue) === 'number' ? number_1.toFixed(yValue) : String(yValue);\n                html = title + \"<div class=\\\"content\\\">\" + xString + \": \" + yString + \"</div>\";\n            }\n        }\n        return html;\n    };\n    BarSeries.prototype.listSeriesItems = function (data) {\n        var _this = this;\n        if (this.data.length && this.xField && this.yFields.length) {\n            var fills_1 = this.fills;\n            var strokes_1 = this.strokes;\n            var id_1 = this.id;\n            this.yFields.forEach(function (yField, index) {\n                data.push({\n                    id: id_1,\n                    itemId: yField,\n                    enabled: _this.enabled.get(yField) || false,\n                    label: {\n                        text: _this.yFieldNames[index] || _this.yFields[index]\n                    },\n                    marker: {\n                        fill: fills_1[index % fills_1.length],\n                        stroke: strokes_1[index % strokes_1.length]\n                    }\n                });\n            });\n        }\n    };\n    BarSeries.prototype.toggleSeriesItem = function (itemId, enabled) {\n        this.enabled.set(itemId, enabled);\n        var enabledYFields = [];\n        this.enabled.forEach(function (enabled, yField) {\n            if (enabled) {\n                enabledYFields.push(yField);\n            }\n        });\n        this.groupScale.domain = enabledYFields;\n        this.scheduleData();\n    };\n    BarSeries.className = 'BarSeries';\n    return BarSeries;\n}(series_1.Series));\nexports.BarSeries = BarSeries;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar path_1 = require(\"../../scene/shape/path\");\nvar continuousScale_1 = require(\"../../scale/continuousScale\");\nvar selection_1 = require(\"../../scene/selection\");\nvar group_1 = require(\"../../scene/group\");\nvar arc_1 = require(\"../../scene/shape/arc\");\nvar array_1 = require(\"../../util/array\");\nvar palettes_1 = require(\"../palettes\");\nvar series_1 = require(\"./series\");\nvar number_1 = require(\"../../util/number\");\nvar node_1 = require(\"../../scene/node\");\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar LineSeries = /** @class */ (function (_super) {\n    __extends(LineSeries, _super);\n    function LineSeries() {\n        var _this = _super.call(this) || this;\n        _this.domainX = [];\n        _this.domainY = [];\n        _this.xData = [];\n        _this.yData = [];\n        _this.lineNode = new path_1.Path();\n        _this.groupSelection = selection_1.Selection.select(_this.group).selectAll();\n        _this._title = '';\n        _this._xField = '';\n        _this._yField = '';\n        _this._marker = false;\n        _this._markerSize = 8;\n        _this._markerStrokeWidth = 2;\n        _this._fill = palettes_1.default.fills[0];\n        _this._stroke = palettes_1.default.strokes[0];\n        _this._strokeWidth = 3;\n        _this.highlightStyle = {\n            fill: 'yellow'\n        };\n        var lineNode = _this.lineNode;\n        lineNode.fill = undefined;\n        lineNode.lineJoin = 'round';\n        lineNode.pointerEvents = node_1.PointerEvents.None;\n        _this.group.append(lineNode);\n        return _this;\n    }\n    Object.defineProperty(LineSeries.prototype, \"chart\", {\n        get: function () {\n            return this._chart;\n        },\n        set: function (chart) {\n            if (this._chart !== chart) {\n                this._chart = chart;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSeries.prototype, \"title\", {\n        get: function () {\n            return this._title;\n        },\n        set: function (value) {\n            if (this._title !== value) {\n                this._title = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSeries.prototype, \"xField\", {\n        get: function () {\n            return this._xField;\n        },\n        set: function (value) {\n            if (this._xField !== value) {\n                this._xField = value;\n                this.xData = [];\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSeries.prototype, \"yField\", {\n        get: function () {\n            return this._yField;\n        },\n        set: function (value) {\n            if (this._yField !== value) {\n                this._yField = value;\n                this.yData = [];\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSeries.prototype, \"marker\", {\n        get: function () {\n            return this._marker;\n        },\n        set: function (value) {\n            if (this._marker !== value) {\n                this._marker = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSeries.prototype, \"markerSize\", {\n        get: function () {\n            return this._markerSize;\n        },\n        set: function (value) {\n            if (this._markerSize !== value) {\n                this._markerSize = Math.abs(value);\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSeries.prototype, \"markerStrokeWidth\", {\n        get: function () {\n            return this._markerStrokeWidth;\n        },\n        set: function (value) {\n            if (this._markerStrokeWidth !== value) {\n                this._markerStrokeWidth = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LineSeries.prototype.processData = function () {\n        var chart = this.chart;\n        var xField = this.xField;\n        var yField = this.yField;\n        var data = this.data;\n        if (!(chart && chart.xAxis && chart.yAxis)) {\n            return false;\n        }\n        if (!(xField && yField)) {\n            this._data = data = [];\n        }\n        this.xData = data.map(function (datum) { return datum[xField]; });\n        this.yData = data.map(function (datum) { return datum[yField]; });\n        var continuousX = chart.xAxis.scale instanceof continuousScale_1.default;\n        var domainX = continuousX ? (array_1.numericExtent(this.xData) || [0, 1]) : this.xData;\n        var domainY = array_1.numericExtent(this.yData) || [0, 1];\n        if (continuousX) {\n            var _a = domainX, min = _a[0], max = _a[1];\n            if (min === max) {\n                domainX[0] = min - 1;\n                domainX[1] = max + 1;\n            }\n        }\n        {\n            var _b = domainY, min = _b[0], max = _b[1];\n            if (min === max) {\n                domainY[0] = min - 1;\n                domainY[1] = max + 1;\n            }\n        }\n        this.domainX = domainX;\n        this.domainY = domainY;\n        return true;\n    };\n    Object.defineProperty(LineSeries.prototype, \"fill\", {\n        get: function () {\n            return this._fill;\n        },\n        set: function (value) {\n            if (this._fill !== value) {\n                this._fill = value;\n                this.stroke = ag_grid_community_1.Color.fromString(value).darker().toHexString();\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSeries.prototype, \"stroke\", {\n        get: function () {\n            return this._stroke;\n        },\n        set: function (value) {\n            if (this._stroke !== value) {\n                this._stroke = value;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSeries.prototype, \"strokeWidth\", {\n        get: function () {\n            return this._strokeWidth;\n        },\n        set: function (value) {\n            if (this._strokeWidth !== value) {\n                this._strokeWidth = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LineSeries.prototype.highlightNode = function (node) {\n        if (!(node instanceof arc_1.Arc)) {\n            return;\n        }\n        this.highlightedNode = node;\n        this.scheduleLayout();\n    };\n    LineSeries.prototype.dehighlightNode = function () {\n        this.highlightedNode = undefined;\n        this.scheduleLayout();\n    };\n    LineSeries.prototype.update = function () {\n        var _this = this;\n        var chart = this.chart;\n        var visible = this.group.visible = this.visible;\n        if (!chart || !visible || chart.dataPending || chart.layoutPending || !(chart.xAxis && chart.yAxis)) {\n            return;\n        }\n        var xAxis = chart.xAxis;\n        var yAxis = chart.yAxis;\n        var xScale = xAxis.scale;\n        var yScale = yAxis.scale;\n        var xOffset = (xScale.bandwidth || 0) / 2;\n        var yOffset = (yScale.bandwidth || 0) / 2;\n        var data = this.data;\n        var xData = this.xData;\n        var yData = this.yData;\n        var n = xData.length;\n        var fill = this.fill;\n        var stroke = this.stroke;\n        var marker = this.marker;\n        var markerSize = this.markerSize;\n        var markerStrokeWidth = this.markerStrokeWidth;\n        var lineNode = this.lineNode;\n        var linePath = lineNode.path;\n        var groupSelectionData = [];\n        linePath.clear();\n        for (var i = 0; i < n; i++) {\n            var xDatum = xData[i];\n            var yDatum = yData[i];\n            var x = xScale.convert(xDatum) + xOffset;\n            var y = yScale.convert(yDatum) + yOffset;\n            if (!i) {\n                linePath.moveTo(x, y);\n            }\n            else {\n                linePath.lineTo(x, y);\n            }\n            if (marker) {\n                groupSelectionData.push({\n                    seriesDatum: data[i],\n                    x: x,\n                    y: y,\n                    fill: fill,\n                    stroke: stroke,\n                    strokeWidth: markerStrokeWidth,\n                    radius: markerSize / 2\n                });\n            }\n        }\n        lineNode.stroke = stroke;\n        lineNode.strokeWidth = this.strokeWidth;\n        // ------------------------------------------\n        var updateGroups = this.groupSelection.setData(groupSelectionData);\n        updateGroups.exit.remove();\n        var enterGroups = updateGroups.enter.append(group_1.Group);\n        enterGroups.append(arc_1.Arc).each(function (arc) { return arc.type = arc_1.ArcType.Chord; });\n        var highlightedNode = this.highlightedNode;\n        var groupSelection = updateGroups.merge(enterGroups);\n        groupSelection.selectByClass(arc_1.Arc)\n            .each(function (arc, datum) {\n            arc.centerX = datum.x;\n            arc.centerY = datum.y;\n            arc.radiusX = datum.radius;\n            arc.radiusY = datum.radius;\n            arc.fill = arc === highlightedNode && _this.highlightStyle.fill !== undefined\n                ? _this.highlightStyle.fill\n                : datum.fill;\n            arc.stroke = arc === highlightedNode && _this.highlightStyle.stroke !== undefined\n                ? _this.highlightStyle.stroke\n                : datum.stroke;\n            arc.strokeWidth = datum.strokeWidth;\n            arc.visible = datum.radius > 0;\n        });\n        this.groupSelection = groupSelection;\n    };\n    LineSeries.prototype.getDomainX = function () {\n        return this.domainX;\n    };\n    LineSeries.prototype.getDomainY = function () {\n        return this.domainY;\n    };\n    LineSeries.prototype.getTooltipHtml = function (nodeDatum) {\n        var xField = this.xField;\n        var yField = this.yField;\n        var color = this.fill;\n        var html = '';\n        if (!xField || !yField) {\n            return html;\n        }\n        var title = this.title;\n        if (this.tooltipRenderer && this.xField) {\n            html = this.tooltipRenderer({\n                datum: nodeDatum.seriesDatum,\n                xField: xField,\n                yField: yField,\n                title: title,\n                color: color\n            });\n        }\n        else {\n            var titleStyle = \"style=\\\"color: white; background-color: \" + color + \"\\\"\";\n            title = title ? \"<div class=\\\"title\\\" \" + titleStyle + \">\" + title + \"</div>\" : '';\n            var seriesDatum = nodeDatum.seriesDatum;\n            var xValue = seriesDatum[xField];\n            var yValue = seriesDatum[yField];\n            var xString = typeof (xValue) === 'number' ? number_1.toFixed(xValue) : String(xValue);\n            var yString = typeof (yValue) === 'number' ? number_1.toFixed(yValue) : String(yValue);\n            html = title + \"<div class=\\\"content\\\">\" + xString + \": \" + yString + \"</div>\";\n        }\n        return html;\n    };\n    LineSeries.prototype.listSeriesItems = function (data) {\n        if (this.data.length && this.xField && this.yField) {\n            data.push({\n                id: this.id,\n                itemId: undefined,\n                enabled: this.visible,\n                label: {\n                    text: this.title || this.yField\n                },\n                marker: {\n                    fill: this.fill,\n                    stroke: this.stroke\n                }\n            });\n        }\n    };\n    LineSeries.className = 'LineSeries';\n    return LineSeries;\n}(series_1.Series));\nexports.LineSeries = LineSeries;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar group_1 = require(\"../../scene/group\");\nvar line_1 = require(\"../../scene/shape/line\");\nvar text_1 = require(\"../../scene/shape/text\");\nvar selection_1 = require(\"../../scene/selection\");\nvar linearScale_1 = require(\"../../scale/linearScale\");\nvar angle_1 = require(\"../../util/angle\");\nvar palettes_1 = require(\"../palettes\");\nvar sector_1 = require(\"../../scene/shape/sector\");\nvar series_1 = require(\"./series\");\nvar node_1 = require(\"../../scene/node\");\nvar number_1 = require(\"../../util/number\");\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar PieSeriesNodeTag;\n(function (PieSeriesNodeTag) {\n    PieSeriesNodeTag[PieSeriesNodeTag[\"Sector\"] = 0] = \"Sector\";\n    PieSeriesNodeTag[PieSeriesNodeTag[\"Callout\"] = 1] = \"Callout\";\n    PieSeriesNodeTag[PieSeriesNodeTag[\"Label\"] = 2] = \"Label\";\n})(PieSeriesNodeTag || (PieSeriesNodeTag = {}));\nvar PieSeries = /** @class */ (function (_super) {\n    __extends(PieSeries, _super);\n    function PieSeries() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.radiusScale = linearScale_1.default();\n        _this.groupSelection = selection_1.Selection.select(_this.group).selectAll();\n        /**\n         * The processed data that gets visualized.\n         */\n        _this.groupSelectionData = [];\n        _this.enabled = [];\n        _this.angleScale = (function () {\n            var scale = linearScale_1.default();\n            // Each slice is a ratio of the whole, where all ratios add up to 1.\n            scale.domain = [0, 1];\n            // Add 90 deg to start the first pie at 12 o'clock.\n            scale.range = [-Math.PI, Math.PI].map(function (angle) { return angle + Math.PI / 2; });\n            return scale;\n        })();\n        _this._title = undefined;\n        /**\n         * `null` means make the callout color the same as {@link strokeStyle}.\n         */\n        _this._calloutColors = palettes_1.default.strokes;\n        _this._calloutStrokeWidth = 1;\n        _this._calloutLength = 10;\n        _this._labelOffset = 3; // from the callout line\n        _this._labelFontStyle = undefined;\n        _this._labelFontWeight = undefined;\n        _this._labelFontSize = 12;\n        _this._labelFontFamily = 'Verdana, sans-serif';\n        _this._labelColor = 'black';\n        _this._labelMinAngle = 20; // in degrees\n        /**\n         * The name of the numeric field to use to determine the angle (for example,\n         * a pie slice angle).\n         */\n        _this._angleField = '';\n        /**\n         * The name of the numeric field to use to determine the radii of pie slices.\n         * The largest value will correspond to the full radius and smaller values to\n         * proportionally smaller radii. To prevent confusing visuals, this config only works\n         * if {@link innerRadiusOffset} is zero.\n         */\n        _this._radiusField = '';\n        /**\n         * The value of the label field is supposed to be a string.\n         * If it isn't, it will be coerced to a string value.\n         */\n        _this._labelField = '';\n        _this._labelEnabled = true;\n        _this._fills = palettes_1.default.fills;\n        _this._strokes = palettes_1.default.strokes;\n        _this._fillOpacity = 1;\n        _this._strokeOpacity = 1;\n        /**\n         * The series rotation in degrees.\n         */\n        _this._rotation = 0;\n        _this._outerRadiusOffset = 0;\n        _this._innerRadiusOffset = 0;\n        _this._strokeWidth = 1;\n        _this._shadow = undefined;\n        _this.highlightStyle = {\n            fill: 'yellow'\n        };\n        return _this;\n    }\n    Object.defineProperty(PieSeries.prototype, \"data\", {\n        get: function () {\n            return this._data;\n        },\n        set: function (data) {\n            this._data = data;\n            var enabled = this.enabled;\n            enabled.length = data.length;\n            for (var i = 0, ln = data.length; i < ln; i++) {\n                enabled[i] = true;\n            }\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"title\", {\n        get: function () {\n            return this._title;\n        },\n        set: function (value) {\n            var _this = this;\n            var oldTitle = this._title;\n            if (oldTitle !== value) {\n                if (oldTitle) {\n                    oldTitle.onLayoutChange = undefined;\n                    this.group.removeChild(oldTitle.node);\n                }\n                if (value) {\n                    value.node.textBaseline = 'bottom';\n                    value.onLayoutChange = function () { return _this.scheduleLayout(); };\n                    this.group.appendChild(value.node);\n                }\n                this._title = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"calloutColors\", {\n        get: function () {\n            return this._calloutColors;\n        },\n        set: function (value) {\n            if (this._calloutColors !== value) {\n                this._calloutColors = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"calloutStrokeWidth\", {\n        get: function () {\n            return this._calloutStrokeWidth;\n        },\n        set: function (value) {\n            if (this._calloutStrokeWidth !== value) {\n                this._calloutStrokeWidth = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"calloutLength\", {\n        get: function () {\n            return this._calloutLength;\n        },\n        set: function (value) {\n            if (this._calloutLength !== value) {\n                this._calloutLength = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"labelOffset\", {\n        get: function () {\n            return this._labelOffset;\n        },\n        set: function (value) {\n            if (this._labelOffset !== value) {\n                this._labelOffset = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"labelFontStyle\", {\n        get: function () {\n            return this._labelFontStyle;\n        },\n        set: function (value) {\n            if (this._labelFontStyle !== value) {\n                this._labelFontStyle = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"labelFontWeight\", {\n        get: function () {\n            return this._labelFontWeight;\n        },\n        set: function (value) {\n            if (this._labelFontWeight !== value) {\n                this._labelFontWeight = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"labelFontSize\", {\n        get: function () {\n            return this._labelFontSize;\n        },\n        set: function (value) {\n            if (this._labelFontSize !== value) {\n                this._labelFontSize = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"labelFontFamily\", {\n        get: function () {\n            return this._labelFontFamily;\n        },\n        set: function (value) {\n            if (this._labelFontFamily !== value) {\n                this._labelFontFamily = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"labelColor\", {\n        get: function () {\n            return this._labelColor;\n        },\n        set: function (value) {\n            if (this._labelColor !== value) {\n                this._labelColor = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"labelMinAngle\", {\n        get: function () {\n            return this._labelMinAngle;\n        },\n        set: function (value) {\n            if (this._labelMinAngle !== value) {\n                this._labelMinAngle = value;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"chart\", {\n        get: function () {\n            return this._chart;\n        },\n        set: function (chart) {\n            if (this._chart !== chart) {\n                this._chart = chart;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"angleField\", {\n        get: function () {\n            return this._angleField;\n        },\n        set: function (value) {\n            if (this._angleField !== value) {\n                this._angleField = value;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"radiusField\", {\n        get: function () {\n            return this._radiusField;\n        },\n        set: function (value) {\n            if (this._radiusField !== value) {\n                this._radiusField = value;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"labelField\", {\n        get: function () {\n            return this._labelField;\n        },\n        set: function (value) {\n            if (this._labelField !== value) {\n                this._labelField = value;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"labelEnabled\", {\n        get: function () {\n            return this._labelEnabled;\n        },\n        set: function (value) {\n            if (this._labelEnabled !== value) {\n                this._labelEnabled = value;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"fills\", {\n        get: function () {\n            return this._fills;\n        },\n        set: function (values) {\n            this._fills = values;\n            this.strokes = values.map(function (color) { return ag_grid_community_1.Color.fromString(color).darker().toHexString(); });\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"strokes\", {\n        get: function () {\n            return this._strokes;\n        },\n        set: function (values) {\n            this._strokes = values;\n            this.calloutColors = values;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"fillOpacity\", {\n        get: function () {\n            return this._fillOpacity;\n        },\n        set: function (value) {\n            if (this._fillOpacity !== value) {\n                this._fillOpacity = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"strokeOpacity\", {\n        get: function () {\n            return this._strokeOpacity;\n        },\n        set: function (value) {\n            if (this._strokeOpacity !== value) {\n                this._strokeOpacity = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"rotation\", {\n        get: function () {\n            return this._rotation;\n        },\n        set: function (value) {\n            if (this._rotation !== value) {\n                this._rotation = value;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"outerRadiusOffset\", {\n        get: function () {\n            return this._outerRadiusOffset;\n        },\n        set: function (value) {\n            if (this._outerRadiusOffset !== value) {\n                this._outerRadiusOffset = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"innerRadiusOffset\", {\n        get: function () {\n            return this._innerRadiusOffset;\n        },\n        set: function (value) {\n            if (this._innerRadiusOffset !== value) {\n                this._innerRadiusOffset = value;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"strokeWidth\", {\n        get: function () {\n            return this._strokeWidth;\n        },\n        set: function (value) {\n            if (this._strokeWidth !== value) {\n                this._strokeWidth = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"shadow\", {\n        get: function () {\n            return this._shadow;\n        },\n        set: function (value) {\n            if (this._shadow !== value) {\n                this._shadow = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PieSeries.prototype.highlightNode = function (node) {\n        if (!(node instanceof sector_1.Sector)) {\n            return;\n        }\n        this.highlightedNode = node;\n        this.scheduleLayout();\n    };\n    PieSeries.prototype.dehighlightNode = function () {\n        this.highlightedNode = undefined;\n        this.scheduleLayout();\n    };\n    PieSeries.prototype.getDomainX = function () {\n        return this.angleScale.domain;\n    };\n    PieSeries.prototype.getDomainY = function () {\n        return this.radiusScale.domain;\n    };\n    PieSeries.prototype.processData = function () {\n        var _this = this;\n        var data = this.data;\n        var enabled = this.enabled;\n        var angleData = data.map(function (datum, index) { return enabled[index] && +datum[_this.angleField] || 0; });\n        var angleDataTotal = angleData.reduce(function (a, b) { return a + b; }, 0);\n        // The ratios (in [0, 1] interval) used to calculate the end angle value for every pie slice.\n        // Each slice starts where the previous one ends, so we only keep the ratios for end angles.\n        var angleDataRatios = (function () {\n            var sum = 0;\n            return angleData.map(function (datum) { return sum += datum / angleDataTotal; });\n        })();\n        var labelField = this.labelEnabled && this.labelField;\n        var labelData = [];\n        if (labelField) {\n            labelData = data.map(function (datum) { return String(datum[labelField]); });\n        }\n        var radiusField = this.radiusField;\n        var useRadiusField = !!radiusField && !this.innerRadiusOffset;\n        var radiusData = [];\n        if (useRadiusField) {\n            radiusData = data.map(function (datum) { return Math.abs(datum[radiusField]); });\n            var maxDatum_1 = Math.max.apply(Math, radiusData);\n            radiusData.forEach(function (value, index, array) { return array[index] = value / maxDatum_1; });\n        }\n        var angleScale = this.angleScale;\n        var groupSelectionData = this.groupSelectionData;\n        groupSelectionData.length = 0;\n        var rotation = angle_1.toRadians(this.rotation);\n        var halfPi = Math.PI / 2;\n        var datumIndex = 0;\n        // Simply use reduce here to pair up adjacent ratios.\n        angleDataRatios.reduce(function (start, end) {\n            var radius = useRadiusField ? radiusData[datumIndex] : 1;\n            var startAngle = angleScale.convert(start) + rotation;\n            var endAngle = angleScale.convert(end) + rotation;\n            var midAngle = (startAngle + endAngle) / 2;\n            var span = Math.abs(endAngle - startAngle);\n            var midCos = Math.cos(midAngle);\n            var midSin = Math.sin(midAngle);\n            var labelMinAngle = angle_1.toRadians(_this.labelMinAngle);\n            var labelVisible = labelField && span > labelMinAngle;\n            var midAngle180 = angle_1.normalizeAngle180(midAngle);\n            // Split the circle into quadrants like so: ⊗\n            var quadrantStart = -3 * Math.PI / 4; // same as `normalizeAngle180(toRadians(-135))`\n            var textAlign;\n            var textBaseline;\n            if (midAngle180 >= quadrantStart && midAngle180 < (quadrantStart += halfPi)) {\n                textAlign = 'center';\n                textBaseline = 'bottom';\n            }\n            else if (midAngle180 >= quadrantStart && midAngle180 < (quadrantStart += halfPi)) {\n                textAlign = 'left';\n                textBaseline = 'middle';\n            }\n            else if (midAngle180 >= quadrantStart && midAngle180 < (quadrantStart += halfPi)) {\n                textAlign = 'center';\n                textBaseline = 'hanging';\n            }\n            else {\n                textAlign = 'right';\n                textBaseline = 'middle';\n            }\n            groupSelectionData.push({\n                index: datumIndex,\n                seriesDatum: data[datumIndex],\n                radius: radius,\n                startAngle: startAngle,\n                endAngle: endAngle,\n                midAngle: midAngle,\n                midCos: midCos,\n                midSin: midSin,\n                label: labelVisible ? {\n                    text: labelData[datumIndex],\n                    textAlign: textAlign,\n                    textBaseline: textBaseline\n                } : undefined\n            });\n            datumIndex++;\n            return end;\n        }, 0);\n        return true;\n    };\n    PieSeries.prototype.update = function () {\n        var _this = this;\n        var chart = this.chart;\n        var visible = this.group.visible = this.visible && this.enabled.indexOf(true) >= 0;\n        if (!chart || !visible || chart.dataPending || chart.layoutPending) {\n            return;\n        }\n        var fills = this.fills;\n        var strokes = this.strokes;\n        var fillOpacity = this.fillOpacity;\n        var strokeOpacity = this.strokeOpacity;\n        var calloutColors = this.calloutColors;\n        var outerRadiusOffset = this.outerRadiusOffset;\n        var innerRadiusOffset = this.innerRadiusOffset;\n        var radiusScale = this.radiusScale;\n        radiusScale.range = [0, chart.radius];\n        this.group.translationX = chart.centerX;\n        this.group.translationY = chart.centerY;\n        var title = this.title;\n        if (title) {\n            title.node.translationY = -chart.radius - outerRadiusOffset - 2;\n            title.node.visible = title.enabled;\n        }\n        var updateGroups = this.groupSelection.setData(this.groupSelectionData);\n        updateGroups.exit.remove();\n        var enterGroups = updateGroups.enter.append(group_1.Group);\n        enterGroups.append(sector_1.Sector).each(function (node) { return node.tag = PieSeriesNodeTag.Sector; });\n        enterGroups.append(line_1.Line).each(function (node) {\n            node.tag = PieSeriesNodeTag.Callout;\n            node.pointerEvents = node_1.PointerEvents.None;\n        });\n        enterGroups.append(text_1.Text).each(function (node) {\n            node.tag = PieSeriesNodeTag.Label;\n            node.pointerEvents = node_1.PointerEvents.None;\n        });\n        var groupSelection = updateGroups.merge(enterGroups);\n        var minOuterRadius = Infinity;\n        var outerRadii = [];\n        var centerOffsets = [];\n        var highlightedNode = this.highlightedNode;\n        groupSelection.selectByTag(PieSeriesNodeTag.Sector)\n            .each(function (sector, datum, index) {\n            var radius = radiusScale.convert(datum.radius);\n            var outerRadius = Math.max(0, radius + outerRadiusOffset);\n            if (minOuterRadius > outerRadius) {\n                minOuterRadius = outerRadius;\n            }\n            sector.outerRadius = outerRadius;\n            sector.innerRadius = Math.max(0, innerRadiusOffset ? radius + innerRadiusOffset : 0);\n            sector.startAngle = datum.startAngle;\n            sector.endAngle = datum.endAngle;\n            sector.fill = sector === highlightedNode && _this.highlightStyle.fill !== undefined\n                ? _this.highlightStyle.fill\n                : fills[index % fills.length];\n            sector.stroke = sector === highlightedNode && _this.highlightStyle.stroke !== undefined\n                ? _this.highlightStyle.stroke\n                : strokes[index % strokes.length];\n            sector.fillOpacity = fillOpacity;\n            sector.strokeOpacity = strokeOpacity;\n            sector.centerOffset = sector === highlightedNode && _this.highlightStyle.centerOffset !== undefined\n                ? _this.highlightStyle.centerOffset\n                : 0;\n            sector.fillShadow = _this.shadow;\n            sector.strokeWidth = _this.strokeWidth;\n            sector.lineJoin = 'round';\n            outerRadii.push(outerRadius);\n            centerOffsets.push(sector.centerOffset);\n        });\n        var calloutLength = this.calloutLength;\n        groupSelection.selectByTag(PieSeriesNodeTag.Callout)\n            .each(function (line, datum, index) {\n            if (datum.label) {\n                var outerRadius = centerOffsets[index] + outerRadii[index];\n                line.strokeWidth = _this.calloutStrokeWidth;\n                line.stroke = calloutColors[index % calloutColors.length];\n                line.x1 = datum.midCos * outerRadius;\n                line.y1 = datum.midSin * outerRadius;\n                line.x2 = datum.midCos * (outerRadius + calloutLength);\n                line.y2 = datum.midSin * (outerRadius + calloutLength);\n            }\n            else {\n                line.stroke = undefined;\n            }\n        });\n        var labelOffset = this.labelOffset;\n        groupSelection.selectByTag(PieSeriesNodeTag.Label)\n            .each(function (text, datum, index) {\n            var label = datum.label;\n            if (label) {\n                var outerRadius = outerRadii[index];\n                var labelRadius = centerOffsets[index] + outerRadius + calloutLength + labelOffset;\n                text.fontStyle = _this.labelFontStyle;\n                text.fontWeight = _this.labelFontWeight;\n                text.fontSize = _this.labelFontSize;\n                text.fontFamily = _this.labelFontFamily;\n                text.text = label.text;\n                text.x = datum.midCos * labelRadius;\n                text.y = datum.midSin * labelRadius;\n                text.fill = _this.labelColor;\n                text.textAlign = label.textAlign;\n                text.textBaseline = label.textBaseline;\n            }\n            else {\n                text.fill = undefined;\n            }\n        });\n        this.groupSelection = groupSelection;\n    };\n    PieSeries.prototype.getTooltipHtml = function (nodeDatum) {\n        var html = '';\n        var angleField = this.angleField;\n        if (!angleField) {\n            return html;\n        }\n        var title = this.title ? this.title.text : undefined;\n        var color = this.fills[nodeDatum.index % this.fills.length];\n        if (this.tooltipRenderer) {\n            html = this.tooltipRenderer({\n                datum: nodeDatum.seriesDatum,\n                angleField: angleField,\n                radiusField: this.radiusField,\n                labelField: this.labelField,\n                title: title,\n                color: color\n            });\n        }\n        else {\n            var titleStyle = \"style=\\\"color: white; background-color: \" + color + \"\\\"\";\n            title = title ? \"<div class=\\\"title\\\" \" + titleStyle + \">\" + title + \"</div>\" : '';\n            var label = this.labelField ? nodeDatum.seriesDatum[this.labelField] + \": \" : '';\n            var value = nodeDatum.seriesDatum[angleField];\n            var formattedValue = typeof (value) === 'number' ? number_1.toFixed(value) : value.toString();\n            html = title + \"<div class=\\\"content\\\">\" + label + formattedValue + \"</div>\";\n        }\n        return html;\n    };\n    PieSeries.prototype.listSeriesItems = function (data) {\n        var _this = this;\n        var labelField = this.labelField;\n        if (this.data.length && labelField) {\n            var fills_1 = this.fills;\n            var strokes_1 = this.strokes;\n            var id_1 = this.id;\n            this.data.forEach(function (datum, index) {\n                data.push({\n                    id: id_1,\n                    itemId: index,\n                    enabled: _this.enabled[index],\n                    label: {\n                        text: String(datum[labelField])\n                    },\n                    marker: {\n                        fill: fills_1[index % fills_1.length],\n                        stroke: strokes_1[index % strokes_1.length]\n                    }\n                });\n            });\n        }\n    };\n    PieSeries.prototype.toggleSeriesItem = function (itemId, enabled) {\n        this.enabled[itemId] = enabled;\n        this.scheduleData();\n    };\n    PieSeries.className = 'PieSeries';\n    return PieSeries;\n}(series_1.Series));\nexports.PieSeries = PieSeries;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar continuousScale_1 = require(\"../../scale/continuousScale\");\nvar selection_1 = require(\"../../scene/selection\");\nvar group_1 = require(\"../../scene/group\");\nvar arc_1 = require(\"../../scene/shape/arc\");\nvar array_1 = require(\"../../util/array\");\nvar palettes_1 = require(\"../palettes\");\nvar series_1 = require(\"./series\");\nvar number_1 = require(\"../../util/number\");\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar linearScale_1 = require(\"../../scale/linearScale\");\nvar ScatterSeries = /** @class */ (function (_super) {\n    __extends(ScatterSeries, _super);\n    function ScatterSeries() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.domainX = [];\n        _this.domainY = [];\n        _this.xData = [];\n        _this.yData = [];\n        _this.radiusData = [];\n        _this.radiusScale = linearScale_1.default();\n        _this.groupSelection = selection_1.Selection.select(_this.group).selectAll();\n        _this._title = '';\n        _this._xField = '';\n        _this._yField = '';\n        _this._radiusField = '';\n        _this.xFieldName = 'X';\n        _this.yFieldName = 'Y';\n        _this.radiusFieldName = 'Radius';\n        _this._marker = false;\n        _this._markerSize = 8;\n        _this._minMarkerSize = 4;\n        _this._markerStrokeWidth = 2;\n        _this._fill = palettes_1.default.fills[0];\n        _this._stroke = palettes_1.default.strokes[0];\n        _this._fillOpacity = 1;\n        _this._strokeOpacity = 1;\n        _this.highlightStyle = {\n            fill: 'yellow'\n        };\n        return _this;\n    }\n    Object.defineProperty(ScatterSeries.prototype, \"chart\", {\n        get: function () {\n            return this._chart;\n        },\n        set: function (chart) {\n            if (this._chart !== chart) {\n                this._chart = chart;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScatterSeries.prototype, \"title\", {\n        get: function () {\n            return this._title;\n        },\n        set: function (value) {\n            if (this._title !== value) {\n                this._title = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScatterSeries.prototype, \"xField\", {\n        get: function () {\n            return this._xField;\n        },\n        set: function (value) {\n            if (this._xField !== value) {\n                this._xField = value;\n                this.xData = [];\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScatterSeries.prototype, \"yField\", {\n        get: function () {\n            return this._yField;\n        },\n        set: function (value) {\n            if (this._yField !== value) {\n                this._yField = value;\n                this.yData = [];\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScatterSeries.prototype, \"radiusField\", {\n        get: function () {\n            return this._radiusField;\n        },\n        set: function (value) {\n            if (this._radiusField !== value) {\n                this._radiusField = value;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScatterSeries.prototype, \"marker\", {\n        get: function () {\n            return this._marker;\n        },\n        set: function (value) {\n            if (this._marker !== value) {\n                this._marker = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScatterSeries.prototype, \"markerSize\", {\n        get: function () {\n            return this._markerSize;\n        },\n        set: function (value) {\n            if (this._markerSize !== value) {\n                this._markerSize = Math.abs(value);\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScatterSeries.prototype, \"minMarkerSize\", {\n        get: function () {\n            return this._minMarkerSize;\n        },\n        set: function (value) {\n            if (this._minMarkerSize !== value) {\n                this._minMarkerSize = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScatterSeries.prototype, \"markerStrokeWidth\", {\n        get: function () {\n            return this._markerStrokeWidth;\n        },\n        set: function (value) {\n            if (this._markerStrokeWidth !== value) {\n                this._markerStrokeWidth = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScatterSeries.prototype.processData = function () {\n        var chart = this.chart;\n        var xField = this.xField;\n        var yField = this.yField;\n        var radiusField = this.radiusField;\n        var markerSize = this.markerSize;\n        var minMarkerSize = this.minMarkerSize;\n        var data = this.data;\n        if (!(chart && chart.xAxis && chart.yAxis)) {\n            return false;\n        }\n        if (!(xField && yField)) {\n            this._data = data = [];\n        }\n        var xData = [];\n        var yData = [];\n        var radiusData = [];\n        data.forEach(function (datum) {\n            xData.push(datum[xField]);\n            yData.push(datum[yField]);\n            if (radiusField) {\n                radiusData.push(datum[radiusField]);\n            }\n        });\n        this.xData = xData;\n        this.yData = yData;\n        this.radiusData = radiusData;\n        this.radiusScale.domain = array_1.numericExtent(radiusData) || [1, 1];\n        this.radiusScale.range = [minMarkerSize / 2, markerSize / 2];\n        var continuousX = chart.xAxis.scale instanceof continuousScale_1.default;\n        var domainX = continuousX ? (array_1.numericExtent(this.xData) || [0, 1]) : this.xData;\n        var domainY = array_1.numericExtent(this.yData) || [0, 1];\n        if (continuousX) {\n            var _a = domainX, min = _a[0], max = _a[1];\n            if (min === max) {\n                domainX[0] = min - 1;\n                domainX[1] = max + 1;\n            }\n        }\n        {\n            var _b = domainY, min = _b[0], max = _b[1];\n            if (min === max) {\n                domainY[0] = min - 1;\n                domainY[1] = max + 1;\n            }\n        }\n        this.domainX = domainX;\n        this.domainY = domainY;\n        return true;\n    };\n    Object.defineProperty(ScatterSeries.prototype, \"fill\", {\n        get: function () {\n            return this._fill;\n        },\n        set: function (value) {\n            if (this._fill !== value) {\n                this._fill = value;\n                this.stroke = ag_grid_community_1.Color.fromString(value).darker().toHexString();\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScatterSeries.prototype, \"stroke\", {\n        get: function () {\n            return this._stroke;\n        },\n        set: function (value) {\n            if (this._stroke !== value) {\n                this._stroke = value;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScatterSeries.prototype, \"fillOpacity\", {\n        get: function () {\n            return this._fillOpacity;\n        },\n        set: function (value) {\n            if (this._fillOpacity !== value) {\n                this._fillOpacity = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScatterSeries.prototype, \"strokeOpacity\", {\n        get: function () {\n            return this._strokeOpacity;\n        },\n        set: function (value) {\n            if (this._strokeOpacity !== value) {\n                this._strokeOpacity = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScatterSeries.prototype.highlightNode = function (node) {\n        if (!(node instanceof arc_1.Arc)) {\n            return;\n        }\n        this.highlightedNode = node;\n        this.scheduleLayout();\n    };\n    ScatterSeries.prototype.dehighlightNode = function () {\n        this.highlightedNode = undefined;\n        this.scheduleLayout();\n    };\n    ScatterSeries.prototype.update = function () {\n        var _this = this;\n        var chart = this.chart;\n        var visible = this.group.visible = this.visible;\n        if (!chart || !visible || chart.dataPending || chart.layoutPending || !(chart.xAxis && chart.yAxis)) {\n            return;\n        }\n        var xAxis = chart.xAxis;\n        var yAxis = chart.yAxis;\n        var xScale = xAxis.scale;\n        var yScale = yAxis.scale;\n        var xOffset = (xScale.bandwidth || 0) / 2;\n        var yOffset = (yScale.bandwidth || 0) / 2;\n        var data = this.data;\n        var xData = this.xData;\n        var yData = this.yData;\n        var radiusData = this.radiusData;\n        var n = xData.length;\n        var fill = this.fill;\n        var stroke = this.stroke;\n        var fillOpacity = this.fillOpacity;\n        var strokeOpacity = this.strokeOpacity;\n        var markerStrokeWidth = this.markerStrokeWidth;\n        var markerSize = this.markerSize;\n        var groupSelectionData = [];\n        for (var i = 0; i < n; i++) {\n            var xDatum = xData[i];\n            var yDatum = yData[i];\n            var x = xScale.convert(xDatum) + xOffset;\n            var y = yScale.convert(yDatum) + yOffset;\n            groupSelectionData.push({\n                seriesDatum: data[i],\n                x: x,\n                y: y,\n                fill: fill,\n                stroke: stroke,\n                strokeWidth: markerStrokeWidth,\n                radius: this.radiusField ? this.radiusScale.convert(radiusData[i]) : markerSize / 2\n            });\n        }\n        // ------------------------------------------\n        var updateGroups = this.groupSelection.setData(groupSelectionData);\n        updateGroups.exit.remove();\n        var enterGroups = updateGroups.enter.append(group_1.Group);\n        enterGroups.append(arc_1.Arc).each(function (arc) { return arc.type = arc_1.ArcType.Chord; });\n        var highlightedNode = this.highlightedNode;\n        var groupSelection = updateGroups.merge(enterGroups);\n        groupSelection.selectByClass(arc_1.Arc)\n            .each(function (arc, datum) {\n            arc.centerX = datum.x;\n            arc.centerY = datum.y;\n            arc.radiusX = datum.radius;\n            arc.radiusY = datum.radius;\n            arc.fill = arc === highlightedNode && _this.highlightStyle.fill !== undefined\n                ? _this.highlightStyle.fill\n                : datum.fill;\n            arc.stroke = arc === highlightedNode && _this.highlightStyle.stroke !== undefined\n                ? _this.highlightStyle.stroke\n                : datum.stroke;\n            arc.fillOpacity = fillOpacity;\n            arc.strokeOpacity = strokeOpacity;\n            arc.strokeWidth = datum.strokeWidth;\n            arc.visible = datum.radius > 0;\n        });\n        this.groupSelection = groupSelection;\n    };\n    ScatterSeries.prototype.getDomainX = function () {\n        return this.domainX;\n    };\n    ScatterSeries.prototype.getDomainY = function () {\n        return this.domainY;\n    };\n    ScatterSeries.prototype.getTooltipHtml = function (nodeDatum) {\n        var xField = this.xField;\n        var yField = this.yField;\n        var radiusField = this.radiusField;\n        var xFieldName = this.xFieldName;\n        var yFieldName = this.yFieldName;\n        var radiusFieldName = this.radiusFieldName;\n        var color = this.fill;\n        var html = '';\n        if (!xField || !yField) {\n            return html;\n        }\n        var title = this.title;\n        if (this.tooltipRenderer && this.xField) {\n            html = this.tooltipRenderer({\n                datum: nodeDatum.seriesDatum,\n                xField: xField,\n                yField: yField,\n                radiusField: radiusField,\n                xFieldName: xFieldName,\n                yFieldName: yFieldName,\n                radiusFieldName: radiusFieldName,\n                title: title,\n                color: color\n            });\n        }\n        else {\n            var titleStyle = \"style=\\\"color: white; background-color: \" + color + \"\\\"\";\n            title = title ? \"<div class=\\\"title\\\" \" + titleStyle + \">\" + title + \"</div>\" : '';\n            var seriesDatum = nodeDatum.seriesDatum;\n            var xValue = seriesDatum[xField];\n            var yValue = seriesDatum[yField];\n            var xString = typeof (xValue) === 'number' ? number_1.toFixed(xValue) : String(xValue);\n            var yString = typeof (yValue) === 'number' ? number_1.toFixed(yValue) : String(yValue);\n            var fieldString = \"<b>\" + xFieldName + \"</b>: \" + xString + \"<br><b>\" + yFieldName + \"</b>: \" + yString;\n            if (radiusField) {\n                fieldString += \"<br><b>\" + radiusFieldName + \"</b>: \" + seriesDatum[radiusField];\n            }\n            html = title + \"<div class=\\\"content\\\">\" + fieldString + \"</div>\";\n            // html = `${title}<div class=\"content\">${xField}: ${xString}<br>${yField}: ${yString}</div>`;\n        }\n        return html;\n    };\n    ScatterSeries.prototype.listSeriesItems = function (data) {\n        if (this.data.length && this.xField && this.yField) {\n            data.push({\n                id: this.id,\n                itemId: undefined,\n                enabled: this.visible,\n                label: {\n                    text: this.title || this.yField\n                },\n                marker: {\n                    fill: this.fill,\n                    stroke: this.stroke\n                }\n            });\n        }\n    };\n    ScatterSeries.className = 'ScatterSeries';\n    return ScatterSeries;\n}(series_1.Series));\nexports.ScatterSeries = ScatterSeries;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar group_1 = require(\"../../scene/group\");\nvar Series = /** @class */ (function () {\n    function Series() {\n        this.id = this.createId();\n        /**\n         * The group node that contains all the nodes used to render this series.\n         */\n        this.group = new group_1.Group();\n        this._data = [];\n        this._chart = undefined;\n        this._visible = true;\n        this.tooltipEnabled = false;\n        this._showInLegend = true;\n    }\n    // Uniquely identify series.\n    Series.prototype.createId = function () {\n        var constructor = this.constructor;\n        var className = constructor.className;\n        if (!className) {\n            throw new Error(\"The \" + constructor + \" is missing the 'className' property.\");\n        }\n        return className + '-' + (constructor.id = (constructor.id || 0) + 1);\n    };\n    Object.defineProperty(Series.prototype, \"data\", {\n        get: function () {\n            return this._data;\n        },\n        set: function (data) {\n            this._data = data;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Series.prototype, \"visible\", {\n        get: function () {\n            return this._visible;\n        },\n        set: function (value) {\n            if (this._visible !== value) {\n                this._visible = value;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Series.prototype.toggleSeriesItem = function (itemId, enabled) {\n        this.visible = enabled;\n    };\n    Object.defineProperty(Series.prototype, \"showInLegend\", {\n        get: function () {\n            return this._showInLegend;\n        },\n        set: function (value) {\n            if (this._showInLegend !== value) {\n                this._showInLegend = value;\n                this.scheduleLayout();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Series.prototype.scheduleLayout = function () {\n        if (this.chart) {\n            this.chart.layoutPending = true;\n        }\n    };\n    Series.prototype.scheduleData = function () {\n        if (this.chart) {\n            this.chart.dataPending = true;\n        }\n    };\n    return Series;\n}());\nexports.Series = Series;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TreeNode = /** @class */ (function () {\n    function TreeNode(label, parent, number) {\n        if (label === void 0) { label = ''; }\n        if (number === void 0) { number = 0; }\n        this.x = 0;\n        this.y = 0;\n        this.subtreeLeft = NaN;\n        this.subtreeRight = NaN;\n        this.screenX = 0;\n        this.screenY = 0;\n        this.children = [];\n        this.leafCount = 0;\n        this.prelim = 0;\n        this.mod = 0;\n        this.ancestor = this;\n        this.change = 0;\n        this.shift = 0;\n        this.label = label;\n        // screenX and screenY are meant to be recomputed from (layout) x and y\n        // when the tree is resized (without performing another layout)\n        this.parent = parent;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.number = number;\n    }\n    TreeNode.prototype.getLeftSibling = function () {\n        return this.number > 0 && this.parent ? this.parent.children[this.number - 1] : undefined;\n    };\n    TreeNode.prototype.getLeftmostSibling = function () {\n        return this.number > 0 && this.parent ? this.parent.children[0] : undefined;\n    };\n    // traverse the left contour of a subtree, return the successor of v on this contour\n    TreeNode.prototype.nextLeft = function () {\n        return this.children ? this.children[0] : this.thread;\n    };\n    // traverse the right contour of a subtree, return the successor of v on this contour\n    TreeNode.prototype.nextRight = function () {\n        return this.children ? this.children[this.children.length - 1] : this.thread;\n    };\n    TreeNode.prototype.getSiblings = function () {\n        var _this = this;\n        return this.parent ? this.parent.children.filter(function (_, i) { return i !== _this.number; }) : [];\n    };\n    return TreeNode;\n}());\nfunction ticksToTree(ticks, pad) {\n    if (pad === void 0) { pad = true; }\n    var root = new TreeNode();\n    var depth = 0;\n    if (pad) {\n        ticks.forEach(function (tick) { return depth = Math.max(depth, tick.labels.length); });\n    }\n    ticks.forEach(function (tick) {\n        if (pad) {\n            while (tick.labels.length < depth) {\n                tick.labels.unshift('');\n            }\n        }\n        insertTick(root, tick);\n    });\n    return root;\n}\nexports.ticksToTree = ticksToTree;\nfunction insertTick(root, tick) {\n    var pathParts = tick.labels.slice().reverse(); // path elements from root to leaf label\n    var lastPartIndex = pathParts.length - 1;\n    pathParts.forEach(function (pathPart, partIndex) {\n        var children = root.children;\n        var existingNode = children.find(function (child) { return child.label === pathPart; });\n        var isNotLeaf = partIndex !== lastPartIndex;\n        if (existingNode && isNotLeaf) { // the isNotLeaf check is to allow duplicate leafs\n            root = existingNode;\n        }\n        else {\n            var node = new TreeNode(pathPart, root);\n            node.number = children.length;\n            children.push(node);\n            if (isNotLeaf) {\n                root = node;\n            }\n        }\n    });\n}\n// Shift the subtree.\nfunction moveSubtree(wm, wp, shift) {\n    var subtrees = wp.number - wm.number;\n    var ratio = shift / subtrees;\n    wp.change -= ratio;\n    wp.shift += shift;\n    wm.change += ratio;\n    wp.prelim += shift;\n    wp.mod += shift;\n}\nfunction ancestor(vim, v, defaultAncestor) {\n    return v.getSiblings().indexOf(vim.ancestor) >= 0 ? vim.ancestor : defaultAncestor;\n}\n// Spaces out the children.\nfunction executeShifts(v) {\n    var children = v.children;\n    if (children) {\n        var shift = 0;\n        var change = 0;\n        for (var i = children.length - 1; i >= 0; i--) {\n            var w = children[i];\n            w.prelim += shift;\n            w.mod += shift;\n            change += w.change;\n            shift += w.shift + change;\n        }\n    }\n}\n// Moves current subtree with v as the root if some nodes are conflicting in space.\nfunction apportion(v, defaultAncestor, distance) {\n    var w = v.getLeftSibling();\n    if (w) {\n        var vop = v;\n        var vip = v;\n        var vim = w;\n        var vom = vip.getLeftmostSibling();\n        var sip = vip.mod;\n        var sop = vop.mod;\n        var sim = vim.mod;\n        var som = vom.mod;\n        while (vim.nextRight() && vip.nextLeft()) {\n            vim = vim.nextRight();\n            vip = vip.nextLeft();\n            vom = vom.nextLeft();\n            vop = vop.nextRight();\n            vop.ancestor = v;\n            var shift = (vim.prelim + sim) - (vip.prelim + sip) + distance;\n            if (shift > 0) {\n                moveSubtree(ancestor(vim, v, defaultAncestor), v, shift);\n                sip += shift;\n                sop += shift;\n            }\n            sim += vim.mod;\n            sip += vip.mod;\n            som += vom.mod;\n            sop += vop.mod;\n        }\n        if (vim.nextRight() && !vop.nextRight()) {\n            vop.thread = vim.nextRight();\n            vop.mod += sim - sop;\n        }\n        else {\n            if (vip.nextLeft() && !vom.nextLeft()) {\n                vom.thread = vip.nextLeft();\n                vom.mod += sip - som;\n            }\n            defaultAncestor = v;\n        }\n    }\n    return defaultAncestor;\n}\n// Compute the preliminary x-coordinate of node and its children (recursively).\nfunction firstWalk(node, distance) {\n    var children = node.children;\n    if (children.length) {\n        var defaultAncestor_1 = children[0];\n        children.forEach(function (child) {\n            firstWalk(child, distance);\n            defaultAncestor_1 = apportion(child, defaultAncestor_1, distance);\n        });\n        executeShifts(node);\n        var midpoint = (children[0].prelim + children[children.length - 1].prelim) / 2;\n        var leftSibling = node.getLeftSibling();\n        if (leftSibling) {\n            node.prelim = leftSibling.prelim + distance;\n            node.mod = node.prelim - midpoint;\n        }\n        else {\n            node.prelim = midpoint;\n        }\n    }\n    else {\n        var leftSibling = node.getLeftSibling();\n        node.prelim = leftSibling ? leftSibling.prelim + distance : 0;\n    }\n}\nvar Dimensions = /** @class */ (function () {\n    function Dimensions() {\n        this.top = Infinity;\n        this.right = -Infinity;\n        this.bottom = -Infinity;\n        this.left = Infinity;\n    }\n    Dimensions.prototype.update = function (node, xy) {\n        var _a = xy(node), x = _a.x, y = _a.y;\n        if (x > this.right) {\n            this.right = x;\n        }\n        if (x < this.left) {\n            this.left = x;\n        }\n        if (y > this.bottom) {\n            this.bottom = y;\n        }\n        if (y < this.top) {\n            this.top = y;\n        }\n    };\n    return Dimensions;\n}());\nfunction secondWalk(v, m, layout) {\n    v.x = v.prelim + m;\n    v.y = v.depth;\n    layout.update(v);\n    v.children.forEach(function (w) { return secondWalk(w, m + v.mod, layout); });\n}\n// After the second walk the parent nodes are positioned at the center of their immediate children.\n// If we want the parent nodes to be positioned at the center of the subtree for which they are roots,\n// we need a third walk to adjust the positions.\nfunction thirdWalk(v) {\n    var children = v.children;\n    var leafCount = 0;\n    children.forEach(function (w) {\n        thirdWalk(w);\n        if (w.children.length) {\n            leafCount += w.leafCount;\n        }\n        else {\n            leafCount++;\n        }\n    });\n    v.leafCount = leafCount;\n    if (children.length) {\n        v.subtreeLeft = children[0].subtreeLeft;\n        v.subtreeRight = children[v.children.length - 1].subtreeRight;\n        v.x = (v.subtreeLeft + v.subtreeRight) / 2;\n    }\n    else {\n        v.subtreeLeft = v.x;\n        v.subtreeRight = v.x;\n    }\n}\nfunction treeLayout(root) {\n    var layout = new TreeLayout;\n    firstWalk(root, 1);\n    secondWalk(root, -root.prelim, layout);\n    thirdWalk(root);\n    return layout;\n}\nexports.treeLayout = treeLayout;\nvar TreeLayout = /** @class */ (function () {\n    function TreeLayout() {\n        this.dimensions = new Dimensions;\n        this.leafCount = 0;\n        this.nodes = [];\n        // One might want to process leaf nodes separately from the rest of the tree.\n        // For example, position labels corresponding to leafs vertically, rather than horizontally.\n        this.leafNodes = [];\n        this.nonLeafNodes = [];\n        this.depth = 0;\n    }\n    TreeLayout.prototype.update = function (node) {\n        this.dimensions.update(node, function (node) { return ({ x: node.x, y: node.y }); });\n        if (!node.children.length) {\n            this.leafCount++;\n            this.leafNodes.push(node);\n        }\n        else {\n            this.nonLeafNodes.push(node);\n        }\n        if (node.depth > this.depth) {\n            this.depth = node.depth;\n        }\n        this.nodes.push(node);\n    };\n    TreeLayout.prototype.resize = function (width, height, shiftX, shiftY) {\n        if (shiftX === void 0) { shiftX = 0; }\n        if (shiftY === void 0) { shiftY = 0; }\n        var xSteps = this.leafCount - 1;\n        var ySteps = this.depth;\n        var dimensions = this.dimensions;\n        var scalingX = 1;\n        var scalingY = 1;\n        if (width > 0 && xSteps) {\n            var existingSpacingX = (dimensions.right - dimensions.left) / xSteps;\n            var desiredSpacingX = width / xSteps;\n            scalingX = desiredSpacingX / existingSpacingX;\n        }\n        if (height > 0 && ySteps) {\n            var existingSpacingY = (dimensions.bottom - dimensions.top) / ySteps;\n            var desiredSpacingY = height / ySteps;\n            scalingY = desiredSpacingY / existingSpacingY;\n        }\n        var screenDimensions = new Dimensions();\n        this.nodes.forEach(function (node) {\n            node.screenX = node.x * scalingX;\n            node.screenY = node.y * scalingY;\n            screenDimensions.update(node, function (node) { return ({ x: node.screenX, y: node.screenY }); });\n        });\n        // Normalize so that root top and leftmost leaf left start at zero.\n        var offsetX = -screenDimensions.left;\n        var offsetY = -screenDimensions.top;\n        this.nodes.forEach(function (node) {\n            node.screenX += offsetX + shiftX;\n            node.screenY += offsetY + shiftY;\n        });\n    };\n    return TreeLayout;\n}());\nexports.TreeLayout = TreeLayout;\nfunction logTree(root, formatter) {\n    root.children.forEach(function (child) { return logTree(child, formatter); });\n    if (formatter) {\n        console.log(formatter(root));\n    }\n    else {\n        console.log(root);\n    }\n}\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Maps a discrete domain to a continuous numeric range.\n * See https://github.com/d3/d3-scale#band-scales for more info.\n */\nvar BandScale = /** @class */ (function () {\n    function BandScale() {\n        /**\n         * Maps datum to its index in the {@link domain} array.\n         * Used to check for duplicate datums (not allowed).\n         */\n        this.index = new Map();\n        /**\n         * The output range values for datum at each index.\n         */\n        this.ordinalRange = [];\n        /**\n         * Contains unique datums only. Since `{}` is used in place of `Map`\n         * for IE11 compatibility, the datums are converted `toString` before\n         * the uniqueness check.\n         */\n        this._domain = [];\n        this._range = [0, 1];\n        this._bandwidth = 1;\n        /**\n         * The ratio of the range that is reserved for space between bands.\n         */\n        this._paddingInner = 0;\n        /**\n         * The ratio of the range that is reserved for space before the first\n         * and after the last band.\n         */\n        this._paddingOuter = 0;\n        this._round = false;\n        /**\n         * How the leftover range is distributed.\n         * `0.5` - equal distribution of space before the first and after the last band,\n         * with bands effectively centered within the range.\n         */\n        this._align = 0.5;\n    }\n    Object.defineProperty(BandScale.prototype, \"domain\", {\n        get: function () {\n            return this._domain;\n        },\n        set: function (values) {\n            var domain = this._domain;\n            domain.length = 0;\n            this.index = new Map();\n            var index = this.index;\n            // In case one wants to have duplicate domain values, for example, two 'Italy' categories,\n            // one should use objects rather than strings for domain values like so:\n            // { toString: () => 'Italy' }\n            // { toString: () => 'Italy' }\n            values.forEach(function (value) {\n                if (index.get(value) === undefined) {\n                    index.set(value, domain.push(value) - 1);\n                }\n            });\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"range\", {\n        get: function () {\n            return this._range;\n        },\n        set: function (values) {\n            this._range[0] = values[0];\n            this._range[1] = values[1];\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BandScale.prototype.ticks = function () {\n        return this._domain;\n    };\n    BandScale.prototype.convert = function (d) {\n        var i = this.index.get(d);\n        if (i === undefined) {\n            return NaN;\n        }\n        var r = this.ordinalRange[i];\n        if (r === undefined) {\n            return NaN;\n        }\n        return r;\n    };\n    Object.defineProperty(BandScale.prototype, \"bandwidth\", {\n        get: function () {\n            return this._bandwidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"padding\", {\n        get: function () {\n            return this._paddingInner;\n        },\n        set: function (value) {\n            value = Math.max(0, Math.min(1, value));\n            this._paddingInner = value;\n            this._paddingOuter = value;\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"paddingInner\", {\n        get: function () {\n            return this._paddingInner;\n        },\n        set: function (value) {\n            this._paddingInner = Math.max(0, Math.min(1, value)); // [0, 1]\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"paddingOuter\", {\n        get: function () {\n            return this._paddingOuter;\n        },\n        set: function (value) {\n            this._paddingOuter = Math.max(0, Math.min(1, value)); // [0, 1]\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"round\", {\n        get: function () {\n            return this._round;\n        },\n        set: function (value) {\n            this._round = value;\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"align\", {\n        get: function () {\n            return this._align;\n        },\n        set: function (value) {\n            this._align = Math.max(0, Math.min(1, value)); // [0, 1]\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BandScale.prototype.rescale = function () {\n        var _a;\n        var n = this._domain.length;\n        if (!n) {\n            return;\n        }\n        var _b = this._range, a = _b[0], b = _b[1];\n        var reversed = b < a;\n        if (reversed) {\n            _a = [b, a], a = _a[0], b = _a[1];\n        }\n        var step = (b - a) / Math.max(1, n - this._paddingInner + this._paddingOuter * 2);\n        if (this._round) {\n            step = Math.floor(step);\n        }\n        a += (b - a - step * (n - this._paddingInner)) * this._align;\n        this._bandwidth = step * (1 - this._paddingInner);\n        if (this._round) {\n            a = Math.round(a);\n            this._bandwidth = Math.round(this._bandwidth);\n        }\n        var values = [];\n        for (var i = 0; i < n; i++) {\n            values.push(a + step * i);\n        }\n        this.ordinalRange = reversed ? values.reverse() : values;\n    };\n    return BandScale;\n}());\nexports.BandScale = BandScale;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContinuousScale = /** @class */ (function () {\n    function ContinuousScale(reinterpolatorFactory, deinterpolatorFactory, rangeComparator) {\n        this._domain = [0, 1];\n        this._range = [];\n        this.clamp = false;\n        this.reinterpolatorFactory = reinterpolatorFactory;\n        this.deinterpolatorFactory = deinterpolatorFactory;\n        this.rangeComparator = rangeComparator;\n    }\n    Object.defineProperty(ContinuousScale.prototype, \"domain\", {\n        get: function () {\n            return this._domain;\n        },\n        set: function (values) {\n            this._domain = values.slice();\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContinuousScale.prototype, \"range\", {\n        get: function () {\n            return this._range;\n        },\n        set: function (values) {\n            this._range = values.slice();\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ContinuousScale.prototype.convert = function (d) {\n        if (!this.piecewiseReinterpolator) {\n            if (!this.piecewiseReinterpolatorFactory) {\n                throw new Error('Missing piecewiseReinterpolatorFactory');\n            }\n            var deinterpolatorFactory = this.clamp\n                ? this.clampDeinterpolatorFactory(this.deinterpolatorOf)\n                : this.deinterpolatorOf;\n            this.piecewiseReinterpolator = this.piecewiseReinterpolatorFactory(this._domain, this._range, deinterpolatorFactory, this.reinterpolatorFactory);\n        }\n        if (!this.piecewiseReinterpolator) {\n            throw new Error('Missing piecewiseReinterpolator');\n        }\n        return this.piecewiseReinterpolator(d);\n    };\n    ContinuousScale.prototype.invert = function (r) {\n        if (!this.deinterpolatorFactory) {\n            throw new Error('Missing deinterpolatorFactory');\n        }\n        if (!this.piecewiseDeinterpolator) {\n            if (!this.piecewiseDeinterpolatorFactory) {\n                throw new Error('Missing piecewiseDeinterpolatorFactory');\n            }\n            var reinterpolatorFactory = this.clamp\n                ? this.clampReinterpolatorFactory(this.reinterpolatorOf)\n                : this.reinterpolatorOf;\n            this.piecewiseDeinterpolator = this.piecewiseDeinterpolatorFactory(this._range, this._domain, this.deinterpolatorFactory, reinterpolatorFactory);\n        }\n        return this.piecewiseDeinterpolator(r);\n    };\n    ContinuousScale.prototype.clampDeinterpolatorFactory = function (deinterpolatorOf) {\n        return function (a, b) {\n            var deinterpolate = deinterpolatorOf(a, b);\n            return function (x) {\n                if (x <= a) {\n                    return 0.0;\n                }\n                else if (x >= b) {\n                    return 1.0;\n                }\n                else {\n                    return deinterpolate(x);\n                }\n            };\n        };\n    };\n    ContinuousScale.prototype.clampReinterpolatorFactory = function (reinterpolatorOf) {\n        return function (a, b) {\n            var reinterpolate = reinterpolatorOf(a, b);\n            return function (t) {\n                if (t <= 0) {\n                    return a;\n                }\n                else if (t >= 1) {\n                    return b;\n                }\n                else {\n                    return reinterpolate(t);\n                }\n            };\n        };\n    };\n    ContinuousScale.prototype.rescale = function () {\n        // TODO: uncomment the polylinear functionality here and the corresponding\n        //       methods below when we have a use case fot it.\n        // const isPoly = Math.min(this._domain.length, this._range.length) > 2;\n        // this.piecewiseReinterpolatorFactory = isPoly ? this.polymap : this.bimap;\n        // this.piecewiseDeinterpolatorFactory = isPoly ? this.polymapInvert : this.bimapInvert;\n        this.piecewiseReinterpolatorFactory = this.bimap;\n        this.piecewiseDeinterpolatorFactory = this.bimapInvert;\n        this.piecewiseDeinterpolator = undefined;\n        this.piecewiseReinterpolator = undefined;\n    };\n    ContinuousScale.prototype.bimap = function (domain, range, deinterpolatorOf, reinterpolatorOf) {\n        var d0 = domain[0];\n        var d1 = domain[1];\n        var r0 = range[0];\n        var r1 = range[1];\n        var dt;\n        var tr;\n        if (d1 < d0) {\n            dt = deinterpolatorOf(d1, d0);\n            tr = reinterpolatorOf(r1, r0);\n        }\n        else {\n            dt = deinterpolatorOf(d0, d1);\n            tr = reinterpolatorOf(r0, r1);\n        }\n        return function (x) { return tr(dt(x)); };\n    };\n    ContinuousScale.prototype.bimapInvert = function (range, domain, deinterpolatorOf, reinterpolatorOf) {\n        var r0 = range[0];\n        var r1 = range[1];\n        var d0 = domain[0];\n        var d1 = domain[1];\n        var rt;\n        var td;\n        if (d1 < d0) {\n            rt = deinterpolatorOf(r1, r0);\n            td = reinterpolatorOf(d1, d0);\n        }\n        else {\n            rt = deinterpolatorOf(r0, r1);\n            td = reinterpolatorOf(d0, d1);\n        }\n        return function (x) { return td(rt(x)); };\n    };\n    return ContinuousScale;\n}());\nexports.default = ContinuousScale;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar continuousScale_1 = require(\"./continuousScale\");\nvar compare_1 = require(\"../util/compare\");\nvar ticks_1 = require(\"../util/ticks\");\n/**\n * Maps continuous domain to a continuous range.\n */\nvar LinearScale = /** @class */ (function (_super) {\n    __extends(LinearScale, _super);\n    function LinearScale() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LinearScale.prototype.deinterpolatorOf = function (a, b) {\n        var d = b - a;\n        if (d === 0 || isNaN(d)) {\n            return function () { return d; };\n        }\n        else {\n            return function (x) { return (x - a) / d; };\n        }\n    };\n    LinearScale.prototype.reinterpolatorOf = function (a, b) {\n        var d = b - a;\n        return function (t) { return a + d * t; };\n    };\n    LinearScale.prototype.ticks = function (count) {\n        if (count === void 0) { count = 10; }\n        var d = this._domain;\n        return ticks_1.default(d[0], d[d.length - 1], count);\n    };\n    /**\n     * Extends the domain so that it starts and ends on nice round values.\n     * @param count Tick count.\n     */\n    LinearScale.prototype.nice = function (count) {\n        if (count === void 0) { count = 10; }\n        var d = this.domain;\n        var i0 = 0;\n        var i1 = d.length - 1;\n        var start = d[i0];\n        var stop = d[i1];\n        var step;\n        if (stop < start) {\n            step = start;\n            start = stop;\n            stop = step;\n            step = i0;\n            i0 = i1;\n            i1 = step;\n        }\n        step = ticks_1.tickIncrement(start, stop, count);\n        if (step > 0) {\n            start = Math.floor(start / step) * step;\n            stop = Math.ceil(stop / step) * step;\n            step = ticks_1.tickIncrement(start, stop, count);\n        }\n        else if (step < 0) {\n            start = Math.ceil(start * step) / step;\n            stop = Math.floor(stop * step) / step;\n            step = ticks_1.tickIncrement(start, stop, count);\n        }\n        if (step > 0) {\n            d[i0] = Math.floor(start / step) * step;\n            d[i1] = Math.ceil(stop / step) * step;\n            this.domain = d;\n        }\n        else if (step < 0) {\n            d[i0] = Math.ceil(start * step) / step;\n            d[i1] = Math.floor(stop * step) / step;\n            this.domain = d;\n        }\n    };\n    return LinearScale;\n}(continuousScale_1.default));\nexports.LinearScale = LinearScale;\nfunction reinterpolateNumber(a, b) {\n    var d = b - a;\n    return function (t) { return a + d * t; };\n}\nexports.reinterpolateNumber = reinterpolateNumber;\nfunction deinterpolateNumber(a, b) {\n    var d = b - a;\n    if (d === 0 || isNaN(d)) {\n        return function () { return d; };\n    }\n    else {\n        return function (x) { return (x - a) / d; };\n    }\n}\nexports.deinterpolateNumber = deinterpolateNumber;\n/**\n * Creates a continuous scale with the default interpolator and no clamping.\n */\nfunction scaleLinear() {\n    var scale = new LinearScale(reinterpolateNumber, deinterpolateNumber, compare_1.naturalOrder);\n    scale.range = [0, 1];\n    return scale;\n}\nexports.default = scaleLinear;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\n// For small data structs like a bounding box, objects are superior to arrays\n// in terms of performance (by 3-4% in Chrome 71, Safari 12 and by 20% in Firefox 64).\n// They are also self descriptive and harder to abuse.\n// For example, one has to do:\n// `ctx.strokeRect(bbox.x, bbox.y, bbox.width, bbox.height);`\n// rather than become enticed by the much slower:\n// `ctx.strokeRect(...bbox);`\n// https://jsperf.com/array-vs-object-create-access\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BBox = /** @class */ (function () {\n    function BBox(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    BBox.prototype.dilate = function (value) {\n        this.x -= value;\n        this.y -= value;\n        this.width += value * 2;\n        this.height += value * 2;\n    };\n    BBox.prototype.containsPoint = function (x, y) {\n        return x >= this.x && x <= (this.x + this.width)\n            && y >= this.y && y <= (this.y + this.height);\n    };\n    BBox.prototype.render = function (ctx, params) {\n        if (params === void 0) { params = BBox.noParams; }\n        ctx.save();\n        if (params.resetTransform) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n        }\n        ctx.strokeStyle = params.strokeStyle || 'cyan';\n        ctx.lineWidth = params.lineWidth || 1;\n        ctx.strokeRect(this.x, this.y, this.width, this.height);\n        if (params.label) {\n            ctx.fillStyle = params.fillStyle || 'black';\n            ctx.textBaseline = 'bottom';\n            ctx.fillText(params.label, this.x, this.y);\n        }\n        ctx.restore();\n    };\n    BBox.noParams = {};\n    return BBox;\n}());\nexports.BBox = BBox;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar node_1 = require(\"./node\");\nvar path2D_1 = require(\"./path2D\");\n/**\n * Acts as `Group` node but with specified bounds that form a rectangle.\n * Any parts of the child nodes outside that rectangle will not be visible.\n * Unlike the `Group` node, the `ClipRect` node cannot be transformed.\n */\nvar ClipRect = /** @class */ (function (_super) {\n    __extends(ClipRect, _super);\n    function ClipRect() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isContainerNode = true;\n        _this.path = new path2D_1.Path2D();\n        _this._active = true;\n        _this._dirtyPath = true;\n        _this._x = 0;\n        _this._y = 0;\n        _this._width = 10;\n        _this._height = 10;\n        return _this;\n    }\n    ClipRect.prototype.isPointInNode = function (x, y) {\n        var point = this.transformPoint(x, y);\n        return point.x >= this.x && point.x <= this.x + this.width\n            && point.y >= this.y && point.y <= this.y + this.height;\n    };\n    Object.defineProperty(ClipRect.prototype, \"active\", {\n        get: function () {\n            return this._active;\n        },\n        set: function (value) {\n            if (this._active !== value) {\n                this._active = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClipRect.prototype, \"dirtyPath\", {\n        get: function () {\n            return this._dirtyPath;\n        },\n        set: function (value) {\n            if (this._dirtyPath !== value) {\n                this._dirtyPath = value;\n                if (value) {\n                    this.dirty = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClipRect.prototype, \"x\", {\n        get: function () {\n            return this._x;\n        },\n        set: function (value) {\n            if (this._x !== value) {\n                this._x = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClipRect.prototype, \"y\", {\n        get: function () {\n            return this._y;\n        },\n        set: function (value) {\n            if (this._y !== value) {\n                this._y = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClipRect.prototype, \"width\", {\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            if (this._width !== value) {\n                this._width = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClipRect.prototype, \"height\", {\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            if (this._height !== value) {\n                this._height = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ClipRect.prototype.updatePath = function () {\n        var path = this.path;\n        path.clear();\n        path.rect(this.x, this.y, this.width, this.height);\n        this.dirtyPath = false;\n    };\n    ClipRect.prototype.render = function (ctx) {\n        if (this.active) {\n            if (this.dirtyPath) {\n                this.updatePath();\n            }\n            this.scene.appendPath(this.path);\n            ctx.clip();\n        }\n        var children = this.children;\n        var n = children.length;\n        for (var i = 0; i < n; i++) {\n            ctx.save();\n            var child = children[i];\n            if (child.visible) {\n                child.render(ctx);\n            }\n            ctx.restore();\n        }\n    };\n    ClipRect.className = 'ClipRect';\n    return ClipRect;\n}(node_1.Node));\nexports.ClipRect = ClipRect;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DropShadow = /** @class */ (function () {\n    function DropShadow(options) {\n        this._enabled = true;\n        this._enabled = options.enabled !== undefined ? options.enabled : true;\n        this._color = options.color !== undefined ? options.color : 'black';\n        this._xOffset = options.xOffset !== undefined ? options.xOffset : 0;\n        this._yOffset = options.yOffset !== undefined ? options.yOffset : 0;\n        this._blur = options.blur !== undefined ? options.blur : 0;\n    }\n    Object.defineProperty(DropShadow.prototype, \"enabled\", {\n        get: function () {\n            return this._enabled;\n        },\n        set: function (value) {\n            if (this._enabled !== value) {\n                this._enabled = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DropShadow.prototype, \"color\", {\n        get: function () {\n            return this._color;\n        },\n        set: function (value) {\n            if (this._color !== value) {\n                this._color = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DropShadow.prototype, \"xOffset\", {\n        get: function () {\n            return this._xOffset;\n        },\n        set: function (value) {\n            if (this._xOffset !== value) {\n                this._xOffset = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DropShadow.prototype, \"yOffset\", {\n        get: function () {\n            return this._yOffset;\n        },\n        set: function (value) {\n            if (this._yOffset !== value) {\n                this._yOffset = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DropShadow.prototype, \"blur\", {\n        get: function () {\n            return this._blur;\n        },\n        set: function (value) {\n            if (this._blur !== value) {\n                this._blur = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DropShadow.prototype.update = function () {\n        if (this.onChange) {\n            this.onChange();\n        }\n    };\n    return DropShadow;\n}());\nexports.DropShadow = DropShadow;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar node_1 = require(\"./node\");\nvar bbox_1 = require(\"./bbox\");\nvar matrix_1 = require(\"./matrix\");\nvar Group = /** @class */ (function (_super) {\n    __extends(Group, _super);\n    function Group() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isContainerNode = true;\n        _this.getBBox = function () {\n            var left = Infinity;\n            var right = -Infinity;\n            var top = Infinity;\n            var bottom = -Infinity;\n            if (_this.dirtyTransform) {\n                _this.computeTransformMatrix();\n            }\n            _this.children.forEach(function (child) {\n                if (!child.visible) {\n                    return;\n                }\n                var bbox = child.getBBox();\n                if (!bbox) {\n                    return;\n                }\n                if (!(child instanceof Group)) {\n                    if (child.dirtyTransform) {\n                        child.computeTransformMatrix();\n                    }\n                    var matrix = matrix_1.Matrix.flyweight(child.matrix);\n                    var parent_1 = child.parent;\n                    while (parent_1) {\n                        matrix.preMultiplySelf(parent_1.matrix);\n                        parent_1 = parent_1.parent;\n                    }\n                    matrix.transformBBox(bbox, 0, bbox);\n                }\n                var x = bbox.x;\n                var y = bbox.y;\n                if (x < left) {\n                    left = x;\n                }\n                if (y < top) {\n                    top = y;\n                }\n                if (x + bbox.width > right) {\n                    right = x + bbox.width;\n                }\n                if (y + bbox.height > bottom) {\n                    bottom = y + bbox.height;\n                }\n            });\n            return new bbox_1.BBox(left, top, right - left, bottom - top);\n        };\n        return _this;\n    }\n    // We consider a group to be boundless, thus any point belongs to it.\n    Group.prototype.isPointInNode = function (x, y) {\n        return true;\n    };\n    Group.prototype.render = function (ctx) {\n        // A group can have `scaling`, `rotation`, `translation` properties\n        // that are applied to the canvas context before children are rendered,\n        // so all children can be transformed at once.\n        if (this.dirtyTransform) {\n            this.computeTransformMatrix();\n        }\n        this.matrix.toContext(ctx);\n        var children = this.children;\n        var n = children.length;\n        for (var i = 0; i < n; i++) {\n            ctx.save();\n            var child = children[i];\n            if (child.visible) {\n                child.render(ctx);\n            }\n            ctx.restore();\n        }\n        // debug\n        // this.getBBox().render(ctx, {\n        //     label: this.id,\n        //     resetTransform: true,\n        //     fillStyle: 'rgba(0, 0, 0, 0.5)'\n        // });\n    };\n    Group.className = 'Group';\n    return Group;\n}(node_1.Node));\nexports.Group = Group;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar polyRoots_1 = require(\"./polyRoots\");\n/**\n * Returns the intersection point for the given pair of line segments, or null,\n * if the segments are parallel or don't intersect.\n * Based on http://paulbourke.net/geometry/pointlineplane/\n */\nfunction segmentIntersection(ax1, ay1, ax2, ay2, bx1, by1, bx2, by2) {\n    var d = (ax2 - ax1) * (by2 - by1) - (ay2 - ay1) * (bx2 - bx1);\n    if (d === 0) { // The lines are parallel.\n        return null;\n    }\n    var ua = ((bx2 - bx1) * (ay1 - by1) - (ax1 - bx1) * (by2 - by1)) / d;\n    var ub = ((ax2 - ax1) * (ay1 - by1) - (ay2 - ay1) * (ax1 - bx1)) / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        return {\n            x: ax1 + ua * (ax2 - ax1),\n            y: ay1 + ua * (ay2 - ay1)\n        };\n    }\n    return null; // The intersection point is outside either or both segments.\n}\nexports.segmentIntersection = segmentIntersection;\n/**\n * Returns intersection points of the given cubic curve and the line segment.\n * Takes in x/y components of cubic control points and line segment start/end points\n * as parameters.\n */\nfunction cubicSegmentIntersections(px1, py1, px2, py2, px3, py3, px4, py4, x1, y1, x2, y2) {\n    var intersections = [];\n    // Find line equation coefficients.\n    var A = y1 - y2;\n    var B = x2 - x1;\n    var C = x1 * (y2 - y1) - y1 * (x2 - x1);\n    // Find cubic Bezier curve equation coefficients from control points.\n    var bx = bezierCoefficients(px1, px2, px3, px4);\n    var by = bezierCoefficients(py1, py2, py3, py4);\n    var a = A * bx[0] + B * by[0]; // t^3\n    var b = A * bx[1] + B * by[1]; // t^2\n    var c = A * bx[2] + B * by[2]; // t\n    var d = A * bx[3] + B * by[3] + C; // 1\n    var roots = polyRoots_1.cubicRoots(a, b, c, d);\n    // Verify that the roots are within bounds of the linear segment.\n    for (var i = 0; i < roots.length; i++) {\n        var t = roots[i];\n        var tt = t * t;\n        var ttt = t * tt;\n        // Find the cartesian plane coordinates for the parametric root `t`.\n        var x = bx[0] * ttt + bx[1] * tt + bx[2] * t + bx[3];\n        var y = by[0] * ttt + by[1] * tt + by[2] * t + by[3];\n        // The parametric cubic roots we found are intersection points\n        // with an infinite line, and so the x/y coordinates above are as well.\n        // Make sure the x/y is also within the bounds of the given segment.\n        var s = void 0;\n        if (x1 !== x2) {\n            s = (x - x1) / (x2 - x1);\n        }\n        else { // the line is vertical\n            s = (y - y1) / (y2 - y1);\n        }\n        if (s >= 0 && s <= 1) {\n            intersections.push({ x: x, y: y });\n        }\n    }\n    return intersections;\n}\nexports.cubicSegmentIntersections = cubicSegmentIntersections;\n/**\n * Returns the given coordinates vector multiplied by the coefficient matrix\n * of the parametric cubic Bézier equation.\n */\nfunction bezierCoefficients(P1, P2, P3, P4) {\n    return [\n        -P1 + 3 * P2 - 3 * P3 + P4,\n        3 * P1 - 6 * P2 + 3 * P3,\n        -3 * P1 + 3 * P2,\n        P1 //                 | 1  0  0  0| |P4|\n    ];\n}\nexports.bezierCoefficients = bezierCoefficients;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bbox_1 = require(\"./bbox\");\n/**\n * As of Jan 8, 2019, Firefox still doesn't implement\n * `getTransform(): DOMMatrix;`\n * `setTransform(transform?: DOMMatrix2DInit)`\n * in the `CanvasRenderingContext2D`.\n * Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=928150\n * IE11 and Edge 44 also don't have the support.\n * Thus this class, to keep track of the current transform and\n * combine transformations.\n * Standards:\n * https://html.spec.whatwg.org/dev/canvas.html\n * https://www.w3.org/TR/geometry-1/\n */\nvar Matrix = /** @class */ (function () {\n    function Matrix(elements) {\n        if (elements === void 0) { elements = [1, 0, 0, 1, 0, 0]; }\n        this.elements = elements;\n    }\n    Matrix.prototype.setElements = function (elements) {\n        var e = this.elements;\n        // `this.elements = elements.slice()` is 4-5 times slower\n        // (in Chrome 71 and FF 64) than manually copying elements,\n        // since slicing allocates new memory.\n        // The performance of passing parameters individually\n        // vs as an array is about the same in both browsers, so we\n        // go with a single (array of elements) parameter, because\n        // `setElements(elements)` and `setElements([a, b, c, d, e, f])`\n        // calls give us roughly the same performance, versus\n        // `setElements(...elements)` and `setElements(a, b, c, d, e, f)`,\n        // where the spread operator causes a 20-30x performance drop\n        // (30x when compiled to ES5's `.apply(this, elements)`\n        //  20x when used natively).\n        e[0] = elements[0];\n        e[1] = elements[1];\n        e[2] = elements[2];\n        e[3] = elements[3];\n        e[4] = elements[4];\n        e[5] = elements[5];\n        return this;\n    };\n    Matrix.prototype.setIdentityElements = function () {\n        var e = this.elements;\n        e[0] = 1;\n        e[1] = 0;\n        e[2] = 0;\n        e[3] = 1;\n        e[4] = 0;\n        e[5] = 0;\n        return this;\n    };\n    Object.defineProperty(Matrix.prototype, \"identity\", {\n        get: function () {\n            var e = this.elements;\n            return e[0] === 1 && e[1] === 0 && e[2] === 0 &&\n                e[3] === 1 && e[4] === 0 && e[5] === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"a\", {\n        get: function () {\n            return this.elements[0];\n        },\n        set: function (value) {\n            this.elements[0] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"b\", {\n        get: function () {\n            return this.elements[1];\n        },\n        set: function (value) {\n            this.elements[1] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"c\", {\n        get: function () {\n            return this.elements[2];\n        },\n        set: function (value) {\n            this.elements[2] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"d\", {\n        get: function () {\n            return this.elements[3];\n        },\n        set: function (value) {\n            this.elements[3] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"e\", {\n        get: function () {\n            return this.elements[4];\n        },\n        set: function (value) {\n            this.elements[4] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"f\", {\n        get: function () {\n            return this.elements[5];\n        },\n        set: function (value) {\n            this.elements[5] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Performs the AxB matrix multiplication and saves the result\n     * to `C`, if given, or to `A` otherwise.\n     */\n    Matrix.prototype.AxB = function (A, B, C) {\n        var m11 = A[0], m12 = A[1], m21 = A[2], m22 = A[3], m31 = A[4], m32 = A[5];\n        var o11 = B[0], o12 = B[1], o21 = B[2], o22 = B[3], o31 = B[4], o32 = B[5];\n        C = C || A;\n        C[0] = m11 * o11 + m21 * o12;\n        C[1] = m12 * o11 + m22 * o12;\n        C[2] = m11 * o21 + m21 * o22;\n        C[3] = m12 * o21 + m22 * o22;\n        C[4] = m11 * o31 + m21 * o32 + m31;\n        C[5] = m12 * o31 + m22 * o32 + m32;\n    };\n    /**\n     * The `other` matrix gets post-multiplied to the current matrix.\n     * Returns the current matrix.\n     * @param other\n     */\n    Matrix.prototype.multiplySelf = function (other) {\n        this.AxB(this.elements, other.elements);\n        return this;\n    };\n    /**\n     * The `other` matrix gets post-multiplied to the current matrix.\n     * Returns a new matrix.\n     * @param other\n     */\n    Matrix.prototype.multiply = function (other) {\n        var elements = new Array(6);\n        this.AxB(this.elements, other.elements, elements);\n        return new Matrix(elements);\n    };\n    Matrix.prototype.preMultiplySelf = function (other) {\n        this.AxB(other.elements, this.elements, this.elements);\n        return this;\n    };\n    /**\n     * Returns the inverse of this matrix as a new matrix.\n     */\n    Matrix.prototype.inverse = function () {\n        var _a = this.elements, a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4], f = _a[5];\n        var rD = 1 / (a * d - b * c); // reciprocal of determinant\n        a *= rD;\n        b *= rD;\n        c *= rD;\n        d *= rD;\n        return new Matrix([d, -b, -c, a, c * f - d * e, b * e - a * f]);\n    };\n    /**\n     * Save the inverse of this matrix to the given matrix.\n     */\n    Matrix.prototype.inverseTo = function (other) {\n        var _a = this.elements, a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4], f = _a[5];\n        var rD = 1 / (a * d - b * c); // reciprocal of determinant\n        a *= rD;\n        b *= rD;\n        c *= rD;\n        d *= rD;\n        other.setElements([d, -b, -c, a, c * f - d * e, b * e - a * f]);\n        return this;\n    };\n    Matrix.prototype.invertSelf = function () {\n        var elements = this.elements;\n        var a = elements[0], b = elements[1], c = elements[2], d = elements[3], e = elements[4], f = elements[5];\n        var rD = 1 / (a * d - b * c); // reciprocal of determinant\n        a *= rD;\n        b *= rD;\n        c *= rD;\n        d *= rD;\n        elements[0] = d;\n        elements[1] = -b;\n        elements[2] = -c;\n        elements[3] = a;\n        elements[4] = c * f - d * e;\n        elements[5] = b * e - a * f;\n        return this;\n    };\n    Matrix.prototype.clone = function () {\n        return new Matrix(this.elements.slice());\n    };\n    Matrix.prototype.transformPoint = function (x, y) {\n        var e = this.elements;\n        return {\n            x: x * e[0] + y * e[2] + e[4],\n            y: x * e[1] + y * e[3] + e[5]\n        };\n    };\n    Matrix.prototype.transformBBox = function (bbox, radius, target) {\n        if (radius === void 0) { radius = 0; }\n        var elements = this.elements;\n        var xx = elements[0];\n        var xy = elements[1];\n        var yx = elements[2];\n        var yy = elements[3];\n        var h_w = bbox.width * 0.5;\n        var h_h = bbox.height * 0.5;\n        var cx = bbox.x + h_w;\n        var cy = bbox.y + h_h;\n        var w, h;\n        if (radius) {\n            h_w -= radius;\n            h_h -= radius;\n            var sx = Math.sqrt(xx * xx + yx * yx);\n            var sy = Math.sqrt(xy * xy + yy * yy);\n            w = Math.abs(h_w * xx) + Math.abs(h_h * yx) + Math.abs(sx * radius);\n            h = Math.abs(h_w * xy) + Math.abs(h_h * yy) + Math.abs(sy * radius);\n        }\n        else {\n            w = Math.abs(h_w * xx) + Math.abs(h_h * yx);\n            h = Math.abs(h_w * xy) + Math.abs(h_h * yy);\n        }\n        if (!target) {\n            target = new bbox_1.BBox(0, 0, 0, 0);\n        }\n        target.x = cx * xx + cy * yx + elements[4] - w;\n        target.y = cx * xy + cy * yy + elements[5] - h;\n        target.width = w + w;\n        target.height = h + h;\n        return target;\n    };\n    Matrix.prototype.toContext = function (ctx) {\n        // It's fair to say that matrix multiplications are not cheap.\n        // However, updating path definitions on every frame isn't either, so\n        // it may be cheaper to just translate paths. It's also fair to\n        // say, that most paths will have to be re-rendered anyway, say\n        // rectangle paths in a bar chart, where an animation would happen when\n        // the data set changes and existing bars are morphed into new ones.\n        // Or a pie chart, where old sectors are also morphed into new ones.\n        // Same for the line chart. The only plausible case where translating\n        // existing paths would be enough, is the scatter chart, where marker\n        // icons, typically circles, stay the same size. But if circle radii\n        // are bound to some data points, even circle paths would have to be\n        // updated. And thus it makes sense to optimize for fewer matrix\n        // transforms, where transform matrices of paths are mostly identity\n        // matrices and `x`/`y`, `centerX`/`centerY` and similar properties\n        // are used to define a path at specific coordinates. And only groups\n        // are used to collectively apply a transform to a set of nodes.\n        // If the matrix is mostly identity (95% of the time),\n        // the `if (this.isIdentity)` check can make this call 3-4 times\n        // faster on average: https://jsperf.com/matrix-check-first-vs-always-set\n        if (this.identity) {\n            return;\n        }\n        var e = this.elements;\n        ctx.transform(e[0], e[1], e[2], e[3], e[4], e[5]);\n    };\n    Matrix.flyweight = function (elements) {\n        if (elements) {\n            if (elements instanceof Matrix) {\n                Matrix.matrix.setElements(elements.elements);\n            }\n            else {\n                Matrix.matrix.setElements(elements);\n            }\n        }\n        else {\n            Matrix.matrix.setIdentityElements();\n        }\n        return Matrix.matrix;\n    };\n    Matrix.matrix = new Matrix();\n    return Matrix;\n}());\nexports.Matrix = Matrix;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar matrix_1 = require(\"./matrix\");\nvar PointerEvents;\n(function (PointerEvents) {\n    PointerEvents[PointerEvents[\"All\"] = 0] = \"All\";\n    PointerEvents[PointerEvents[\"None\"] = 1] = \"None\";\n})(PointerEvents = exports.PointerEvents || (exports.PointerEvents = {}));\n/**\n * Abstract scene graph node.\n * Each node can have zero or one parent and belong to zero or one scene.\n */\nvar Node = /** @class */ (function () {\n    function Node() {\n        /**\n         * Unique node ID in the form `ClassName-NaturalNumber`.\n         */\n        this.id = this.createId();\n        /**\n         * Some number to identify this node, typically within a `Group` node.\n         * Usually this will be some enum value used as a selector.\n         */\n        this.tag = NaN;\n        /**\n         * To simplify the type system (especially in Selections) we don't have the `Parent` node\n         * (one that has children). Instead, we mimic HTML DOM, where any node can have children.\n         * But we still need to distinguish regular leaf nodes from container leafs somehow.\n         */\n        this.isContainerNode = false;\n        this._children = [];\n        // Used to check for duplicate nodes.\n        this.childSet = {}; // new Set<Node>()\n        // These matrices may need to have package level visibility\n        // for performance optimization purposes.\n        this.matrix = new matrix_1.Matrix();\n        this.inverseMatrix = new matrix_1.Matrix();\n        // TODO: should this be `true` by default as well?\n        this._dirtyTransform = false;\n        this._scalingX = 1;\n        this._scalingY = 1;\n        /**\n         * The center of scaling.\n         * The default value of `null` means the scaling center will be\n         * determined automatically, as the center of the bounding box\n         * of a node.\n         */\n        this._scalingCenterX = null;\n        this._scalingCenterY = null;\n        this._rotationCenterX = null;\n        this._rotationCenterY = null;\n        /**\n         * Rotation angle in radians.\n         * The value is set as is. No normalization to the [-180, 180) or [0, 360)\n         * interval is performed.\n         */\n        this._rotation = 0;\n        this._translationX = 0;\n        this._translationY = 0;\n        /**\n         * Each time a property of the node that effects how it renders changes\n         * the `dirty` property of the node should be set to `true`. The change\n         * to the `dirty` property of the node will propagate up to its parents\n         * and eventually to the scene, at which point an animation frame callback\n         * will be scheduled to rerender the scene and its nodes and reset the `dirty`\n         * flags of all nodes and the {@link Scene._dirty | Scene} back to `false`.\n         * Since changes to node properties are not rendered immediately, it's possible\n         * to change as many properties on as many nodes as needed and the rendering\n         * will still only happen once in the next animation frame callback.\n         * The animation frame callback is only scheduled if it hasn't been already.\n         */\n        this._dirty = true;\n        this._visible = true;\n        this.pointerEvents = PointerEvents.All;\n    }\n    // Uniquely identify nodes (to check for duplicates, for example).\n    Node.prototype.createId = function () {\n        var constructor = this.constructor;\n        var className = constructor.className;\n        if (!className) {\n            throw new Error(\"The \" + constructor + \" is missing the 'className' property.\");\n        }\n        return className + '-' + (constructor.id = (constructor.id || 0) + 1);\n    };\n    /**\n     * This is meaningfully faster than `instanceof` and should be the preferred way\n     * of checking inside loops.\n     * @param node\n     */\n    Node.isNode = function (node) {\n        return node ? node.matrix !== undefined : false;\n    };\n    Node.prototype._setScene = function (value) {\n        this._scene = value;\n        var children = this.children;\n        var n = children.length;\n        for (var i = 0; i < n; i++) {\n            children[i]._setScene(value);\n        }\n    };\n    Object.defineProperty(Node.prototype, \"scene\", {\n        get: function () {\n            return this._scene;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Node.prototype._setParent = function (value) {\n        this._parent = value;\n    };\n    Object.defineProperty(Node.prototype, \"parent\", {\n        get: function () {\n            return this._parent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"children\", {\n        get: function () {\n            return this._children;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Node.prototype.countChildren = function (depth) {\n        if (depth === void 0) { depth = Node.MAX_SAFE_INTEGER; }\n        if (depth <= 0) {\n            return 0;\n        }\n        var children = this.children;\n        var n = children.length;\n        var size = n;\n        for (var i = 0; i < n; i++) {\n            size += children[i].countChildren(depth - 1);\n        }\n        return size;\n    };\n    /**\n     * Appends one or more new node instances to this parent.\n     * If one needs to:\n     * - move a child to the end of the list of children\n     * - move a child from one parent to another (including parents in other scenes)\n     * one should use the {@link insertBefore} method instead.\n     * @param nodes A node or nodes to append.\n     */\n    Node.prototype.append = function (nodes) {\n        // Passing a single parameter to an open-ended version of `append`\n        // would be 30-35% slower than this.\n        if (Node.isNode(nodes)) {\n            nodes = [nodes];\n        }\n        // The function takes an array rather than having open-ended\n        // arguments like `...nodes: Node[]` because the latter is\n        // transpiled to a function where the `arguments` object\n        // is copied to a temporary array inside a loop.\n        // So an array is created either way. And if we already have\n        // an array of nodes we want to add, we have to use the prohibitively\n        // expensive spread operator to pass it to the function,\n        // and, on top of that, the copy of the `arguments` is still made.\n        var n = nodes.length;\n        for (var i = 0; i < n; i++) {\n            var node = nodes[i];\n            if (node.parent) {\n                throw new Error(node + \" already belongs to another parent: \" + node.parent + \".\");\n            }\n            if (node.scene) {\n                throw new Error(node + \" already belongs a scene: \" + node.scene + \".\");\n            }\n            if (this.childSet[node.id]) {\n                // Cast to `any` to avoid `Property 'name' does not exist on type 'Function'`.\n                throw new Error(\"Duplicate \" + node.constructor.name + \" node: \" + node);\n            }\n            this._children.push(node);\n            this.childSet[node.id] = true;\n            node._setParent(this);\n            node._setScene(this.scene);\n        }\n        this.dirty = true;\n    };\n    Node.prototype.appendChild = function (node) {\n        if (node.parent) {\n            throw new Error(node + \" already belongs to another parent: \" + node.parent + \".\");\n        }\n        if (node.scene) {\n            throw new Error(node + \" already belongs a scene: \" + node.scene + \".\");\n        }\n        if (this.childSet[node.id]) {\n            // Cast to `any` to avoid `Property 'name' does not exist on type 'Function'`.\n            throw new Error(\"Duplicate \" + node.constructor.name + \" node: \" + node);\n        }\n        this._children.push(node);\n        this.childSet[node.id] = true;\n        node._setParent(this);\n        node._setScene(this.scene);\n        this.dirty = true;\n        return node;\n    };\n    Node.prototype.removeChild = function (node) {\n        if (node.parent === this) {\n            var i = this.children.indexOf(node);\n            if (i >= 0) {\n                this._children.splice(i, 1);\n                delete this.childSet[node.id];\n                node._setParent(undefined);\n                node._setScene(undefined);\n                this.dirty = true;\n                return node;\n            }\n        }\n        throw new Error(\"The node to be removed is not a child of this node.\");\n    };\n    /**\n     * Inserts the node `node` before the existing child node `nextNode`.\n     * If `nextNode` is null, insert `node` at the end of the list of children.\n     * If the `node` belongs to another parent, it is first removed.\n     * Returns the `node`.\n     * @param node\n     * @param nextNode\n     */\n    Node.prototype.insertBefore = function (node, nextNode) {\n        var parent = node.parent;\n        if (node.parent) {\n            node.parent.removeChild(node);\n        }\n        if (nextNode && nextNode.parent === this) {\n            var i = this.children.indexOf(nextNode);\n            if (i >= 0) {\n                this._children.splice(i, 0, node);\n                this.childSet[node.id] = true;\n                node._setParent(this);\n                node._setScene(this.scene);\n            }\n            else {\n                throw new Error(nextNode + \" has \" + parent + \" as the parent, \"\n                    + \"but is not in its list of children.\");\n            }\n            this.dirty = true;\n        }\n        else {\n            this.append(node);\n        }\n        return node;\n    };\n    /**\n     * Calculates the combined inverse transformation for this node,\n     * and uses it to convert the given transformed point\n     * to the untransformed one.\n     * @param x\n     * @param y\n     */\n    Node.prototype.transformPoint = function (x, y) {\n        var matrix = matrix_1.Matrix.flyweight(this.matrix);\n        var parent = this.parent;\n        while (parent) {\n            matrix.preMultiplySelf(parent.matrix);\n            parent = parent.parent;\n        }\n        return matrix.invertSelf().transformPoint(x, y);\n    };\n    Object.defineProperty(Node.prototype, \"dirtyTransform\", {\n        get: function () {\n            return this._dirtyTransform;\n        },\n        set: function (value) {\n            this._dirtyTransform = value;\n            // TODO: replace this with simply `this.dirty = true`,\n            //       see `set dirty` method.\n            if (value) {\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"scalingX\", {\n        get: function () {\n            return this._scalingX;\n        },\n        set: function (value) {\n            if (this._scalingX !== value) {\n                this._scalingX = value;\n                this.dirtyTransform = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"scalingY\", {\n        get: function () {\n            return this._scalingY;\n        },\n        set: function (value) {\n            if (this._scalingY !== value) {\n                this._scalingY = value;\n                this.dirtyTransform = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"scalingCenterX\", {\n        get: function () {\n            return this._scalingCenterX;\n        },\n        set: function (value) {\n            if (this._scalingCenterX !== value) {\n                this._scalingCenterX = value;\n                this.dirtyTransform = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"scalingCenterY\", {\n        get: function () {\n            return this._scalingCenterY;\n        },\n        set: function (value) {\n            if (this._scalingCenterY !== value) {\n                this._scalingCenterY = value;\n                this.dirtyTransform = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"rotationCenterX\", {\n        get: function () {\n            return this._rotationCenterX;\n        },\n        set: function (value) {\n            if (this._rotationCenterX !== value) {\n                this._rotationCenterX = value;\n                this.dirtyTransform = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"rotationCenterY\", {\n        get: function () {\n            return this._rotationCenterY;\n        },\n        set: function (value) {\n            if (this._rotationCenterY !== value) {\n                this._rotationCenterY = value;\n                this.dirtyTransform = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"rotation\", {\n        get: function () {\n            return this._rotation;\n        },\n        set: function (value) {\n            if (this._rotation !== value) {\n                this._rotation = value;\n                this.dirtyTransform = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"rotationDeg\", {\n        get: function () {\n            return this.rotation / Math.PI * 180;\n        },\n        /**\n         * For performance reasons the rotation angle's internal representation\n         * is in radians. Therefore, don't expect to get the same number you set.\n         * Even with integer angles about a quarter of them from 0 to 359 cannot\n         * be converted to radians and back without precision loss.\n         * For example:\n         *\n         *     node.rotationDeg = 11;\n         *     console.log(node.rotationDeg); // 10.999999999999998\n         *\n         * @param value Rotation angle in degrees.\n         */\n        set: function (value) {\n            this.rotation = value / 180 * Math.PI;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"translationX\", {\n        get: function () {\n            return this._translationX;\n        },\n        set: function (value) {\n            if (this._translationX !== value) {\n                this._translationX = value;\n                this.dirtyTransform = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"translationY\", {\n        get: function () {\n            return this._translationY;\n        },\n        set: function (value) {\n            if (this._translationY !== value) {\n                this._translationY = value;\n                this.dirtyTransform = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Node.prototype.isPointInNode = function (x, y) {\n        return false;\n    };\n    /**\n     * Hit testing method.\n     * Recursively checks if the given point is inside this node or any of its children.\n     * Returns the first matching node or `undefined`.\n     * Nodes that render later (show on top) are hit tested first.\n     * @param x\n     * @param y\n     */\n    Node.prototype.pickNode = function (x, y) {\n        if (!this.visible || this.pointerEvents === PointerEvents.None || !this.isPointInNode(x, y)) {\n            return;\n        }\n        var children = this.children;\n        if (children.length) {\n            // Nodes added later should be hit-tested first,\n            // as they are rendered on top of the previously added nodes.\n            for (var i = children.length - 1; i >= 0; i--) {\n                var hit = children[i].pickNode(x, y);\n                if (hit) {\n                    return hit;\n                }\n            }\n        }\n        else if (!this.isContainerNode) { // a leaf node, but not a container leaf\n            return this;\n        }\n    };\n    Node.prototype.getBBox = function () { return; };\n    Node.prototype.getBBoxCenter = function () {\n        var bbox = this.getBBox && this.getBBox();\n        if (bbox) {\n            return [\n                bbox.x + bbox.width * 0.5,\n                bbox.y + bbox.height * 0.5\n            ];\n        }\n        return [0, 0];\n    };\n    Node.prototype.computeTransformMatrix = function () {\n        // TODO: transforms without center of scaling and rotation correspond directly\n        //       to `setAttribute('transform', 'translate(tx, ty) rotate(rDeg) scale(sx, sy)')`\n        //       in SVG. Our use cases will mostly require positioning elements (rects, circles)\n        //       within a group, rotating groups at right angles (e.g. for axis) and translating\n        //       groups. We shouldn't even need `scale(1, -1)` (invert vertically), since this\n        //       can be done using D3-like scales already by inverting the output range.\n        //       So for now, just assume that centers of scaling and rotation are at the origin.\n        // const [bbcx, bbcy] = this.getBBoxCenter();\n        var _a = [0, 0], bbcx = _a[0], bbcy = _a[1];\n        var sx = this.scalingX;\n        var sy = this.scalingY;\n        var scx;\n        var scy;\n        if (sx === 1 && sy === 1) {\n            scx = 0;\n            scy = 0;\n        }\n        else {\n            scx = this.scalingCenterX === null ? bbcx : this.scalingCenterX;\n            scy = this.scalingCenterY === null ? bbcy : this.scalingCenterY;\n        }\n        var r = this.rotation;\n        var cos = Math.cos(r);\n        var sin = Math.sin(r);\n        var rcx;\n        var rcy;\n        if (r === 0) {\n            rcx = 0;\n            rcy = 0;\n        }\n        else {\n            rcx = this.rotationCenterX === null ? bbcx : this.rotationCenterX;\n            rcy = this.rotationCenterY === null ? bbcy : this.rotationCenterY;\n        }\n        var tx = this.translationX;\n        var ty = this.translationY;\n        // The transform matrix `M` is a result of the following transformations:\n        // 1) translate the center of scaling to the origin\n        // 2) scale\n        // 3) translate back\n        // 4) translate the center of rotation to the origin\n        // 5) rotate\n        // 6) translate back\n        // 7) translate\n        //         (7)          (6)             (5)             (4)           (3)           (2)           (1)\n        //     | 1 0 tx |   | 1 0 rcx |   | cos -sin 0 |   | 1 0 -rcx |   | 1 0 scx |   | sx 0 0 |   | 1 0 -scx |\n        // M = | 0 1 ty | * | 0 1 rcy | * | sin  cos 0 | * | 0 1 -rcy | * | 0 1 scy | * | 0 sy 0 | * | 0 1 -scy |\n        //     | 0 0  1 |   | 0 0  1  |   |  0    0  1 |   | 0 0  1   |   | 0 0  1  |   | 0  0 0 |   | 0 0  1   |\n        // Translation after steps 1-4 above:\n        var tx4 = scx * (1 - sx) - rcx;\n        var ty4 = scy * (1 - sy) - rcy;\n        this.dirtyTransform = false;\n        this.matrix.setElements([\n            cos * sx, sin * sx,\n            -sin * sy, cos * sy,\n            cos * tx4 - sin * ty4 + rcx + tx,\n            sin * tx4 + cos * ty4 + rcy + ty\n        ]).inverseTo(this.inverseMatrix);\n    };\n    Object.defineProperty(Node.prototype, \"dirty\", {\n        get: function () {\n            return this._dirty;\n        },\n        set: function (value) {\n            // TODO: check if we are already dirty (e.g. if (this._dirty !== value))\n            //       if we are, then all parents and the scene have been\n            //       notified already, and we are doing redundant work\n            //       (but test if this is indeed the case)\n            this._dirty = value;\n            if (value) {\n                if (this.parent) {\n                    this.parent.dirty = true;\n                }\n                else if (this.scene) {\n                    this.scene.dirty = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"visible\", {\n        get: function () {\n            return this._visible;\n        },\n        set: function (value) {\n            if (this._visible !== value) {\n                this._visible = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Node.MAX_SAFE_INTEGER = Math.pow(2, 53) - 1; // Number.MAX_SAFE_INTEGER\n    return Node;\n}());\nexports.Node = Node;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar intersection_1 = require(\"./intersection\");\nvar Path2D = /** @class */ (function () {\n    function Path2D() {\n        // The methods of this class will likely be called many times per animation frame,\n        // and any allocation can trigger a GC cycle during animation, so we attempt\n        // to minimize the number of allocations.\n        this.commands = [];\n        this.params = [];\n        this._closedPath = false;\n    }\n    Path2D.prototype.moveTo = function (x, y) {\n        if (this.xy) {\n            this.xy[0] = x;\n            this.xy[1] = y;\n        }\n        else {\n            this.xy = [x, y];\n        }\n        this.commands.push('M');\n        this.params.push(x, y);\n    };\n    Path2D.prototype.lineTo = function (x, y) {\n        if (this.xy) {\n            this.commands.push('L');\n            this.params.push(x, y);\n            this.xy[0] = x;\n            this.xy[1] = y;\n        }\n        else {\n            this.moveTo(x, y);\n        }\n    };\n    Path2D.prototype.rect = function (x, y, width, height) {\n        this.moveTo(x, y);\n        this.lineTo(x + width, y);\n        this.lineTo(x + width, y + height);\n        this.lineTo(x, y + height);\n        this.closePath();\n    };\n    /**\n     * Adds an arc segment to the path definition.\n     * https://www.w3.org/TR/SVG11/paths.html#PathDataEllipticalArcCommands\n     * @param rx The major-axis radius.\n     * @param ry The minor-axis radius.\n     * @param rotation The x-axis rotation, expressed in radians.\n     * @param fA The large arc flag. `1` to use angle > π.\n     * @param fS The sweep flag. `1` for the arc that goes to `x`/`y` clockwise.\n     * @param x2 The x coordinate to arc to.\n     * @param y2 The y coordinate to arc to.\n     */\n    Path2D.prototype.arcTo = function (rx, ry, rotation, fA, fS, x2, y2) {\n        // Convert from endpoint to center parametrization:\n        // https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n        var xy = this.xy;\n        if (!xy) {\n            return;\n        }\n        if (rx < 0) {\n            rx = -rx;\n        }\n        if (ry < 0) {\n            ry = -ry;\n        }\n        var x1 = xy[0];\n        var y1 = xy[1];\n        var hdx = (x1 - x2) / 2;\n        var hdy = (y1 - y2) / 2;\n        var sinPhi = Math.sin(rotation);\n        var cosPhi = Math.cos(rotation);\n        var xp = cosPhi * hdx + sinPhi * hdy;\n        var yp = -sinPhi * hdx + cosPhi * hdy;\n        var ratX = xp / rx;\n        var ratY = yp / ry;\n        var lambda = ratX * ratX + ratY * ratY;\n        var cx = (x1 + x2) / 2;\n        var cy = (y1 + y2) / 2;\n        var cpx = 0;\n        var cpy = 0;\n        if (lambda >= 1) {\n            lambda = Math.sqrt(lambda);\n            rx *= lambda;\n            ry *= lambda;\n            // me gives lambda == cpx == cpy == 0;\n        }\n        else {\n            lambda = Math.sqrt(1 / lambda - 1);\n            if (fA === fS) {\n                lambda = -lambda;\n            }\n            cpx = lambda * rx * ratY;\n            cpy = -lambda * ry * ratX;\n            cx += cosPhi * cpx - sinPhi * cpy;\n            cy += sinPhi * cpx + cosPhi * cpy;\n        }\n        var theta1 = Math.atan2((yp - cpy) / ry, (xp - cpx) / rx);\n        var deltaTheta = Math.atan2((-yp - cpy) / ry, (-xp - cpx) / rx) - theta1;\n        // if (fS) {\n        //     if (deltaTheta <= 0) {\n        //         deltaTheta += Math.PI * 2;\n        //     }\n        // }\n        // else {\n        //     if (deltaTheta >= 0) {\n        //         deltaTheta -= Math.PI * 2;\n        //     }\n        // }\n        this.cubicArc(cx, cy, rx, ry, rotation, theta1, theta1 + deltaTheta, 1 - fS);\n    };\n    Path2D.prototype.arcToAlt = function (rx, ry, rotation, fA, fS, x2, y2) {\n        // Convert from endpoint to center parametrization. See:\n        // https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n        if (!this.xy) {\n            return;\n        }\n        if (rx < 0) {\n            rx = -rx;\n        }\n        if (ry < 0) {\n            ry = -ry;\n        }\n        var x1 = this.xy[0];\n        var y1 = this.xy[1];\n        var hdx = (x1 - x2) / 2;\n        var hdy = (y1 - y2) / 2;\n        var sinPhi = Math.sin(rotation);\n        var cosPhi = Math.cos(rotation);\n        var x1p = cosPhi * hdx + sinPhi * hdy;\n        var y1p = -sinPhi * hdx + cosPhi * hdy;\n        var rx_y1p = rx * rx * y1p * y1p;\n        var ry_x1p = ry * ry * x1p * x1p;\n        var root = Math.sqrt((rx * rx * ry * ry - rx_y1p - ry_x1p) / (rx_y1p + ry_x1p));\n        var rootSign = fA === fS ? 0 : 1;\n        var cxp = rootSign * root * rx * y1p / ry;\n        var cyp = -rootSign * root * ry * x1p / rx;\n        var cx = cosPhi * cxp - sinPhi * cyp + (x1 + x2) / 2;\n        var cy = sinPhi * cxp + cosPhi * cyp + (y1 + y2) / 2;\n        var theta1 = Math.acos((x1p - cxp) / rx / ((x1p - cxp) / rx));\n    };\n    /**\n     * Approximates an elliptical arc with up to four cubic Bézier curves.\n     * @param commands The string array to write SVG command letters to.\n     * @param params The number array to write SVG command parameters (cubic control points) to.\n     * @param cx The x-axis coordinate for the ellipse's center.\n     * @param cy The y-axis coordinate for the ellipse's center.\n     * @param rx The ellipse's major-axis radius.\n     * @param ry The ellipse's minor-axis radius.\n     * @param phi The rotation for this ellipse, expressed in radians.\n     * @param theta1 The starting angle, measured clockwise from the positive x-axis and expressed in radians.\n     * @param theta2 The ending angle, measured clockwise from the positive x-axis and expressed in radians.\n     * @param anticlockwise The arc control points are always placed clockwise from `theta1` to `theta2`,\n     * even when `theta1 > theta2`, unless this flag is set to `1`.\n     */\n    Path2D.cubicArc = function (commands, params, cx, cy, rx, ry, phi, theta1, theta2, anticlockwise) {\n        if (anticlockwise) {\n            var temp = theta1;\n            theta1 = theta2;\n            theta2 = temp;\n        }\n        var start = params.length;\n        // See https://pomax.github.io/bezierinfo/#circles_cubic\n        // Arc of unit circle (start angle = 0, end angle <= π/2) in cubic Bézier coordinates:\n        // S = [1, 0]\n        // C1 = [1, f]\n        // C2 = [cos(θ) + f * sin(θ), sin(θ) - f * cos(θ)]\n        // E = [cos(θ), sin(θ)]\n        // f = 4/3 * tan(θ/4)\n        var f90 = 0.5522847498307935; // f for θ = π/2 is 4/3 * (Math.sqrt(2) - 1)\n        var sinTheta1 = Math.sin(theta1);\n        var cosTheta1 = Math.cos(theta1);\n        var sinPhi = Math.sin(phi);\n        var cosPhi = Math.cos(phi);\n        var rightAngle = Math.PI / 2;\n        // Since we know how to draw an arc of a unit circle with a cubic Bézier,\n        // to draw an elliptical arc with arbitrary rotation and radii we:\n        // 1) rotate the Bézier coordinates that represent a circular arc by θ\n        // 2) scale the circular arc separately along the x/y axes, making it elliptical\n        // 3) rotate elliptical arc by φ\n        // |cos(φ) -sin(φ)| |sx  0| |cos(θ) -sin(θ)| -> |xx xy|\n        // |sin(φ)  cos(φ)| | 0 sy| |sin(θ)  cos(θ)| -> |yx yy|\n        var xx = cosPhi * cosTheta1 * rx - sinPhi * sinTheta1 * ry;\n        var yx = sinPhi * cosTheta1 * rx + cosPhi * sinTheta1 * ry;\n        var xy = -cosPhi * sinTheta1 * rx - sinPhi * cosTheta1 * ry;\n        var yy = -sinPhi * sinTheta1 * rx + cosPhi * cosTheta1 * ry;\n        // TODO: what if delta between θ1 and θ2 is greater than 2π?\n        // Always draw clockwise from θ1 to θ2.\n        theta2 -= theta1;\n        if (theta2 < 0) {\n            theta2 += Math.PI * 2;\n        }\n        // Multiplying each point [x, y] by:\n        // |xx xy cx| |x|\n        // |yx yy cy| |y|\n        // | 0  0  1| |1|\n        // TODO: This move command may be redundant, if we are already at this point.\n        // The coordinates of the point calculated here may differ ever so slightly\n        // because of precision error.\n        commands.push('M');\n        params.push(xx + cx, yx + cy);\n        while (theta2 >= rightAngle) {\n            theta2 -= rightAngle;\n            commands.push('C');\n            // Temp workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=993330\n            // Revert this commit when fixed ^^.\n            var lastX = xy + cx;\n            params.push(xx + xy * f90 + cx, yx + yy * f90 + cy, xx * f90 + xy + cx, yx * f90 + yy + cy, Math.abs(lastX) < 1e-8 ? 0 : lastX, yy + cy);\n            // Prepend π/2 rotation matrix.\n            // |xx xy| | 0 1| -> | xy -xx|\n            // |yx yy| |-1 0| -> | yy -yx|\n            // [xx, yx, xy, yy] = [xy, yy, -xx, -yx];\n            // Compared to swapping with a temp variable, destructuring is:\n            // - 10% faster in Chrome 70\n            // - 99% slower in Firefox 63\n            // Temp variable solution is 45% faster in FF than Chrome.\n            // https://jsperf.com/multi-swap\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=1165569\n            var temp = xx;\n            xx = xy;\n            xy = -temp;\n            temp = yx;\n            yx = yy;\n            yy = -temp;\n        }\n        if (theta2) {\n            var f = 4 / 3 * Math.tan(theta2 / 4);\n            var sinPhi2 = Math.sin(theta2);\n            var cosPhi2 = Math.cos(theta2);\n            var C2x = cosPhi2 + f * sinPhi2;\n            var C2y = sinPhi2 - f * cosPhi2;\n            commands.push('C');\n            // Temp workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=993330\n            // Revert this commit when fixed ^^.\n            var lastX = xx * cosPhi2 + xy * sinPhi2 + cx;\n            params.push(xx + xy * f + cx, yx + yy * f + cy, xx * C2x + xy * C2y + cx, yx * C2x + yy * C2y + cy, Math.abs(lastX) < 1e-8 ? 0 : lastX, yx * cosPhi2 + yy * sinPhi2 + cy);\n        }\n        if (anticlockwise) {\n            for (var i = start, j = params.length - 2; i < j; i += 2, j -= 2) {\n                var temp = params[i];\n                params[i] = params[j];\n                params[j] = temp;\n                temp = params[i + 1];\n                params[i + 1] = params[j + 1];\n                params[j + 1] = temp;\n            }\n        }\n    };\n    Path2D.prototype.cubicArc = function (cx, cy, rx, ry, phi, theta1, theta2, anticlockwise) {\n        var commands = this.commands;\n        var params = this.params;\n        var start = commands.length;\n        Path2D.cubicArc(commands, params, cx, cy, rx, ry, phi, theta1, theta2, anticlockwise);\n        var x = params[params.length - 2];\n        var y = params[params.length - 1];\n        if (this.xy) {\n            commands[start] = 'L';\n            this.xy[0] = x;\n            this.xy[1] = y;\n        }\n        else {\n            this.xy = [x, y];\n        }\n    };\n    /**\n     * Returns the `[x, y]` coordinates of the curve at `t`.\n     * @param points `(n + 1) * 2` control point coordinates for a Bézier curve of n-th order.\n     * @param t\n     */\n    Path2D.prototype.deCasteljau = function (points, t) {\n        var n = points.length;\n        if (n < 2 || n % 2 === 1) {\n            throw new Error('Fewer than two points or not an even count.');\n        }\n        else if (n === 2 || t === 0) {\n            return points.slice(0, 2);\n        }\n        else if (t === 1) {\n            return points.slice(-2);\n        }\n        else {\n            var newPoints = [];\n            var last = n - 2;\n            for (var i = 0; i < last; i += 2) {\n                newPoints.push((1 - t) * points[i] + t * points[i + 2], // x\n                (1 - t) * points[i + 1] + t * points[i + 3] // y\n                );\n            }\n            return this.deCasteljau(newPoints, t);\n        }\n    };\n    /**\n     * Approximates the given curve using `n` line segments.\n     * @param points `(n + 1) * 2` control point coordinates for a Bézier curve of n-th order.\n     * @param n\n     */\n    Path2D.prototype.approximateCurve = function (points, n) {\n        var xy = this.deCasteljau(points, 0);\n        this.moveTo(xy[0], xy[1]);\n        var step = 1 / n;\n        for (var t = step; t <= 1; t += step) {\n            var xy_1 = this.deCasteljau(points, t);\n            this.lineTo(xy_1[0], xy_1[1]);\n        }\n    };\n    /**\n     * Adds a quadratic curve segment to the path definition.\n     * Note: the given quadratic segment is converted and stored as a cubic one.\n     * @param cx x-component of the curve's control point\n     * @param cy y-component of the curve's control point\n     * @param x x-component of the end point\n     * @param y y-component of the end point\n     */\n    Path2D.prototype.quadraticCurveTo = function (cx, cy, x, y) {\n        if (!this.xy) {\n            this.moveTo(cx, cy);\n        }\n        // See https://pomax.github.io/bezierinfo/#reordering\n        this.cubicCurveTo((this.xy[0] + 2 * cx) / 3, (this.xy[1] + 2 * cy) / 3, // 1/3 start + 2/3 control\n        (2 * cx + x) / 3, (2 * cy + y) / 3, // 2/3 control + 1/3 end\n        x, y);\n    };\n    Path2D.prototype.cubicCurveTo = function (cx1, cy1, cx2, cy2, x, y) {\n        if (!this.xy) {\n            this.moveTo(cx1, cy1);\n        }\n        this.commands.push('C');\n        this.params.push(cx1, cy1, cx2, cy2, x, y);\n        this.xy[0] = x;\n        this.xy[1] = y;\n    };\n    Object.defineProperty(Path2D.prototype, \"closedPath\", {\n        get: function () {\n            return this._closedPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Path2D.prototype.closePath = function () {\n        if (this.xy) {\n            this.xy = undefined;\n            this.commands.push('Z');\n            this._closedPath = true;\n        }\n    };\n    Path2D.prototype.clear = function () {\n        this.commands.length = 0;\n        this.params.length = 0;\n        this.xy = undefined;\n        this._closedPath = false;\n    };\n    Path2D.prototype.isPointInPath = function (x, y) {\n        var commands = this.commands;\n        var params = this.params;\n        var cn = commands.length;\n        // Hit testing using ray casting method, where the ray's origin is some point\n        // outside the path. In this case, an offscreen point that is remote enough, so that\n        // even if the path itself is large and is partially offscreen, the ray's origin\n        // will likely be outside the path anyway. To test if the given point is inside the\n        // path or not, we cast a ray from the origin to the given point and check the number\n        // of intersections of this segment with the path. If the number of intersections is\n        // even, then the ray both entered and exited the path an equal number of times,\n        // therefore the point is outside the path, and inside the path, if the number of\n        // intersections is odd. Since the path is compound, we check if the ray segment\n        // intersects with each of the path's segments, which can be either a line segment\n        // (one or no intersection points) or a Bézier curve segment (up to 3 intersection\n        // points).\n        var ox = -10000;\n        var oy = -10000;\n        // the starting point of the  current path\n        var sx = NaN;\n        var sy = NaN;\n        // the previous point of the current path\n        var px = 0;\n        var py = 0;\n        var intersectionCount = 0;\n        for (var ci = 0, pi = 0; ci < cn; ci++) {\n            switch (commands[ci]) {\n                case 'M':\n                    if (!isNaN(sx)) {\n                        if (intersection_1.segmentIntersection(sx, sy, px, py, ox, oy, x, y)) {\n                            intersectionCount++;\n                        }\n                    }\n                    sx = px = params[pi++];\n                    sy = py = params[pi++];\n                    break;\n                case 'L':\n                    if (intersection_1.segmentIntersection(px, py, px = params[pi++], py = params[pi++], ox, oy, x, y)) {\n                        intersectionCount++;\n                    }\n                    break;\n                case 'C':\n                    intersectionCount += intersection_1.cubicSegmentIntersections(px, py, params[pi++], params[pi++], params[pi++], params[pi++], px = params[pi++], py = params[pi++], ox, oy, x, y).length;\n                    break;\n                case 'Z':\n                    if (!isNaN(sx)) {\n                        if (intersection_1.segmentIntersection(sx, sy, px, py, ox, oy, x, y)) {\n                            intersectionCount++;\n                        }\n                    }\n                    break;\n            }\n        }\n        return intersectionCount % 2 === 1;\n    };\n    Path2D.fromString = function (value) {\n        var path = new Path2D();\n        path.setFromString(value);\n        return path;\n    };\n    /**\n     * Split the SVG path at command letters,\n     * then extract the command letter and parameters from each substring.\n     * @param value\n     */\n    Path2D.parseSvgPath = function (value) {\n        return value.trim().split(Path2D.splitCommandsRe).map(function (part) {\n            var strParams = part.match(Path2D.matchParamsRe);\n            return {\n                command: part.substr(0, 1),\n                params: strParams ? strParams.map(parseFloat) : []\n            };\n        });\n    };\n    Path2D.prettifySvgPath = function (value) {\n        return Path2D.parseSvgPath(value).map(function (d) { return d.command + d.params.join(','); }).join('\\n');\n    };\n    /**\n     * See https://www.w3.org/TR/SVG11/paths.html\n     * @param value\n     */\n    Path2D.prototype.setFromString = function (value) {\n        var _this = this;\n        this.clear();\n        var parts = Path2D.parseSvgPath(value);\n        // Current point.\n        var x;\n        var y;\n        // Last control point. Used to calculate the reflection point\n        // for `S`, `s`, `T`, `t` commands.\n        var cpx;\n        var cpy;\n        var lastCommand;\n        function checkQuadraticCP() {\n            if (!lastCommand.match(Path2D.quadraticCommandRe)) {\n                cpx = x;\n                cpy = y;\n            }\n        }\n        function checkCubicCP() {\n            if (!lastCommand.match(Path2D.cubicCommandRe)) {\n                cpx = x;\n                cpy = y;\n            }\n        }\n        // But that will make compiler complain about x/y, cpx/cpy\n        // being used without being set first.\n        parts.forEach(function (part) {\n            var p = part.params;\n            var n = p.length;\n            var i = 0;\n            switch (part.command) {\n                case 'M':\n                    _this.moveTo(x = p[i++], y = p[i++]);\n                    while (i < n) {\n                        _this.lineTo(x = p[i++], y = p[i++]);\n                    }\n                    break;\n                case 'm':\n                    _this.moveTo(x += p[i++], y += p[i++]);\n                    while (i < n) {\n                        _this.lineTo(x += p[i++], y += p[i++]);\n                    }\n                    break;\n                case 'L':\n                    while (i < n) {\n                        _this.lineTo(x = p[i++], y = p[i++]);\n                    }\n                    break;\n                case 'l':\n                    while (i < n) {\n                        _this.lineTo(x += p[i++], y += p[i++]);\n                    }\n                    break;\n                case 'C':\n                    while (i < n) {\n                        _this.cubicCurveTo(p[i++], p[i++], cpx = p[i++], cpy = p[i++], x = p[i++], y = p[i++]);\n                    }\n                    break;\n                case 'c':\n                    while (i < n) {\n                        _this.cubicCurveTo(x + p[i++], y + p[i++], cpx = x + p[i++], cpy = y + p[i++], x += p[i++], y += p[i++]);\n                    }\n                    break;\n                case 'S':\n                    checkCubicCP();\n                    while (i < n) {\n                        _this.cubicCurveTo(x + x - cpx, y + y - cpy, cpx = p[i++], cpy = p[i++], x = p[i++], y = p[i++]);\n                    }\n                    break;\n                case 's':\n                    checkCubicCP();\n                    while (i < n) {\n                        _this.cubicCurveTo(x + x - cpx, y + y - cpy, cpx = x + p[i++], cpy = y + p[i++], x += p[i++], y += p[i++]);\n                    }\n                    break;\n                case 'Q':\n                    while (i < n) {\n                        _this.quadraticCurveTo(cpx = p[i++], cpy = p[i++], x = p[i++], y = p[i++]);\n                    }\n                    break;\n                case 'q':\n                    while (i < n) {\n                        _this.quadraticCurveTo(cpx = x + p[i++], cpy = y + p[i++], x += p[i++], y += p[i++]);\n                    }\n                    break;\n                case 'T':\n                    checkQuadraticCP();\n                    while (i < n) {\n                        _this.quadraticCurveTo(cpx = x + x - cpx, cpy = y + y - cpy, x = p[i++], y = p[i++]);\n                    }\n                    break;\n                case 't':\n                    checkQuadraticCP();\n                    while (i < n) {\n                        _this.quadraticCurveTo(cpx = x + x - cpx, cpy = y + y - cpy, x += p[i++], y += p[i++]);\n                    }\n                    break;\n                case 'A':\n                    while (i < n) {\n                        _this.arcTo(p[i++], p[i++], p[i++] * Math.PI / 180, p[i++], p[i++], x = p[i++], y = p[i++]);\n                    }\n                    break;\n                case 'a':\n                    while (i < n) {\n                        _this.arcTo(p[i++], p[i++], p[i++] * Math.PI / 180, p[i++], p[i++], x += p[i++], y += p[i++]);\n                    }\n                    break;\n                case 'Z':\n                case 'z':\n                    _this.closePath();\n                    break;\n                case 'H':\n                    while (i < n) {\n                        _this.lineTo(x = p[i++], y);\n                    }\n                    break;\n                case 'h':\n                    while (i < n) {\n                        _this.lineTo(x += p[i++], y);\n                    }\n                    break;\n                case 'V':\n                    while (i < n) {\n                        _this.lineTo(x, y = p[i++]);\n                    }\n                    break;\n                case 'v':\n                    while (i < n) {\n                        _this.lineTo(x, y += p[i++]);\n                    }\n                    break;\n            }\n            lastCommand = part.command;\n        });\n    };\n    Path2D.prototype.toString = function () {\n        var c = this.commands;\n        var p = this.params;\n        var cn = c.length;\n        var out = [];\n        for (var ci = 0, pi = 0; ci < cn; ci++) {\n            switch (c[ci]) {\n                case 'M':\n                    out.push('M' + p[pi++] + ',' + p[pi++]);\n                    break;\n                case 'L':\n                    out.push('L' + p[pi++] + ',' + p[pi++]);\n                    break;\n                case 'C':\n                    out.push('C' + p[pi++] + ',' + p[pi++] + ' ' +\n                        p[pi++] + ',' + p[pi++] + ' ' +\n                        p[pi++] + ',' + p[pi++]);\n                    break;\n                case 'Z':\n                    out.push('Z');\n                    break;\n            }\n        }\n        return out.join('');\n    };\n    Path2D.prototype.toPrettyString = function () {\n        return Path2D.prettifySvgPath(this.toString());\n    };\n    Path2D.prototype.toSvg = function () {\n        return Path2D.xmlDeclaration + \"\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 50 50\\\" version=\\\"1.1\\\" xmlns=\\\"\" + Path2D.xmlns + \"\\\">\\n    <path d=\\\"\" + this.toString() + \"\\\" style=\\\"fill:none;stroke:#000;stroke-width:0.5;\\\"/>\\n</svg>\";\n    };\n    Path2D.prototype.toDebugSvg = function () {\n        var d = Path2D.prettifySvgPath(this.toString());\n        return Path2D.xmlDeclaration + \"\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 100 100\\\" version=\\\"1.1\\\" xmlns=\\\"\" + Path2D.xmlns + \"\\\">\\n    <path d=\\\"\" + d + \"\\\" style=\\\"fill:none;stroke:#000;stroke-width:0.5;\\\"/>\\n</svg>\";\n    };\n    /**\n     * Returns an array of sub-paths of this Path,\n     * where each sub-path is represented exclusively by cubic segments.\n     */\n    Path2D.prototype.toCubicPaths = function () {\n        // Each sub-path is an array of `(n * 3 + 1) * 2` numbers,\n        // where `n` is the number of segments.\n        var paths = [];\n        var params = this.params;\n        // current path\n        var path;\n        // the starting point of the  current path\n        var sx;\n        var sy;\n        // the previous point of the current path\n        var px;\n        var py;\n        var i = 0; // current parameter\n        this.commands.forEach(function (command) {\n            switch (command) {\n                case 'M':\n                    path = [\n                        sx = px = params[i++],\n                        sy = py = params[i++]\n                    ];\n                    paths.push(path);\n                    break;\n                case 'L':\n                    var x = params[i++];\n                    var y = params[i++];\n                    // Place control points along the line `a + (b - a) * t`\n                    // at t = 1/3 and 2/3:\n                    path.push((px + px + x) / 3, (py + py + y) / 3, (px + x + x) / 3, (py + y + y) / 3, px = x, py = y);\n                    break;\n                case 'C':\n                    path.push(params[i++], params[i++], params[i++], params[i++], px = params[i++], py = params[i++]);\n                    break;\n                case 'Z':\n                    path.push((px + px + sx) / 3, (py + py + sy) / 3, (px + sx + sx) / 3, (py + sy + sy) / 3, px = sx, py = sy);\n                    break;\n            }\n        });\n        return paths;\n    };\n    Path2D.cubicPathToString = function (path) {\n        var n = path.length;\n        if (!(n % 2 === 0 && (n / 2 - 1) / 2 >= 1)) {\n            throw new Error('Invalid path.');\n        }\n        return 'M' + path.slice(0, 2).join(',') + 'C' + path.slice(2).join(',');\n    };\n    Path2D.splitCommandsRe = /(?=[AaCcHhLlMmQqSsTtVvZz])/g;\n    Path2D.matchParamsRe = /-?[0-9]*\\.?\\d+/g;\n    Path2D.quadraticCommandRe = /[QqTt]/;\n    Path2D.cubicCommandRe = /[CcSs]/;\n    Path2D.xmlDeclaration = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    Path2D.xmlns = 'http://www.w3.org/2000/svg';\n    return Path2D;\n}());\nexports.Path2D = Path2D;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @ts-ignore Suppress tsc error: Property 'sign' does not exist on type 'Math'\nvar sign = Math.sign ? Math.sign : function (x) {\n    x = +x;\n    if (x === 0 || isNaN(x)) {\n        return x;\n    }\n    return x > 0 ? 1 : -1;\n};\n/**\n * Finds the roots of a parametric linear equation in `t`,\n * where `t` lies in the interval of `[0,1]`.\n */\nfunction linearRoot(a, b) {\n    var t = -b / a;\n    return (a !== 0 && t >= 0 && t <= 1) ? [t] : [];\n}\nexports.linearRoot = linearRoot;\n/**\n * Finds the roots of a parametric quadratic equation in `t`,\n * where `t` lies in the interval of `[0,1]`.\n */\nfunction quadraticRoots(a, b, c) {\n    if (a === 0) {\n        return linearRoot(b, c);\n    }\n    var D = b * b - 4 * a * c; // The polynomial's discriminant.\n    var roots = [];\n    if (D === 0) { // A single real root.\n        var t = -b / (2 * a);\n        if (t >= 0 && t <= 1) {\n            roots.push(t);\n        }\n    }\n    else if (D > 0) { // A pair of distinct real roots.\n        var rD = Math.sqrt(D);\n        var t1 = (-b - rD) / (2 * a);\n        var t2 = (-b + rD) / (2 * a);\n        if (t1 >= 0 && t1 <= 1) {\n            roots.push(t1);\n        }\n        if (t2 >= 0 && t2 <= 1) {\n            roots.push(t2);\n        }\n    }\n    // else -> Complex roots.\n    return roots;\n}\nexports.quadraticRoots = quadraticRoots;\n/**\n * Finds the roots of a parametric cubic equation in `t`,\n * where `t` lies in the interval of `[0,1]`.\n * Returns an array of parametric intersection locations along the cubic,\n * excluding out-of-bounds intersections (before or after the end point\n * or in the imaginary plane).\n * An adaptation of http://www.particleincell.com/blog/2013/cubic-line-intersection/\n */\nfunction cubicRoots(a, b, c, d) {\n    if (a === 0) {\n        return quadraticRoots(b, c, d);\n    }\n    var A = b / a;\n    var B = c / a;\n    var C = d / a;\n    var Q = (3 * B - A * A) / 9;\n    var R = (9 * A * B - 27 * C - 2 * A * A * A) / 54;\n    var D = Q * Q * Q + R * R; // The polynomial's discriminant.\n    var third = 1 / 3;\n    var roots = [];\n    if (D >= 0) { // Complex or duplicate roots.\n        var rD = Math.sqrt(D);\n        var S = sign(R + rD) * Math.pow(Math.abs(R + rD), third);\n        var T = sign(R - rD) * Math.pow(Math.abs(R - rD), third);\n        var Im = Math.abs(Math.sqrt(3) * (S - T) / 2); // Complex part of the root pair.\n        var t = -third * A + (S + T); // A real root.\n        if (t >= 0 && t <= 1) {\n            roots.push(t);\n        }\n        if (Im === 0) {\n            var t_1 = -third * A - (S + T) / 2; // The real part of a complex root.\n            if (t_1 >= 0 && t_1 <= 1) {\n                roots.push(t_1);\n            }\n        }\n    }\n    else { // Distinct real roots.\n        var theta = Math.acos(R / Math.sqrt(-Q * Q * Q));\n        var thirdA = third * A;\n        var twoSqrtQ = 2 * Math.sqrt(-Q);\n        var t1 = twoSqrtQ * Math.cos(third * theta) - thirdA;\n        var t2 = twoSqrtQ * Math.cos(third * (theta + 2 * Math.PI)) - thirdA;\n        var t3 = twoSqrtQ * Math.cos(third * (theta + 4 * Math.PI)) - thirdA;\n        if (t1 >= 0 && t1 <= 1) {\n            roots.push(t1);\n        }\n        if (t2 >= 0 && t2 <= 1) {\n            roots.push(t2);\n        }\n        if (t3 >= 0 && t3 <= 1) {\n            roots.push(t3);\n        }\n    }\n    return roots;\n}\nexports.cubicRoots = cubicRoots;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hdpiCanvas_1 = require(\"../canvas/hdpiCanvas\");\nvar Scene = /** @class */ (function () {\n    function Scene(options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this.id = this.createId();\n        this._dirty = false;\n        this.animationFrameId = 0;\n        this._root = null;\n        this._frameIndex = 0;\n        this._renderFrameIndex = false;\n        this.render = function () {\n            var ctx = _this.ctx;\n            // start with a blank canvas, clear previous drawing\n            ctx.clearRect(0, 0, _this.width, _this.height);\n            if (_this.root) {\n                ctx.save();\n                if (_this.root.visible) {\n                    _this.root.render(ctx);\n                }\n                ctx.restore();\n            }\n            _this._frameIndex++;\n            if (_this.renderFrameIndex) {\n                ctx.fillStyle = 'white';\n                ctx.fillRect(0, 0, 40, 15);\n                ctx.fillStyle = 'black';\n                ctx.fillText(_this.frameIndex.toString(), 0, 10);\n            }\n            _this.dirty = false;\n        };\n        this.canvas = new hdpiCanvas_1.HdpiCanvas({\n            width: options.width || 300,\n            height: options.height || 150,\n            document: options.document || window.document\n        });\n        this.ctx = this.canvas.context;\n    }\n    Scene.prototype.createId = function () {\n        return this.constructor.name + '-' + (Scene.id++);\n    };\n    Object.defineProperty(Scene.prototype, \"parent\", {\n        get: function () {\n            return this.canvas.parent;\n        },\n        set: function (value) {\n            this.canvas.parent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Scene.prototype.download = function (fileName) {\n        this.canvas.download(fileName);\n    };\n    Object.defineProperty(Scene.prototype, \"width\", {\n        get: function () {\n            return this.canvas.width;\n        },\n        set: function (value) {\n            this.size = [value, this.height];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"height\", {\n        get: function () {\n            return this.canvas.height;\n        },\n        set: function (value) {\n            this.size = [this.width, value];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"size\", {\n        get: function () {\n            return [this.width, this.height];\n        },\n        set: function (value) {\n            var width = value[0], height = value[1];\n            if (this.width !== width || this.height !== height) {\n                this.canvas.resize(width, height);\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"dirty\", {\n        get: function () {\n            return this._dirty;\n        },\n        set: function (dirty) {\n            if (dirty && !this._dirty) {\n                this.animationFrameId = requestAnimationFrame(this.render);\n            }\n            this._dirty = dirty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Scene.prototype.cancelRender = function () {\n        if (this.animationFrameId) {\n            cancelAnimationFrame(this.animationFrameId);\n            this.animationFrameId = 0;\n            this._dirty = false;\n        }\n    };\n    Object.defineProperty(Scene.prototype, \"root\", {\n        get: function () {\n            return this._root;\n        },\n        set: function (node) {\n            if (node === this._root) {\n                return;\n            }\n            if (this._root) {\n                this._root._setScene(undefined);\n            }\n            this._root = node;\n            if (node) {\n                // If `node` is the root node of another scene ...\n                if (node.parent === null && node.scene && node.scene !== this) {\n                    node.scene.root = null;\n                }\n                node._setScene(this);\n            }\n            this.dirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Scene.prototype.appendPath = function (path) {\n        var ctx = this.ctx;\n        var commands = path.commands;\n        var params = path.params;\n        var n = commands.length;\n        var j = 0;\n        ctx.beginPath();\n        for (var i = 0; i < n; i++) {\n            switch (commands[i]) {\n                case 'M':\n                    ctx.moveTo(params[j++], params[j++]);\n                    break;\n                case 'L':\n                    ctx.lineTo(params[j++], params[j++]);\n                    break;\n                case 'C':\n                    ctx.bezierCurveTo(params[j++], params[j++], params[j++], params[j++], params[j++], params[j++]);\n                    break;\n                case 'Z':\n                    ctx.closePath();\n                    break;\n            }\n        }\n    };\n    Object.defineProperty(Scene.prototype, \"frameIndex\", {\n        get: function () {\n            return this._frameIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"renderFrameIndex\", {\n        get: function () {\n            return this._renderFrameIndex;\n        },\n        set: function (value) {\n            if (this._renderFrameIndex !== value) {\n                this._renderFrameIndex = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Scene.id = 1;\n    return Scene;\n}());\nexports.Scene = Scene;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar node_1 = require(\"./node\");\nvar EnterNode = /** @class */ (function () {\n    function EnterNode(parent, datum) {\n        this.next = null;\n        this.scene = parent.scene;\n        this.parent = parent;\n        this.datum = datum;\n    }\n    EnterNode.prototype.appendChild = function (node) {\n        // This doesn't work without the `strict: true` in the `tsconfig.json`,\n        // so we must have two `if` checks below, instead of this single one.\n        // if (this.next && !Node.isNode(this.next)) {\n        //     throw new Error(`${this.next} is not a Node.`);\n        // }\n        if (this.next === null) {\n            return this.parent.insertBefore(node, null);\n        }\n        if (!node_1.Node.isNode(this.next)) {\n            throw new Error(this.next + \" is not a Node.\");\n        }\n        return this.parent.insertBefore(node, this.next);\n    };\n    EnterNode.prototype.insertBefore = function (node, nextNode) {\n        return this.parent.insertBefore(node, nextNode);\n    };\n    return EnterNode;\n}());\nexports.EnterNode = EnterNode;\n/**\n * G - type of the selected node(s).\n * GDatum - type of the datum of the selected node(s).\n * P - type of the parent node(s).\n * PDatum - type of the datum of the parent node(s).\n */\nvar Selection = /** @class */ (function () {\n    function Selection(groups, parents) {\n        this.groups = groups;\n        this.parents = parents;\n    }\n    Selection.select = function (node) {\n        return new Selection([[typeof node === 'function' ? node() : node]], [undefined]);\n    };\n    Selection.selectAll = function (nodes) {\n        return new Selection([nodes == null ? [] : nodes], [undefined]);\n    };\n    /**\n     * Creates new nodes, appends them to the nodes of this selection and returns them\n     * as a new selection. The created nodes inherit the datums and the parents of the nodes\n     * they replace.\n     * @param Class The constructor function to use to create the new nodes.\n     */\n    Selection.prototype.append = function (Class) {\n        return this.select(function (node) {\n            return node.appendChild(new Class());\n        });\n    };\n    /**\n     * Same as the {@link append}, but accepts a custom creator function with the\n     * {@link NodeSelector} signature rather than a constructor function.\n     * @param creator\n     */\n    Selection.prototype.appendFn = function (creator) {\n        return this.select(function (node, data, index, group) {\n            return node.appendChild(creator(node, data, index, group));\n        });\n    };\n    /**\n     * Runs the given selector that returns a single node for every node in each group.\n     * The original nodes are then replaced by the nodes returned by the selector\n     * and returned as a new selection.\n     * The selected nodes inherit the datums and the parents of the original nodes.\n     */\n    Selection.prototype.select = function (selector) {\n        var groups = this.groups;\n        var numGroups = groups.length;\n        var subgroups = [];\n        for (var j = 0; j < numGroups; j++) {\n            var group = groups[j];\n            var groupSize = group.length;\n            var subgroup = subgroups[j] = new Array(groupSize);\n            for (var i = 0; i < groupSize; i++) {\n                var node = group[i];\n                if (node) {\n                    var subnode = selector(node, node.datum, i, group);\n                    if (subnode) {\n                        subnode.datum = node.datum;\n                    }\n                    subgroup[i] = subnode;\n                }\n                // else this can be a group of the `enter` selection,\n                // for example, with no nodes at the i-th position,\n                // only nodes at the end of the group\n            }\n        }\n        return new Selection(subgroups, this.parents);\n    };\n    /**\n     * Same as {@link select}, but uses the given {@param Class} (constructor) as a selector.\n     * @param Class The constructor function to use to find matching nodes.\n     */\n    Selection.prototype.selectByClass = function (Class) {\n        return this.select(function (node) {\n            if (node_1.Node.isNode(node)) {\n                var children = node.children;\n                var n = children.length;\n                for (var i = 0; i < n; i++) {\n                    var child = children[i];\n                    if (child instanceof Class) {\n                        return child;\n                    }\n                }\n            }\n        });\n    };\n    Selection.prototype.selectByTag = function (tag) {\n        return this.select(function (node) {\n            if (node_1.Node.isNode(node)) {\n                var children = node.children;\n                var n = children.length;\n                for (var i = 0; i < n; i++) {\n                    var child = children[i];\n                    if (child.tag === tag) {\n                        return child;\n                    }\n                }\n            }\n        });\n    };\n    Selection.prototype.selectAllByClass = function (Class) {\n        return this.selectAll(function (node) {\n            var nodes = [];\n            if (node_1.Node.isNode(node)) {\n                var children = node.children;\n                var n = children.length;\n                for (var i = 0; i < n; i++) {\n                    var child = children[i];\n                    if (child instanceof Class) {\n                        nodes.push(child);\n                    }\n                }\n            }\n            return nodes;\n        });\n    };\n    Selection.prototype.selectAllByTag = function (tag) {\n        return this.selectAll(function (node) {\n            var nodes = [];\n            if (node_1.Node.isNode(node)) {\n                var children = node.children;\n                var n = children.length;\n                for (var i = 0; i < n; i++) {\n                    var child = children[i];\n                    if (child.tag === tag) {\n                        nodes.push(child);\n                    }\n                }\n            }\n            return nodes;\n        });\n    };\n    Selection.prototype.selectNone = function () {\n        return [];\n    };\n    /**\n     * Runs the given selector that returns a group of nodes for every node in each group.\n     * The original nodes are then replaced by the groups of nodes returned by the selector\n     * and returned as a new selection. The original nodes become the parent nodes for each\n     * group in the new selection. The selected nodes do not inherit the datums of the original nodes.\n     * If called without any parameters, creates a new selection with an empty group for each\n     * node in this selection.\n     */\n    Selection.prototype.selectAll = function (selectorAll) {\n        if (!selectorAll) {\n            selectorAll = this.selectNone;\n        }\n        // Each subgroup is populated with the selector (run on each group node) results.\n        var subgroups = [];\n        // In the new selection that we return, subgroups become groups,\n        // and group nodes become parents.\n        var parents = [];\n        var groups = this.groups;\n        var groupCount = groups.length;\n        for (var j = 0; j < groupCount; j++) {\n            var group = groups[j];\n            var groupLength = group.length;\n            for (var i = 0; i < groupLength; i++) {\n                var node = group[i];\n                if (node) {\n                    subgroups.push(selectorAll(node, node.datum, i, group));\n                    parents.push(node);\n                }\n            }\n        }\n        return new Selection(subgroups, parents);\n    };\n    /**\n     * Runs the given callback for every node in this selection and returns this selection.\n     * @param cb\n     */\n    Selection.prototype.each = function (cb) {\n        var groups = this.groups;\n        var numGroups = groups.length;\n        for (var j = 0; j < numGroups; j++) {\n            var group = groups[j];\n            var groupSize = group.length;\n            for (var i = 0; i < groupSize; i++) {\n                var node = group[i];\n                if (node) {\n                    cb(node, node.datum, i, group);\n                }\n            }\n        }\n        return this;\n    };\n    Selection.prototype.remove = function () {\n        return this.each(function (node) {\n            if (node_1.Node.isNode(node)) {\n                var parent_1 = node.parent;\n                if (parent_1) {\n                    parent_1.removeChild(node);\n                }\n            }\n        });\n    };\n    Selection.prototype.merge = function (other) {\n        var groups0 = this.groups;\n        var groups1 = other.groups;\n        var m0 = groups0.length;\n        var m1 = groups1.length;\n        var m = Math.min(m0, m1);\n        var merges = new Array(m0);\n        var j = 0;\n        for (; j < m; j++) {\n            var group0 = groups0[j];\n            var group1 = groups1[j];\n            var n = group0.length;\n            var merge = merges[j] = new Array(n);\n            for (var i = 0; i < n; i++) {\n                var node = group0[i] || group1[i];\n                merge[i] = node || undefined;\n            }\n        }\n        for (; j < m0; j++) {\n            merges[j] = groups0[j];\n        }\n        return new Selection(merges, this.parents);\n    };\n    /**\n     * Return the first non-null element in this selection.\n     * If the selection is empty, returns null.\n     */\n    Selection.prototype.node = function () {\n        var groups = this.groups;\n        var numGroups = groups.length;\n        for (var j = 0; j < numGroups; j++) {\n            var group = groups[j];\n            var groupSize = group.length;\n            for (var i = 0; i < groupSize; i++) {\n                var node = group[i];\n                if (node) {\n                    return node;\n                }\n            }\n        }\n        return null;\n    };\n    Selection.prototype.attr = function (name, value) {\n        this.each(function (node) {\n            node[name] = value;\n        });\n        return this;\n    };\n    Selection.prototype.attrFn = function (name, value) {\n        this.each(function (node, datum, index, group) {\n            node[name] = value(node, datum, index, group);\n        });\n        return this;\n    };\n    /**\n     * Invokes the given function once, passing in this selection.\n     * Returns this selection. Facilitates method chaining.\n     * @param cb\n     */\n    Selection.prototype.call = function (cb) {\n        cb(this);\n        return this;\n    };\n    Object.defineProperty(Selection.prototype, \"size\", {\n        /**\n         * Returns the total number of nodes in this selection.\n         */\n        get: function () {\n            var size = 0;\n            this.each(function () { return size++; });\n            return size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"data\", {\n        /**\n         * Returns the array of data for the selected elements.\n         */\n        get: function () {\n            var data = [];\n            this.each(function (_, datum) { return data.push(datum); });\n            return data;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"enter\", {\n        get: function () {\n            return new Selection(this.enterGroups ? this.enterGroups : [[]], this.parents);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"exit\", {\n        get: function () {\n            return new Selection(this.exitGroups ? this.exitGroups : [[]], this.parents);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Binds the given value to each selected node and returns this selection\n     * with its {@link GDatum} type changed to the type of the given value.\n     * This method doesn't compute a join and doesn't affect indexes or the enter and exit selections.\n     * This method can also be used to clear bound data.\n     * @param value\n     */\n    Selection.prototype.setDatum = function (value) {\n        return this.each(function (node) {\n            node.datum = value;\n        });\n    };\n    Object.defineProperty(Selection.prototype, \"datum\", {\n        /**\n         * Returns the bound datum for the first non-null element in the selection.\n         * This is generally useful only if you know the selection contains exactly one element.\n         */\n        get: function () {\n            var node = this.node();\n            return node ? node.datum : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Binds the specified array of values with the selected nodes, returning a new selection\n     * that represents the _update_ selection: the nodes successfully bound to the values.\n     * Also defines the {@link enter} and {@link exit} selections on the returned selection,\n     * which can be used to add or remove the nodes to correspond to the new data.\n     * The `values` is an array of values of a particular type, or a function that returns\n     * an array of values for each group.\n     * When values are assigned to the nodes, they are stored in the {@link Node.datum} property.\n     * @param values\n     * @param key\n     */\n    Selection.prototype.setData = function (values, key) {\n        if (typeof values !== 'function') {\n            var data_1 = values;\n            values = function () { return data_1; };\n        }\n        var groups = this.groups;\n        var parents = this.parents;\n        var numGroups = groups.length;\n        var updateGroups = new Array(numGroups);\n        var enterGroups = new Array(numGroups);\n        var exitGroups = new Array(numGroups);\n        for (var j = 0; j < numGroups; j++) {\n            var group = groups[j];\n            var parent_2 = parents[j];\n            if (!parent_2) {\n                throw new Error(\"Group #\" + j + \" has no parent: \" + group);\n            }\n            var groupSize = group.length;\n            var data = values(parent_2, parent_2.datum, j, parents);\n            var dataSize = data.length;\n            var enterGroup = enterGroups[j] = new Array(dataSize);\n            var updateGroup = updateGroups[j] = new Array(dataSize);\n            var exitGroup = exitGroups[j] = new Array(groupSize);\n            if (key) {\n                this.bindKey(parent_2, group, enterGroup, updateGroup, exitGroup, data, key);\n            }\n            else {\n                this.bindIndex(parent_2, group, enterGroup, updateGroup, exitGroup, data);\n            }\n            // Now connect the enter nodes to their following update node, such that\n            // appendChild can insert the materialized enter node before this node,\n            // rather than at the end of the parent node.\n            for (var i0 = 0, i1 = 0; i0 < dataSize; i0++) {\n                var previous = enterGroup[i0];\n                if (previous) {\n                    if (i0 >= i1) {\n                        i1 = i0 + 1;\n                    }\n                    var next = void 0;\n                    while (!(next = updateGroup[i1]) && i1 < dataSize) {\n                        i1++;\n                    }\n                    previous.next = next || null;\n                }\n            }\n        }\n        var result = new Selection(updateGroups, parents);\n        result.enterGroups = enterGroups;\n        result.exitGroups = exitGroups;\n        return result;\n    };\n    Selection.prototype.bindIndex = function (parent, group, enter, update, exit, data) {\n        var groupSize = group.length;\n        var dataSize = data.length;\n        var i = 0;\n        for (; i < dataSize; i++) {\n            var node = group[i];\n            if (node) {\n                node.datum = data[i];\n                update[i] = node;\n            }\n            else { // more datums than group nodes\n                enter[i] = new EnterNode(parent, data[i]);\n            }\n        }\n        // more group nodes than datums\n        for (; i < groupSize; i++) {\n            var node = group[i];\n            if (node) {\n                exit[i] = node;\n            }\n        }\n    };\n    Selection.prototype.bindKey = function (parent, group, enter, update, exit, data, key) {\n        var groupSize = group.length;\n        var dataSize = data.length;\n        var keyValues = new Array(groupSize);\n        var nodeByKeyValue = {};\n        // Compute the key for each node.\n        // If multiple nodes have the same key, the duplicates are added to exit.\n        for (var i = 0; i < groupSize; i++) {\n            var node = group[i];\n            if (node) {\n                var keyValue = keyValues[i] = Selection.keyPrefix + key(node, node.datum, i, group);\n                if (keyValue in nodeByKeyValue) {\n                    exit[i] = node;\n                }\n                else {\n                    nodeByKeyValue[keyValue] = node;\n                }\n            }\n        }\n        // Compute the key for each datum.\n        // If there is a node associated with this key, join and add it to update.\n        // If there is not (or the key is a duplicate), add it to enter.\n        for (var i = 0; i < dataSize; i++) {\n            var keyValue = Selection.keyPrefix + key(parent, data[i], i, data);\n            var node = nodeByKeyValue[keyValue];\n            if (node) {\n                update[i] = node;\n                node.datum = data[i];\n                nodeByKeyValue[keyValue] = undefined;\n            }\n            else {\n                enter[i] = new EnterNode(parent, data[i]);\n            }\n        }\n        // Add any remaining nodes that were not bound to data to exit.\n        for (var i = 0; i < groupSize; i++) {\n            var node = group[i];\n            if (node && (nodeByKeyValue[keyValues[i]] === node)) {\n                exit[i] = node;\n            }\n        }\n    };\n    Selection.keyPrefix = '$'; // Protect against keys like '__proto__'.\n    return Selection;\n}());\nexports.Selection = Selection;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shape_1 = require(\"./shape\");\nvar path2D_1 = require(\"../path2D\");\nvar bbox_1 = require(\"../bbox\");\nvar angle_1 = require(\"../../util/angle\");\nvar object_1 = require(\"../../util/object\");\nvar number_1 = require(\"../../util/number\");\nvar ArcType;\n(function (ArcType) {\n    ArcType[ArcType[\"Open\"] = 0] = \"Open\";\n    ArcType[ArcType[\"Chord\"] = 1] = \"Chord\";\n    ArcType[ArcType[\"Round\"] = 2] = \"Round\";\n})(ArcType = exports.ArcType || (exports.ArcType = {}));\n/**\n * Elliptical arc node.\n */\nvar Arc = /** @class */ (function (_super) {\n    __extends(Arc, _super);\n    function Arc() {\n        var _this = _super.call(this) || this;\n        // Declare a path to retain for later rendering and hit testing\n        // using custom Path2D class. It's pure TypeScript and works in all browsers.\n        _this.path = new path2D_1.Path2D();\n        /**\n         * It's not always that the path has to be updated.\n         * For example, if transform attributes (such as `translationX`)\n         * are changed, we don't have to update the path. The `dirtyFlag`\n         * is how we keep track if the path has to be updated or not.\n         */\n        _this._dirtyPath = true;\n        _this._centerX = 0;\n        _this._centerY = 0;\n        _this._radiusX = 10;\n        _this._radiusY = 10;\n        _this._startAngle = 0;\n        _this._endAngle = Math.PI * 2;\n        _this._counterClockwise = false;\n        /**\n         * The type of arc to render:\n         * - {@link ArcType.Open} - end points of the arc segment are not connected (default)\n         * - {@link ArcType.Chord} - end points of the arc segment are connected by a line segment\n         * - {@link ArcType.Round} - each of the end points of the arc segment are connected\n         *                           to the center of the arc\n         * Arcs with {@link ArcType.Open} do not support hit testing, even if they have their\n         * {@link Shape.fillStyle} set, because they are not closed paths. Hit testing support\n         * would require using two paths - one for rendering, another for hit testing - and there\n         * doesn't seem to be a compelling reason to do that, when one can just use {@link ArcType.Chord}\n         * to create a closed path.\n         */\n        _this._type = ArcType.Open;\n        _this.getBBox = function () {\n            // Only works with full arcs (circles) and untransformed ellipses.\n            return new bbox_1.BBox(_this.centerX - _this.radiusX, _this.centerY - _this.radiusY, _this.radiusX * 2, _this.radiusY * 2);\n        };\n        _this.restoreOwnStyles();\n        return _this;\n    }\n    Arc.create = function (centerX, centerY, radiusX, radiusY, startAngle, endAngle, counterClockwise) {\n        if (radiusY === void 0) { radiusY = radiusX; }\n        if (startAngle === void 0) { startAngle = 0; }\n        if (endAngle === void 0) { endAngle = Math.PI * 2; }\n        if (counterClockwise === void 0) { counterClockwise = false; }\n        var arc = new Arc();\n        arc.centerX = centerX;\n        arc.centerY = centerY;\n        arc.radiusX = radiusX;\n        arc.radiusY = radiusY;\n        arc.startAngle = startAngle;\n        arc.endAngle = endAngle;\n        arc.counterClockwise = counterClockwise;\n        return arc;\n    };\n    Object.defineProperty(Arc.prototype, \"dirtyPath\", {\n        get: function () {\n            return this._dirtyPath;\n        },\n        set: function (value) {\n            if (this._dirtyPath !== value) {\n                this._dirtyPath = value;\n                if (value) {\n                    this.dirty = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Arc.prototype, \"centerX\", {\n        get: function () {\n            return this._centerX;\n        },\n        set: function (value) {\n            if (this._centerX !== value) {\n                this._centerX = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Arc.prototype, \"centerY\", {\n        get: function () {\n            return this._centerY;\n        },\n        set: function (value) {\n            if (this._centerY !== value) {\n                this._centerY = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Arc.prototype, \"radiusX\", {\n        get: function () {\n            return this._radiusX;\n        },\n        set: function (value) {\n            if (this._radiusX !== value) {\n                this._radiusX = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Arc.prototype, \"radiusY\", {\n        get: function () {\n            return this._radiusY;\n        },\n        set: function (value) {\n            if (this._radiusY !== value) {\n                this._radiusY = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Arc.prototype, \"startAngle\", {\n        get: function () {\n            return this._startAngle;\n        },\n        set: function (value) {\n            if (this._startAngle !== value) {\n                this._startAngle = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Arc.prototype, \"endAngle\", {\n        get: function () {\n            return this._endAngle;\n        },\n        set: function (value) {\n            if (this._endAngle !== value) {\n                this._endAngle = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Arc.prototype, \"fullPie\", {\n        get: function () {\n            return number_1.isEqual(angle_1.normalizeAngle360(this.startAngle), angle_1.normalizeAngle360(this.endAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Arc.prototype, \"counterClockwise\", {\n        get: function () {\n            return this._counterClockwise;\n        },\n        set: function (value) {\n            if (this._counterClockwise !== value) {\n                this._counterClockwise = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Arc.prototype, \"type\", {\n        get: function () {\n            return this._type;\n        },\n        set: function (value) {\n            if (this._type !== value) {\n                this._type = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Arc.prototype.updatePath = function () {\n        if (!this.dirtyPath) {\n            return;\n        }\n        var path = this.path;\n        path.clear(); // No need to recreate the Path, can simply clear the existing one.\n        // This is much faster than the native Path2D implementation even though this `cubicArc`\n        // method is pure TypeScript and actually produces the definition of an elliptical arc,\n        // where you can specify two radii and rotation, while Path2D's `arc` method simply produces\n        // a circular arc. Maybe it's due to the experimental nature of the Path2D class,\n        // maybe it's because we have to create a new instance of it on each render, who knows...\n        path.cubicArc(this.centerX, this.centerY, this.radiusX, this.radiusY, 0, this.startAngle, this.endAngle, this.counterClockwise ? 1 : 0);\n        if (this.type === ArcType.Chord) {\n            path.closePath();\n        }\n        else if (this.type === ArcType.Round && !this.fullPie) {\n            path.lineTo(this.centerX, this.centerY);\n            path.closePath();\n        }\n        this.dirtyPath = false;\n    };\n    Arc.prototype.isPointInPath = function (x, y) {\n        var point = this.transformPoint(x, y);\n        var bbox = this.getBBox();\n        return this.type !== ArcType.Open\n            && bbox.containsPoint(point.x, point.y)\n            && this.path.isPointInPath(point.x, point.y);\n    };\n    Arc.prototype.isPointInStroke = function (x, y) {\n        return false;\n    };\n    Arc.prototype.render = function (ctx) {\n        if (this.dirtyTransform) {\n            this.computeTransformMatrix();\n        }\n        this.matrix.toContext(ctx);\n        this.updatePath();\n        this.scene.appendPath(this.path);\n        this.fillStroke(ctx);\n        this.dirty = false;\n    };\n    Arc.className = 'Arc';\n    Arc.defaultStyles = object_1.chainObjects(shape_1.Shape.defaultStyles, {\n        lineWidth: 1,\n        fillStyle: null\n    });\n    return Arc;\n}(shape_1.Shape));\nexports.Arc = Arc;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shape_1 = require(\"./shape\");\nvar object_1 = require(\"../../util/object\");\nvar bbox_1 = require(\"../bbox\");\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        var _this = _super.call(this) || this;\n        _this._x1 = 0;\n        _this._y1 = 0;\n        _this._x2 = 0;\n        _this._y2 = 0;\n        _this.getBBox = function () {\n            return new bbox_1.BBox(_this.x1, _this.y1, _this.x2 - _this.x1, _this.y2 - _this.y1);\n        };\n        _this.restoreOwnStyles();\n        return _this;\n    }\n    Line.create = function (x1, y1, x2, y2) {\n        var line = new Line();\n        line.x1 = x1;\n        line.y1 = y1;\n        line.x2 = x2;\n        line.y2 = y2;\n        return line;\n    };\n    Object.defineProperty(Line.prototype, \"x1\", {\n        get: function () {\n            // TODO: Investigate getter performance further in the context\n            //       of the scene graph.\n            //       In isolated benchmarks using a getter has the same\n            //       performance as a direct property access in Firefox 64.\n            //       But in Chrome 71 the getter is 60% slower than direct access.\n            //       Direct read is 4.5+ times slower in Chrome than it is in Firefox.\n            //       Property access and direct read have the same performance\n            //       in Safari 12, which is 2+ times faster than Firefox at this.\n            // https://jsperf.com/es5-getters-setters-versus-getter-setter-methods/18\n            // This is a know Chrome issue. They say it's not a regression, since\n            // the behavior is observed since M60, but jsperf.com history shows the\n            // 10x slowdown happened between Chrome 48 and Chrome 57.\n            // https://bugs.chromium.org/p/chromium/issues/detail?id=908743\n            return this._x1;\n        },\n        set: function (value) {\n            if (this._x1 !== value) {\n                this._x1 = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Line.prototype, \"y1\", {\n        get: function () {\n            return this._y1;\n        },\n        set: function (value) {\n            if (this._y1 !== value) {\n                this._y1 = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Line.prototype, \"x2\", {\n        get: function () {\n            return this._x2;\n        },\n        set: function (value) {\n            if (this._x2 !== value) {\n                this._x2 = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Line.prototype, \"y2\", {\n        get: function () {\n            return this._y2;\n        },\n        set: function (value) {\n            if (this._y2 !== value) {\n                this._y2 = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Line.prototype.isPointInPath = function (x, y) {\n        return false;\n    };\n    Line.prototype.isPointInStroke = function (x, y) {\n        return false;\n    };\n    Line.prototype.render = function (ctx) {\n        if (this.dirtyTransform) {\n            this.computeTransformMatrix();\n        }\n        this.matrix.toContext(ctx);\n        var x1 = this.x1;\n        var y1 = this.y1;\n        var x2 = this.x2;\n        var y2 = this.y2;\n        // Align to the pixel grid if the line is strictly vertical\n        // or horizontal (but not both, i.e. a dot).\n        if (x1 === x2) {\n            var x = Math.round(x1) + Math.floor(this.strokeWidth) % 2 / 2;\n            x1 = x;\n            x2 = x;\n        }\n        else if (y1 === y2) {\n            var y = Math.round(y1) + Math.floor(this.strokeWidth) % 2 / 2;\n            y1 = y;\n            y2 = y;\n        }\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        this.fillStroke(ctx);\n        this.dirty = false;\n    };\n    Line.className = 'Line';\n    Line.defaultStyles = object_1.chainObjects(shape_1.Shape.defaultStyles, {\n        fill: undefined,\n        strokeWidth: 1\n    });\n    return Line;\n}(shape_1.Shape));\nexports.Line = Line;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shape_1 = require(\"./shape\");\nvar path2D_1 = require(\"../path2D\");\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Make sure to set {@link dirty} to `true` after changing the path.\n         */\n        _this.path = new path2D_1.Path2D();\n        /**\n         * Path definition in SVG path syntax:\n         * https://www.w3.org/TR/SVG11/paths.html#DAttribute\n         */\n        _this._svgPath = '';\n        return _this;\n    }\n    Object.defineProperty(Path.prototype, \"svgPath\", {\n        get: function () {\n            return this._svgPath;\n        },\n        set: function (value) {\n            if (this._svgPath !== value) {\n                this._svgPath = value;\n                this.path.setFromString(value);\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Path.prototype.isPointInPath = function (x, y) {\n        var point = this.transformPoint(x, y);\n        return this.path.closedPath && this.path.isPointInPath(point.x, point.y);\n    };\n    Path.prototype.isPointInStroke = function (x, y) {\n        return false;\n    };\n    Path.prototype.render = function (ctx) {\n        if (this.dirtyTransform) {\n            this.computeTransformMatrix();\n        }\n        this.matrix.toContext(ctx);\n        this.scene.appendPath(this.path);\n        this.fillStroke(ctx);\n        this.dirty = false;\n    };\n    Path.className = 'Path';\n    return Path;\n}(shape_1.Shape));\nexports.Path = Path;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shape_1 = require(\"./shape\");\nvar path2D_1 = require(\"../path2D\");\nvar bbox_1 = require(\"../bbox\");\nvar RectSizing;\n(function (RectSizing) {\n    RectSizing[RectSizing[\"Content\"] = 0] = \"Content\";\n    RectSizing[RectSizing[\"Border\"] = 1] = \"Border\";\n})(RectSizing = exports.RectSizing || (exports.RectSizing = {}));\nvar Rect = /** @class */ (function (_super) {\n    __extends(Rect, _super);\n    function Rect() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.path = new path2D_1.Path2D();\n        _this._dirtyPath = true;\n        _this._x = 0;\n        _this._y = 0;\n        _this._width = 10;\n        _this._height = 10;\n        _this._radius = 0;\n        /**\n         * If `true`, the rect is aligned to the pixel grid for crisp looking lines.\n         * Animated rects may not look nice with this option enabled, for example\n         * when a rect is translated by a sub-pixel value on each frame.\n         */\n        _this._crisp = false;\n        _this.effectiveStrokeWidth = shape_1.Shape.defaultStyles.strokeWidth;\n        _this._sizing = RectSizing.Content;\n        _this.getBBox = function () {\n            return new bbox_1.BBox(_this.x, _this.y, _this.width, _this.height);\n        };\n        return _this;\n    }\n    Rect.create = function (x, y, width, height, radius) {\n        if (radius === void 0) { radius = 0; }\n        var rect = new Rect();\n        rect.x = x;\n        rect.y = y;\n        rect.width = width;\n        rect.height = height;\n        rect.radius = radius;\n        return rect;\n    };\n    Object.defineProperty(Rect.prototype, \"dirtyPath\", {\n        get: function () {\n            return this._dirtyPath;\n        },\n        set: function (value) {\n            if (this._dirtyPath !== value) {\n                this._dirtyPath = value;\n                if (value) {\n                    this.dirty = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"x\", {\n        get: function () {\n            return this._x;\n        },\n        set: function (value) {\n            if (this._x !== value) {\n                this._x = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"y\", {\n        get: function () {\n            return this._y;\n        },\n        set: function (value) {\n            if (this._y !== value) {\n                this._y = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"width\", {\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            if (this._width !== value) {\n                this._width = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"height\", {\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            if (this._height !== value) {\n                this._height = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"radius\", {\n        get: function () {\n            return this._radius;\n        },\n        set: function (value) {\n            if (this._radius !== value) {\n                this._radius = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"crisp\", {\n        get: function () {\n            return this._crisp;\n        },\n        set: function (value) {\n            if (this._crisp !== value) {\n                this._crisp = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"strokeWidth\", {\n        get: function () {\n            return this._strokeWidth;\n        },\n        set: function (value) {\n            if (this._strokeWidth !== value) {\n                this._strokeWidth = value;\n                // Normally, when the `lineWidth` changes, we only need to repaint the rect\n                // without updating the path. If the `isCrisp` is set to `true` however,\n                // we need to update the path to make sure the new stroke aligns to\n                // the pixel grid. This is the reason we override the `lineWidth` setter\n                // and getter here.\n                if (this.crisp || this.sizing === RectSizing.Border) {\n                    this.dirtyPath = true;\n                }\n                else {\n                    this.effectiveStrokeWidth = value;\n                    this.dirty = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"sizing\", {\n        get: function () {\n            return this._sizing;\n        },\n        set: function (value) {\n            if (this._sizing !== value) {\n                this._sizing = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rect.prototype.updatePath = function () {\n        if (!this.dirtyPath) {\n            return;\n        }\n        var borderSizing = this.sizing === RectSizing.Border;\n        var path = this.path;\n        path.clear();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        var strokeWidth;\n        if (borderSizing) {\n            var halfWidth = width / 2;\n            var halfHeight = height / 2;\n            strokeWidth = Math.min(this.strokeWidth, halfWidth, halfHeight);\n            x = Math.min(x + strokeWidth / 2, x + halfWidth);\n            y = Math.min(y + strokeWidth / 2, y + halfHeight);\n            width = Math.max(width - strokeWidth, 0);\n            height = Math.max(height - strokeWidth, 0);\n        }\n        else {\n            strokeWidth = this.strokeWidth;\n        }\n        this.effectiveStrokeWidth = strokeWidth;\n        if (this.crisp && !borderSizing) {\n            var alignment = Math.floor(strokeWidth) % 2 / 2;\n            path.rect(Math.floor(x) + alignment, Math.floor(y) + alignment, Math.floor(width) + Math.floor(x % 1 + width % 1), Math.floor(height) + Math.floor(y % 1 + height % 1));\n        }\n        else {\n            path.rect(x, y, width, height);\n        }\n        this.dirtyPath = false;\n    };\n    Rect.prototype.isPointInPath = function (x, y) {\n        var point = this.transformPoint(x, y);\n        var bbox = this.getBBox();\n        return bbox.containsPoint(point.x, point.y);\n    };\n    Rect.prototype.isPointInStroke = function (x, y) {\n        return false;\n    };\n    Rect.prototype.render = function (ctx) {\n        if (this.dirtyTransform) {\n            this.computeTransformMatrix();\n        }\n        this.matrix.toContext(ctx);\n        this.updatePath();\n        this.scene.appendPath(this.path);\n        this.fillStroke(ctx);\n        this.dirty = false;\n    };\n    Rect.prototype.fillStroke = function (ctx) {\n        if (!this.scene) {\n            return;\n        }\n        var pixelRatio = this.scene.canvas.pixelRatio || 1;\n        if (this.fill) {\n            ctx.fillStyle = this.fill;\n            ctx.globalAlpha = this.opacity * this.fillOpacity;\n            // The canvas context scaling (depends on the device's pixel ratio)\n            // has no effect on shadows, so we have to account for the pixel ratio\n            // manually here.\n            var fillShadow = this.fillShadow;\n            if (fillShadow && fillShadow.enabled) {\n                ctx.shadowColor = fillShadow.color;\n                ctx.shadowOffsetX = fillShadow.xOffset * pixelRatio;\n                ctx.shadowOffsetY = fillShadow.yOffset * pixelRatio;\n                ctx.shadowBlur = fillShadow.blur * pixelRatio;\n            }\n            ctx.fill();\n        }\n        ctx.shadowColor = 'rgba(0, 0, 0, 0)';\n        if (this.stroke && this.effectiveStrokeWidth) {\n            ctx.strokeStyle = this.stroke;\n            ctx.globalAlpha = this.opacity * this.strokeOpacity;\n            ctx.lineWidth = this.effectiveStrokeWidth;\n            if (this.lineDash) {\n                ctx.setLineDash(this.lineDash);\n            }\n            if (this.lineDashOffset) {\n                ctx.lineDashOffset = this.lineDashOffset;\n            }\n            if (this.lineCap) {\n                ctx.lineCap = this.lineCap;\n            }\n            if (this.lineJoin) {\n                ctx.lineJoin = this.lineJoin;\n            }\n            var strokeShadow = this.strokeShadow;\n            if (strokeShadow && strokeShadow.enabled) {\n                ctx.shadowColor = strokeShadow.color;\n                ctx.shadowOffsetX = strokeShadow.xOffset * pixelRatio;\n                ctx.shadowOffsetY = strokeShadow.yOffset * pixelRatio;\n                ctx.shadowBlur = strokeShadow.blur * pixelRatio;\n            }\n            ctx.stroke();\n        }\n    };\n    Rect.className = 'Rect';\n    return Rect;\n}(shape_1.Shape));\nexports.Rect = Rect;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shape_1 = require(\"./shape\");\nvar path2D_1 = require(\"../path2D\");\nvar angle_1 = require(\"../../util/angle\");\nvar number_1 = require(\"../../util/number\");\nvar bbox_1 = require(\"../bbox\");\nvar Sector = /** @class */ (function (_super) {\n    __extends(Sector, _super);\n    function Sector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.path = new path2D_1.Path2D();\n        _this._dirtyPath = true;\n        _this._centerX = 0;\n        _this._centerY = 0;\n        _this._centerOffset = 0;\n        _this._innerRadius = 10;\n        _this._outerRadius = 20;\n        _this._startAngle = 0;\n        _this._endAngle = Math.PI * 2;\n        _this._angleOffset = 0;\n        _this.getBBox = function () {\n            var radius = _this.outerRadius;\n            return new bbox_1.BBox(_this.centerX - radius, _this.centerY - radius, radius * 2, radius * 2);\n        };\n        return _this;\n    }\n    Sector.create = function (centerX, centerY, innerRadius, outerRadius, startAngle, endAngle) {\n        if (startAngle === void 0) { startAngle = 0; }\n        if (endAngle === void 0) { endAngle = Math.PI * 2; }\n        var sector = new Sector();\n        sector.centerX = centerX;\n        sector.centerY = centerY;\n        sector.innerRadius = innerRadius;\n        sector.outerRadius = outerRadius;\n        sector.startAngle = startAngle;\n        sector.endAngle = endAngle;\n        return sector;\n    };\n    Object.defineProperty(Sector.prototype, \"dirtyPath\", {\n        get: function () {\n            return this._dirtyPath;\n        },\n        set: function (value) {\n            if (this._dirtyPath !== value) {\n                this._dirtyPath = value;\n                if (value) {\n                    this.dirty = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sector.prototype, \"centerX\", {\n        get: function () {\n            return this._centerX;\n        },\n        set: function (value) {\n            if (this._centerX !== value) {\n                this._centerX = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sector.prototype, \"centerY\", {\n        get: function () {\n            return this._centerY;\n        },\n        set: function (value) {\n            if (this._centerY !== value) {\n                this._centerY = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sector.prototype, \"centerOffset\", {\n        get: function () {\n            return this._centerOffset;\n        },\n        set: function (value) {\n            if (this._centerOffset !== value) {\n                this._centerOffset = Math.max(0, value);\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sector.prototype, \"innerRadius\", {\n        get: function () {\n            return this._innerRadius;\n        },\n        set: function (value) {\n            if (this._innerRadius !== value) {\n                this._innerRadius = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sector.prototype, \"outerRadius\", {\n        get: function () {\n            return this._outerRadius;\n        },\n        set: function (value) {\n            if (this._outerRadius !== value) {\n                this._outerRadius = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sector.prototype, \"startAngle\", {\n        get: function () {\n            return this._startAngle;\n        },\n        set: function (value) {\n            if (this._startAngle !== value) {\n                this._startAngle = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sector.prototype, \"endAngle\", {\n        get: function () {\n            return this._endAngle;\n        },\n        set: function (value) {\n            if (this._endAngle !== value) {\n                this._endAngle = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sector.prototype, \"angleOffset\", {\n        get: function () {\n            return this._angleOffset;\n        },\n        set: function (value) {\n            if (this._angleOffset !== value) {\n                this._angleOffset = value;\n                this.dirtyPath = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Sector.prototype.isPointInPath = function (x, y) {\n        var point = this.transformPoint(x, y);\n        return this.path.isPointInPath(point.x, point.y);\n    };\n    Sector.prototype.isPointInStroke = function (x, y) {\n        return false;\n    };\n    Object.defineProperty(Sector.prototype, \"fullPie\", {\n        get: function () {\n            return number_1.isEqual(angle_1.normalizeAngle360(this.startAngle), angle_1.normalizeAngle360(this.endAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Sector.prototype.updatePath = function () {\n        if (!this.dirtyPath) {\n            return;\n        }\n        var path = this.path;\n        var angleOffset = this.angleOffset;\n        var startAngle = Math.min(this.startAngle, this.endAngle) + angleOffset;\n        var endAngle = Math.max(this.startAngle, this.endAngle) + angleOffset;\n        var midAngle = (startAngle + endAngle) * 0.5;\n        var innerRadius = Math.min(this.innerRadius, this.outerRadius);\n        var outerRadius = Math.max(this.innerRadius, this.outerRadius);\n        var centerOffset = this.centerOffset;\n        var fullPie = this.fullPie;\n        var radiiGap = outerRadius - innerRadius;\n        // const tipOffset = radiiGap / 3;\n        // const showTip = radiiGap < outerRadius / 2;\n        var centerX = this.centerX;\n        var centerY = this.centerY;\n        path.clear();\n        if (centerOffset) {\n            centerX += centerOffset * Math.cos(midAngle);\n            centerY += centerOffset * Math.sin(midAngle);\n        }\n        if (!fullPie) {\n            path.moveTo(centerX + innerRadius * Math.cos(startAngle), centerY + innerRadius * Math.sin(startAngle));\n            // if (showTip) {\n            //     path.lineTo(\n            //         centerX + 0.5 * (innerRadius + outerRadius) * Math.cos(startAngle) + tipOffset * Math.cos(startAngle + Math.PI / 2),\n            //         centerY + 0.5 * (innerRadius + outerRadius) * Math.sin(startAngle) + tipOffset * Math.sin(startAngle + Math.PI / 2)\n            //     );\n            // }\n            path.lineTo(centerX + outerRadius * Math.cos(startAngle), centerY + outerRadius * Math.sin(startAngle));\n        }\n        path.cubicArc(centerX, centerY, outerRadius, outerRadius, 0, startAngle, endAngle, 0);\n        // path[fullPie ? 'moveTo' : 'lineTo'](\n        //     centerX + innerRadius * Math.cos(endAngle),\n        //     centerY + innerRadius * Math.sin(endAngle)\n        // );\n        if (fullPie) {\n            path.moveTo(centerX + innerRadius * Math.cos(endAngle), centerY + innerRadius * Math.sin(endAngle));\n        }\n        else {\n            // if (showTip) {\n            //     path.lineTo(\n            //         centerX + 0.5 * (innerRadius + outerRadius) * Math.cos(endAngle) + tipOffset * Math.cos(endAngle + Math.PI / 2),\n            //         centerY + 0.5 * (innerRadius + outerRadius) * Math.sin(endAngle) + tipOffset * Math.sin(endAngle + Math.PI / 2)\n            //     );\n            // }\n            // Temp workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=993330\n            // Revert this commit when fixed ^^.\n            var x = centerX + innerRadius * Math.cos(endAngle);\n            path.lineTo(Math.abs(x) < 1e-8 ? 0 : x, centerY + innerRadius * Math.sin(endAngle));\n        }\n        path.cubicArc(centerX, centerY, innerRadius, innerRadius, 0, endAngle, startAngle, 1);\n        path.closePath();\n        this.dirtyPath = false;\n    };\n    Sector.prototype.render = function (ctx) {\n        if (this.dirtyTransform) {\n            this.computeTransformMatrix();\n        }\n        this.matrix.toContext(ctx);\n        this.updatePath();\n        this.scene.appendPath(this.path);\n        this.fillStroke(ctx);\n        this.dirty = false;\n    };\n    Sector.className = 'Sector';\n    return Sector;\n}(shape_1.Shape));\nexports.Sector = Sector;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar node_1 = require(\"../node\");\nvar object_1 = require(\"../../util/object\");\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._fillOpacity = 1;\n        _this._strokeOpacity = 1;\n        _this._fill = Shape.defaultStyles.fill; //| CanvasGradient | CanvasPattern;\n        /**\n         * Note that `strokeStyle = null` means invisible stroke,\n         * while `lineWidth = 0` means no stroke, and sometimes this can mean different things.\n         * For example, a rect shape with an invisible stroke may not align to the pixel grid\n         * properly because the stroke affects the rules of alignment, and arc shapes forming\n         * a pie chart will have a gap between them if they have an invisible stroke, whereas\n         * there would be not gap if there was no stroke at all.\n         * The preferred way of making the stroke invisible is setting the `lineWidth` to zero,\n         * unless specific looks that is achieved by having an invisible stroke is desired.\n         */\n        _this._stroke = Shape.defaultStyles.stroke;\n        _this._strokeWidth = Shape.defaultStyles.strokeWidth;\n        _this._lineDash = Shape.defaultStyles.lineDash;\n        _this._lineDashOffset = Shape.defaultStyles.lineDashOffset;\n        _this._lineCap = Shape.defaultStyles.lineCap;\n        _this._lineJoin = Shape.defaultStyles.lineJoin;\n        _this._opacity = Shape.defaultStyles.opacity;\n        _this._fillShadow = Shape.defaultStyles.fillShadow;\n        _this._strokeShadow = Shape.defaultStyles.strokeShadow;\n        return _this;\n    }\n    /**\n     * Restores the default styles introduced by this subclass.\n     */\n    Shape.prototype.restoreOwnStyles = function () {\n        var styles = this.constructor.defaultStyles;\n        var keys = Object.getOwnPropertyNames(styles);\n        // getOwnPropertyNames is about 2.5 times faster than\n        // for..in with the hasOwnProperty check and in this\n        // case, where most properties are inherited, can be\n        // more then an order of magnitude faster.\n        for (var i = 0, n = keys.length; i < n; i++) {\n            var key = keys[i];\n            this[key] = styles[key];\n        }\n    };\n    Shape.prototype.restoreAllStyles = function () {\n        var styles = this.constructor.defaultStyles;\n        for (var property in styles) {\n            this[property] = styles[property];\n        }\n    };\n    /**\n     * Restores the base class default styles that have been overridden by this subclass.\n     */\n    Shape.prototype.restoreOverriddenStyles = function () {\n        var styles = this.constructor.defaultStyles;\n        var protoStyles = Object.getPrototypeOf(styles);\n        for (var property in styles) {\n            if (styles.hasOwnProperty(property) && protoStyles.hasOwnProperty(property)) {\n                this[property] = styles[property];\n            }\n        }\n    };\n    Object.defineProperty(Shape.prototype, \"fillOpacity\", {\n        get: function () {\n            return this._fillOpacity;\n        },\n        set: function (value) {\n            if (this._fillOpacity !== value) {\n                this._fillOpacity = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"strokeOpacity\", {\n        get: function () {\n            return this._strokeOpacity;\n        },\n        set: function (value) {\n            if (this._strokeOpacity !== value) {\n                this._strokeOpacity = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"fill\", {\n        get: function () {\n            return this._fill;\n        },\n        set: function (value) {\n            if (this._fill !== value) {\n                this._fill = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"stroke\", {\n        get: function () {\n            return this._stroke;\n        },\n        set: function (value) {\n            if (this._stroke !== value) {\n                this._stroke = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"strokeWidth\", {\n        get: function () {\n            return this._strokeWidth;\n        },\n        set: function (value) {\n            if (this._strokeWidth !== value) {\n                this._strokeWidth = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"lineDash\", {\n        get: function () {\n            return this._lineDash;\n        },\n        set: function (value) {\n            var oldValue = this._lineDash;\n            if (oldValue !== value) {\n                if (oldValue && value && oldValue.length === value.length) {\n                    var identical = true;\n                    var n = value.length;\n                    for (var i = 0; i < n; i++) {\n                        if (oldValue[i] !== value[i]) {\n                            identical = false;\n                            break;\n                        }\n                    }\n                    if (identical) {\n                        return;\n                    }\n                }\n                this._lineDash = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"lineDashOffset\", {\n        get: function () {\n            return this._lineDashOffset;\n        },\n        set: function (value) {\n            if (this._lineDashOffset !== value) {\n                this._lineDashOffset = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"lineCap\", {\n        get: function () {\n            return this._lineCap;\n        },\n        set: function (value) {\n            if (this._lineCap !== value) {\n                this._lineCap = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"lineJoin\", {\n        get: function () {\n            return this._lineJoin;\n        },\n        set: function (value) {\n            if (this._lineJoin !== value) {\n                this._lineJoin = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"opacity\", {\n        get: function () {\n            return this._opacity;\n        },\n        set: function (value) {\n            value = Math.min(1, Math.max(0, value));\n            if (this._opacity !== value) {\n                this._opacity = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"fillShadow\", {\n        get: function () {\n            return this._fillShadow;\n        },\n        set: function (value) {\n            var _this = this;\n            var fillShadow = this._fillShadow;\n            if (fillShadow !== value) {\n                if (fillShadow) {\n                    fillShadow.onChange = undefined;\n                }\n                if (value) {\n                    value.onChange = function () { return _this.dirty = true; };\n                }\n                this._fillShadow = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"strokeShadow\", {\n        get: function () {\n            return this._strokeShadow;\n        },\n        set: function (value) {\n            var _this = this;\n            var strokeShadow = this._strokeShadow;\n            if (strokeShadow !== value) {\n                if (strokeShadow) {\n                    strokeShadow.onChange = undefined;\n                }\n                if (value) {\n                    value.onChange = function () { return _this.dirty = true; };\n                }\n                this._strokeShadow = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Shape.prototype.fillStroke = function (ctx) {\n        if (!this.scene) {\n            return;\n        }\n        var pixelRatio = this.scene.canvas.pixelRatio || 1;\n        if (this.fill) {\n            ctx.fillStyle = this.fill;\n            ctx.globalAlpha = this.opacity * this.fillOpacity;\n            // The canvas context scaling (depends on the device's pixel ratio)\n            // has no effect on shadows, so we have to account for the pixel ratio\n            // manually here.\n            var fillShadow = this.fillShadow;\n            if (fillShadow && fillShadow.enabled) {\n                ctx.shadowColor = fillShadow.color;\n                ctx.shadowOffsetX = fillShadow.xOffset * pixelRatio;\n                ctx.shadowOffsetY = fillShadow.yOffset * pixelRatio;\n                ctx.shadowBlur = fillShadow.blur * pixelRatio;\n            }\n            ctx.fill();\n        }\n        ctx.shadowColor = 'rgba(0, 0, 0, 0)';\n        if (this.stroke && this.strokeWidth) {\n            ctx.strokeStyle = this.stroke;\n            ctx.globalAlpha = this.opacity * this.strokeOpacity;\n            ctx.lineWidth = this.strokeWidth;\n            if (this.lineDash) {\n                ctx.setLineDash(this.lineDash);\n            }\n            if (this.lineDashOffset) {\n                ctx.lineDashOffset = this.lineDashOffset;\n            }\n            if (this.lineCap) {\n                ctx.lineCap = this.lineCap;\n            }\n            if (this.lineJoin) {\n                ctx.lineJoin = this.lineJoin;\n            }\n            var strokeShadow = this.strokeShadow;\n            if (strokeShadow && strokeShadow.enabled) {\n                ctx.shadowColor = strokeShadow.color;\n                ctx.shadowOffsetX = strokeShadow.xOffset * pixelRatio;\n                ctx.shadowOffsetY = strokeShadow.yOffset * pixelRatio;\n                ctx.shadowBlur = strokeShadow.blur * pixelRatio;\n            }\n            ctx.stroke();\n        }\n    };\n    Shape.prototype.isPointInNode = function (x, y) {\n        return this.isPointInPath(x, y);\n    };\n    /**\n     * Defaults for style properties. Note that properties that affect the position\n     * and shape of the node are not considered style properties, for example:\n     * `x`, `y`, `width`, `height`, `radius`, `rotation`, etc.\n     * Can be used to reset to the original styling after some custom styling\n     * has been applied (using the `restoreOwnStyles` and `restoreAllStyles` methods).\n     * These static defaults are meant to be inherited by subclasses.\n     */\n    Shape.defaultStyles = object_1.chainObjects({}, {\n        fill: 'black',\n        stroke: undefined,\n        strokeWidth: 0,\n        lineDash: undefined,\n        lineDashOffset: 0,\n        lineCap: null,\n        lineJoin: null,\n        opacity: 1,\n        fillShadow: undefined,\n        strokeShadow: undefined\n    });\n    return Shape;\n}(node_1.Node));\nexports.Shape = Shape;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shape_1 = require(\"./shape\");\nvar object_1 = require(\"../../util/object\");\nvar bbox_1 = require(\"../bbox\");\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._x = 0;\n        _this._y = 0;\n        _this.lineBreakRe = /\\r?\\n/g;\n        _this.lines = [];\n        _this._text = '';\n        _this._dirtyFont = true;\n        _this._fontStyle = undefined;\n        _this._fontWeight = undefined;\n        _this._fontSize = 10;\n        _this._fontFamily = 'sans-serif';\n        _this._textAlign = Text.defaultStyles.textAlign;\n        _this._textBaseline = Text.defaultStyles.textBaseline;\n        _this._lineHeight = 14;\n        return _this;\n    }\n    Object.defineProperty(Text.prototype, \"x\", {\n        get: function () {\n            return this._x;\n        },\n        set: function (value) {\n            if (this._x !== value) {\n                this._x = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"y\", {\n        get: function () {\n            return this._y;\n        },\n        set: function (value) {\n            if (this._y !== value) {\n                this._y = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Text.prototype.splitText = function () {\n        this.lines = this._text.split(this.lineBreakRe);\n    };\n    Object.defineProperty(Text.prototype, \"text\", {\n        get: function () {\n            return this._text;\n        },\n        set: function (value) {\n            var str = String(value); // `value` can be an object here\n            if (this._text !== str) {\n                this._text = str;\n                this.splitText();\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"font\", {\n        get: function () {\n            if (this.dirtyFont) {\n                this.dirtyFont = false;\n                return this._font = [\n                    this.fontStyle || '',\n                    this.fontWeight || '',\n                    this.fontSize + 'px',\n                    this.fontFamily\n                ].join(' ').trim();\n            }\n            return this._font;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"dirtyFont\", {\n        get: function () {\n            return this._dirtyFont;\n        },\n        set: function (value) {\n            if (this._dirtyFont !== value) {\n                this._dirtyFont = value;\n                if (value) {\n                    this.dirty = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"fontStyle\", {\n        get: function () {\n            return this._fontStyle;\n        },\n        set: function (value) {\n            if (this._fontStyle !== value) {\n                this._fontStyle = value;\n                this.dirtyFont = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"fontWeight\", {\n        get: function () {\n            return this._fontWeight;\n        },\n        set: function (value) {\n            if (this._fontWeight !== value) {\n                this._fontWeight = value;\n                this.dirtyFont = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"fontSize\", {\n        get: function () {\n            return this._fontSize;\n        },\n        set: function (value) {\n            if (!isFinite(value)) {\n                value = 10;\n            }\n            if (this._fontSize !== value) {\n                this._fontSize = value;\n                this.dirtyFont = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"fontFamily\", {\n        get: function () {\n            return this._fontFamily;\n        },\n        set: function (value) {\n            if (this._fontFamily !== value) {\n                this._fontFamily = value;\n                this.dirtyFont = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"textAlign\", {\n        get: function () {\n            return this._textAlign;\n        },\n        set: function (value) {\n            if (this._textAlign !== value) {\n                this._textAlign = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"textBaseline\", {\n        get: function () {\n            return this._textBaseline;\n        },\n        set: function (value) {\n            if (this._textBaseline !== value) {\n                this._textBaseline = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"lineHeight\", {\n        get: function () {\n            return this._lineHeight;\n        },\n        set: function (value) {\n            // Multi-line text is complicated because:\n            // - Canvas does not support it natively, so we have to implement it manually\n            // - need to know the height of each line -> need to parse the font shorthand ->\n            //   generally impossible to do because font size may not be in pixels\n            // - so, need to measure the text instead, each line individually -> expensive\n            // - or make the user provide the line height manually for multi-line text\n            // - getBBox should use the lineHeight for multi-line text but ignore it otherwise\n            // - textBaseline kind of loses its meaning for multi-line text\n            if (this._lineHeight !== value) {\n                this._lineHeight = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Text.prototype.getBBox = function () {\n        return this.scene\n            ? this.scene.canvas.has.textMetrics\n                ? this.getPreciseBBox()\n                : this.getApproximateBBox()\n            : undefined;\n    };\n    Text.prototype.getPreciseBBox = function () {\n        var metrics = this.scene.canvas.measureText(this.text, this.font, this.textBaseline, this.textAlign);\n        return new bbox_1.BBox(this.x - metrics.actualBoundingBoxLeft, this.y - metrics.actualBoundingBoxAscent, metrics.width, metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n    };\n    Text.prototype.getApproximateBBox = function () {\n        var size = this.scene.canvas.getTextSize(this.text, this.font);\n        var x = this.x;\n        var y = this.y;\n        switch (this.textAlign) {\n            case 'end':\n            case 'right':\n                x -= size.width;\n                break;\n            case 'center':\n                x -= size.width / 2;\n        }\n        switch (this.textBaseline) {\n            case 'alphabetic':\n                y -= size.height * 0.7;\n                break;\n            case 'middle':\n                y -= size.height * 0.45;\n                break;\n            case 'ideographic':\n                y -= size.height;\n                break;\n            case 'hanging':\n                y -= size.height * 0.2;\n                break;\n            case 'bottom':\n                y -= size.height;\n                break;\n        }\n        return new bbox_1.BBox(x, y, size.width, size.height);\n    };\n    Text.prototype.isPointInPath = function (x, y) {\n        var point = this.transformPoint(x, y);\n        var bbox = this.getBBox();\n        return bbox ? bbox.containsPoint(point.x, point.y) : false;\n    };\n    Text.prototype.isPointInStroke = function (x, y) {\n        return false;\n    };\n    Text.prototype.render = function (ctx) {\n        if (!this.scene || !this.lines.length) {\n            return;\n        }\n        if (this.dirtyTransform) {\n            this.computeTransformMatrix();\n        }\n        // this.matrix.transformBBox(this.getBBox!()).render(ctx); // debug\n        this.matrix.toContext(ctx);\n        if (this.opacity < 1) {\n            ctx.globalAlpha = this.opacity;\n        }\n        ctx.font = this.font;\n        ctx.textAlign = this.textAlign;\n        ctx.textBaseline = this.textBaseline;\n        var pixelRatio = this.scene.canvas.pixelRatio || 1;\n        if (this.fill) {\n            ctx.fillStyle = this.fill;\n            var fillShadow = this.fillShadow;\n            if (fillShadow && fillShadow.enabled) {\n                ctx.shadowColor = fillShadow.color;\n                ctx.shadowOffsetX = fillShadow.xOffset * pixelRatio;\n                ctx.shadowOffsetY = fillShadow.yOffset * pixelRatio;\n                ctx.shadowBlur = fillShadow.blur * pixelRatio;\n            }\n            ctx.fillText(this.text, this.x, this.y);\n            // this.lines.forEach((text, index) => {\n            //     ctx.fillText(text, this.x, this.y + index * this.lineHeight);\n            // });\n        }\n        if (this.stroke && this.strokeWidth) {\n            ctx.strokeStyle = this.stroke;\n            ctx.lineWidth = this.strokeWidth;\n            if (this.lineDash) {\n                ctx.setLineDash(this.lineDash);\n            }\n            if (this.lineDashOffset) {\n                ctx.lineDashOffset = this.lineDashOffset;\n            }\n            if (this.lineCap) {\n                ctx.lineCap = this.lineCap;\n            }\n            if (this.lineJoin) {\n                ctx.lineJoin = this.lineJoin;\n            }\n            var strokeShadow = this.strokeShadow;\n            if (strokeShadow && strokeShadow.enabled) {\n                ctx.shadowColor = strokeShadow.color;\n                ctx.shadowOffsetX = strokeShadow.xOffset * pixelRatio;\n                ctx.shadowOffsetY = strokeShadow.yOffset * pixelRatio;\n                ctx.shadowBlur = strokeShadow.blur * pixelRatio;\n            }\n            ctx.strokeText(this.text, this.x, this.y);\n        }\n        this.dirty = false;\n    };\n    Text.className = 'Text';\n    Text.defaultStyles = object_1.chainObjects(shape_1.Shape.defaultStyles, {\n        textAlign: 'start',\n        fontStyle: undefined,\n        fontWeight: undefined,\n        fontSize: 10,\n        fontFamily: 'sans-serif',\n        textBaseline: 'alphabetic'\n    });\n    return Text;\n}(shape_1.Shape));\nexports.Text = Text;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar twoPi = Math.PI * 2;\n/**\n * Normalize the given angle to be in the [0, 2π) interval.\n * @param radians Angle in radians.\n */\nfunction normalizeAngle360(radians) {\n    radians %= twoPi;\n    radians += twoPi;\n    radians %= twoPi;\n    return radians;\n}\nexports.normalizeAngle360 = normalizeAngle360;\nfunction normalizeAngle360Inclusive(radians) {\n    radians %= twoPi;\n    radians += twoPi;\n    if (radians !== twoPi) {\n        radians %= twoPi;\n    }\n    return radians;\n}\nexports.normalizeAngle360Inclusive = normalizeAngle360Inclusive;\n/**\n * Normalize the given angle to be in the [-π, π) interval.\n * @param radians Angle in radians.\n */\nfunction normalizeAngle180(radians) {\n    radians %= twoPi;\n    if (radians < -Math.PI) {\n        radians += twoPi;\n    }\n    else if (radians >= Math.PI) {\n        radians -= twoPi;\n    }\n    return radians;\n}\nexports.normalizeAngle180 = normalizeAngle180;\nfunction toRadians(degrees) {\n    return degrees / 180 * Math.PI;\n}\nexports.toRadians = toRadians;\nfunction toDegrees(radians) {\n    return radians / Math.PI * 180;\n}\nexports.toDegrees = toDegrees;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns the minimum and maximum value in the given iterable using natural order.\n * If the iterable contains no comparable values, returns `[undefined, undefined]`.\n * @param values\n */\nfunction extent(values) {\n    var n = values.length;\n    var i = -1;\n    var value;\n    var min;\n    var max;\n    while (++i < n) { // Find the first comparable value.\n        if ((value = values[i]) != null && value >= value) {\n            min = max = value;\n            while (++i < n) { // Compare the remaining values.\n                if ((value = values[i]) != null) {\n                    if (min > value) {\n                        min = value;\n                    }\n                    if (max < value) {\n                        max = value;\n                    }\n                }\n            }\n        }\n    }\n    return [min, max];\n}\nexports.extent = extent;\nfunction find(arr, predicate) {\n    for (var i = 0, ln = arr.length; i < ln; i++) {\n        var value = arr[i];\n        if (predicate(value, i, arr)) {\n            return value;\n        }\n    }\n}\nexports.find = find;\n// This method will only return `undefined`, if there's not a single valid finite number\n// in the given array of values.\nfunction numericExtent(values) {\n    var _a = extent(values), min = _a[0], max = _a[1];\n    if (typeof min === 'number' && isFinite(min) && typeof max === 'number' && isFinite(max)) {\n        return [min, max];\n    }\n}\nexports.numericExtent = numericExtent;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction naturalOrder(a, b) {\n    return a - b;\n}\nexports.naturalOrder = naturalOrder;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isEqual(a, b, epsilon) {\n    if (epsilon === void 0) { epsilon = 1e-10; }\n    return Math.abs(a - b) < epsilon;\n}\nexports.isEqual = isEqual;\n/**\n * `Number.toFixed(n)` always formats a number so that it has `n` digits after the decimal point.\n * For example, `Number(0.00003427).toFixed(2)` returns `0.00`.\n * That's not very helpful, because all the meaningful information is lost.\n * In this case we would want the formatted value to have at least two significant digits: `0.000034`,\n * not two fraction digits.\n * @param value\n * @param fractionOrSignificantDigits\n */\nfunction toFixed(value, fractionOrSignificantDigits) {\n    if (fractionOrSignificantDigits === void 0) { fractionOrSignificantDigits = 2; }\n    var power = Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n    if (power >= 0) {\n        return value.toFixed(fractionOrSignificantDigits); // fraction digits\n    }\n    return value.toFixed(Math.abs(power) - 1 + fractionOrSignificantDigits); // significant digits\n}\nexports.toFixed = toFixed;\nvar numberUnits = [\"\", \"K\", \"M\", \"B\", \"T\"];\nfunction toReadableNumber(value, fractionDigits) {\n    if (fractionDigits === void 0) { fractionDigits = 2; }\n    // For example: toReadableNumber(10550000000) yields \"10.6B\"\n    var prefix = '';\n    if (value <= 0) {\n        value = -value;\n        prefix = '-';\n    }\n    var thousands = ~~(Math.log10(value) / Math.log10(1000)); // discard the floating point part\n    return prefix + (value / Math.pow(1000.0, thousands)).toFixed(fractionDigits) + numberUnits[thousands];\n}\nexports.toReadableNumber = toReadableNumber;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction chainObjects(parent, child) {\n    var obj = Object.create(parent);\n    for (var prop in child) {\n        if (child.hasOwnProperty(prop)) {\n            obj[prop] = child[prop];\n        }\n    }\n    return obj;\n}\nexports.chainObjects = chainObjects;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Padding = /** @class */ (function () {\n    function Padding(top, right, bottom, left) {\n        if (top === void 0) { top = 0; }\n        if (right === void 0) { right = top; }\n        if (bottom === void 0) { bottom = top; }\n        if (left === void 0) { left = right; }\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n        this.left = left;\n    }\n    Padding.prototype.clear = function () {\n        this.top = 0;\n        this.right = 0;\n        this.bottom = 0;\n        this.left = 0;\n    };\n    return Padding;\n}());\nexports.Padding = Padding;\n","// ag-grid-enterprise v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction default_1(a, b, count) {\n    var step = tickStep(a, b, count);\n    a = Math.ceil(a / step) * step;\n    b = Math.floor(b / step) * step + step / 2;\n    // Add half a step here so that the array returned by `range` includes the last tick.\n    return range(a, b, step);\n}\nexports.default = default_1;\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\nfunction tickStep(a, b, count) {\n    var rawStep = Math.abs(b - a) / Math.max(0, count);\n    var step = Math.pow(10, Math.floor(Math.log(rawStep) / Math.LN10)); // = Math.log10(rawStep)\n    var error = rawStep / step;\n    if (error >= e10) {\n        step *= 10;\n    }\n    else if (error >= e5) {\n        step *= 5;\n    }\n    else if (error >= e2) {\n        step *= 2;\n    }\n    return b < a ? -step : step;\n}\nfunction tickIncrement(a, b, count) {\n    var rawStep = (b - a) / Math.max(0, count);\n    var power = Math.floor(Math.log(rawStep) / Math.LN10);\n    var error = rawStep / Math.pow(10, power);\n    return power >= 0\n        ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n        : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexports.tickIncrement = tickIncrement;\nvar NumericTicks = /** @class */ (function (_super) {\n    __extends(NumericTicks, _super);\n    function NumericTicks(fractionDigits, size) {\n        if (size === void 0) { size = 0; }\n        var _this = _super.call(this, size) || this;\n        _this.fractionDigits = fractionDigits;\n        return _this;\n    }\n    return NumericTicks;\n}(Array));\nexports.NumericTicks = NumericTicks;\nfunction range(a, b, step) {\n    if (step === void 0) { step = 1; }\n    var absStep = Math.abs(step);\n    var fractionDigits = (absStep > 0 && absStep < 1)\n        ? Math.abs(Math.floor(Math.log(absStep) / Math.LN10))\n        : 0;\n    var f = Math.pow(10, fractionDigits);\n    var n = Math.max(0, Math.ceil((b - a) / step)) || 0;\n    var values = new NumericTicks(fractionDigits, n);\n    for (var i = 0; i < n; i++) {\n        var value = a + step * i;\n        values[i] = Math.round(value * f) / f;\n    }\n    return values;\n}\n"],"sourceRoot":""}